
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ДатаБольшеИлиРавно") Тогда
		Элементы.Список.Период.ДатаНачала = Параметры.ДатаБольшеИлиРавно;
	КонецЕсли;
	
	Если Параметры.Свойство("ДатаМеньшеИлиРавно") Тогда 
		Элементы.Список.Период.ДатаОкончания = Параметры.ДатаМеньшеИлиРавно; 
	КонецЕсли;
	
	Если Параметры.Свойство("ПараметрыОтбораСписка") Тогда
		
		ПараметрыОтбораСписка = Параметры.ПараметрыОтбораСписка;
		Если ПараметрыОтбораСписка.Свойство("Организация") Тогда
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
				ЭтаФорма.Список, "Организация", ПараметрыОтбораСписка.Организация, ВидСравненияКомпоновкиДанных.Равно, , Истина, 
				РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ);
		КонецЕсли; 
		
	Иначе
		ОбщегоНазначенияБПВызовСервера.УстановитьОтборПоОсновнойОрганизации(ЭтаФорма);
	КонецЕсли;
	
	ТарификацияБП.РазместитьИнформациюОбОграниченииПоКоличествуОбъектов(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзменениеОсновнойОрганизации" Тогда
		ОбщегоНазначенияБПКлиент.ИзменитьОтборПоОсновнойОрганизации(Список, ,Параметр);
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПередНачаломИзменения(Элемент, Отказ)

	ДанныеСтроки = Элемент.ТекущиеДанные;
	
	Если ДанныеСтроки = Неопределено Тогда
		Возврат;
	КонецЕсли;

	КлючеваяОперация = "";
	
	Если ТипЗнч(ДанныеСтроки.Ссылка) = Тип("ДокументСсылка.ФормированиеЗаписейКнигиПокупок") Тогда
		КлючеваяОперация = "ОткрытиеФормыФормированиеЗаписейКнигиПокупок";
	ИначеЕсли ТипЗнч(ДанныеСтроки.Ссылка) = Тип("ДокументСсылка.ФормированиеЗаписейКнигиПродаж") Тогда
		КлючеваяОперация = "ОткрытиеФормыФормированиеЗаписейКнигиПродаж";
	ИначеЕсли ТипЗнч(ДанныеСтроки.Ссылка) = Тип("ДокументСсылка.ВосстановлениеНДС") Тогда
		КлючеваяОперация = "ОткрытиеФормыВосстановлениеНДС";
	ИначеЕсли ТипЗнч(ДанныеСтроки.Ссылка) = Тип("ДокументСсылка.ВосстановлениеНДСПоОбъектамНедвижимости") Тогда
		КлючеваяОперация = "ОткрытиеФормыВосстановлениеНДСПоОбъектамНедвижимости";
	ИначеЕсли ТипЗнч(ДанныеСтроки.Ссылка) = Тип("ДокументСсылка.НачислениеНДСпоСМРхозспособом") Тогда
		КлючеваяОперация = "ОткрытиеФормыНачислениеНДСпоСМРхозспособом";
	ИначеЕсли ТипЗнч(ДанныеСтроки.Ссылка) = Тип("ДокументСсылка.ПодтверждениеНулевойСтавкиНДС") Тогда
		КлючеваяОперация = "ОткрытиеФормыПодтверждениеНулевойСтавкиНДС";
	ИначеЕсли ТипЗнч(ДанныеСтроки.Ссылка) = Тип("ДокументСсылка.РаспределениеНДС") Тогда
		КлючеваяОперация = "ОткрытиеФормыРаспределениеНДС";
	ИначеЕсли ТипЗнч(ДанныеСтроки.Ссылка) = Тип("ДокументСсылка.СписаниеНДС") Тогда
		КлючеваяОперация = "ОткрытиеФормыСписаниеНДС";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(КлючеваяОперация) Тогда
		ОценкаПроизводительностиКлиент.НачатьЗамерВремени(Истина, КлючеваяОперация);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура СписокПередЗагрузкойПользовательскихНастроекНаСервере(Элемент, Настройки)
	
	ОбщегоНазначенияБП.ВосстановитьОтборСписка(Список, Настройки, "Организация");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура АнализРаспределенияНДС(Команда)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
		
	СтруктураПараметров = Новый Структура();
	
	Если ТекущиеДанные <> Неопределено
	   И ТекущиеДанные.Тип = Тип("ДокументСсылка.РаспределениеНДС") Тогда 
		
		СтруктураПараметров.Вставить("Организация", ТекущиеДанные.Организация);
		СтруктураПараметров.Вставить("Период",      ТекущиеДанные.Дата);
		СтруктураПараметров.Вставить("Документ",    ТекущиеДанные.Ссылка);
		
	КонецЕсли;
	
	ОткрытьФорму("Отчет.АнализРаспределенияНДС.Форма", СтруктураПараметров);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьВосстановлениеНДС(Команда)
	
	СтруктураПараметров = ПараметрыОткрытияФормы();
	ОткрытьФорму("Документ.ВосстановлениеНДС.Форма.ФормаДокумента", СтруктураПараметров, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьВосстановлениеНДСПоНедвижимости(Команда)

	СтруктураПараметров = ПараметрыОткрытияФормы();
	ОткрытьФорму("Документ.ВосстановлениеНДСПоОбъектамНедвижимости.Форма.ФормаДокумента", СтруктураПараметров, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьНачислениеНДСпоСМРхозспособом(Команда)
	
	СтруктураПараметров = ПараметрыОткрытияФормы();
	ОткрытьФорму("Документ.НачислениеНДСпоСМРхозспособом.Форма.ФормаДокумента", СтруктураПараметров, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПодтверждениеНулевойСтавкиНДС(Команда)
	
	СтруктураПараметров = ПараметрыОткрытияФормы();
	ОткрытьФорму("Документ.ПодтверждениеНулевойСтавкиНДС.Форма.ФормаДокумента", СтруктураПараметров, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПодтверждениеОплатыНДСВБюджет(Команда)
	
	СтруктураПараметров = ПараметрыОткрытияФормы();
	ОткрытьФорму("Документ.ПодтверждениеОплатыНДСВБюджет.Форма.ФормаДокумента", СтруктураПараметров, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьРаспределениеНДС(Команда)
	
	СтруктураПараметров = ПараметрыОткрытияФормы();
	ОткрытьФорму("Документ.РаспределениеНДС.Форма.ФормаДокумента", СтруктураПараметров, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьСписаниеНДС(Команда)
	
	СтруктураПараметров = ПараметрыОткрытияФормы();
	ОткрытьФорму("Документ.СписаниеНДС.Форма.ФормаДокумента", СтруктураПараметров, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьФормированиеЗаписейКнигиПокупок(Команда)
	
	СтруктураПараметров = ПараметрыОткрытияФормы();
	ОткрытьФорму("Документ.ФормированиеЗаписейКнигиПокупок.Форма.ФормаДокумента", СтруктураПараметров, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьФормированиеЗаписейКнигиПродаж(Команда)
	
	СтруктураПараметров = ПараметрыОткрытияФормы();
	ОткрытьФорму("Документ.ФормированиеЗаписейКнигиПродаж.Форма.ФормаДокумента", СтруктураПараметров, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьФормированиеЗаписейРаздела7ДекларацииПоНДС(Команда)
	
	СтруктураПараметров = ПараметрыОткрытияФормы();
	ОткрытьФорму("Документ.ФормированиеЗаписейРаздела7ДекларацииНДС.Форма.ФормаДокумента", СтруктураПараметров, ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция ПараметрыОткрытияФормы()
	
	СтруктураПараметров = Новый Структура;
	
	ОтборПоОрганизации = ПользовательскиеОтборыКомпоновки(ЭтаФорма, "Организация");
	
	ЗначениеОтбора = Новый Структура();
	ЗначенияЗаполнения = Новый Структура();
	
	Если ОтборПоОрганизации <> Неопределено Тогда
		ЗначениеОтбора.Вставить("Организация", ОтборПоОрганизации.ПравоеЗначение);
		ЗначениеОтбора.Вставить("ОрганизацияИспользование", ОтборПоОрганизации.Использование);
		Если ОтборПоОрганизации.Использование И ЗначениеЗаполнено(ОтборПоОрганизации.ПравоеЗначение) Тогда
			ЗначенияЗаполнения.Вставить("Организация", ОтборПоОрганизации.ПравоеЗначение);
		КонецЕсли;
	КонецЕсли;
		
	СтруктураПараметров.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
	СтруктураПараметров.Вставить("Отбор", ЗначениеОтбора); 
	
	Возврат СтруктураПараметров;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ПользовательскиеОтборыКомпоновки(Форма, Знач ИмяПоля)
	
	Настройки = Форма.Список.КомпоновщикНастроек.ПользовательскиеНастройки;
	
	ПолеОтбораКомпоновки = Неопределено;
	ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ИмяПоля);
	Для каждого ЭлементОтбора Из Форма.Список.КомпоновщикНастроек.Настройки.Отбор.Элементы Цикл
		Если ЭлементОтбора.ЛевоеЗначение = ЛевоеЗначение Тогда
			ПолеОтбораКомпоновки = Настройки.Элементы.Найти(ЭлементОтбора.ИдентификаторПользовательскойНастройки);
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ПолеОтбораКомпоновки;
	
КонецФункции

#КонецОбласти


