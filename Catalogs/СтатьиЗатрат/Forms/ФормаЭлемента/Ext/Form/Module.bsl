&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПодсказкаВидРасходов = СтрШаблон(
		НСтр("ru = 'Влияет на отражение расходов в налоговой декларации
              |<a href = ""%1"">Подробнее</a>'"),
		КлассификаторыДоходовРасходов.СсылкаОписаниеВидовСтатейДоходовРасходов());
	
	Элементы.ВидРасходовНУ.РасширеннаяПодсказка.Заголовок = СтроковыеФункции.ФорматированнаяСтрока(ПодсказкаВидРасходов);
	Элементы.ИспользованиеПоУмолчанию.РасширеннаяПодсказка.Заголовок = КлассификаторыДоходовРасходов.ТекстПодсказкиИспользованиеПоУмолчанию();
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	ВидыРасходовОсновнаяСистемаНалогообложения = Справочники.СтатьиЗатрат.ВидыРасходовТолькоОсновнаяСистемаНалогообложения();
	ИспользуютсяСпециальныеНалоговыеРежимы     = НалоговыйУчет.ИспользуютсяСпециальныеНалоговыеРежимы();
	
	НастроитьДоступностьВидовДеятельности(ЭтаФорма, Объект.ВидРасходовНУ);
	
	КлассификаторыДоходовРасходов.НастроитьИспользованиеПоУмолчанию(
		Элементы.ИспользованиеПоУмолчанию,
		Справочники.СтатьиЗатрат);
	
	УстановитьУсловноеОформление();
	
КонецПроцедуры

&НаКлиенте
Процедура ВидРасходовНУПриИзменении(Элемент)
	
	НастроитьДоступностьВидовДеятельности(ЭтаФорма, Объект.ВидРасходовНУ);
	ОбеспечитьСоответствиеВидаДеятельностиВидуРасходов();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбеспечитьСоответствиеВидаДеятельностиВидуРасходов()
	
	Если ВидРасходовПрименяетсяДляСпециальныхНалоговыхРежимов(ЭтаФорма, Объект.ВидРасходовНУ) Тогда
		Возврат;
	КонецЕсли;
	
	Если Объект.ВидДеятельностиДляНалоговогоУчетаЗатрат = ПредопределенноеЗначение("Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения") 
		Или Объект.ВидДеятельностиДляНалоговогоУчетаЗатрат = ПредопределенноеЗначение("Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.РаспределяемыеЗатраты") Тогда
		
		Объект.ВидДеятельностиДляНалоговогоУчетаЗатрат = ПредопределенноеЗначение("Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения");
		
		ТекстИнформации = НСтр("ru = 'Статьи затрат с видом ""%1"" следует использовать 
		|только для учета затрат по видам деятельности с основной системой налогообложения.
		|Назначение использования статьи затрат изменено.'");
		ТекстИнформации = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстИнформации, Объект.ВидРасходовНУ);
		
		ПоказатьПредупреждение(,ТекстИнформации);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура НастроитьДоступностьВидовДеятельности(Форма, ВидРасходовНУ)
	
	Элементы = Форма.Элементы;
	
	ДоступныСпециальныеНалоговыеРежимы = ВидРасходовПрименяетсяДляСпециальныхНалоговыхРежимов(Форма, ВидРасходовНУ);
	
	Элементы.ОсобыйПорядокНалогообложения.Доступность = ДоступныСпециальныеНалоговыеРежимы;
	Элементы.РазныеВидыДеятельности.Доступность       = ДоступныСпециальныеНалоговыеРежимы;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ВидРасходовПрименяетсяДляСпециальныхНалоговыхРежимов(Форма, ВидРасходовНУ)
	
	Если Не Форма.ИспользуютсяСпециальныеНалоговыеРежимы Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Форма.ВидыРасходовОсновнаяСистемаНалогообложения.Найти(ВидРасходовНУ) = Неопределено;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ БСП

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();


	// ВидРасходовНУ

	ЭлементУО = УсловноеОформление.Элементы.Добавить();

	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ВидРасходовНУ");

	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"Объект.ВидДеятельностиДляНалоговогоУчетаЗатрат", 
		ВидСравненияКомпоновкиДанных.Равно, 
		Перечисления.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения);

	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Ложь);

КонецПроцедуры

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если ЗначениеЗаполнено(Объект.ИмяПредопределенныхДанных) Тогда
		// Платформа выполняет проверку отсутствия элемента с таким же именем
		// до вызова первого из обработчиков, выполняемых в транзакции.
		// Поэтому замену имени предопределенных данных у "вытесняемого" элемента
		// выполняем вне транзакции.
		ПодготовитьЗаписьИмяПредопределенныхДанных(Отказ);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// Могло быть изменено ИмяПредопределенныхДанных, которое часто кешируется
	ОбновитьПовторноИспользуемыеЗначения();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПодготовитьЗаписьИмяПредопределенныхДанных(Отказ)
	
	КлассификаторыДоходовРасходов.ПодготовитьЗаписьИмяПредопределенныхДанных(
		Объект,
		Отказ,
		Справочники.СтатьиЗатрат);
	
КонецПроцедуры

#КонецОбласти
