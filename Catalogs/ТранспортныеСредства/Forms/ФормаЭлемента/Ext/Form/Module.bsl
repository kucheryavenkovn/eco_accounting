#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	Если Параметры.Ключ.Пустая() Тогда
		ПодготовитьФормуНаСервере();
	КонецЕсли;
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПодготовитьФормуНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("ИзмененоТранспортноеСредство", Объект.Ссылка, ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура РегистрационныйЗнакПрицепаПриИзменении(Элемент)
	
	УстановитьЗаголовокГруппыПрицеп(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура МаркаПрицепаПриИзменении(Элемент)
	
	УстановитьЗаголовокГруппыПрицеп(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОформляютсяПутевыеЛистыПриИзменении(Элемент)
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура СобственникКонтрагентПриИзменении(Элемент)
	
	УстановитьОграничениеТипаСобственник(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ТопливоПриИзменении(Элемент)
	
	ТопливоПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ТопливоОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.ВидыНоменклатуры") Тогда
		
		ПараметрыЗначения = Новый Структура;
		ПараметрыЗначения.Вставить("ВидНоменклатуры",     ВыбранноеЗначение);
		ПараметрыЗначения.Вставить("КодЕдиницыИзмерения", "112");
		
		РаботаСНоменклатуройКлиент.НоменклатураОбработкаВыбора(Элемент, ПараметрыЗначения, СтандартнаяОбработка);
		// Т.к. процедура РаботаСНоменклатуройКлиент.НоменклатураОбработкаВыбора возвращает результат во второй параметр,
		// то следует переопределить выбранное значение.
		ВыбранноеЗначение = ПараметрыЗначения;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТопливоАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	ПараметрыПолученияДанных.Вставить("ВидыНоменклатуры", "Топливо");
	ПараметрыПолученияДанных.Отбор.Вставить("ЭтоТопливо", Истина);
	
	РаботаСНоменклатуройКлиент.НоменклатураАвтоПодбор(
		Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ТопливоОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	ПараметрыПолученияДанных.Вставить("ВидыНоменклатуры", "Топливо");
	ПараметрыПолученияДанных.Вставить("ЭтоТопливо", Истина);
	
	РаботаСНоменклатуройКлиент.НоменклатураОкончаниеВводаТекста(
		Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция ПодсказкаНормыРасхода(Топливо)
	
	СвойстваНормыРасхода = Справочники.ТранспортныеСредства.СвойстваНормыРасходаТоплива(Топливо);
	
	Возврат СвойстваНормыРасхода.Подсказка;
	
КонецФункции

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если Объект.Ссылка.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	ПредыдущиеЗначения = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.Ссылка, "Марка, РегистрационныйЗнак");
	ТекущийОбъект.ДополнительныеСвойства.Вставить("ПредыдущиеЗначения", ПредыдущиеЗначения);
	
КонецПроцедуры

&НаСервере
Процедура ПодготовитьФормуНаСервере()
	
	Элементы.ГруппаНормаРасхода.РасширеннаяПодсказка.Заголовок =
		Справочники.ТранспортныеСредства.ПодсказкаОписаниеНормыМинтранса();
	
	ПодсказкаНормаРасхода = ПодсказкаНормыРасхода(Объект.Топливо);
	
	СобственникКонтрагент = ТипЗнч(Объект.Собственник) = Тип("СправочникСсылка.Контрагенты");
	УстановитьОграничениеТипаСобственник(ЭтотОбъект);
	УстановитьЗаголовокГруппыПрицеп(ЭтотОбъект);
	
	ВедетсяУчетПоПутевымЛистам = ПолучитьФункциональнуюОпцию("ВедетсяУчетПоПутевымЛистам");
	Элементы.ГруппаПрицеп.Видимость = ПолучитьФункциональнуюОпцию("ИспользоватьДоставкуАвтотранспортом");
	Элементы.ПодсказкаПрицеп.Видимость = ВедетсяУчетПоПутевымЛистам;
	Элементы.ГруппаПутевойЛист.Видимость = ВедетсяУчетПоПутевымЛистам;
	
КонецПроцедуры

&НаСервере
Процедура ТопливоПриИзмененииНаСервере()
	
	ПодсказкаНормаРасхода = ПодсказкаНормыРасхода(Объект.Топливо);
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОграничениеТипаСобственник(Форма)
	
	Если Форма.СобственникКонтрагент Тогда
		ТипСтрока = "СправочникСсылка.Контрагенты";
	Иначе
		ТипСтрока = "СправочникСсылка.Организации";
	КонецЕсли;
	
	Форма.Элементы.Собственник.ОграничениеТипа = Новый ОписаниеТипов(ТипСтрока);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьЗаголовокГруппыПрицеп(Форма)
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	Если ЗначениеЗаполнено(Объект.МаркаПрицепа) И ЗначениеЗаполнено(Объект.РегистрационныйЗнакПрицепа) Тогда
		ЗаголовокГруппы = СтрШаблон(НСтр("ru='Прицеп: %1 (%2)'"), Объект.МаркаПрицепа, Объект.РегистрационныйЗнакПрицепа);
	ИначеЕсли ЗначениеЗаполнено(Объект.МаркаПрицепа) Или ЗначениеЗаполнено(Объект.РегистрационныйЗнакПрицепа) Тогда
		ЗаголовокГруппы = СтрШаблон(НСтр("ru='Прицеп: %1%2'"), Объект.МаркаПрицепа, Объект.РегистрационныйЗнакПрицепа);
	Иначе
		ЗаголовокГруппы = НСтр("ru='Прицеп: Без прицепа'");
	КонецЕсли;
	Элементы.ГруппаПрицеп.ЗаголовокСвернутогоОтображения = ЗаголовокГруппы;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	
	Элементы.ПодсказкаНормаРасхода.Видимость = Не ПустаяСтрока(Форма.ПодсказкаНормаРасхода);
	Элементы.ГруппаИнформацияДляПутевогоЛиста.Доступность = Объект.ОформляютсяПутевыеЛисты;
	
КонецПроцедуры

#КонецОбласти