
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

&НаСервере
Функция РассчитатьПолезнуюПлощадь()

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СУММА(АР_ОбъектыАренды.ЗначениеХарактеристики) КАК Площадь
	|ИЗ
	|	Справочник.АР_ОбъектыАренды КАК АР_ОбъектыАренды
	|ГДЕ
	|	АР_ОбъектыАренды.ЗданиеИЭтаж = &Ссылка";
	
	Выборка = запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Объект.ПолезнаяПлощадь = Выборка.Площадь;
	КонецЕсли;

КонецФункции // РассчитатьПолезнуюПлощадь()

&НаКлиентеНаСервереБезКонтекста
Функция УстановитьФлагФормироватьНаименованиеПолноеАвтоматически(НаименованиеПолное,Наименование)
   
   Возврат (ПустаяСтрока(НаименованиеПолное) ИЛИ НаименованиеПолное = Наименование);
   
КонецФункции // УстановитьФлагФормироватьНаименованиеПолноеАвтоматически()

&НаКлиенте
Процедура РасположениеНаПланеРасширениеПредложено(РасширениеРаботыСФайламиПодключено, ДополнительныеПараметры) Экспорт
	Перем ПолноеИмяФайла;
	
	ДанныеФайла = ДополнительныеПараметры.ДанныеФайла;
	ИмяФайла = ДополнительныеПараметры.ИмяФайла;
	СохранятьКак = ДополнительныеПараметры.СохранятьКак;	

	Если РасширениеРаботыСФайламиПодключено Тогда
		РабочийКаталогПользователя = РаботаСФайламиСлужебныйКлиент.РабочийКаталогПользователя();
		Если ПустаяСтрока(РабочийКаталогПользователя) Тогда
			ПоказатьПредупреждение(, НСтр("ru = 'Не задан рабочий каталог'"));
			Возврат;
		КонецЕсли;
		
		ПолныйПуть = "";
		ФайлМожноОткрывать = РаботаСФайламиСлужебныйКлиент.ПолучитьФайлВРабочийКаталог(
				ДанныеФайла.СсылкаНаДвоичныеДанныеФайла,
				"",
				ТекущаяДата(),
				ИмяФайла,
				КаталогВременныхФайлов(),
				ПолныйПуть
			);

		Если ФайлМожноОткрывать Тогда
			ЗапуститьПриложение(ПолныйПуть);
		КонецЕсли; 
		
	Иначе
		ПолучитьФайл(ДанныеФайла.СсылкаНаДвоичныеДанныеФайла, СохранятьКак, Истина);
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ УПРАВЛЕНИЯ ВНЕШНИМ ВИДОМ ФОРМЫ

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

&НаКлиенте
Процедура Рассчитать(Команда)
	
	Если Параметры.Ключ.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	РассчитатьПолезнуюПлощадь();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ПОЛЕЙ ФОРМЫ

&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)
	
	Если ФормироватьНаименованиеПолноеАвтоматически Тогда
		Объект.ПолноеНаименование = Объект.Наименование;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РасположениеНаПланеОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ДанныеПланировки = АР_ОбщиеПроцедуры.ЗначенияРеквизитовОбъекта(Объект.РасположениеНаПлане, "ФайлПланировки, Лист, ГрОбъект, ОбластьТекста");
	ДанныеПланировки.Вставить("Наименование", Объект.Наименование);
	
	ЭтоВебКлиент = Ложь;
	
	#Если ВебКлиент Тогда
		СохранятьКак = "";
		ИмяФайла = "";
		ЭтоВебКлиент = Истина;	
	#Иначе
		СохранятьКак = АР_ОбщиеПроцедурыКлиентСервер.ПолучитьИмяФайлаПланировки(ДанныеПланировки.ФайлПланировки, "Расположение объекта");
		Файл = Новый Файл(СохранятьКак);
		ИмяФайла = Файл.Имя;
	#КонецЕсли
	
	ОбрабатыватьШаблоныИПланировкиНаКлиенте = НЕ ЭтоВебКлиент И АР_ОбщиеПроцедуры.ПолучитьЗначениеКонстанты("АР_ОбрабатыватьШаблоныИПланировкиНаКлиенте");
	
	Если ОбрабатыватьШаблоныИПланировкиНаКлиенте Тогда
		АдресХранилища = АР_ОбщиеПроцедурыКлиентСервер.ОтобразитьНаПланировкеОбъект(ДанныеПланировки);
		ДвоичныеДанные = ПолучитьИзВременногоХранилища(АдресХранилища);
		ДвоичныеДанные.Записать(СохранятьКак);
		ЗапуститьПриложение(СохранятьКак);
	Иначе
		ДанныеФайла = АР_ОбщиеПроцедуры.ПолучитьГрафическийОбъект(ДанныеПланировки, СохранятьКак);
		Если НЕ ДанныеФайла = Неопределено Тогда
			
			ДополнительныеПараметры = Новый Структура;
			ДополнительныеПараметры.Вставить("ДанныеФайла", ДанныеФайла);
			ДополнительныеПараметры.Вставить("СохранятьКак", СохранятьКак);
			ДополнительныеПараметры.Вставить("ИмяФайла", ИмяФайла);
			
			ОписаниеОповещения = Новый ОписаниеОповещения("РасположениеНаПланеРасширениеПредложено", ЭтотОбъект, ДополнительныеПараметры);
			ОбщегоНазначенияКлиент.ПоказатьВопросОбУстановкеРасширенияРаботыСФайлами(ОписаниеОповещения);
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолноеНаименованиеПриИзменении(Элемент)
	ФормироватьНаименованиеПолноеАвтоматически = УстановитьФлагФормироватьНаименованиеПолноеАвтоматически(Элементы.ПолноеНаименование,Элементы.Наименование);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
    ФормироватьНаименованиеПолноеАвтоматически = УстановитьФлагФормироватьНаименованиеПолноеАвтоматически(Объект.ПолноеНаименование,Объект.Наименование);
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзменениеНастроекИспользованияЗданийИЭтажей" Тогда
		УправлениеФормой(ЭтаФорма);
	КонецЕсли;

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	ИспользованиеСправочникаЗданийИЭтажей = ПолучитьИспользованиеСправочника();
	
	Элементы = Форма.Элементы;
	
	Элементы.ГруппаВсеЭлементы.Видимость = ИспользованиеСправочникаЗданийИЭтажей;
	Форма.Доступность = ИспользованиеСправочникаЗданийИЭтажей;
	ЗаголовокФормы = Форма.Объект.Наименование + ?(ИспользованиеСправочникаЗданийИЭтажей, 
						" ((рекомендуется отключить) Здание/этаж)",
						" ((не используется) Здание/этаж)");
	
	Форма.Автозаголовок = Ложь;
	Форма.Заголовок = ЗаголовокФормы;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьИспользованиеСправочника()
	
	Возврат Константы.АР_ИспользоватьСправочникЗданияИЭтажи.Получить();
	
КонецФункции

