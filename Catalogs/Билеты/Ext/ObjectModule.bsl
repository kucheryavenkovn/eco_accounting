#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
		
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		// Заполнение переданными данными
		ЗаполнениеДокументов.ЗаполнитьПоСтруктуре(ЭтотОбъект, ДанныеЗаполнения, Метаданные());
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ДатаПокупки) Тогда
		ДатаПокупки = ОбщегоНазначения.ТекущаяДатаПользователя();
	КонецЕсли;	
	
	Наименование = ПредставлениеБилета();
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	Код = "";
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
		
	Если ОбменДанными.Загрузка = Истина Тогда
		Возврат;
	КонецЕсли; 
	
	Наименование = ПредставлениеБилета();
		
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Функция возвращает представление билета
// 
// Возвращаемое значение:
//   - строка
//
// Представление билета включает следующие поля (если заполнены, через запятую):
//	- Дата отправления
//	- Имя сотрудника (в формате Петров П.П.)
//	- Маршрут
//	- Номер билета (код)
Функция ПредставлениеБилета()

	// Представление билета включает следующие поля (если заполнены, через запятую):
	//	- Дата отправления
	//	- Имя сотрудника (в формате Петров П.П.)
	//	- Маршрут
	//	- Номер билета (код)
	ЧастиПредставления = Новый Массив;
	
	ЧастиПредставления.Добавить(Формат(ДатаОтправления, "ДЛФ=D"));
		
	Если ЗначениеЗаполнено(Сотрудник.ФИО) Тогда
		ЧастиПредставления.Добавить(ФизическиеЛицаКлиентСервер.ФамилияИнициалы(Сотрудник.ФИО));
	КонецЕсли; 
	
	Если НЕ ПустаяСтрока(Маршрут) Тогда
		ЧастиПредставления.Добавить(Маршрут);
	КонецЕсли; 
	
	ЧастиПредставления.Добавить(Код);
	
	Представление = СтрСоединить(ЧастиПредставления, " ");
		
	Возврат Представление;

КонецФункции

#КонецОбласти

#КонецЕсли
