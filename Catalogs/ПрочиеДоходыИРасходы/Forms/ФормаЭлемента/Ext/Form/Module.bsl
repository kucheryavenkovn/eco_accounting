////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();


	ЭлементУО = УсловноеОформление.Элементы.Добавить();

	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ВидПрочихДоходовИРасходов");

	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"Объект.ВидДеятельностиДляНалоговогоУчетаЗатрат", ВидСравненияКомпоновкиДанных.Равно, Перечисления.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения);

	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Ложь);

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Форма.Элементы.ПринятиеКНалоговомуУчету.Доступность = Форма.Объект.ВидДеятельностиДляНалоговогоУчетаЗатрат =
		ПредопределенноеЗначение("Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения");
		
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ПОЛЕЙ ФОРМЫ

&НаКлиенте
Процедура ВидДеятельностиДляНалоговогоУчетаЗатратПриИзменении(Элемент)
	
	// По видам деятельности с особым порядком налогообложения и разным видам деятельности
	// расход всегда должен учитываться для целей налогообложения прибыли.
	
	Если Объект.ВидДеятельностиДляНалоговогоУчетаЗатрат <> ПредопределенноеЗначение("Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения") Тогда
		Объект.ПринятиеКНалоговомуУчету = Истина;
	КонецЕсли;
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПодсказкаВидРасходов = СтрШаблон(
		НСтр("ru = 'Влияет на отражение доходов и расходов в налоговой декларации
              |<a href = ""%1"">Подробнее</a>'"),
		КлассификаторыДоходовРасходов.СсылкаОписаниеВидовСтатейДоходовРасходов());
		
	Элементы.ВидПрочихДоходовИРасходов.РасширеннаяПодсказка.Заголовок = СтроковыеФункции.ФорматированнаяСтрока(ПодсказкаВидРасходов);
	Элементы.ИспользованиеПоУмолчанию.РасширеннаяПодсказка.Заголовок = КлассификаторыДоходовРасходов.ТекстПодсказкиИспользованиеПоУмолчанию();
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	Если Параметры.Ключ.Пустая() Тогда
		УправлениеФормой(ЭтаФорма);
	КонецЕсли;
	
	КлассификаторыДоходовРасходов.НастроитьИспользованиеПоУмолчанию(
		Элементы.ИспользованиеПоУмолчанию,
		Справочники.ПрочиеДоходыИРасходы);
	
	УстановитьУсловноеОформление();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	УправлениеФормой(ЭтаФорма);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ БСП

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если ЗначениеЗаполнено(Объект.ИмяПредопределенныхДанных) Тогда
		// Платформа выполняет проверку отсутствия элемента с таким же именем
		// до вызова первого из обработчиков, выполняемых в транзакции.
		// Поэтому замену имени предопределенных данных у "вытесняемого" элемента
		// выполняем вне транзакции.
		ПодготовитьЗаписьИмяПредопределенныхДанных(Отказ);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// Могло быть изменено ИмяПредопределенныхДанных, которое часто кешируется
	ОбновитьПовторноИспользуемыеЗначения();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПодготовитьЗаписьИмяПредопределенныхДанных(Отказ)
	
	КлассификаторыДоходовРасходов.ПодготовитьЗаписьИмяПредопределенныхДанных(
		Объект,
		Отказ,
		Справочники.ПрочиеДоходыИРасходы);
	
КонецПроцедуры

#КонецОбласти
