
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

&НаСервере
Процедура УстановитьСобственника()

	ТаблицаСобственники = АР_ОбщиеПроцедуры.ПолучитьСобственников(Объект.Ссылка, ТекущаяДата());
	
	ОдинСобственник = (ТаблицаСобственники.Количество() = 1);
		
	Собственник = ТаблицаСобственники[0].Собственник;
	Собственник_ПериодЗаписи = ТаблицаСобственники[0].ПериодЗаписи;
	Собственник_ОбъектАренды = ТаблицаСобственники[0].ОбъектАрендыРег; 
	
	Если ОдинСобственник Тогда 
		ДоговорСобственника = ТаблицаСобственники[0].ДоговорПринципала;
		АгентскаяСхема      = ТаблицаСобственники[0].АгентскаяСхема;
	Иначе
		АгентскаяСхема = Ложь;
		Для Каждого СтрокаТаблицы из ТаблицаСобственники Цикл 
			Если СтрокаТаблицы.АгентскаяСхема Тогда
				АгентскаяСхема = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Элементы.НадписьДоговорСобственника.Видимость = ОдинСобственник;
	Если ЗначениеЗаполнено(Собственник) Тогда
		Элементы.НадписьСобственник.Заголовок = ?(ОдинСобственник, "Собственник: ", "Собственники: " + Символы.ПС) + Собственник.ПредставлениеСобственника;
		Элементы.НадписьСобственник.Гиперссылка = Истина;
	Иначе
		Элементы.НадписьСобственник.Заголовок = "Собственник: не установлен";
		Элементы.НадписьСобственник.Гиперссылка = Ложь;
	КонецЕсли; 		
	Если ЗначениеЗаполнено(ДоговорСобственника) Тогда
		Элементы.НадписьДоговорСобственника.Заголовок   = "Агентский договор: " + ДоговорСобственника;
		Элементы.НадписьДоговорСобственника.Гиперссылка = Истина;
	Иначе
		Элементы.НадписьДоговорСобственника.Заголовок   = "Агентский договор: не установлен";
		Элементы.НадписьДоговорСобственника.Гиперссылка = Ложь;
	КонецЕсли; 	
	Если АгентскаяСхема Тогда
		Элементы.НадписьАгентскаяСхема.Заголовок = "Агентская схема: используется";
	Иначе
		Элементы.НадписьАгентскаяСхема.Заголовок = "Агентская схема: не используется";
	КонецЕсли;

КонецПроцедуры // УстановитьСобственника()

&НаСервере
Процедура ЗаписатьПризнакСдачиВАренду()
	
	Если ПодлежитСдачеВАренду Тогда
		ОбъектыПодлежащиеСдачеВАренду = РегистрыСведений.АР_ОбъектыПодлежащиеСдачеВАренду.СрезПоследних(, Новый Структура("ОбъектАренды", Объект.Ссылка));
		Если ОбъектыПодлежащиеСдачеВАренду.Количество() = 0 Тогда
			Запись = РегистрыСведений.АР_ОбъектыПодлежащиеСдачеВАренду.СоздатьМенеджерЗаписи();
			Запись.Период = НачалоСдачиВАренду;
			Запись.ОбъектАренды = Объект.Ссылка;
			Запись.ПодлежитСдачеВАренду = Истина;
			Запись.Записать();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РасположениеНаПланеРасширениеПредложено(РасширениеРаботыСФайламиПодключено, ДополнительныеПараметры) Экспорт
	Перем ПолноеИмяФайла;
	
	ДанныеФайла = ДополнительныеПараметры.ДанныеФайла;
	ИмяФайла = ДополнительныеПараметры.ИмяФайла;
	СохранятьКак = ДополнительныеПараметры.СохранятьКак;	

	Если РасширениеРаботыСФайламиПодключено Тогда
		РабочийКаталогПользователя = РаботаСФайламиСлужебныйКлиент.РабочийКаталогПользователя();
		Если ПустаяСтрока(РабочийКаталогПользователя) Тогда
			ПоказатьПредупреждение(, НСтр("ru = 'Не задан рабочий каталог'"));
			Возврат;
		КонецЕсли;
		
		ПолныйПуть = "";
		ФайлМожноОткрывать = РаботаСФайламиСлужебныйКлиент.ПолучитьФайлВРабочийКаталог(
				ДанныеФайла.СсылкаНаДвоичныеДанныеФайла,
				"",
				ТекущаяДата(),
				ИмяФайла,
				КаталогВременныхФайлов(),
				ПолныйПуть
			);

		Если ФайлМожноОткрывать Тогда
			ЗапуститьПриложение(ПолныйПуть);
		КонецЕсли; 
		
	Иначе
		ПолучитьФайл(ДанныеФайла.СсылкаНаДвоичныеДанныеФайла, СохранятьКак, Истина);
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ УПРАВЛЕНИЯ ВНЕШНИМ ВИДОМ ФОРМЫ

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	Если Параметры.Ключ.Пустая() Тогда
		
		Объект.ТипОбъекта = Константы.АР_ТипОбъектаАренды.Получить();
		Объект.ЕдиницаИзмерения = Справочники.КлассификаторЕдиницИзмерения.НайтиПоНаименованию("м2");
		
		Если Объект.ТипОбъекта.КатегорияОбъекта = Перечисления.АР_КатегорииОбъектовНедвижимости.Помещение Тогда
			ПодлежитСдачеВАренду = Истина;
			НачалоСдачиВАренду = НачалоГода(ДобавитьМесяц(ТекущаяДата(), -3));
		КонецЕсли;				
		
	КонецЕсли;
	
	УстановитьСобственника();
	
	ПрочитатьПризнакСдачиВАренду();
	
	УправлениеФормой();
	
	// Обработчик подсистемы "Свойства"
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Объект", Объект);
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтаФорма, ДополнительныеПараметры);
	
	// Обработчик подсистемы "Контактная информация"
	УправлениеКонтактнойИнформацией.ПриСозданииНаСервере(ЭтаФорма, Объект, "ГруппаКонтактнаяИнформация");
	
	Если НЕ Элементы.Найти("ГруппаКонтактнаяИнформацияДобавитьПолеВвода") = Неопределено Тогда
		Элементы.ГруппаКонтактнаяИнформацияДобавитьПолеВвода.Видимость = Ложь;
	КонецЕсли;
	Если НЕ Элементы.Найти("ГруппаКонтактнаяИнформацияДобавитьПолеВводаГруппаКонтактнаяИнформация") = Неопределено Тогда
		Элементы.ГруппаКонтактнаяИнформацияДобавитьПолеВводаГруппаКонтактнаяИнформация.Видимость = Ложь;
	КонецЕсли;
	
	Если НЕ Элементы.Найти("ГруппаДействийКонтактнойИнформации") = Неопределено Тогда
		Элементы.ГруппаДействийКонтактнойИнформации.Видимость = Ложь;
	КонецЕсли;
	
	СтрокиОписания = ЭтаФорма.КонтактнаяИнформацияОписаниеДополнительныхРеквизитов.НайтиСтроки(Новый Структура("Вид", Справочники.ВидыКонтактнойИнформации.АдресОбъектаАренды));
	Если СтрокиОписания.Количество() > 0 Тогда
		ИмяПоля = СтрокиОписания[0].ИмяРеквизита;
		Элементы[ИмяПоля].ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Авто;
	КонецЕсли;
	
	Если НЕ Этаформа.Элементы.Найти("ДекорацияВерхКонтактнаяИнформацияПоле0") = Неопределено Тогда
		Этаформа.Элементы.Найти("ДекорацияВерхКонтактнаяИнформацияПоле0").Видимость = Ложь;
	КонецЕсли;
	Если НЕ Этаформа.Элементы.Найти("ДекорацияВерхКонтактнаяИнформацияПоле0КонтекстноеМеню") = Неопределено Тогда
		Этаформа.Элементы.Найти("ДекорацияВерхКонтактнаяИнформацияПоле0КонтекстноеМеню").Видимость = Ложь;
	КонецЕсли;
	Если НЕ Этаформа.Элементы.Найти("ЗаглушкаДействияКонтактнаяИнформацияПоле0") = Неопределено Тогда
		Этаформа.Элементы.Найти("ЗаглушкаДействияКонтактнаяИнформацияПоле0").Видимость = Ложь;
	КонецЕсли;
	Если НЕ Этаформа.Элементы.Найти("ЗаглушкаДействияКонтактнаяИнформацияПоле0КонтекстноеМеню") = Неопределено Тогда
		Этаформа.Элементы.Найти("ЗаглушкаДействияКонтактнаяИнформацияПоле0КонтекстноеМеню").Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ЗаписатьПризнакСдачиВАренду();
	ПрочитатьПризнакСдачиВАренду();
	УправлениеФормой();
	
КонецПроцедуры

&НаСервере
Процедура УправлениеФормой()
	
	ВидимостьРеквизитаЗданиеИЭтаж = ПолучитьФункциональнуюОпцию("АР_ИспользоватьСправочникЗданияИЭтажи");
	Элементы.ЗданиеИЭтаж.Видимость = ВидимостьРеквизитаЗданиеИЭтаж;
	Элементы.ГруппаПодсказкаЗданиеИЭтаж.Видимость = ВидимостьРеквизитаЗданиеИЭтаж;
	
	ЭтоЗдание = Объект.ТипОбъекта.КатегорияОбъекта = Перечисления.АР_КатегорииОбъектовНедвижимости.Здание;
	ЭтоЗемельныйУчасток = Объект.ТипОбъекта.КатегорияОбъекта = Перечисления.АР_КатегорииОбъектовНедвижимости.ЗемельныйУчасток;
	ЭтоПомещение = Объект.ТипОбъекта.КатегорияОбъекта = Перечисления.АР_КатегорииОбъектовНедвижимости.Помещение;
	ЭтоСооружение = Объект.ТипОбъекта.КатегорияОбъекта = Перечисления.АР_КатегорииОбъектовНедвижимости.Сооружение;
	ЭтоПрочее = Объект.ТипОбъекта.КатегорияОбъекта = Перечисления.АР_КатегорииОбъектовНедвижимости.Прочее;
	
	Элементы.КатегорияЗемель.Видимость = ЭтоЗемельныйУчасток;
	Элементы.НазначениеОбъекта.Видимость = НЕ ЭтоЗемельныйУчасток;
	Элементы.ЧислоЭтажей.Видимость = ЭтоЗдание ИЛИ ЭтоСооружение;
	Элементы.ЧислоПодземныхЭтажей.Видимость = ЭтоЗдание ИЛИ ЭтоСооружение;
	Элементы.Этаж.Видимость = ЭтоПомещение;
	Элементы.ГодПостройки.Видимость = ЭтоЗдание ИЛИ ЭтоСооружение;
	Элементы.ПамятникИсторииИКультуры.Видимость = ЭтоЗдание ИЛИ ЭтоСооружение ИЛИ ЭтоПомещение;
	
	Элементы.СтраницыПризнакСдачиВАренду.ТекущаяСтраница = ?(ЗначениеЗаполнено(Объект.Ссылка), Элементы.ГруппаПризнакСдачиВАренду, Элементы.ГруппаПризнакСдачиВАрендуНовый);
	Элементы.НачалоСдачиВАренду.Видимость = ПодлежитСдачеВАренду;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ЗаписьСобственника" Тогда
		УстановитьСобственника();
	КонецЕсли;
	Если ИмяСобытия = "ИзмененПризнакСдачиВАренду" Тогда
		ПрочитатьПризнакСдачиВАренду();
	КонецЕсли;
	Если ИмяСобытия = "ИзменениеНастроекПараметровУчета" Тогда
		УправлениеФормой();
	КонецЕсли;
	Если ИмяСобытия = "ИзменениеНастроекИспользованияЗданийИЭтажей" Тогда
		УправлениеФормой();
	КонецЕсли;
	// Подсистема "Свойства"
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтаФорма, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// Обработчик подсистемы "Свойства"
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтаФорма, ТекущийОбъект);
	
	// Обработчик подсистемы "Контактная информация"
	УправлениеКонтактнойИнформацией.ПередЗаписьюНаСервере(ЭтаФорма, ТекущийОбъект, Отказ);

	ТекущийОбъект.ДополнительныеСвойства.Вставить("ЗаписьИзФормы", Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, НавигационнаяСсылка = Неопределено, СтандартнаяОбработка = Неопределено)
	УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
КонецПроцедуры

&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтаФорма, РеквизитФормыВЗначение("Объект"));

КонецПроцедуры

&НаСервере
Процедура ПрочитатьПризнакСдачиВАренду()
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Возврат;		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОбъектыПодлежащиеСдачеВАренду.ПодлежитСдачеВАренду,
	|	ОбъектыПодлежащиеСдачеВАренду.Период
	|ИЗ
	|	РегистрСведений.АР_ОбъектыПодлежащиеСдачеВАренду.СрезПоследних(, ОбъектАренды = &ОбъектАренды) КАК ОбъектыПодлежащиеСдачеВАренду";

	Запрос.УстановитьПараметр("ОбъектАренды", Объект.Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ПодлежитСдачеВАренду = Выборка.ПодлежитСдачеВАренду;
		НачалоСдачиВАренду = Выборка.Период;
		ПодлежитСдачеВАрендуСтрока = Формат(ПодлежитСдачеВАренду, "БЛ=Нет; БИ=Да") + ", с " + Формат(НачалоСдачиВАренду, "ДФ=dd.MM.yyyy");
	Иначе
		ПодлежитСдачеВАренду = Ложь;
		ПодлежитСдачеВАрендуСтрока = "Нет";
	КонецЕсли;                     
	
КонецПроцедуры

&НаСервере
Процедура РассчитатьПлощадьПоПодчиненнымНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Родитель", Объект.Ссылка);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СУММА(АР_ОбъектыАренды.ЗначениеХарактеристики) КАК ОбщаяПлощадь
	|ИЗ
	|	Справочник.АР_ОбъектыАренды КАК АР_ОбъектыАренды
	|ГДЕ
	|	АР_ОбъектыАренды.Родитель = &Родитель";
	Выборка = Запрос.Выполнить().Выбрать();
	                         
	Если Выборка.Следующий() Тогда
		Объект.ЗначениеХарактеристики = Выборка.ОбщаяПлощадь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьКлючЗаписиСобственника(Период, ОбъектАренды)
	
	КлючЗаписи = РегистрыСведений.АР_СобственникиОбъектовАренды.СоздатьКлючЗаписи(Новый Структура("Период, ОбъектАренды", Период, ОбъектАренды));
	Возврат КлючЗаписи;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

&НаКлиенте
Процедура ИзменитьПризнакСдачиВАренду(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Необходимо записать объект'"));
		Возврат;
	КонецЕсли;
	
	Отбор = Новый Структура("ОбъектАренды", Объект.Ссылка);
	ОткрытьФорму("РегистрСведений.АР_ОбъектыПодлежащиеСдачеВАренду.ФормаСписка", Новый Структура("Отбор, ЗакрыватьПриЗакрытииВладельца", Отбор, Истина), ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьСобственника(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Перед заполнением данных о собственнике необходимо записать объект'"));
		Возврат;
	КонецЕсли;
	
	Отбор = Новый Структура("ОбъектАренды", Объект.Ссылка);
	Форма = ПолучитьФорму("РегистрСведений.АР_СобственникиОбъектовАренды.ФормаСписка", Новый Структура("Отбор", Отбор), ЭтаФорма, Истина);
	Форма.ЗакрыватьПриЗакрытииВладельца = Истина;
	Форма.Открыть();
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ШАПКИ

&НаКлиенте
Процедура РасположениеНаПланеОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Не АР_ОбщиеПроцедурыКлиент.ДоступнаРаботаMSOffice(2) Тогда
		Возврат;		
	КонецЕсли;
	
	ДанныеПланировки = АР_ОбщиеПроцедуры.ЗначенияРеквизитовОбъекта(Объект.РасположениеНаПлане, "ФайлПланировки, Лист, ГрОбъект, ОбластьТекста");
	ДанныеПланировки.Вставить("Наименование", Объект.Наименование);
	
	ЭтоВебКлиент = Ложь;
	
	#Если ВебКлиент Тогда
		СохранятьКак = АР_ОбщиеПроцедурыКлиентСервер.ПолучитьИмяФайлаПланировки(ДанныеПланировки.ФайлПланировки, "Расположение объекта");
		ИмяФайла = "";
		ЭтоВебКлиент = Истина;	
	#Иначе
		СохранятьКак = АР_ОбщиеПроцедурыКлиентСервер.ПолучитьИмяФайлаПланировки(ДанныеПланировки.ФайлПланировки, "Расположение объекта");
		Файл = Новый Файл(СохранятьКак);
		ИмяФайла = Файл.Имя;
	#КонецЕсли
	
	ОбрабатыватьШаблоныИПланировкиНаКлиенте = НЕ ЭтоВебКлиент И АР_ОбщиеПроцедуры.ПолучитьЗначениеКонстанты("АР_ОбрабатыватьШаблоныИПланировкиНаКлиенте");
	
	Если ОбрабатыватьШаблоныИПланировкиНаКлиенте Тогда
		АдресХранилища = АР_ОбщиеПроцедурыКлиентСервер.ОтобразитьНаПланировкеОбъект(ДанныеПланировки);
		Если НЕ АдресХранилища = Неопределено Тогда
			ДвоичныеДанные = ПолучитьИзВременногоХранилища(АдресХранилища);
			ДвоичныеДанные.Записать(СохранятьКак);
			ЗапуститьПриложение(СохранятьКак);
		КонецЕсли;
	Иначе
		ДанныеФайла = АР_ОбщиеПроцедуры.ПолучитьГрафическийОбъект(ДанныеПланировки, СохранятьКак);
		Если НЕ ДанныеФайла = Неопределено Тогда
			
			ДополнительныеПараметры = Новый Структура;
			ДополнительныеПараметры.Вставить("ДанныеФайла", ДанныеФайла);
			ДополнительныеПараметры.Вставить("СохранятьКак", СохранятьКак);
			ДополнительныеПараметры.Вставить("ИмяФайла", ИмяФайла);
			
			Если ЭтоВебКлиент Тогда
				РасположениеНаПланеРасширениеПредложено(Ложь, ДополнительныеПараметры);
			Иначе
				ОписаниеОповещения = Новый ОписаниеОповещения("РасположениеНаПланеРасширениеПредложено", ЭтотОбъект, ДополнительныеПараметры);
				ОбщегоНазначенияКлиент.ПоказатьВопросОбУстановкеРасширенияРаботыСФайлами(ОписаниеОповещения);
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьСобственникНажатие(Элемент)
	
	Если ЗначениеЗаполнено(Собственник_ПериодЗаписи) Тогда 
		Структура = Новый Структура("Ключ", ПолучитьКлючЗаписиСобственника(Собственник_ПериодЗаписи, Собственник_ОбъектАренды));
		ОткрытьФорму("РегистрСведений.АР_СобственникиОбъектовАренды.ФормаЗаписи", Структура);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьДоговорСобственникаНажатие(Элемент)
	
	ПоказатьЗначение(, ДоговорСобственника);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтаФорма, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаКлиенте
Процедура ТипОбъектаПриИзменении(Элемент)
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Если АР_ОбщиеПроцедуры.ЗначениеРеквизитаОбъекта(Объект.ТипОбъекта, "КатегорияОбъекта") = ПредопределенноеЗначение("Перечисление.АР_КатегорииОбъектовНедвижимости.Помещение") Тогда
			Если Не ПодлежитСдачеВАренду Тогда
				ПодлежитСдачеВАренду = Истина;
				ВвестиДатуНачалаСдачиВАренду();
			КонецЕсли;
		Иначе
			ПодлежитСдачеВАренду = Ложь;
		КонецЕсли;				
	КонецЕсли;
	УправлениеФормой();
	
КонецПроцедуры

&НаКлиенте
Процедура ПодробнееОЗданиеИЭтажНажатие(Элемент)
	
	ОткрытьСправку("Справочник.АР_ЗданияИЭтажи");
	
КонецПроцедуры

&НаКлиенте
Процедура ВвестиДатуНачалаСдачиВАренду()
	
	Если ПодлежитСдачеВАренду Тогда
		НачалоСдачиВАренду = НачалоГода(ДобавитьМесяц(ТекущаяДата(), -3));
	КонецЕсли;	
		
КонецПроцедуры

&НаКлиенте
Процедура ПодлежитСдачеВАрендуНовыйПриИзменении(Элемент)
	
	Если ПодлежитСдачеВАренду Тогда
		ВвестиДатуНачалаСдачиВАренду();
	КонецЕсли;
	УправлениеФормой();

КонецПроцедуры

&НаКлиенте
Процедура РассчитатьПлощадьПоПодчиненным(Команда)
	
	Если НЕ Объект.ЗначениеХарактеристики = 0 Тогда
		Оповещение = Новый ОписаниеОповещения("РассчитатьПлощадьПоПодчиненнымЗавершение", ЭтаФорма);
		ПоказатьВопрос(Оповещение, "Будет выполнен пересчет общей площади на основе площадей подчиненных объектов. Продолжить?", РежимДиалогаВопрос.ДаНет);
	Иначе
		РассчитатьПлощадьПоПодчиненнымНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьПлощадьПоПодчиненнымЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		РассчитатьПлощадьПоПодчиненнымНаСервере();
	КонецЕсли;
	
КонецПроцедуры

// СтандартныеПодсистемы.КонтактнаяИнформация

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияПриИзменении(Элемент)
	УправлениеКонтактнойИнформациейКлиент.НачатьИзменение(ЭтотОбъект, Элемент);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	УправлениеКонтактнойИнформациейКлиент.НачатьВыбор(ЭтотОбъект, Элемент, , СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияПриНажатии(Элемент, СтандартнаяОбработка)
	УправлениеКонтактнойИнформациейКлиент.НачатьВыбор(ЭтотОбъект, Элемент,, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияВыполнитьКоманду(Команда)
	
	УправлениеКонтактнойИнформациейКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияОчистка(Элемент, СтандартнаяОбработка)
	
	УправлениеКонтактнойИнформациейКлиент.НачатьОчистку(ЭтотОбъект, Элемент.Имя);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьКонтактнуюИнформацию(Результат)
	
	УправлениеКонтактнойИнформацией.ОбновитьКонтактнуюИнформацию(ЭтотОбъект, Объект, Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьОбновлениеКонтактнойИнформации(Результат, ДополнительныеПараметры) Экспорт
	
	ОбновитьКонтактнуюИнформацию(Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	УправлениеКонтактнойИнформациейКлиент.АвтоПодбор(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	УправлениеКонтактнойИнформациейКлиент.ОбработкаВыбора(ЭтотОбъект, ВыбранноеЗначение, Элемент.Имя, СтандартнаяОбработка);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.КонтактнаяИнформация

