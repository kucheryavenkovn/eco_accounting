
&НаКлиенте
Перем Книга;

&НаКлиенте
Перем Excel;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

&НаКлиенте
Процедура ГрОбъектОткрытиеРасширениеПредложено(РасширениеРаботыСФайламиПодключено, ДополнительныеПараметры) Экспорт
	Перем ПолноеИмяФайла;
	
	ДанныеФайла = ДополнительныеПараметры.ДанныеФайла;
	СохранятьКак = ДополнительныеПараметры.СохранятьКак;
	ИмяФайла = ДополнительныеПараметры.ИмяФайла;

	Если РасширениеРаботыСФайламиПодключено Тогда
		РабочийКаталогПользователя = РаботаСФайламиСлужебныйКлиент.РабочийКаталогПользователя();
		Если ПустаяСтрока(РабочийКаталогПользователя) Тогда
			ПоказатьПредупреждение(, НСтр("ru = 'Не задан рабочий каталог'"));
			Возврат;
		КонецЕсли;
		
		ПолныйПуть = "";
		ФайлМожноОткрывать = РаботаСФайламиСлужебныйКлиент.ПолучитьФайлВРабочийКаталог(
				ДанныеФайла.СсылкаНаДвоичныеДанныеФайла,
				"",
				ТекущаяДата(),
				ИмяФайла,
				КаталогВременныхФайлов(),
				ПолныйПуть
			);

		Если ФайлМожноОткрывать Тогда
			ЗапуститьПриложение(ПолныйПуть);
		КонецЕсли; 
		
	Иначе
		ПолучитьФайл(ДанныеФайла.СсылкаНаДвоичныеДанныеФайла, СохранятьКак, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЛистЗавершениеВыбора(ВыбранноеЗначение, ДополнительныеПараметры) Экспорт
	
	Если НЕ ВыбранноеЗначение = Неопределено Тогда
		Объект.Лист = ВыбранноеЗначение.Значение;
		Модифицированность = Истина;
	КонецЕсли;	
	
	ПриИзмененииЛиста();
	
КонецПроцедуры

&НаКлиенте
Процедура ГрОбъектЗавершениеВыбора(ВыбранноеЗначение, ДополнительныеПараметры) Экспорт
	
	Если НЕ ВыбранноеЗначение = Неопределено Тогда
		Объект.ГрОбъект = ВыбранноеЗначение.Значение;
		Модифицированность = Истина;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ОбластьТекстаЗавершениеВыбора(ВыбранноеЗначение, ДополнительныеПараметры) Экспорт
	
	Если НЕ ВыбранноеЗначение = Неопределено Тогда
		Объект.ОбластьТекста = ВыбранноеЗначение.Значение;
		Модифицированность = Истина;
	КонецЕсли;	
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	ПланировкаИнициализирована = Ложь;
	
КонецПроцедуры

&НаСервере
Процедура ИнициализироватьПланировкуНаСервере(ОписаниеПланировки)
	
	Элементы.Лист.СписокВыбора.ЗагрузитьЗначения(ОписаниеПланировки.МассивЛистов);
	ДанныеОбъекта = Новый ТаблицаЗначений;
	ДанныеОбъекта.Колонки.Добавить("Лист");
	ДанныеОбъекта.Колонки.Добавить("ГрОбъект");
	ДанныеОбъекта.Колонки.Добавить("ТекстОбласть");
	Для Каждого Элемент Из ОписаниеПланировки.МассивДанныхТаблицыОбъектов Цикл
		Стр = ДанныеОбъекта.Добавить();	
		ЗаполнитьЗначенияСвойств(Стр, Элемент);
	КонецЦикла;
	ТаблицаОбъектов.Загрузить(ДанныеОбъекта);
	ДанныеТекстОбластей = Новый ТаблицаЗначений;
	ДанныеТекстОбластей.Колонки.Добавить("Лист");
	ДанныеТекстОбластей.Колонки.Добавить("ТекстОбласть");
	Для Каждого Элемент Из ОписаниеПланировки.МассивДанныхТаблицыТекстОбъектов Цикл
		Стр = ДанныеТекстОбластей.Добавить();	
		ЗаполнитьЗначенияСвойств(Стр, Элемент);
	КонецЦикла;
	ТаблицаТекстОбластей.Загрузить(ДанныеТекстОбластей);
	
КонецПроцедуры

&НаКлиенте
Процедура ИнициализироватьПланировку()
	
	Если Не АР_ОбщиеПроцедурыКлиент.ДоступнаРаботаMSOffice(2) Тогда
		Возврат;		
	КонецЕсли;
	
	ЭтоВебКлиент = Ложь;
	
	#Если ВебКлиент Тогда
		ЭтоВебКлиент = Истина;	
	#КонецЕсли
	
	ОбрабатыватьШаблоныИПланировкиНаКлиенте = НЕ ЭтоВебКлиент И АР_ОбщиеПроцедуры.ПолучитьЗначениеКонстанты("АР_ОбрабатыватьШаблоныИПланировкиНаКлиенте");
	
	Если НЕ ОбрабатыватьШаблоныИПланировкиНаКлиенте Тогда
		ОписаниеПланировки = АР_ОбщиеПроцедуры.ПолучитьОписаниеФайлаПланировки(Объект.ФайлПланировки);
	Иначе	
		ОписаниеПланировки = АР_ОбщиеПроцедурыКлиентСервер.ПолучитьОписаниеФайлаПланировки(Объект.ФайлПланировки);
	КонецЕсли;
	
	ПланировкаИнициализирована = ОписаниеПланировки.ПланировкаИнициализирована;
	
	ИнициализироватьПланировкуНаСервере(ОписаниеПланировки);
	
	ПриИзмененииЛиста();
	
КонецПроцедуры

&НаКлиенте
Процедура ФайлПланировкиОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ДанныеФайла = ПолучитьДанныеФайлаНаСервере();
	Если Не ДанныеФайла = Неопределено Тогда
		
		Файл = Новый Файл(ДанныеФайла.ИмяФайла);
		ИмяФайла = Файл.Имя;
		
		Если ПодключитьРасширениеРаботыСФайлами()Тогда
			ПолноеИмяФайлаНаКлиенте = "";
			ФайлМожноОткрывать = РаботаСФайламиСлужебныйКлиент.ПолучитьФайлВРабочийКаталог(
				ДанныеФайла.СсылкаНаДвоичныеДанныеФайла,
				"",
				ТекущаяДата(),
				ИмяФайла,
				КаталогВременныхФайлов(),
				ПолноеИмяФайлаНаКлиенте
			);
			Если ФайлМожноОткрывать Тогда
				ЗапуститьПриложение(ПолноеИмяФайлаНаКлиенте);
			КонецЕсли;
		Иначе
			ПолучитьФайл(ДанныеФайла.СсылкаНаДвоичныеДанныеФайла, ИмяФайла, Истина);
		КонецЕсли;

	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьДанныеФайлаНаСервере()
	
	ПолноеИмяФайла = АР_ОбщиеПроцедуры.ПолучитьПутьКФайлуПланировки(Объект.ФайлПланировки);
	
	Файл = Новый Файл(ПолноеИмяФайла);
	Если Файл.Существует() Тогда
		ДвоичныеДанные = Новый ДвоичныеДанные(ПолноеИмяФайла);
		СсылкаНаДвоичныеДанныеФайла = ПоместитьВоВременноеХранилище(ДвоичныеДанные, УникальныйИдентификатор);
		
		НоваяСтруктураДанных = Новый Структура;
		НоваяСтруктураДанных.Вставить("СсылкаНаДвоичныеДанныеФайла", СсылкаНаДвоичныеДанныеФайла);
		НоваяСтруктураДанных.Вставить("ИмяФайла", АР_ОбщиеПроцедурыКлиентСервер.ПолучитьИмяФайлаПланировки(Объект.ФайлПланировки, "Файл планировки"));
		
		Возврат НоваяСтруктураДанных; 
	Иначе 
		Возврат Неопределено;		
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ФайлПланировкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ФормаВыбора = ПолучитьФорму("Справочник.АР_ФайлыПланировокПомещенийИПлощадей.Форма.ФормаВыбора",, Элемент);
	ФормаВыбора.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ФайлПланировкиПриИзменении(Элемент)
	
	ИнициализироватьПланировку();
	
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииЛиста()
	
	МассивОбъктов = Новый Массив;
	МассивТекстОбластей = Новый Массив;
	
	Если ЗначениеЗаполнено(Объект.Лист) Тогда
		МассивСтрок = ТаблицаОбъектов.НайтиСтроки(Новый Структура("Лист", СокрЛП(Объект.Лист)));
		Для Каждого Стр Из МассивСтрок Цикл
			МассивОбъктов.Добавить(Стр.ГрОбъект);	
		КонецЦикла;
		МассивСтрок = ТаблицаТекстОбластей.НайтиСтроки(Новый Структура("Лист", СокрЛП(Объект.Лист)));
		Для Каждого Стр Из МассивСтрок Цикл
			МассивТекстОбластей.Добавить(Стр.ТекстОбласть);	
		КонецЦикла;
	КонецЕсли;
	
	Элементы.ГрОбъект.СписокВыбора.ЗагрузитьЗначения(МассивОбъктов);
	Элементы.ОбластьТекста.СписокВыбора.ЗагрузитьЗначения(МассивТекстОбластей);
	
КонецПроцедуры

&НаКлиенте
Процедура ЛистПриИзменении(Элемент)
	
	ПриИзмененииЛиста();
	
КонецПроцедуры

&НаКлиенте
Процедура ЛистНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если НЕ ПланировкаИнициализирована Тогда
		ИнициализироватьПланировку();
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ЛистЗавершениеВыбора", ЭтотОбъект);
	Элементы.Лист.СписокВыбора.ПоказатьВыборЭлемента(ОписаниеОповещения, "Выберите рабочий Лист");
			
КонецПроцедуры

&НаКлиенте
Процедура ГрОбъектНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если НЕ ПланировкаИнициализирована Тогда
		ИнициализироватьПланировку();
	КонецЕсли;
	
	Если Элементы.ГрОбъект.СписокВыбора.Количество() = 0 Тогда
		Сообщить("На данном листе нет объектов для выбора");
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ГрОбъектЗавершениеВыбора", ЭтотОбъект);
	Элементы.ГрОбъект.СписокВыбора.ПоказатьВыборЭлемента(ОписаниеОповещения, "Выберите графический объект");
		
КонецПроцедуры

&НаКлиенте
Процедура ГрОбъектОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Не АР_ОбщиеПроцедурыКлиент.ДоступнаРаботаMSOffice(2) Тогда
		Возврат;		
	КонецЕсли;
	
	ЭтоВебКлиент = Ложь;
	
	#Если ВебКлиент Тогда
		СохранятьКак = АР_ОбщиеПроцедурыКлиентСервер.ПолучитьИмяФайлаПланировки(Объект.ФайлПланировки, "Расположение объекта");
		ИмяФайла = "";
		ЭтоВебКлиент = Истина;	
	#Иначе
		СохранятьКак = АР_ОбщиеПроцедурыКлиентСервер.ПолучитьИмяФайлаПланировки(Объект.ФайлПланировки, "Расположение объекта");
		Файл = Новый Файл(СохранятьКак);
		ИмяФайла = Файл.Имя;
	#КонецЕсли
	
	ОбрабатыватьШаблоныИПланировкиНаКлиенте = НЕ ЭтоВебКлиент И АР_ОбщиеПроцедуры.ПолучитьЗначениеКонстанты("АР_ОбрабатыватьШаблоныИПланировкиНаКлиенте");
	
	ДанныеПланировки = Новый Структура("ФайлПланировки, Наименование, Лист, ГрОбъект, ОбластьТекста");
	ЗаполнитьЗначенияСвойств(ДанныеПланировки, Объект);
	
	Если ОбрабатыватьШаблоныИПланировкиНаКлиенте Тогда
		АдресХранилища = АР_ОбщиеПроцедурыКлиентСервер.ОтобразитьНаПланировкеОбъект(ДанныеПланировки);
		ДвоичныеДанные = ПолучитьИзВременногоХранилища(АдресХранилища);
		ДвоичныеДанные.Записать(СохранятьКак);
		ЗапуститьПриложение(СохранятьКак);
	Иначе
		ДанныеФайла = АР_ОбщиеПроцедуры.ПолучитьГрафическийОбъект(ДанныеПланировки, СохранятьКак);
		Если НЕ ДанныеФайла = Неопределено Тогда
			
			ДополнительныеПараметры = Новый Структура;
			ДополнительныеПараметры.Вставить("ДанныеФайла", ДанныеФайла);
			ДополнительныеПараметры.Вставить("СохранятьКак", СохранятьКак);
			ДополнительныеПараметры.Вставить("ИмяФайла", ИмяФайла);
			
			Если ЭтоВебКлиент Тогда
				ГрОбъектОткрытиеРасширениеПредложено(Ложь, ДополнительныеПараметры);
			Иначе
				ОписаниеОповещения = Новый ОписаниеОповещения("ГрОбъектОткрытиеРасширениеПредложено", ЭтотОбъект, ДополнительныеПараметры);
				ОбщегоНазначенияКлиент.ПоказатьВопросОбУстановкеРасширенияРаботыСФайлами(ОписаниеОповещения);
			КонецЕсли;

		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбластьТекстаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если НЕ ПланировкаИнициализирована Тогда
		ИнициализироватьПланировку();
	КонецЕсли;
	
	Если Элементы.ОбластьТекста.СписокВыбора.Количество() = 0 Тогда
		Сообщить("На данном листе нет текстовых областей для выбора");
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбластьТекстаЗавершениеВыбора", ЭтотОбъект);
	Элементы.ОбластьТекста.СписокВыбора.ПоказатьВыборЭлемента(ОписаниеОповещения, "Выберите текстовую область");
		
КонецПроцедуры
