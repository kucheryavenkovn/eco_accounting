
&НаКлиенте
Перем СписокЛистов;

&НаКлиенте
Перем Книга;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

&НаСервере
Процедура ИнициализироватьПланировкуНаСервере(ОписаниеПланировки)
	

	Элементы.Лист.СписокВыбора.ЗагрузитьЗначения(ОписаниеПланировки.МассивЛистов);
	ДанныеОбъекта = Новый ТаблицаЗначений;
	ДанныеОбъекта.Колонки.Добавить("Лист");
	ДанныеОбъекта.Колонки.Добавить("ГрОбъект");
	ДанныеОбъекта.Колонки.Добавить("ТекстОбласть");
	Для Каждого Элемент Из ОписаниеПланировки.МассивДанныхТаблицыОбъектов Цикл
		Стр = ДанныеОбъекта.Добавить();	
		ЗаполнитьЗначенияСвойств(Стр, Элемент);
	КонецЦикла;
	ТаблицаОбъектов.Загрузить(ДанныеОбъекта);
	
КонецПроцедуры

&НаКлиенте
Процедура ИнициализироватьПланировку()
	
	ЭтоВебКлиент = Ложь;
	
	#Если ВебКлиент Тогда
		ЭтоВебКлиент = Истина;	
	#КонецЕсли
	
	ОбрабатыватьШаблоныИПланировкиНаКлиенте = НЕ ЭтоВебКлиент И АР_ОбщиеПроцедуры.ПолучитьЗначениеКонстанты("АР_ОбрабатыватьШаблоныИПланировкиНаКлиенте");
	
	Если НЕ ОбрабатыватьШаблоныИПланировкиНаКлиенте Тогда
		ОписаниеПланировки = АР_ОбщиеПроцедуры.ПолучитьОписаниеФайлаПланировки(ФайлПланировки, Истина);
	Иначе	
		ОписаниеПланировки = АР_ОбщиеПроцедурыКлиентСервер.ПолучитьОписаниеФайлаПланировки(ФайлПланировки, Истина);
	КонецЕсли;
	
	ПланировкаИнициализирована = ОписаниеПланировки.ПланировкаИнициализирована;
	
	ИнициализироватьПланировкуНаСервере(ОписаниеПланировки);
	
КонецПроцедуры

&НаСервере
Процедура СоздатьСправочникПланировок(ИмяОбъекта, ИмяОбласти)

	НовыйОбъект = Справочники.АР_ПланировкиПомещенийИПлощадей.СоздатьЭлемент();
	НовыйОбъект.Наименование = Префикс + "-" + ИмяОбъекта;
	НовыйОбъект.Родитель = Группа;
	НовыйОбъект.ФайлПланировки = ФайлПланировки;
	НовыйОбъект.Лист = Лист;
	НовыйОбъект.ГрОбъект = ИмяОбъекта;
	Если ЗначениеЗаполнено(ИмяОбласти) Тогда
		НовыйОбъект.ОбластьТекста = ИмяОбласти;
	КонецЕсли;		
	ЗаписатьСправочникОбъект(НовыйОбъект);

	Если СоздаватьОбъекты Тогда
		СоздатьСправочникОбъектовАренды(ИмяОбъекта, НовыйОбъект);
	КонецЕсли;
	
КонецПроцедуры // СоздатьСправочникПланировок()

&НаСервере
Процедура СоздатьСправочникОбъектовАренды(ИмяОбъекта, СправочникПланировок)

	НовыйОбъект = Справочники.АР_ОбъектыАренды.СоздатьЭлемент();
	ЗаполнитьЗначенияСвойств(НовыйОбъект, Объект);
	НовыйОбъект.Наименование = Префикс + "-" + ИмяОбъекта;
	НовыйОбъект.РасположениеНаПлане = СправочникПланировок.Ссылка;
	
	// Обработчик подсистемы "Контактная информация"
	УправлениеКонтактнойИнформацией.ПередЗаписьюНаСервере(ЭтаФорма, НовыйОбъект);
	
	ЗаписатьСправочникОбъект(НовыйОбъект);
	
	Если ПодлежитСдачеВАренду Тогда
		НоваяЗапись = РегистрыСведений.АР_ОбъектыПодлежащиеСдачеВАренду.СоздатьМенеджерЗаписи();
		НоваяЗапись.Период = ДатаНачалаСдачиВАренду;
		НоваяЗапись.ОбъектАренды = НовыйОбъект.Ссылка;
		НоваяЗапись.ПодлежитСдачеВАренду = Истина;
		НоваяЗапись.Записать();
	КонецЕсли;

КонецПроцедуры // СоздатьСправочникОбъектовАренды()

&НаСервере
Процедура СоздатьСправочникЗданийИЭтажей(Наименование, ДополнительныеПараметры) Экспорт

	ОбъектЗданиеИЭтаж = Справочники.АР_ЗданияИЭтажи.СоздатьЭлемент();
	ОбъектЗданиеИЭтаж.Наименование = Наименование;
	ОбъектЗданиеИЭтаж.ПолноеНаименование = Наименование;
	ЗаписатьСправочникОбъект(ОбъектЗданиеИЭтаж);
	ЗданиеИЭтаж = ОбъектЗданиеИЭтаж.Ссылка;

КонецПроцедуры // СоздатьСправочникЗданийИЭтажей()

&НаСервере
Процедура ЗаписатьСправочникОбъект(СправочникОбъект, Сообщать = Истина)

	Если НЕ СправочникОбъект.Модифицированность() Тогда
		Возврат;
	КонецЕсли;

	Если СправочникОбъект.ЭтоНовый() Тогда
		СтрСообщения1 = "Создан";
	Иначе
		СтрСообщения1 = "Обработан";
	КонецЕсли;

	Если СправочникОбъект.ЭтоГруппа Тогда
		СтрСообщения2 = "а группа";
	Иначе
		СтрСообщения2 = " элемент";
	КонецЕсли;

	СтрСообщения2 = СтрСообщения2 + " справочника """ + СправочникОбъект.Метаданные().Синоним + """: ";
	СтрСообщения3 = "наименование """ + СправочникОбъект.Наименование + """";

	Попытка
		СправочникОбъект.Записать();
		Если Сообщать = Истина Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрСообщения1 + СтрСообщения2 + "код """ + СправочникОбъект.Код + """, " + СтрСообщения3);
		КонецЕсли; 
		
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не записан"  + СтрСообщения2 + СтрСообщения3 +
		         Символы.ПС + ОписаниеОшибки());
	КонецПопытки;

КонецПроцедуры

&НаКлиенте
Процедура ЛистЗавершениеВыбора(ВыбранноеЗначение, ДополнительныеПараметры) Экспорт
	
	Если НЕ ВыбранноеЗначение = Неопределено Тогда
		Лист = ВыбранноеЗначение.Значение;
	КонецЕсли;	
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ УПРАВЛЕНИЯ ВНЕШНИМ ВИДОМ ФОРМЫ

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Элементы.РеквизитыДляСоздания.Видимость = Ложь;
	
	Объект.ТипОбъекта = Константы.АР_ТипОбъектаАренды.Получить();
	Объект.ЕдиницаИзмерения = Справочники.КлассификаторЕдиницИзмерения.НайтиПоНаименованию("м2");
	
	// Обработчик подсистемы "Контактная информация"
	УправлениеКонтактнойИнформацией.ПриСозданииНаСервере(ЭтаФорма, Объект, "ГруппаКонтактнаяИнформация");
	Если НЕ Элементы.Найти("ГруппаКонтактнаяИнформацияДобавитьПолеВвода") = Неопределено Тогда
		Элементы.ГруппаКонтактнаяИнформацияДобавитьПолеВвода.Видимость = Ложь;
	КонецЕсли;
	Если НЕ Элементы.Найти("ГруппаКонтактнаяИнформацияДобавитьПолеВводаГруппаКонтактнаяИнформация") = Неопределено Тогда
		Элементы.ГруппаКонтактнаяИнформацияДобавитьПолеВводаГруппаКонтактнаяИнформация.Видимость = Ложь;
	КонецЕсли;
	Если НЕ Элементы.Найти("ГруппаДействийКонтактнойИнформации") = Неопределено Тогда
		Элементы.ГруппаДействийКонтактнойИнформации.Видимость = Ложь;
	КонецЕсли;
	СтрокиОписания = ЭтаФорма.КонтактнаяИнформацияОписаниеДополнительныхРеквизитов.НайтиСтроки(Новый Структура("Вид", Справочники.ВидыКонтактнойИнформации.АдресОбъектаАренды));
	Если СтрокиОписания.Количество() > 0 Тогда
		ИмяПоля = СтрокиОписания[0].ИмяРеквизита;
		Элементы[ИмяПоля].ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Авто;
	КонецЕсли;
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если Не ЗначениеЗаполнено(ФайлПланировки) Тогда
		ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти("Лист"));
	КонецЕсли;
	Если ПодлежитСдачеВАренду И Не ЗначениеЗаполнено(ДатаНачалаСдачиВАренду) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не заполнено поле ""Дата начала сдачи в аренду""",, "ДатаНачалаСдачиВАренду",, Отказ);
	КонецЕсли; 	
	Если СоздаватьОбъекты И НЕ ЗначениеЗаполнено(Объект.ТипОбъекта) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не заполнено поле ""Тип объекта""",, "Объект.ТипОбъекта",, Отказ);
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

&НаКлиенте
Процедура СоздатьЗданиеИЭтажНажатие(Команда)
	Перем Наименование;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("СоздатьСправочникЗданийИЭтажей", ЭтотОбъект);
	ПоказатьВводСтроки(ОписаниеОповещения, Наименование, "Введите название здания и этажа");
	
КонецПроцедуры

&НаКлиенте
Процедура Создать(Команда)
	
	Если Не АР_ОбщиеПроцедурыКлиент.ДоступнаРаботаMSOffice(2) Тогда
		Возврат;		
	КонецЕсли;
	
	Если ЭтаФорма.ПроверитьЗаполнение() Тогда
		
		Если НЕ ПланировкаИнициализирована Тогда
			ИнициализироватьПланировку();
		КонецЕсли;
		
		ОбъектыВыбранногоЛиста = ТаблицаОбъектов.НайтиСтроки(Новый Структура("Лист", Лист));
		
		Для Каждого СтрокаОбъекта Из ОбъектыВыбранногоЛиста Цикл
		
			СоздатьСправочникПланировок(СтрокаОбъекта.ГрОбъект, СтрокаОбъекта.ТекстОбласть);
			
		КонецЦикла;
		
	КонецЕсли;
	Оповестить("СозданыНовыеОбъектыАренды");
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ПОЛЕЙ ФОРМЫ

&НаКлиенте
Процедура СоздаватьОбъектыПриИзменении(Элемент)

	УправлениеФормой(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ГруппаОбъектовНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	ФормаВыбора = ПолучитьФорму("Справочник.АР_ОбъектыАренды.ФормаВыбораГруппы");
	ГруппаОбъектов = ФормаВыбора.ОткрытьМодально();
	
КонецПроцедуры

&НаКлиенте
Процедура ЛистНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Не АР_ОбщиеПроцедурыКлиент.ДоступнаРаботаMSOffice(2) Тогда
		Возврат;		
	КонецЕсли;
	
	Если НЕ ПланировкаИнициализирована Тогда
		ИнициализироватьПланировку();
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ЛистЗавершениеВыбора", ЭтаФорма);
	Элементы.Лист.СписокВыбора.ПоказатьВыборЭлемента(ОписаниеОповещения, "Выберите рабочий Лист");
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ УПРАВЛЕНИЯ ВНЕШНИМ ВИДОМ ФОРМЫ

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	
	Элементы.РеквизитыДляСоздания.Видимость = Форма.СоздаватьОбъекты;
	
	ЭтоЗдание = АР_ОбщиеПроцедуры.ЗначениеРеквизитаОбъекта(Объект.ТипОбъекта, "КатегорияОбъекта") = ПредопределенноеЗначение("Перечисление.АР_КатегорииОбъектовНедвижимости.Здание");
	ЭтоЗемельныйУчасток = АР_ОбщиеПроцедуры.ЗначениеРеквизитаОбъекта(Объект.ТипОбъекта, "КатегорияОбъекта") = ПредопределенноеЗначение("Перечисление.АР_КатегорииОбъектовНедвижимости.ЗемельныйУчасток");
	ЭтоПомещение = АР_ОбщиеПроцедуры.ЗначениеРеквизитаОбъекта(Объект.ТипОбъекта, "КатегорияОбъекта") = ПредопределенноеЗначение("Перечисление.АР_КатегорииОбъектовНедвижимости.Помещение");
	ЭтоСооружение = АР_ОбщиеПроцедуры.ЗначениеРеквизитаОбъекта(Объект.ТипОбъекта, "КатегорияОбъекта") = ПредопределенноеЗначение("Перечисление.АР_КатегорииОбъектовНедвижимости.Сооружение");
	ЭтоПрочее = АР_ОбщиеПроцедуры.ЗначениеРеквизитаОбъекта(Объект.ТипОбъекта, "КатегорияОбъекта") = ПредопределенноеЗначение("Перечисление.АР_КатегорииОбъектовНедвижимости.Прочее");
	
	Элементы.КатегорияЗемель.Видимость = ЭтоЗемельныйУчасток;
	Элементы.НазначениеОбъекта.Видимость = НЕ ЭтоЗемельныйУчасток;
	Элементы.ЧислоЭтажей.Видимость = ЭтоЗдание ИЛИ ЭтоСооружение;
	Элементы.ЧислоПодземныхЭтажей.Видимость = ЭтоЗдание ИЛИ ЭтоСооружение;
	Элементы.Этаж.Видимость = ЭтоПомещение;
	Элементы.ГодПостройки.Видимость = ЭтоЗдание ИЛИ ЭтоСооружение;
	Элементы.ПамятникИсторииИКультуры.Видимость = ЭтоЗдание ИЛИ ЭтоСооружение ИЛИ ЭтоПомещение;
	
	Элементы.ЗданиеЭтажСКнопкой.Видимость = ПолучитьВидимостьЗданийИЭтажей();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьВидимостьЗданийИЭтажей()
	
	Возврат ПолучитьФункциональнуюОпцию("АР_ИспользоватьСправочникЗданияИЭтажи");
	
КонецФункции

&НаКлиенте
Процедура ТипОбъектаПриИзменении(Элемент)
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзменениеНастроекИспользованияЗданийИЭтажей" Тогда
		УправлениеФормой(ЭтаФорма);	
	КонецЕсли;
	
КонецПроцедуры

// СтандартныеПодсистемы.КонтактнаяИнформация

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияПриИзменении(Элемент)
	УправлениеКонтактнойИнформациейКлиент.НачатьИзменение(ЭтотОбъект, Элемент);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	УправлениеКонтактнойИнформациейКлиент.НачатьВыбор(ЭтотОбъект, Элемент, , СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияПриНажатии(Элемент, СтандартнаяОбработка)
	УправлениеКонтактнойИнформациейКлиент.НачатьВыбор(ЭтотОбъект, Элемент,, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияВыполнитьКоманду(Команда)
	
	УправлениеКонтактнойИнформациейКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияОчистка(Элемент, СтандартнаяОбработка)
	
	УправлениеКонтактнойИнформациейКлиент.НачатьОчистку(ЭтотОбъект, Элемент.Имя);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьКонтактнуюИнформацию(Результат)
	
	УправлениеКонтактнойИнформацией.ОбновитьКонтактнуюИнформацию(ЭтотОбъект, Объект, Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьОбновлениеКонтактнойИнформации(Результат, ДополнительныеПараметры) Экспорт
	
	ОбновитьКонтактнуюИнформацию(Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	УправлениеКонтактнойИнформациейКлиент.АвтоПодбор(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	УправлениеКонтактнойИнформациейКлиент.ОбработкаВыбора(ЭтотОбъект, ВыбранноеЗначение, Элемент.Имя, СтандартнаяОбработка);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.КонтактнаяИнформация
