#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

///////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Функция получает ключ аналитики учета НДС для текущего документа.
//
// Параметры:
//	РеквизитыДокумента - Структура или ВыборкаИзРезультатаЗапроса - Данные документа
//
// Возвращаемое значение:
//	СправочникСсылка.КлючиАналитикиУчетаНДС - Найденный ключ аналитики учета НДС
//
Функция КлючиАналитикиУчетаНДСДокумента(РеквизитыДокумента = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	СтруктураКлючейАналитикНДС = СтруктураАналитикУчетаНДС(РеквизитыДокумента);
	
	МенеджерЗаписи = РегистрыСведений.АналитикаУчетаНДС.СоздатьМенеджерЗаписи();
	ЗаполнитьЗначенияСвойств(МенеджерЗаписи, СтруктураКлючейАналитикНДС);
	МенеджерЗаписи.Прочитать();
	
	Если МенеджерЗаписи.Выбран() Тогда
		Результат = МенеджерЗаписи.КлючАналитики;
	Иначе
		Результат = СоздатьКлючАналитики(СтруктураКлючейАналитикНДС);
	КонецЕсли;
	
	Возврат Результат;

КонецФункции

// Функция формирует строку наименования ключа аналитики учета НДС.
//
// Параметры:
//	СправочникОбъект - Ключ аналитики учета НДС, для которой необходимо определить наименовние
//
// Возвращаемое значение:
//	Строка - Наименование ключа аналитики учета НДС
//
Функция ПолучитьНаименованиеКлючаАналитикиУчетаНДС(СправочникОбъект) Экспорт
	
	Наименование = "";
	НаименованиеЗаполнено = Ложь;
	
	Если ЗначениеЗаполнено(СправочникОбъект.СчетУчетаНДС) Тогда
		Наименование = Наименование	+ СправочникОбъект.СчетУчетаНДС.Код + ", ";
		НаименованиеЗаполнено = Истина;
	Иначе
		Наименование = Наименование	+ "<...>, ";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СправочникОбъект.ВидЦенности) Тогда
		Наименование = Наименование	+ СправочникОбъект.ВидЦенности + ", ";
		НаименованиеЗаполнено = Истина;
	Иначе
		Наименование = Наименование	+ "<...>, ";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СправочникОбъект.СтавкаНДС) Тогда
		Наименование = Наименование	+ СправочникОбъект.СтавкаНДС + ", ";
		НаименованиеЗаполнено = Истина;
	Иначе
		Наименование = Наименование	+ "<...>, ";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СправочникОбъект.СчетФактура) Тогда
		Наименование = Наименование	+ СправочникОбъект.СчетФактура + ", ";
		НаименованиеЗаполнено = Истина;
	Иначе
		Наименование = Наименование	+ "<...>, ";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СправочникОбъект.Поставщик) Тогда
		Наименование = Наименование	+ СправочникОбъект.Поставщик + ", ";
		НаименованиеЗаполнено = Истина;
	Иначе
		Наименование = Наименование	+ "<...>, ";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СправочникОбъект.ИсправленныйСчетФактура) Тогда
		Наименование = Наименование	+ СправочникОбъект.ИсправленныйСчетФактура;
		НаименованиеЗаполнено = Истина;
	Иначе
		Наименование = Наименование	+ "<...>";
	КонецЕсли;
	
	Если НЕ НаименованиеЗаполнено Тогда
		Наименование = "<...>";
	КонецЕсли;	
		
	Возврат Наименование;

КонецФункции


///////////////////////////////////////////////////////////////////////////////
// Прочее

Функция СтруктураАналитикУчетаНДС(РеквизитыДокумента)
	
	СтруктураАналитикУчетаНДС = Новый Структура("
		|Организация,
		|СчетФактура,
		|ВидЦенности,
		|СчетУчетаНДС,
		|СтавкаНДС,
		|Поставщик,
		|ИсправленныйСчетФактура
		|");
	СтруктураАналитикУчетаНДС.Организация 				= РеквизитыДокумента.Организация;
	СтруктураАналитикУчетаНДС.СчетФактура 				= РеквизитыДокумента.СчетФактура;
	СтруктураАналитикУчетаНДС.ВидЦенности 				= РеквизитыДокумента.ВидЦенности;
	СтруктураАналитикУчетаНДС.СчетУчетаНДС				= РеквизитыДокумента.СчетУчетаНДС;
	СтруктураАналитикУчетаНДС.СтавкаНДС 				= РеквизитыДокумента.СтавкаНДС;
	СтруктураАналитикУчетаНДС.Поставщик 				= РеквизитыДокумента.Поставщик;
	СтруктураАналитикУчетаНДС.ИсправленныйСчетФактура	= РеквизитыДокумента.ИсправленныйСчетФактура;
	
	Возврат СтруктураАналитикУчетаНДС;
	
КонецФункции

Функция НайтиАналитикуУчетаНДС(СтруктураАналитикУчетаНДС)

	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
	|	Ключ.Организация КАК Организация,
	|	Ключ.СчетФактура КАК СчетФактура,
	|	Ключ.ВидЦенности КАК ВидЦенности,
	|	Ключ.СчетУчетаНДС КАК СчетУчетаНДС,
	|	Ключ.СтавкаНДС КАК СтавкаНДС,
	|	Ключ.Наименование КАК Наименование,
	|	Ключ.Ссылка КАК Ссылка,
	|	Ключ.Поставщик КАК Поставщик,
	|	Ключ.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура
	|ИЗ
	|	Справочник.КлючиАналитикиУчетаНДС КАК Ключ
	|ГДЕ
	|	Ключ.Организация = &Организация
	|	И Ключ.СчетФактура = &СчетФактура
	|	И Ключ.ВидЦенности = &ВидЦенности
	|	И Ключ.СчетУчетаНДС = &СчетУчетаНДС
	|	И Ключ.СтавкаНДС = &СтавкаНДС
	|	И Ключ.Поставщик = &Поставщик
	|	И Ключ.ИсправленныйСчетФактура = &ИсправленныйСчетФактура
	|	И НЕ Ключ.ПометкаУдаления");
	
	Запрос.УстановитьПараметр("Организация",				СтруктураАналитикУчетаНДС.Организация);
	Запрос.УстановитьПараметр("СчетФактура",				СтруктураАналитикУчетаНДС.СчетФактура);
	Запрос.УстановитьПараметр("ВидЦенности",				СтруктураАналитикУчетаНДС.ВидЦенности);
	Запрос.УстановитьПараметр("СчетУчетаНДС",				СтруктураАналитикУчетаНДС.СчетУчетаНДС);
	Запрос.УстановитьПараметр("СтавкаНДС",					СтруктураАналитикУчетаНДС.СтавкаНДС);
	Запрос.УстановитьПараметр("Поставщик", 					СтруктураАналитикУчетаНДС.Поставщик);
	Запрос.УстановитьПараметр("ИсправленныйСчетФактура",	СтруктураАналитикУчетаНДС.ИсправленныйСчетФактура);

	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Результат = Выборка.Ссылка;
	Иначе
		Результат = Справочники.КлючиАналитикиУчетаНДС.ПустаяСсылка();
	КонецЕсли;
	
	Возврат Результат;
		
КонецФункции

Функция СоздатьКлючАналитики(ПараметрыАналитики)

	МенеджерЗаписи = РегистрыСведений.АналитикаУчетаНДС.СоздатьМенеджерЗаписи();
	ЗаполнитьЗначенияСвойств(МенеджерЗаписи, ПараметрыАналитики);
		
	Результат = НайтиАналитикуУчетаНДС(ПараметрыАналитики);
	
	// Создание нового ключа аналитики.
	Если Не ЗначениеЗаполнено(Результат) Тогда
		СправочникОбъект = Справочники.КлючиАналитикиУчетаНДС.СоздатьЭлемент();
		ЗаполнитьЗначенияСвойств(СправочникОбъект, ПараметрыАналитики);
		СправочникОбъект.Наименование = ПолучитьНаименованиеКлючаАналитикиУчетаНДС(СправочникОбъект);
		СправочникОбъект.Записать();

		Результат = СправочникОбъект.Ссылка;
	КонецЕсли;

	МенеджерЗаписи.КлючАналитики = Результат;
	МенеджерЗаписи.Записать(Ложь);

	Возврат Результат;

КонецФункции

///////////////////////////////////////////////////////////////////////////////
// Замена дублей ключей аналитики

Процедура ЗаменитьДублиКлючейАналитики() Экспорт
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	ДанныеСправочника.Ссылка КАК Ссылка,
	|	ДанныеСправочника.ПометкаУдаления КАК ПометкаУдаления,
	|	Аналитика.КлючАналитики КАК КлючАналитики
	|ИЗ
	|	Справочник.КлючиАналитикиУчетаНДС КАК ДанныеСправочника
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНДС КАК ДанныеРегистра
	|		ПО ДанныеСправочника.Ссылка = ДанныеРегистра.КлючАналитики
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНДС КАК Аналитика
	|		ПО ДанныеСправочника.Организация = Аналитика.Организация
	|			И ДанныеСправочника.СчетФактура = Аналитика.СчетФактура
	|			И ДанныеСправочника.ВидЦенности = Аналитика.ВидЦенности
	|			И ДанныеСправочника.СчетУчетаНДС = Аналитика.СчетУчетаНДС
	|			И ДанныеСправочника.СтавкаНДС = Аналитика.СтавкаНДС
	|			И ДанныеСправочника.Поставщик = Аналитика.Поставщик
	|			И ДанныеСправочника.ИсправленныйСчетФактура = Аналитика.ИсправленныйСчетФактура
	|ГДЕ
	|	ДанныеРегистра.КлючАналитики ЕСТЬ NULL");

	// Сформируем соответствие ключей аналитики.
	СоответствиеАналитик = Новый Соответствие;
	
	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда
	
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			СоответствиеАналитик.Вставить(Выборка.Ссылка, Выборка.КлючАналитики);
			
			Если Не Выборка.ПометкаУдаления Тогда
				СправочникОбъект = Выборка.Ссылка.ПолучитьОбъект();
				Попытка
					СправочникОбъект.УстановитьПометкуУдаления(Истина, Ложь);
				Исключение
				КонецПопытки;
			КонецЕсли;

		КонецЦикла;
		
		ОбщегоНазначенияБП.ЗаменитьСсылки(СоответствиеАналитик);
	КонецЕсли;
		
КонецПроцедуры



#КонецЕсли