
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИтогоПроцентов = 100;
	ВыбранныеОбъекты = Параметры.ВыбранныеОбъекты;
	ДатаДокумента = КонецДня(Параметры.ДатаДокумента);
	СчетаРасчетовССубконто = СчетаРасчетовССубконто(Параметры.СчетаРасчетов.ВыгрузитьЗначения());
	СчетаРасчетыСУчредителями = БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.РасчетыСУчредителями);
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ЕСТЬNULL(СУММА(ХозрасчетныйОстатки.СуммаОстатокДт), 0) КАК СуммаОстатокДт,
	|	ЕСТЬNULL(СУММА(ХозрасчетныйОстатки.СуммаОстатокКт), 0) КАК СуммаОстатокКт,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОстатки.Субконто1 ССЫЛКА Справочник.Контрагенты
	|				ИЛИ ХозрасчетныйОстатки.Субконто1 ССЫЛКА Справочник.ФизическиеЛица
	|			ТОГДА ХозрасчетныйОстатки.Субконто1
	|		ИНАЧЕ ХозрасчетныйОстатки.Счет.Наименование
	|	КОНЕЦ КАК Субконто1
	|ПОМЕСТИТЬ ИтогиССубконто
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(&Период, Счет В (&СчетаРасчетов), , Организация = &Организация) КАК ХозрасчетныйОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОстатки.Субконто1 ССЫЛКА Справочник.Контрагенты
	|				ИЛИ ХозрасчетныйОстатки.Субконто1 ССЫЛКА Справочник.ФизическиеЛица
	|			ТОГДА ХозрасчетныйОстатки.Субконто1
	|		ИНАЧЕ ХозрасчетныйОстатки.Счет.Наименование
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ИтогиССубконто.СуммаОстатокДт) КАК СуммаОстатокДт,
	|	СУММА(ИтогиССубконто.СуммаОстатокКт) КАК СуммаОстатокКт
	|ИЗ
	|	ИтогиССубконто КАК ИтогиССубконто");
	
	Запрос.УстановитьПараметр("Период", ДатаДокумента);
	Запрос.УстановитьПараметр("Организация", Параметры.Организация);
	Запрос.УстановитьПараметр("СчетаРасчетов", СчетаРасчетовССубконто);
	Запрос.УстановитьПараметр("СчетаРасчетыСУчредителями", СчетаРасчетыСУчредителями);
	
	Результат = Запрос.Выполнить().Выгрузить()[0];
	
	Если Параметры.ВидЗадолженности = Перечисления.ВидыЗадолженности.Кредиторская Тогда
		
		Заголовок = НСтр("ru = 'Подбор кредиторской задолженности'");
		Элементы.СписокДебиторКредитор.Заголовок = НСтр("ru = 'Кредитор'");
		ОбщаяСуммаЗадолженности = Результат.СуммаОстатокКт;
		
		ПараметрыСписка = ОбщегоНазначения.СтруктураСвойствДинамическогоСписка();
		ПараметрыСписка.ТекстЗапроса = СтрЗаменить(Список.ТекстЗапроса,
			"ХозрасчетныйОстатки.СуммаОстатокДт",
			"ХозрасчетныйОстатки.СуммаОстатокКт");
		
		ОбщегоНазначения.УстановитьСвойстваДинамическогоСписка(Элементы.Список, ПараметрыСписка);
		
	Иначе
		
		Заголовок = НСтр("ru = 'Подбор дебиторской задолженности'");
		Элементы.СписокДебиторКредитор.Заголовок = НСтр("ru = 'Дебитор'");
		ОбщаяСуммаЗадолженности = Результат.СуммаОстатокДт;
		
	КонецЕсли;
	
	Список.Параметры.УстановитьЗначениеПараметра("Период", ДатаДокумента);
	Список.Параметры.УстановитьЗначениеПараметра("Организация", Параметры.Организация);
	Список.Параметры.УстановитьЗначениеПараметра("СчетаРасчетов", СчетаРасчетовССубконто);
	Список.Параметры.УстановитьЗначениеПараметра("ОбщаяСуммаЗадолженности", ОбщаяСуммаЗадолженности);
	
	УстановитьУсловноеОформление();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
	
	Если Значение = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	ВыбранныеЗначения = Новый Массив;
	
	ВыделенныеСтроки = Элементы.Список.ВыделенныеСтроки;
	Для Каждого ТекущаяСтрока Из ВыделенныеСтроки Цикл
		
		Если Не Элементы.Список.ПроверитьСтроку(ТекущаяСтрока) Тогда
			Продолжить;
		КонецЕсли;
		
		ДанныеСтроки = Элементы.Список.ДанныеСтроки(ТекущаяСтрока);
		Значение = Новый Структура("СчетРасчетов, ДебиторКредитор");
		ЗаполнитьЗначенияСвойств(Значение, ДанныеСтроки);
		ВыбранныеЗначения.Добавить(Значение);
		
	КонецЦикла;
	
	ОповеститьОВыборе(ВыбранныеЗначения);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция СчетаРасчетовССубконто(СчетаРасчетов)
	
	Результат = Новый Массив;
	Для Каждого ТекущийСчет Из СчетаРасчетов Цикл
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(Результат, БухгалтерскийУчетПовтИсп.СчетаВИерархии(ТекущийСчет));
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();

	ЭлементУО = УсловноеОформление.Элементы.Добавить();

	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "СписокДебиторКредитор");
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "СписокСчетРасчетов");
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "СписокСуммаОстатокДт");
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ЗадолженностьПроцент");

	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"Список.ДебиторКредитор", ВидСравненияКомпоновкиДанных.ВСписке, ВыбранныеОбъекты);

	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.НедоступныеДанныеЦвет);

КонецПроцедуры

#КонецОбласти