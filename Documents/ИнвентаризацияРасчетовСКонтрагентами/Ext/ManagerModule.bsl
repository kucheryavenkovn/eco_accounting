#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция ВремяДокументаПоУмолчанию() Экспорт
	
	Возврат Новый Структура("Часы, Минуты", 6, 0);
	
КонецФункции

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// Возвращает список счетов расчетов для детализации задолженности
//
// Возвращаемое значение:
//   ТаблицаЗначений (см. метаданные Документ.ИнвентаризацияРасчетовСКонтрагентами.ТабличныеЧасти.СчетаРасчетов)
//
Функция СчетаДетализацииЗадолженности() Экспорт
	
	ТаблицаСчетов = Новый ТаблицаЗначений;
	ТаблицаСчетов.Колонки.Добавить("СчетРасчетов", Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	ТаблицаСчетов.Колонки.Добавить("УчаствуетВРасчетах", Новый ОписаниеТипов("Булево"));
	
	СчетаРасчетов = Новый Массив;
	СчетаРасчетов.Добавить(ПланыСчетов.Хозрасчетный.ВыполненныеЭтапыПоНезавершеннымРаботам);
	СчетаРасчетов.Добавить(ПланыСчетов.Хозрасчетный.ФинансовыеВложения);
	СчетаРасчетов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСПоставщикамиИПодрядчиками);
	СчетаРасчетов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСПокупателямиИЗаказчиками);
	СчетаРасчетов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоКраткосрочнымКредитамИЗаймам);
	СчетаРасчетов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоДолгосрочнымКредитамИЗаймам);
	СчетаРасчетов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоНалогам);
	СчетаРасчетов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоСоциальномуСтрахованию);
	СчетаРасчетов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда);
	СчетаРасчетов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСПодотчетнымиЛицами_);
	СчетаРасчетов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоПрочимОперациям);
	СчетаРасчетов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСУчредителями);
	СчетаРасчетов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСРазнымиДебиторамиИКредиторами);
	
	Для Каждого ТекущийСчет Из СчетаРасчетов Цикл
		НоваяСтрока = ТаблицаСчетов.Добавить();
		НоваяСтрока.СчетРасчетов = ТекущийСчет;
		НоваяСтрока.УчаствуетВРасчетах = Истина;
	КонецЦикла;
	
	Возврат ТаблицаСчетов;
	
КонецФункции

// Возвращает список счетов расчетов для детализации задолженности
//
// Параметры:
//   СрокЗадолженностиМинимум  - Число - срок задолженности минимальный в интервале расшифровки задолженности
//   СрокЗадолженностиМаксимум - Число - срок задолженности максимальный в интервале расшифровки задолженности
//
// Возвращаемое значение:
//   Строка
//
Функция ПредставлениеСрокаЗадолженности(СрокЗадолженностиМинимум, СрокЗадолженностиМаксимум) Экспорт
	
	СрокПоУмолчанию = 365;
	
	Если СрокЗадолженностиМаксимум = 0 Тогда
		ОписаниеСрока = НСтр("ru = 'Не более 1 дня'");
	ИначеЕсли СрокЗадолженностиМинимум = СрокЗадолженностиМаксимум И СрокЗадолженностиМаксимум < СрокПоУмолчанию Тогда
		ОписаниеСрока = СтрокаСЧислом(";%1 день;;%1 дня;%1 дней;%1 дня",
			СрокЗадолженностиМаксимум,
			ВидЧисловогоЗначения.Количественное,
			"L=ru");
	ИначеЕсли СрокЗадолженностиМаксимум < СрокПоУмолчанию Тогда
		ОписаниеСрока = СтрШаблон(НСтр("ru = 'От %1 до %2 дней'"), СрокЗадолженностиМинимум, СрокЗадолженностиМаксимум);
	Иначе
		ОписаниеСрока = СтрШаблон(НСтр("ru = 'Свыше %1 дней'"), СрокПоУмолчанию);
	КонецЕсли;
	
	Возврат ОписаниеСрока;
	
КонецФункции

// Возвращает параметры, необходимые для расчета задолженности
//
// Параметры:
//   Объект - Структура, описывающая объект расшифровки (см. НовыеПараметрыОбъектаРасшифровки())
//
// Возвращаемое значение:
//   Структура
//
Функция НовыеПараметрыЗаполнения(Объект) Экспорт
	
	ПараметрыЗаполнения = Новый Структура;
	ПараметрыЗаполнения.Вставить("АдресХранилищаСОшибками");
	ПараметрыЗаполнения.Вставить("ДатаОкончанияАктуализации",   '00010101');
	ПараметрыЗаполнения.Вставить("Контрагенты",                 Новый Соответствие);
	ПараметрыЗаполнения.Вставить("СсылкаНаДокумент",            Документы.ИнвентаризацияРасчетовСКонтрагентами.ПустаяСсылка());
	ПараметрыЗаполнения.Вставить("ДетализироватьЗадолженность", Ложь);
	ПараметрыЗаполнения.Вставить("ЭтоЗаполнениеДокумента",      Ложь);
	
	ПараметрыЗаполнения.Вставить("Организация",   Объект.Организация);
	ПараметрыЗаполнения.Вставить("Дата",          Объект.Дата);
	ПараметрыЗаполнения.Вставить("СчетаРасчетов", Объект.СчетаРасчетов);
	
	Возврат ПараметрыЗаполнения;
	
КонецФункции

// Возвращает задолженность по расчетам с детализацией, по которой собирается бухгалтерский баланс
//
// Параметры:
//   ПараметрыЗаполнения - Структура - см. НовыеПараметрыЗаполнения()
//   ВидЗадолженности    - ПеречислениеСсылка.ВидыЗадолженности - вид задолженности
//
// Возвращаемое значение:
//   ТаблицаЗначений - колонки аналогичны метаданным таблицы Документ.ИнвентаризацияРасчетовСКонтрагентами.ДетальныеЗаписи
//
Функция ЗадолженностьПоРасчетам(ПараметрыЗаполнения, ВидЗадолженности) Экспорт
	
	ЗадолженностьРезультат = НоваяТаблицаДокумента("ДетальныеЗаписи");
	
	// Для счетов группы 68, 69 в сводную таблицу контрагентов будет выводиться наименование счета
	ЗадолженностьРезультат.Колонки.Добавить("НаименованиеСчета",
		ОбщегоНазначения.ОписаниеТипаСтрока(Метаданные.ПланыСчетов.Хозрасчетный.ДлинаНаименования));
	
	Если ПараметрыЗаполнения.ЭтоЗаполнениеДокумента Тогда
		ЗадолженностьРезультат.Колонки.Добавить("ПорядокСчета",
			ОбщегоНазначения.ОписаниеТипаСтрока(Метаданные.ПланыСчетов.Хозрасчетный.ДлинаКода));
	КонецЕсли;
	
	// Расчеты выполняем только по доступным организациям.
	// Если доступных организаций нет, делаем возврат.
	Организации = Новый Массив;
	СписокДоступныхОрганизаций = ОбщегоНазначенияБПВызовСервераПовтИсп.ВсеОрганизацииДанныеКоторыхДоступныПоRLS(Ложь);
	Если СписокДоступныхОрганизаций.Количество() = 0 Тогда
		Возврат ЗадолженностьРезультат;
	ИначеЕсли ТипЗнч(ПараметрыЗаполнения.Организация) = Тип("Массив") Тогда
		Для Каждого Организация Из ПараметрыЗаполнения.Организация Цикл
			Если СписокДоступныхОрганизаций.Найти(Организация) <> Неопределено Тогда
				Организации.Добавить(Организация);
			КонецЕсли;
		КонецЦикла;
	ИначеЕсли ТипЗнч(ПараметрыЗаполнения.Организация) = Тип("СправочникСсылка.Организации") Тогда
		Если СписокДоступныхОрганизаций.Найти(ПараметрыЗаполнения.Организация) <> Неопределено Тогда
			Организации.Добавить(ПараметрыЗаполнения.Организация);
		КонецЕсли;
	КонецЕсли;
	
	Если Организации.Количество() = 0 Тогда
		Возврат ЗадолженностьРезультат;
	КонецЕсли;

	Запрос = Новый Запрос;
	
	// Если был передан менеджер временных таблиц, то используем его.
	// Иначе создаем новый и сохраняем в параметрах для следующих вызовов.
	Если ПараметрыЗаполнения.Свойство("МенеджерВременныхТаблиц") Тогда
		Запрос.МенеджерВременныхТаблиц = ПараметрыЗаполнения.МенеджерВременныхТаблиц;
	Иначе
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		ПараметрыЗаполнения.Вставить("МенеджерВременныхТаблиц", Запрос.МенеджерВременныхТаблиц);
	КонецЕсли;
	
	ИспользуютсяСрокиОплатыПоставщики = ПолучитьФункциональнуюОпцию("ИспользоватьПланированиеПлатежейПоставщикам");
	ИспользуютсяСрокиОплатыПокупатели = ПолучитьФункциональнуюОпцию("ИспользоватьПланированиеПлатежейОтПокупателей");
	СрокОплатыПоставщики = Константы.СрокОплатыПоставщикам.Получить();
	СрокОплатыПокупатели = Константы.СрокОплатыПокупателей.Получить();
	ЭтоДебиторскаяЗадолженность = ВидЗадолженности = Перечисления.ВидыЗадолженности.Дебиторская;
	
	Если ПараметрыЗаполнения.Свойство("ДебиторыКредиторы") Тогда
		ОбъектыЗадолженности = ПараметрыЗаполнения.ДебиторыКредиторы;
		Запрос.УстановитьПараметр("Субконто1", ОбъектыЗадолженности);
	Иначе
		ОбъектыЗадолженности = Неопределено;
	КонецЕсли;
	
	Период = Новый Граница(КонецДня(ПараметрыЗаполнения.Дата), ВидГраницы.Включая);
	
	Если ТипЗнч(ПараметрыЗаполнения.СчетаРасчетов) = Тип("ПланСчетовСсылка.Хозрасчетный") Тогда
		ПараметрыЗаполнения.СчетаРасчетов = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ПараметрыЗаполнения.СчетаРасчетов);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Период",        Период);
	Запрос.УстановитьПараметр("ДатаДокумента", ПараметрыЗаполнения.Дата);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(ДобавитьМесяц(ПараметрыЗаполнения.Дата, -12)));
	Запрос.УстановитьПараметр("Организация",   Организации);
	Запрос.УстановитьПараметр("ВидЗадолженности", ВидЗадолженности);
	Запрос.УстановитьПараметр("ЭтоДебиторскаяЗадолженность", ЭтоДебиторскаяЗадолженность);
	Запрос.УстановитьПараметр("ВыбранныеСчета", ВыбранныеСчетаРасчетов(ПараметрыЗаполнения.СчетаРасчетов));
	Запрос.УстановитьПараметр("СсылкаНаДокумент", ПараметрыЗаполнения.СсылкаНаДокумент);
	
	Запрос.УстановитьПараметр("ИспользуютсяСрокиОплатыПоставщики", ИспользуютсяСрокиОплатыПоставщики);
	Запрос.УстановитьПараметр("ИспользуютсяСрокиОплатыПокупатели", ИспользуютсяСрокиОплатыПокупатели);
	
	Запрос.УстановитьПараметр("СрокОплатыПоставщики", СрокОплатыПоставщики);
	Запрос.УстановитьПараметр("СрокОплатыПокупатели", СрокОплатыПокупатели);
	
	ДополнитьПараметрыЗапросаРасчетыСКонтрагентами(Запрос);
	
	СоздатьВременныеТаблицыОбщие(Запрос);
	
	// Задолженность перед покупателями, поставщиками
	
	СоздатьВременныеТаблицыРасчетыСПокупателямиПоставщиками(Запрос, ОбъектыЗадолженности);
	
	Запрос.Текст = ТекстЗапросаОстаткиЗадолженностиРасчетыСПокупателямиПоставщиками(ОбъектыЗадолженности);
	УстановитьПривилегированныйРежим(Истина);
	ПакетыЗапроса = Запрос.ВыполнитьПакет();
	УстановитьПривилегированныйРежим(Ложь);
	
	Для Каждого ТекущийПакет Из ПакетыЗапроса Цикл
		Если ТекущийПакет <> Неопределено И ТекущийПакет.Колонки.Количество() > 1 Тогда
			ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ТекущийПакет.Выгрузить(), ЗадолженностьРезультат);
		КонецЕсли;
	КонецЦикла;
	
	// Задолженность по прочим контрагентам
	
	Запрос.УстановитьПараметр("СчетаПрочиеКонтрагенты", СчетаРасчетовПоПрочимКонтрагентам());
	
	СоздатьВременныеТаблицыРасчетыСПрочимиКонтрагентами(Запрос, ОбъектыЗадолженности);
	
	Запрос.Текст = ТекстЗапросаОстаткиЗадолженностиПрочиеКонтрагенты();
	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.Выполнить().Выгрузить();
	УстановитьПривилегированныйРежим(Ложь);
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(Результат, ЗадолженностьРезультат);
	
	// Задолженность перед персоналом
	
	Запрос.УстановитьПараметр("СчетаПоРаботникам", СчетаРасчетовСПерсоналом());

	СоздатьВременныеТаблицыРасчетыСРаботниками(Запрос, Ложь, ОбъектыЗадолженности);
	
	Запрос.Текст = ТекстЗапросаОстаткиЗадолженностиРаботникиОрганизаций(ОбъектыЗадолженности);
	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.Выполнить().Выгрузить();
	УстановитьПривилегированныйРежим(Ложь);
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(Результат, ЗадолженностьРезультат);
	
	// Задолженность перед бюджетом по налогам, сборам и социальному страхованию
	
	ДополнитьПараметрыЗапросаРасчетыСБюджетом(Запрос);
	СоздатьВременныеТаблицыРасчетыСБюджетом(Запрос);
	Запрос.Текст = ТекстЗапросаОстаткиЗадолженностиРасчетыСБюджетом();
	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.Выполнить().Выгрузить();
	УстановитьПривилегированныйРежим(Ложь);
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(Результат, ЗадолженностьРезультат);
	
	// Прочие счета
	
	Запрос.УстановитьПараметр("СчетаБезОбработки", СчетаРасчетовБезОбработки());
	
	СоздатьВременныеТаблицыРасчетыСчетаБезОбработки(Запрос);
	
	Запрос.Текст = ТекстЗапросаОстаткиЗадолженностиСчетаБезОбработки();
	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.Выполнить().Выгрузить();
	УстановитьПривилегированныйРежим(Ложь);
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(Результат, ЗадолженностьРезультат);
	
	// Кредиты и займы, капитальные вложения
	ЦенныеБумаги = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ЦенныеБумаги;
	
	ВидыСубконтоКонтрагентыЦенныеБумаги = Новый Массив;
	ВидыСубконтоКонтрагентыЦенныеБумаги.Добавить(Запрос.Параметры.ВидСубконтоКонтрагенты);
	ВидыСубконтоКонтрагентыЦенныеБумаги.Добавить(ЦенныеБумаги);
	
	Запрос.УстановитьПараметр("ВидСубконтоЦенныеБумаги", ЦенныеБумаги);
	Запрос.УстановитьПараметр("ВидыСубконтоКонтрагентыЦенныеБумаги", ВидыСубконтоКонтрагентыЦенныеБумаги);
	Запрос.УстановитьПараметр("СчетаКредитыВложения", СчетаРасчетовКредитыВложения());
	
	СоздатьВременныеТаблицыКредитыВложения(Запрос, ОбъектыЗадолженности);
	
	Запрос.Текст = ТекстЗапросаОстаткиЗадолженностиКредитыВложения(ОбъектыЗадолженности);
	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.Выполнить().Выгрузить();
	УстановитьПривилегированныйРежим(Ложь);
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(Результат, ЗадолженностьРезультат);
	
	// Задолженность перед учредителями
	
	Запрос.УстановитьПараметр("СубконтоУчредители", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Учредители);
	Запрос.УстановитьПараметр("СчетаРасчетовСУчредителями", СчетаРасчетовСУчредителями());
	
	СоздатьВременныеТаблицыРасчетыСУчредителями(Запрос, ОбъектыЗадолженности);
	
	Запрос.Текст = ТекстЗапросаОстаткиЗадолженностиУчредители();
	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.Выполнить().Выгрузить();
	УстановитьПривилегированныйРежим(Ложь);
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(Результат, ЗадолженностьРезультат);
	
	Если ПараметрыЗаполнения.ЭтоЗаполнениеДокумента Тогда
		ЗадолженностьРезультат.Сортировать("ПорядокСчета Возр");
	КонецЕсли;
	
	Возврат ЗадолженностьРезультат;
	
КонецФункции

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#Область ОбработчикиОбновления

// Заполняет документы, в которых не указаны реквизит ПереченьСчетов.
//
// Параметры:
//  Параметры - Структура - параметры обработчика обновления.
//
Процедура ЗаполнитьПереченьСчетовПоУмолчанию(Параметры) Экспорт
	
	СхемаЗапроса = Новый СхемаЗапроса;
	СхемаЗапроса.УстановитьТекстЗапроса(
	"ВЫБРАТЬ ПЕРВЫЕ 1000
	|	ИнвентаризацияРасчетовСКонтрагентами.Ссылка КАК Ссылка,
	|	ИнвентаризацияРасчетовСКонтрагентами.СчетаРасчетов.(
	|		Ссылка КАК Ссылка,
	|		НомерСтроки КАК НомерСтроки,
	|		СчетРасчетов КАК СчетРасчетов,
	|		УчаствуетВРасчетах КАК УчаствуетВРасчетах
	|	) КАК СчетаРасчетов,
	|	ИнвентаризацияРасчетовСКонтрагентами.МоментВремени КАК МоментВремени
	|ИЗ
	|	Документ.ИнвентаризацияРасчетовСКонтрагентами КАК ИнвентаризацияРасчетовСКонтрагентами
	|ГДЕ
	|	НЕ ИнвентаризацияРасчетовСКонтрагентами.ПометкаУдаления
	|	И ИнвентаризацияРасчетовСКонтрагентами.ПереченьСчетов = """"
	|
	|УПОРЯДОЧИТЬ ПО
	|	МоментВремени УБЫВ");
	
	МоментВремени = Неопределено;
	Если Параметры.Свойство("МоментВремени", МоментВремени) И ЗначениеЗаполнено(МоментВремени) Тогда
		СхемаЗапроса.ПакетЗапросов[0].Операторы[0].Отбор.Добавить(
			"ИнвентаризацияРасчетовСКонтрагентами.МоментВремени < &МоментВремени");
	КонецЕсли;
	
	Запрос = Новый Запрос(СхемаЗапроса.ПолучитьТекстЗапроса());
	Запрос.УстановитьПараметр("МоментВремени", МоментВремени);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	
	ОбъектовОбработано = 0;
	ПроблемныхОбъектов = 0;
	Параметры.ОбработкаЗавершена = Ложь;
	
	Выборка = РезультатЗапроса.Выбрать();
	
	ИмяПроцедуры = "Документы.ИнвентаризацияРасчетовСКонтрагентами.ЗаполнитьПереченьСчетовПоУмолчанию()";
	
	Пока Выборка.Следующий() Цикл
		
		ПереченьСчетов = ПереченьСчетовДокумента(Выборка.СчетаРасчетов.Выгрузить());
		ОбъектовОбработано = ОбъектовОбработано + 1;
		
		Попытка
			
			ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
			ДокументОбъект.ПереченьСчетов = ПереченьСчетов;
			
			// Запись обработанного объекта (без перепроведения)
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДокументОбъект);
			Параметры.Вставить("МоментВремени", Выборка.МоментВремени);
			
		Исключение
			
			// Если не удалось обработать какой-либо документ, повторяем попытку снова
			ПроблемныхОбъектов = ПроблемныхОбъектов + 1;
			
			ТекстСообщения = СтрШаблон(НСтр("ru = 'Процедуре %1 не удалось обработать документ по причине:
				|%2'"), ИмяПроцедуры, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Предупреждение,
				Метаданные.Документы.ИнвентаризацияРасчетовСКонтрагентами,
				Выборка.Ссылка,
				ТекстСообщения);
			
		КонецПопытки;
		
	КонецЦикла;
	
	Если ПроблемныхОбъектов > 0 Тогда
		
		ТекстСообщения = СтрШаблон(НСтр("ru = 'Процедуре %1 не удалось обработать документы: в %2 из %3 возникли ошибки'"),
			ИмяПроцедуры, ПроблемныхОбъектов, ОбъектовОбработано);
		ВызватьИсключение ТекстСообщения;
		
	Иначе
		
		ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
			УровеньЖурналаРегистрации.Информация,
			Метаданные.Документы.ИнвентаризацияРасчетовСКонтрагентами, ,
			СтрШаблон(НСтр("ru = 'Процедура %1 обработала очередную порцию документов: %2 документов'"),
				ИмяПроцедуры, ОбъектовОбработано));
		
	КонецЕсли;
	
КонецПроцедуры

// Проверяет, все ли документы были обработаны процедурой ЗаполнитьРеквизитыПодписавшегоДокументПоУмолчанию()
//
// Параметры:
//   Параметры - Структура - см. документацию к БСП.
//
// Возвращаемое значение:
//   Булево - Истина, то можно редактировать и записывать данные,
//            Ложь - данные недоступны, пока не будут обработаны процедурой обновления.
//
Функция РеквизитПереченьСчетовОбработан(Параметры) Экспорт

	Если ТипЗнч(Параметры.Данные) = Тип("ДокументСсылка.ИнвентаризацияРасчетовСКонтрагентами") Тогда
		РеквизитыДокумента = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Параметры.Данные, "ПереченьСчетов");
		ПереченьСчетов = РеквизитыДокумента.ПереченьСчетов;
	Иначе
		ПереченьСчетов = Параметры.Данные.ПереченьСчетов;
	КонецЕсли;
	
	Возврат ЗначениеЗаполнено(ПереченьСчетов);
	
КонецФункции

#КонецОбласти

// Возвращает описание выбранных счетов документа, учавствующих в инвентаризации задолженности
//
// Параметры:
//   СчетаРасчетовДокумента - ТаблицаЗначений - см. Документ.ИнвентаризацияРасчетовСКонтрагентами.СчетаРасчетов
//
// Возвращаемое значение:
//   Строка
//
Функция ПереченьСчетовДокумента(СчетаРасчетовДокумента) Экспорт
	
	СчетаУчаствующиеВРасчетах = Новый Массив;
	
	Для Каждого ТекущийСчет Из СчетаРасчетовДокумента Цикл
		
		Если ТекущийСчет.УчаствуетВРасчетах Тогда
			СчетаУчаствующиеВРасчетах.Добавить(ТекущийСчет.СчетРасчетов);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат СтрСоединить(СчетаУчаствующиеВРасчетах, ", ");
	
КонецФункции

// Возвращает значения реквизитов документа.
//
// Параметры:
//   Документ  - ДокументСсылка - документ, для которого необходимо вычислить значения реквизитов.
//   Реквизиты - Строка - имена реквизитов, перечисленные через запятую, значения которых требуется получить.
//
// Возвращаемое значение:
//   Структура    - с ключами имен переданных реквизитов.
//   Неопределено - в случае, если в качестве документа передан прочий объект.
//
Функция РеквизитыВыбранногоДокумента(Документ, Реквизиты) Экспорт
	
	Если Документ = Неопределено
		Или Не ОбщегоНазначения.ЭтоДокумент(Метаданные.НайтиПоТипу(ТипЗнч(Документ))) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Документ, Реквизиты);
	
КонецФункции

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ПЕЧАТИ

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Приказ о проведении инвентаризации (ИНВ-22)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ИНВ22";
	КомандаПечати.Представление = НСтр("ru = 'Приказ о проведении инвентаризации (ИНВ-22)'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Порядок     = 10;
	
	// Акт инвентаризации расчетов (ИНВ-17)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ИНВ17";
	КомандаПечати.Представление = НСтр("ru = 'Акт инвентаризации расчетов (ИНВ-17)'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Порядок     = 20;
	
	// Справка к акту инвентаризации расчетов (ИНВ-17)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "СправкаИНВ17";
	КомандаПечати.Представление = НСтр("ru = 'Справка к акту ИНВ-17'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Порядок     = 30;

	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Реестр";
	КомандаПечати.Представление = НСтр("ru = 'Реестр документов'");
	КомандаПечати.ЗаголовокФормы= НСтр("ru = 'Реестр документов ""Акт инвентаризации расчетов""'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм    = "ФормаСписка";
	КомандаПечати.Порядок       = 100;
	
КонецПроцедуры

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ИНВ17") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ИНВ17", "ИНВ-17 (акт инвентаризации)", 
			ПечатьИНВ17(МассивОбъектов, ОбъектыПечати), , "Документ.ИнвентаризацияРасчетовСКонтрагентами.ПФ_MXL_ИНВ17");
	КонецЕсли;
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ИНВ22") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ИНВ22", "ИНВ-22 (приказ)", 
			ПечатьИНВ22(МассивОбъектов, ОбъектыПечати), , "ОбщийМакет.ПФ_MXL_ИНВ22");
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СправкаИНВ17") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
			"СправкаИНВ17",
			"Справка к акту ИНВ-17",
			ПечатьСправкаКАктуИНВ17(МассивОбъектов, ОбъектыПечати), ,
			"Документ.ИнвентаризацияРасчетовСКонтрагентами.ПФ_MXL_СправкаИнв17");
		
	КонецЕсли;
	
	ОбщегоНазначенияБП.ЗаполнитьДополнительныеПараметрыПечати(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);	
	
КонецПроцедуры

Функция ПолучитьВыборкуШапок(МассивОбъектов)

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивСсылок", МассивОбъектов);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Инвентаризация.Ссылка КАК Ссылка,
	|	Инвентаризация.Дата КАК Дата,
	|	Инвентаризация.Номер КАК Номер,
	|	ВЫБОР
	|		КОГДА Инвентаризация.ДокументОснованиеДата = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА Инвентаризация.Дата
	|		ИНАЧЕ Инвентаризация.ДокументОснованиеДата
	|	КОНЕЦ КАК ДатаДокумента,
	|	Инвентаризация.ДокументОснованиеНомер КАК НомерДокумента,
	|	Инвентаризация.Организация КАК Организация,
	|	Инвентаризация.ДатаНачалаИнвентаризации КАК ДатаНачалаИнвентаризации,
	|	Инвентаризация.ДатаОкончанияИнвентаризации КАК ДатаОкончанияИнвентаризации,
	|	Инвентаризация.ДокументОснованиеВид КАК ДокументОснованиеВид,
	|	Инвентаризация.ДокументОснованиеДата КАК ДокументОснованиеДата,
	|	Инвентаризация.ДокументОснованиеНомер КАК ДокументОснованиеНомер,
	|	Инвентаризация.ПричинаПроведенияИнвентаризации КАК ПричинаПроведенияИнвентаризации,
	|	Инвентаризация.ИнвентаризационнаяКомиссия.(
	|		ФизЛицо КАК ФизЛицо,
	|		Председатель КАК Председатель
	|	) КАК ИнвентаризационнаяКомиссия
	|ИЗ
	|	Документ.ИнвентаризацияРасчетовСКонтрагентами КАК Инвентаризация
	|ГДЕ
	|	Инвентаризация.Ссылка В(&МассивСсылок)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата,
	|	Ссылка,
	|	Председатель УБЫВ";
	
	Возврат Запрос.Выполнить().Выбрать();

КонецФункции

Функция ПечатьИНВ17(МассивОбъектов, ОбъектыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.АвтоМасштаб			= Истина;
	ТабДокумент.ОриентацияСтраницы	= ОриентацияСтраницы.Портрет;
	ТабДокумент.КлючПараметровПечати	= "ПАРАМЕТРЫ_ПЕЧАТИ_ИнвентаризацияРасчетовСКонтрагентами_ИНВ17";

	ЗапросКонтрагенты = Новый Запрос;
	ЗапросКонтрагенты.УстановитьПараметр("МассивСсылок", МассивОбъектов);
	
	ЗапросКонтрагенты.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВЫРАЗИТЬ(ИнвентаризацияКонтрагенты.Контрагент КАК Справочник.Контрагенты) КАК Ссылка,
	|	ИнвентаризацияКонтрагенты.Ссылка.Дата КАК ДатаСведений
	|ПОМЕСТИТЬ КонтрагентыНаДаты
	|ИЗ
	|	Документ.ИнвентаризацияРасчетовСКонтрагентами.Контрагенты КАК ИнвентаризацияКонтрагенты
	|ГДЕ
	|	ИнвентаризацияКонтрагенты.Ссылка В(&МассивСсылок)
	|	И ИнвентаризацияКонтрагенты.Контрагент ССЫЛКА Справочник.Контрагенты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КонтрагентыНаДаты.Ссылка КАК Ссылка,
	|	КонтрагентыНаДаты.ДатаСведений КАК ДатаСведений,
	|	МАКСИМУМ(ИсторияНаименованийКонтрагентов.Период) КАК Период
	|ПОМЕСТИТЬ ДатыСведенийОНаименованияхКонтрагентов
	|ИЗ
	|	КонтрагентыНаДаты КАК КонтрагентыНаДаты
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты.ИсторияНаименований КАК ИсторияНаименованийКонтрагентов
	|		ПО КонтрагентыНаДаты.Ссылка = ИсторияНаименованийКонтрагентов.Ссылка
	|			И КонтрагентыНаДаты.ДатаСведений >= ИсторияНаименованийКонтрагентов.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	КонтрагентыНаДаты.Ссылка,
	|	КонтрагентыНаДаты.ДатаСведений
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КонтрагентыНаДаты.Ссылка КАК Ссылка,
	|	КонтрагентыНаДаты.ДатаСведений КАК ДатаСведений,
	|	КонтрагентыНаДаты.Ссылка.Наименование КАК Наименование,
	|	ЕСТЬNULL(ИсторияНаименованийКонтрагентов.НаименованиеПолное, КонтрагентыНаДаты.Ссылка.НаименованиеПолное) КАК НаименованиеПолное
	|ПОМЕСТИТЬ СведенияОНаименованииКонтрагентаНаДату
	|ИЗ
	|	КонтрагентыНаДаты КАК КонтрагентыНаДаты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДатыСведенийОНаименованияхКонтрагентов КАК ДатыСведенийОНаименованияхКонтрагентов
	|		ПО (ДатыСведенийОНаименованияхКонтрагентов.Ссылка = КонтрагентыНаДаты.Ссылка)
	|			И (ДатыСведенийОНаименованияхКонтрагентов.ДатаСведений = КонтрагентыНаДаты.ДатаСведений)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты.ИсторияНаименований КАК ИсторияНаименованийКонтрагентов
	|		ПО (ДатыСведенийОНаименованияхКонтрагентов.Ссылка = ИсторияНаименованийКонтрагентов.Ссылка)
	|			И (ДатыСведенийОНаименованияхКонтрагентов.Период = ИсторияНаименованийКонтрагентов.Период)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КонтрагентыНаДаты.Ссылка,
	|	КонтрагентыНаДаты.ДатаСведений
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Инвентаризация.ВидЗадолженности КАК ВидЗадолженности,
	|	Инвентаризация.Контрагент КАК Контрагент,
	|	ВЫБОР
	|		КОГДА Инвентаризация.Контрагент ССЫЛКА Справочник.Контрагенты
	|				ИЛИ Инвентаризация.Контрагент ССЫЛКА Справочник.ФизическиеЛица
	|			ТОГДА ЕСТЬNULL(СведенияОНаименованииКонтрагентаНаДату.НаименованиеПолное, Инвентаризация.Контрагент)
	|		ИНАЧЕ Инвентаризация.СчетРасчетов.Наименование
	|	КОНЕЦ КАК КонтрагентНаименованиеПолное,
	|	ВЫБОР
	|		КОГДА Инвентаризация.Контрагент ССЫЛКА Справочник.Контрагенты
	|				ИЛИ Инвентаризация.Контрагент ССЫЛКА Справочник.ФизическиеЛица
	|			ТОГДА ЕСТЬNULL(СведенияОНаименованииКонтрагентаНаДату.Наименование, Инвентаризация.Контрагент)
	|		ИНАЧЕ Инвентаризация.СчетРасчетов.Наименование
	|	КОНЕЦ КАК КонтрагентНаименование,
	|	Инвентаризация.СчетРасчетов КАК СчетРасчетов,
	|	ПРЕДСТАВЛЕНИЕ(Инвентаризация.СчетРасчетов) КАК СчетРасчетовПредставление,
	|	МИНИМУМ(Инвентаризация.НомерСтроки) КАК НомерСтроки,
	|	СУММА(Инвентаризация.Подтверждено + Инвентаризация.НеПодтверждено) КАК Всего,
	|	СУММА(Инвентаризация.Подтверждено) КАК Подтверждено,
	|	СУММА(Инвентаризация.НеПодтверждено) КАК НеПодтверждено,
	|	СУММА(Инвентаризация.ИстекСрокДавности) КАК ИстекСрокДавности,
	|	Инвентаризация.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ИнвентаризацияРасчетовСКонтрагентами.Контрагенты КАК Инвентаризация
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ИнвентаризацияРасчетовСКонтрагентами КАК ИнвентаризацияРасчетовСКонтрагентами
	|		ПО (ИнвентаризацияРасчетовСКонтрагентами.Ссылка = Инвентаризация.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ СведенияОНаименованииКонтрагентаНаДату КАК СведенияОНаименованииКонтрагентаНаДату
	|		ПО (СведенияОНаименованииКонтрагентаНаДату.Ссылка = Инвентаризация.Контрагент)
	|			И (СведенияОНаименованииКонтрагентаНаДату.ДатаСведений = ИнвентаризацияРасчетовСКонтрагентами.Дата)
	|ГДЕ
	|	Инвентаризация.Ссылка В(&МассивСсылок)
	|
	|СГРУППИРОВАТЬ ПО
	|	Инвентаризация.Ссылка,
	|	Инвентаризация.ВидЗадолженности,
	|	Инвентаризация.Контрагент,
	|	ПОДСТРОКА(Инвентаризация.Контрагент.НаименованиеПолное, 1, 200),
	|	Инвентаризация.СчетРасчетов,
	|	ВЫБОР
	|		КОГДА Инвентаризация.Контрагент ССЫЛКА Справочник.Контрагенты
	|				ИЛИ Инвентаризация.Контрагент ССЫЛКА Справочник.ФизическиеЛица
	|			ТОГДА ЕСТЬNULL(СведенияОНаименованииКонтрагентаНаДату.НаименованиеПолное, Инвентаризация.Контрагент)
	|		ИНАЧЕ Инвентаризация.СчетРасчетов.Наименование
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Инвентаризация.Контрагент ССЫЛКА Справочник.Контрагенты
	|				ИЛИ Инвентаризация.Контрагент ССЫЛКА Справочник.ФизическиеЛица
	|			ТОГДА ЕСТЬNULL(СведенияОНаименованииКонтрагентаНаДату.Наименование, Инвентаризация.Контрагент)
	|		ИНАЧЕ Инвентаризация.СчетРасчетов.Наименование
	|	КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки,
	|	Инвентаризация.СчетРасчетов.Порядок
	|ИТОГИ
	|	СУММА(Всего),
	|	СУММА(Подтверждено),
	|	СУММА(НеПодтверждено),
	|	СУММА(ИстекСрокДавности)
	|ПО
	|	Ссылка,
	|	ВидЗадолженности";
	
	РезультатКонтрагенты = ЗапросКонтрагенты.Выполнить();
	ВыборкаПоВидуДокумента = РезультатКонтрагенты.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИнвентаризацияРасчетовСКонтрагентами.ПФ_MXL_ИНВ17");
	ПервыйДокумент = Истина;

	ВыборкаШапок = ПолучитьВыборкуШапок(МассивОбъектов);
	Пока ВыборкаШапок.Следующий() Цикл
	
		Если НЕ ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
				
		// Варианты заголовков разделов с подписями печатной формы	
		ЗаголовокРазделаПодписей = Новый Структура();
		ЗаголовокРазделаПодписей.Вставить("ПредседательКомиссии", "Председатель комиссии");
		ЗаголовокРазделаПодписей.Вставить("ЧленыКомиссии",        "Члены комиссии");
		
		// Формирование шапки
		Шапка = Макет.ПолучитьОбласть("Шапка");
		Шапка.Параметры.Заполнить(ВыборкаШапок);
		
		СведенияОбОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(ВыборкаШапок.Организация, ВыборкаШапок.Дата);
		Шапка.Параметры.Организация          = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОбОрганизации);
		Шапка.Параметры.ОрганизацияКодПоОКПО = СведенияОбОрганизации.КодПоОКПО;
		
		Шапка.Параметры.НомерДокумента = ВыборкаШапок.Номер;
		Шапка.Параметры.ДеньДокумента  = День(ВыборкаШапок.Дата);
		Шапка.Параметры.МесяцДокумента = Сред(Формат(ВыборкаШапок.Дата, "ДЛФ=ДД"), 
														 СтрНайти(Формат(ВыборкаШапок.Дата, "ДЛФ=ДД"), " "));
														 
		ТабДокумент.Вывести(Шапка);

		// Формирование строк дебиторской задолженности
		ПодвалТаблицыДт = Макет.ПолучитьОбласть("ПодвалТаблицыДт");
		СтрокаТаблицыДт = Макет.ПолучитьОбласть("СтрокаТаблицыДт");
		
		СтруктураПоиска = Новый Структура("Ссылка", ВыборкаШапок.Ссылка);
		
		Если ВыборкаПоВидуДокумента.НайтиСледующий(СтруктураПоиска) Тогда
			ВыборкаПоВидуЗадолженности = ВыборкаПоВидуДокумента.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Иначе
			Продолжить;
		КонецЕсли;
					
		СтруктураПоиска = Новый Структура("ВидЗадолженности", Перечисления.ВидыЗадолженности.Дебиторская);
				
		Если ВыборкаПоВидуЗадолженности.НайтиСледующий(СтруктураПоиска) Тогда

			ПодвалТаблицыДт.Параметры.Заполнить(ВыборкаПоВидуЗадолженности);
			
			ВыборкаПоКонтрагенту = ВыборкаПоВидуЗадолженности.Выбрать();
			Пока ВыборкаПоКонтрагенту.Следующий() Цикл
				СтрокаТаблицыДт.Параметры.Заполнить(ВыборкаПоКонтрагенту);
				СтрокаТаблицыДт.Параметры.КонтрагентПредставление = ?(ПустаяСтрока(ВыборкаПоКонтрагенту.КонтрагентНаименованиеПолное),
																	ВыборкаПоКонтрагенту.КонтрагентНаименование, 
																	ВыборкаПоКонтрагенту.КонтрагентНаименованиеПолное);
				ТабДокумент.Вывести(СтрокаТаблицыДт);
			КонецЦикла;
			
		КонецЕсли;
	
		ТабДокумент.Вывести(ПодвалТаблицыДт);
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		// Шапка оборотной стороны Акта
		ШапкаОборот = Макет.ПолучитьОбласть("ШапкаОборот");
		ТабДокумент.Вывести(ШапкаОборот);
		
		// Формирование строк кредиторской задолженности
		ПодвалТаблицыКт = Макет.ПолучитьОбласть("ПодвалТаблицыКт");
		СтрокаТаблицыКт = Макет.ПолучитьОбласть("СтрокаТаблицыКт");
				
		ВыборкаПоВидуЗадолженности.Сбросить();
		
		СтруктураПоиска = Новый Структура("ВидЗадолженности", Перечисления.ВидыЗадолженности.Кредиторская);
		
		Если ВыборкаПоВидуЗадолженности.НайтиСледующий(СтруктураПоиска) Тогда
								
			ПодвалТаблицыКт.Параметры.Заполнить(ВыборкаПоВидуЗадолженности);
			
			ВыборкаПоКонтрагенту = ВыборкаПоВидуЗадолженности.Выбрать();
			Пока ВыборкаПоКонтрагенту.Следующий() Цикл
				СтрокаТаблицыКт.Параметры.Заполнить(ВыборкаПоКонтрагенту);
				СтрокаТаблицыКт.Параметры.КонтрагентПредставление = ?(ПустаяСтрока(ВыборкаПоКонтрагенту.КонтрагентНаименованиеПолное),
																		ВыборкаПоКонтрагенту.КонтрагентНаименование, 
																		ВыборкаПоКонтрагенту.КонтрагентНаименованиеПолное);
				ТабДокумент.Вывести(СтрокаТаблицыКт);
			КонецЦикла;
				
		КонецЕсли;
				
		ТабДокумент.Вывести(ПодвалТаблицыКт);
		
		// Подвал печатной формы
		Подвал = Макет.ПолучитьОбласть("Подвал");
		ТабДокумент.Вывести(Подвал);
		
		Подпись = Макет.ПолучитьОбласть("Подпись");
		ТаблицаИнвентаризационнаяКомиссия = ВыборкаШапок.ИнвентаризационнаяКомиссия.Выгрузить();
		
		// Выведем подпись председателя инвентаризационной комиссии
		ПредседательКомиссии = ТаблицаИнвентаризационнаяКомиссия.Найти(Истина, "Председатель");
		
		Если ПредседательКомиссии <> Неопределено Тогда
			
			ДанныеПредседателя = ОбщегоНазначенияБПВызовСервера.ДанныеФизЛица(ВыборкаШапок.Организация, ПредседательКомиссии.ФизЛицо, ВыборкаШапок.Дата);
				
			Подпись.Параметры.ЗаголовокРазделаПодписей = ЗаголовокРазделаПодписей.ПредседательКомиссии;
			Подпись.Параметры.Должность                = ДанныеПредседателя.Должность;
			Подпись.Параметры.РасшифровкаПодписи       = ДанныеПредседателя.Представление;
			
		Иначе
			
			Подпись.Параметры.ЗаголовокРазделаПодписей = ЗаголовокРазделаПодписей.ПредседательКомиссии;
			Подпись.Параметры.Должность                = "";
			Подпись.Параметры.РасшифровкаПодписи       = "";
			
		КонецЕсли;
			
		ТабДокумент.Вывести(Подпись);
		
		// Выведем подписи членов комиссии
		ВыводитьЗаголовок = Истина;
		
		// Сформируем список членов комиссии
		СписокЧленовКомиссии = Новый Массив();
		
		Для Каждого Строка Из ТаблицаИнвентаризационнаяКомиссия Цикл
			Если НЕ Строка.Председатель Тогда
				СписокЧленовКомиссии.Добавить(Строка.ФизЛицо);
			КонецЕсли;
		КонецЦикла;
		
		ДанныеЧленовКомиссии = ОбщегоНазначенияБПВызовСервера.ДанныеФизЛиц(ВыборкаШапок.Организация, СписокЧленовКомиссии, ВыборкаШапок.Дата);
		
		// Сначала выведем членов комиссии из выборки
		Для Каждого ЧленКомиссии Из ДанныеЧленовКомиссии Цикл
			
			Если НЕ ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабДокумент, Подпись) Тогда
				
				// Выведем разрыв страницы
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ВыводитьЗаголовок = Истина; // на новой странице выведем заголовок набора подписей
			
			КонецЕсли;
			
			Подпись.Параметры.ЗаголовокРазделаПодписей = ?(ВыводитьЗаголовок, 
			                                               ЗаголовокРазделаПодписей.ЧленыКомиссии,
														   "");
			Подпись.Параметры.Должность                = ЧленКомиссии.Должность;
			Подпись.Параметры.РасшифровкаПодписи       = ЧленКомиссии.Представление;
			
			ТабДокумент.Вывести(Подпись);
			
			ВыводитьЗаголовок = Ложь; // в следующей итерации вывод заголовка не нужен
			
		КонецЦикла;
		
		// Затем выведем пустые места для подписей (чтобы в итоге получилось не менее 3-х
		// подписей, как в форме, утвержденной Госкомстатом)
		Если ДанныеЧленовКомиссии.Количество() < 3 Тогда
			
			Если НЕ ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабДокумент, Подпись) Тогда
				
				// Выведем разрыв страницы
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ВыводитьЗаголовок = Истина; // на новой странице выведем заголовок набора подписей
			
			КонецЕсли;
			
			Для Итератор = (ДанныеЧленовКомиссии.Количество() + 1) По 3 Цикл
				
				Подпись.Параметры.ЗаголовокРазделаПодписей = ?(ВыводитьЗаголовок, 
				                                               ЗаголовокРазделаПодписей.ЧленыКомиссии,
															   "");
				Подпись.Параметры.Должность                = "";
				Подпись.Параметры.РасшифровкаПодписи       = "";
				
				ТабДокумент.Вывести(Подпись);
				
				ВыводитьЗаголовок = Ложь; // в следующей итерации вывод заголовка не нужен
				
			КонецЦикла;
		
		КонецЕсли;

	
		// В табличном документе зададим имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 
			НомерСтрокиНачало, ОбъектыПечати, ВыборкаШапок.Ссылка);

	КонецЦикла;
	
	Возврат ТабДокумент;
	
КонецФункции

Функция ПечатьИНВ22(МассивОбъектов, ОбъектыПечати)

	УстановитьПривилегированныйРежим(Истина);
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.АвтоМасштаб			= Истина;
	ТабДокумент.ОриентацияСтраницы	= ОриентацияСтраницы.Портрет;
	ТабДокумент.КлючПараметровПечати	= "ПАРАМЕТРЫ_ПЕЧАТИ_ИнвентаризацияРасчетовСКонтрагентами_ИНВ22";

	Макет = УправлениеПечатью.МакетПечатнойФормы("ОбщийМакет.ПФ_MXL_ИНВ22");
	ПервыйДокумент = Истина;

	// Варианты заголовков разделов с подписями печатной формы	
	ЗаголовокРазделаПодписей = Новый Структура();
	ЗаголовокРазделаПодписей.Вставить("ПредседательКомиссии", "Председатель комиссии");
	ЗаголовокРазделаПодписей.Вставить("ЧленыКомиссии",        "Члены комиссии");
	
	// Получаем области макета для вывода в табличный документ
	Шапка   = Макет.ПолучитьОбласть("Шапка");
	Подпись = Макет.ПолучитьОбласть("Подпись");
	Подвал  = Макет.ПолучитьОбласть("Подвал");
	
	ВыборкаШапок = ПолучитьВыборкуШапок(МассивОбъектов);
	Пока ВыборкаШапок.Следующий() Цикл
	
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		ТаблицаИнвентаризационнаяКомиссия = ВыборкаШапок.ИнвентаризационнаяКомиссия.Выгрузить();

		// Выведем шапку документа
		
		Шапка.Параметры.Заполнить(ВыборкаШапок);
		Шапка.Параметры.НаименованиеИмуществаОбязательств = "расчетов с покупателями, поставщиками и прочими дебиторами и кредиторами";
		Если ЗначениеЗаполнено(ВыборкаШапок.НомерДокумента) Тогда
			Шапка.Параметры.НомерДокумента = ВыборкаШапок.НомерДокумента;
		Иначе
			Шапка.Параметры.НомерДокумента = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ВыборкаШапок.Номер, Истина, Ложь);
		КонецЕсли;
		СведенияОбОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(ВыборкаШапок.Организация, ВыборкаШапок.Дата);
		Шапка.Параметры.Организация          = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОбОрганизации);
		Шапка.Параметры.ОрганизацияКодПоОКПО = СведенияОбОрганизации.КодПоОКПО;
		
		ТабДокумент.Вывести(Шапка);
		
		// Выведем подпись председателя инвентаризационной комиссии
		ПредседательКомиссии = ТаблицаИнвентаризационнаяКомиссия.Найти(Истина, "Председатель");
		
		Если ПредседательКомиссии <> Неопределено Тогда
			
			ДанныеПредседателя = ОбщегоНазначенияБПВызовСервера.ДанныеФизЛица(ВыборкаШапок.Организация, ПредседательКомиссии.ФизЛицо, ВыборкаШапок.Дата);
				
			Подпись.Параметры.ЗаголовокРазделаПодписей = ЗаголовокРазделаПодписей.ПредседательКомиссии;
			Подпись.Параметры.Должность                = ДанныеПредседателя.Должность;
	    	Подпись.Параметры.НаименованиеЧленаКомисси = ПредседательКомиссии.ФизЛицо.Наименование;
			
		Иначе
			
			Подпись.Параметры.ЗаголовокРазделаПодписей = ЗаголовокРазделаПодписей.ПредседательКомиссии;
			Подпись.Параметры.Должность                = "";
			Подпись.Параметры.НаименованиеЧленаКомисси = "";
			
		КонецЕсли;
			
		ТабДокумент.Вывести(Подпись);
		
		// Выведем подписи членов комиссии
		ВыводитьЗаголовок = Истина;
		
		// Сформируем список членов комиссии
		СписокЧленовКомиссии = Новый Массив();
		
		Для Каждого Строка Из ТаблицаИнвентаризационнаяКомиссия Цикл
			Если НЕ Строка.Председатель Тогда
				СписокЧленовКомиссии.Добавить(Строка.ФизЛицо);
			КонецЕсли;
		КонецЦикла;
		
		ДанныеЧленовКомиссии = ОбщегоНазначенияБПВызовСервера.ДанныеФизЛиц(ВыборкаШапок.Организация, СписокЧленовКомиссии, ВыборкаШапок.Дата);
		
		// Сначала выведем членов комиссии из выборки
		Для Каждого ЧленКомиссии Из ДанныеЧленовКомиссии Цикл
			
			Если НЕ ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабДокумент, Подпись) Тогда
				
				// Выведем разрыв страницы
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ВыводитьЗаголовок = Истина; // на новой странице выведем заголовок набора подписей
			
			КонецЕсли;
			
			Подпись.Параметры.ЗаголовокРазделаПодписей = ?(ВыводитьЗаголовок, 
			                                               ЗаголовокРазделаПодписей.ЧленыКомиссии,
														   "");
			Подпись.Параметры.Должность                = ЧленКомиссии.Должность;
		    Подпись.Параметры.НаименованиеЧленаКомисси = ЧленКомиссии.Фамилия + " " + ЧленКомиссии.Имя + " " + ЧленКомиссии.Отчество;
			
			ТабДокумент.Вывести(Подпись);
			
			ВыводитьЗаголовок = Ложь; // в следующей итерации вывод заголовка не нужен
			
		КонецЦикла;
		
		// Затем выведем пустые места для подписей (чтобы в итоге получилось не менее 3-х
		// подписей, как в форме, утвержденной Госкомстатом)
		Если ДанныеЧленовКомиссии.Количество() < 3 Тогда
			
			Если НЕ ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабДокумент, Подпись) Тогда
				
				// Выведем разрыв страницы
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ВыводитьЗаголовок = Истина; // на новой странице выведем заголовок набора подписей
			
			КонецЕсли;
			
			Для Итератор = (ДанныеЧленовКомиссии.Количество() + 1) По 3 Цикл
				
				Подпись.Параметры.ЗаголовокРазделаПодписей = ?(ВыводитьЗаголовок, 
				                                               ЗаголовокРазделаПодписей.ЧленыКомиссии,
															   "");
				Подпись.Параметры.Должность                = "";
				Подпись.Параметры.НаименованиеЧленаКомисси = "";
				
				ТабДокумент.Вывести(Подпись);
				
				ВыводитьЗаголовок = Ложь; // в следующей итерации вывод заголовка не нужен
				
			КонецЦикла;
		
		КонецЕсли;
		
		// Выведем подвал приказа
		Если НЕ ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабДокумент, Подвал) Тогда
			
			// Выведем разрыв страницы
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			
		КонецЕсли;
		
		Подвал.Параметры.НаименованиеИмуществаОбязательств = "расчеты с покупателями, поставщиками и прочими дебиторами и кредиторами";
		Подвал.Параметры.ДатаНачалаИнвентаризации          = Формат(ВыборкаШапок.ДатаНачалаИнвентаризации, "ДЛФ=DD");
		Подвал.Параметры.ДатаОкончанияИнвентаризации       = Формат(ВыборкаШапок.ДатаОкончанияИнвентаризации, "ДЛФ=DD");
		Подвал.Параметры.ПричинаПроведенияИнвентаризации   = ВыборкаШапок.ПричинаПроведенияИнвентаризации;
		
		Руководители = ОтветственныеЛицаБП.ОтветственныеЛица(ВыборкаШапок.Организация, ВыборкаШапок.Дата);
		Подвал.Параметры.ДолжностьРуководителя          = Руководители.РуководительДолжностьПредставление;
		Подвал.Параметры.РасшифровкаПодписиРуководителя = Руководители.РуководительПредставление;
		
		ТабДокумент.Вывести(Подвал);

		// В табличном документе зададим имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 
			НомерСтрокиНачало, ОбъектыПечати, ВыборкаШапок.Ссылка);

	КонецЦикла;	
	
	Возврат ТабДокумент;
	
КонецФункции

#Область ПечатьСправкаИНВ17

Функция ПечатьСправкаКАктуИНВ17(МассивОбъектов, ОбъектыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб          = Истина;
	ТабличныйДокумент.ПолеСверху           = 0;
	ТабличныйДокумент.ПолеСнизу            = 0;
	ТабличныйДокумент.ПолеСправа           = 0;
	ТабличныйДокумент.ОриентацияСтраницы   = ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИнвентаризацияРасчетовСКонтрагентами_СправкаИНВ17";
	ТабличныйДокумент.ТолькоПросмотр       = Истина;
	
	СистемнаяИнформация = Новый СистемнаяИнформация;
	Если ПустаяСтрока(СистемнаяИнформация.ИнформацияПрограммыПросмотра) Тогда 
		ТабличныйДокумент.ПолеСлева = 0;
	Иначе
		ТабличныйДокумент.ПолеСлева = 10;
	КонецЕсли;
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИнвентаризацияРасчетовСКонтрагентами.ПФ_MXL_СправкаИнв17");
	ПервыйДокумент = Истина;
	
	// Получаем области макета для вывода в табличный документ
	Заголовок       = Макет.ПолучитьОбласть("Заголовок");
	Шапка           = Макет.ПолучитьОбласть("Шапка");
	ДетальныеЗаписи = Макет.ПолучитьОбласть("ДетальныеЗаписи");
	Подвал          = Макет.ПолучитьОбласть("Подвал");
	
	ВидЗадолженностиДебиторская = Перечисления.ВидыЗадолженности.Дебиторская;
	ВидЗадолженностиКредиторская = Перечисления.ВидыЗадолженности.Кредиторская;
	
	Запрос = Новый Запрос(ТекстЗапросаПечатьСправкиИНВ17());
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("СчетаРасчетыПоНалогам",
		БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.РасчетыПоНалогам));
	Запрос.УстановитьПараметр("СчетаРасчетыПоСоциальномуСтрахованию",
		БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.РасчетыПоСоциальномуСтрахованию));
	
	ВыборкаДокумент = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаДокумент.Следующий() Цикл
	
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		// Выведем шапку документа
		
		ДанныеДокумента = ДанныеДокументаСправкаИНВ17(ВыборкаДокумент);
		Заголовок.Параметры.Заполнить(ДанныеДокумента);
		ТабличныйДокумент.Вывести(Заголовок);
		ТабличныйДокумент.Вывести(Шапка);
		
		// Выведем детальные записи документа
		
		НомерСтроки = 1;
		ВыборкаЗапись = ВыборкаДокумент.Выбрать();
		Пока ВыборкаЗапись.Следующий() Цикл
			
			ДанныеСтроки = ДанныеСтрокиДокументаСправкаИНВ17(ВыборкаЗапись, НомерСтроки, ДанныеДокумента.Дата);
			ДетальныеЗаписи.Параметры.Заполнить(ДанныеСтроки);
			
			Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабличныйДокумент, ДетальныеЗаписи) Тогда
				
				// Выведем разрыв страницы и шапку таблицы
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ТабличныйДокумент.Вывести(Шапка);
				
			КонецЕсли;
			
			ТабличныйДокумент.Вывести(ДетальныеЗаписи);
			НомерСтроки = НомерСтроки + 1;
			
		КонецЦикла;
		
		// Выведем подвал приказа
		Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабличныйДокумент, Подвал) Тогда
			
			// Выведем разрыв страницы
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			
		КонецЕсли;
		
		Подвал.Параметры.Заполнить(ДанныеДокумента);
		ТабличныйДокумент.Вывести(Подвал);
		
		// В табличном документе зададим имя области, в которую был выведен объект.
		// Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент,
			НомерСтрокиНачало,
			ОбъектыПечати,
			ВыборкаДокумент.Ссылка);
	
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ТекстЗапросаПечатьСправкиИНВ17()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ИнвентаризацияРасчетовСКонтрагентами.Ссылка КАК Ссылка,
	|	ИнвентаризацияРасчетовСКонтрагентами.Организация КАК Организация,
	|	ИнвентаризацияРасчетовСКонтрагентами.ДетализироватьЗадолженность КАК ДетализироватьЗадолженность,
	|	ИнвентаризацияРасчетовСКонтрагентами.Номер КАК Номер,
	|	ИнвентаризацияРасчетовСКонтрагентами.Дата КАК Дата
	|ПОМЕСТИТЬ Документы
	|ИЗ
	|	Документ.ИнвентаризацияРасчетовСКонтрагентами КАК ИнвентаризацияРасчетовСКонтрагентами
	|ГДЕ
	|	ИнвентаризацияРасчетовСКонтрагентами.Ссылка В(&МассивОбъектов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДебиторскаяЗадолженность.Ссылка КАК Ссылка,
	|	ДебиторскаяЗадолженность.Ссылка.Организация КАК Организация,
	|	Документы.Дата КАК Дата,
	|	Документы.Номер КАК Номер,
	|	ДебиторскаяЗадолженность.ВидЗадолженности КАК ВидЗадолженности,
	|	ДебиторскаяЗадолженность.НомерСтроки КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА ДебиторскаяЗадолженность.Контрагент ССЫЛКА Справочник.Контрагенты
	|				ИЛИ ДебиторскаяЗадолженность.Контрагент ССЫЛКА Справочник.ФизическиеЛица
	|			ТОГДА ДебиторскаяЗадолженность.Контрагент
	|		ИНАЧЕ ДебиторскаяЗадолженность.СчетРасчетов.Наименование
	|	КОНЕЦ КАК ОбъектРасшифровки,
	|	ВЫБОР
	|		КОГДА ДебиторскаяЗадолженность.СчетРасчетов В (&СчетаРасчетыПоНалогам)
	|			ТОГДА ""Налоги""
	|		КОГДА ДебиторскаяЗадолженность.СчетРасчетов В (&СчетаРасчетыПоСоциальномуСтрахованию)
	|			ТОГДА ""Взносы""
	|		ИНАЧЕ ДебиторскаяЗадолженность.СчетРасчетов.Наименование
	|	КОНЕЦ КАК ЗаЧтоЧислится,
	|	НЕОПРЕДЕЛЕНО КАК ДокументОснования,
	|	ДебиторскаяЗадолженность.Подтверждено КАК СуммаДт,
	|	0 КАК СуммаКт,
	|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК ДатаВозникновения
	|ПОМЕСТИТЬ ПредварительныеДанные
	|ИЗ
	|	Документы КАК Документы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ИнвентаризацияРасчетовСКонтрагентами.Контрагенты КАК ДебиторскаяЗадолженность
	|		ПО Документы.Ссылка = ДебиторскаяЗадолженность.Ссылка
	|			И (НЕ Документы.ДетализироватьЗадолженность)
	|			И (ДебиторскаяЗадолженность.ВидЗадолженности = ЗНАЧЕНИЕ(Перечисление.ВидыЗадолженности.Дебиторская))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КредиторскаяЗадолженность.Ссылка,
	|	КредиторскаяЗадолженность.Ссылка.Организация,
	|	Документы.Дата,
	|	Документы.Номер,
	|	КредиторскаяЗадолженность.ВидЗадолженности,
	|	КредиторскаяЗадолженность.НомерСтроки,
	|	ВЫБОР
	|		КОГДА КредиторскаяЗадолженность.Контрагент ССЫЛКА Справочник.Контрагенты
	|				ИЛИ КредиторскаяЗадолженность.Контрагент ССЫЛКА Справочник.ФизическиеЛица
	|			ТОГДА КредиторскаяЗадолженность.Контрагент
	|		ИНАЧЕ КредиторскаяЗадолженность.СчетРасчетов.Наименование
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА КредиторскаяЗадолженность.СчетРасчетов В (&СчетаРасчетыПоНалогам)
	|			ТОГДА ""Налоги""
	|		КОГДА КредиторскаяЗадолженность.СчетРасчетов В (&СчетаРасчетыПоСоциальномуСтрахованию)
	|			ТОГДА ""Взносы""
	|		ИНАЧЕ КредиторскаяЗадолженность.СчетРасчетов.Наименование
	|	КОНЕЦ,
	|	НЕОПРЕДЕЛЕНО,
	|	0,
	|	КредиторскаяЗадолженность.Подтверждено,
	|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|ИЗ
	|	Документы КАК Документы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ИнвентаризацияРасчетовСКонтрагентами.Контрагенты КАК КредиторскаяЗадолженность
	|		ПО Документы.Ссылка = КредиторскаяЗадолженность.Ссылка
	|			И (НЕ Документы.ДетализироватьЗадолженность)
	|			И (КредиторскаяЗадолженность.ВидЗадолженности = ЗНАЧЕНИЕ(Перечисление.ВидыЗадолженности.Кредиторская))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДебиторскаяЗадолженность.Ссылка,
	|	ДебиторскаяЗадолженность.Ссылка.Организация,
	|	Документы.Дата,
	|	Документы.Номер,
	|	ДебиторскаяЗадолженность.ВидЗадолженности,
	|	ДебиторскаяЗадолженность.НомерСтроки,
	|	ВЫБОР
	|		КОГДА ДебиторскаяЗадолженность.Субконто1 ССЫЛКА Справочник.Контрагенты
	|				ИЛИ ДебиторскаяЗадолженность.Субконто1 ССЫЛКА Справочник.ФизическиеЛица
	|			ТОГДА ДебиторскаяЗадолженность.Субконто1
	|		ИНАЧЕ ДебиторскаяЗадолженность.СчетРасчетов.Наименование
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ДебиторскаяЗадолженность.СчетРасчетов В (&СчетаРасчетыПоНалогам)
	|			ТОГДА ""Налоги""
	|		КОГДА ДебиторскаяЗадолженность.СчетРасчетов В (&СчетаРасчетыПоСоциальномуСтрахованию)
	|			ТОГДА ""Взносы""
	|		ИНАЧЕ ДебиторскаяЗадолженность.СчетРасчетов.Наименование
	|	КОНЕЦ,
	|	ДебиторскаяЗадолженность.Субконто3,
	|	ДебиторскаяЗадолженность.Подтверждено,
	|	0,
	|	ДебиторскаяЗадолженность.ДатаВозникновения
	|ИЗ
	|	Документы КАК Документы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ИнвентаризацияРасчетовСКонтрагентами.ДетальныеЗаписи КАК ДебиторскаяЗадолженность
	|		ПО Документы.Ссылка = ДебиторскаяЗадолженность.Ссылка
	|			И (Документы.ДетализироватьЗадолженность)
	|			И (ДебиторскаяЗадолженность.ВидЗадолженности = ЗНАЧЕНИЕ(Перечисление.ВидыЗадолженности.Дебиторская))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КредиторскаяЗадолженность.Ссылка,
	|	КредиторскаяЗадолженность.Ссылка.Организация,
	|	Документы.Дата,
	|	Документы.Номер,
	|	КредиторскаяЗадолженность.ВидЗадолженности,
	|	КредиторскаяЗадолженность.НомерСтроки,
	|	ВЫБОР
	|		КОГДА КредиторскаяЗадолженность.Субконто1 ССЫЛКА Справочник.Контрагенты
	|				ИЛИ КредиторскаяЗадолженность.Субконто1 ССЫЛКА Справочник.ФизическиеЛица
	|			ТОГДА КредиторскаяЗадолженность.Субконто1
	|		ИНАЧЕ КредиторскаяЗадолженность.СчетРасчетов.Наименование
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА КредиторскаяЗадолженность.СчетРасчетов В (&СчетаРасчетыПоНалогам)
	|			ТОГДА ""Налоги""
	|		КОГДА КредиторскаяЗадолженность.СчетРасчетов В (&СчетаРасчетыПоСоциальномуСтрахованию)
	|			ТОГДА ""Взносы""
	|		ИНАЧЕ КредиторскаяЗадолженность.СчетРасчетов.Наименование
	|	КОНЕЦ,
	|	КредиторскаяЗадолженность.Субконто3,
	|	0,
	|	КредиторскаяЗадолженность.Подтверждено,
	|	КредиторскаяЗадолженность.ДатаВозникновения
	|ИЗ
	|	Документы КАК Документы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ИнвентаризацияРасчетовСКонтрагентами.ДетальныеЗаписи КАК КредиторскаяЗадолженность
	|		ПО Документы.Ссылка = КредиторскаяЗадолженность.Ссылка
	|			И (Документы.ДетализироватьЗадолженность)
	|			И (КредиторскаяЗадолженность.ВидЗадолженности = ЗНАЧЕНИЕ(Перечисление.ВидыЗадолженности.Кредиторская))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ Документы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПредварительныеДанные.Дата КАК Дата,
	|	ВЫРАЗИТЬ(ПредварительныеДанные.ОбъектРасшифровки КАК Справочник.Контрагенты) КАК ОбъектРасшифровки
	|ПОМЕСТИТЬ ПодготовленныеОбъектыРасшифровки
	|ИЗ
	|	ПредварительныеДанные КАК ПредварительныеДанные
	|ГДЕ
	|	ПредварительныеДанные.ОбъектРасшифровки ССЫЛКА Справочник.Контрагенты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектРасшифровки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КонтрагентыИсторияКонтактнойИнформации.Ссылка КАК ОбъектРасшифровки,
	|	КонтрагентыИсторияКонтактнойИнформации.Представление КАК ЮридическийАдрес,
	|	КонтрагентыИсторияКонтактнойИнформации.Период КАК Период
	|ПОМЕСТИТЬ ИсторияЮридическийАдрес
	|ИЗ
	|	ПодготовленныеОбъектыРасшифровки КАК ПодготовленныеОбъектыРасшифровки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Контрагенты.ИсторияКонтактнойИнформации КАК КонтрагентыИсторияКонтактнойИнформации
	|		ПО ПодготовленныеОбъектыРасшифровки.ОбъектРасшифровки = КонтрагентыИсторияКонтактнойИнформации.Ссылка
	|			И (КонтрагентыИсторияКонтактнойИнформации.Период <= ПодготовленныеОбъектыРасшифровки.Дата)
	|			И (КонтрагентыИсторияКонтактнойИнформации.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ЮрАдресКонтрагента))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектРасшифровки,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИсторияЮридическийАдрес.ОбъектРасшифровки КАК ОбъектРасшифровки,
	|	МАКСИМУМ(ИсторияЮридическийАдрес.Период) КАК Период
	|ПОМЕСТИТЬ МаксимальныйПериод
	|ИЗ
	|	ИсторияЮридическийАдрес КАК ИсторияЮридическийАдрес
	|
	|СГРУППИРОВАТЬ ПО
	|	ИсторияЮридическийАдрес.ОбъектРасшифровки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектРасшифровки,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИсторияЮридическийАдрес.ОбъектРасшифровки КАК ОбъектРасшифровки,
	|	ИсторияЮридическийАдрес.ЮридическийАдрес КАК ЮридическийАдрес
	|ПОМЕСТИТЬ ЮридическиеАдресаКонтрагентов
	|ИЗ
	|	ИсторияЮридическийАдрес КАК ИсторияЮридическийАдрес
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ МаксимальныйПериод КАК МаксимальныйПериод
	|		ПО ИсторияЮридическийАдрес.ОбъектРасшифровки = МаксимальныйПериод.ОбъектРасшифровки
	|			И ИсторияЮридическийАдрес.Период = МаксимальныйПериод.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектРасшифровки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ МаксимальныйПериод
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ИсторияЮридическийАдрес
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КонтрагентыИсторияКонтактнойИнформации.Ссылка КАК ОбъектРасшифровки,
	|	КонтрагентыИсторияКонтактнойИнформации.Представление КАК Телефон,
	|	КонтрагентыИсторияКонтактнойИнформации.Период КАК Период
	|ПОМЕСТИТЬ ИсторияТелефоны
	|ИЗ
	|	ПодготовленныеОбъектыРасшифровки КАК ПодготовленныеОбъектыРасшифровки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Контрагенты.ИсторияКонтактнойИнформации КАК КонтрагентыИсторияКонтактнойИнформации
	|		ПО ПодготовленныеОбъектыРасшифровки.ОбъектРасшифровки = КонтрагентыИсторияКонтактнойИнформации.Ссылка
	|			И (КонтрагентыИсторияКонтактнойИнформации.Период <= ПодготовленныеОбъектыРасшифровки.Дата)
	|			И (КонтрагентыИсторияКонтактнойИнформации.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ТелефонКонтрагента))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектРасшифровки,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИсторияТелефоны.ОбъектРасшифровки КАК ОбъектРасшифровки,
	|	МАКСИМУМ(ИсторияТелефоны.Период) КАК Период
	|ПОМЕСТИТЬ МаксимальныйПериод
	|ИЗ
	|	ИсторияТелефоны КАК ИсторияТелефоны
	|
	|СГРУППИРОВАТЬ ПО
	|	ИсторияТелефоны.ОбъектРасшифровки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектРасшифровки,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИсторияТелефоны.ОбъектРасшифровки КАК ОбъектРасшифровки,
	|	ИсторияТелефоны.Телефон КАК Телефон
	|ПОМЕСТИТЬ ТелефоныКонтрагентов
	|ИЗ
	|	ИсторияТелефоны КАК ИсторияТелефоны
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ МаксимальныйПериод КАК МаксимальныйПериод
	|		ПО ИсторияТелефоны.ОбъектРасшифровки = МаксимальныйПериод.ОбъектРасшифровки
	|			И ИсторияТелефоны.Период = МаксимальныйПериод.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектРасшифровки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ МаксимальныйПериод
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ИсторияТелефоны
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КонтрагентыИсторияНаименований.Ссылка КАК ОбъектРасшифровки,
	|	КонтрагентыИсторияНаименований.НаименованиеПолное КАК ПолноеНаименование,
	|	КонтрагентыИсторияНаименований.Период КАК Период
	|ПОМЕСТИТЬ ИсторияПолноеНаименование
	|ИЗ
	|	ПодготовленныеОбъектыРасшифровки КАК ПодготовленныеОбъектыРасшифровки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Контрагенты.ИсторияНаименований КАК КонтрагентыИсторияНаименований
	|		ПО ПодготовленныеОбъектыРасшифровки.ОбъектРасшифровки = КонтрагентыИсторияНаименований.Ссылка
	|			И (КонтрагентыИсторияНаименований.Период <= ПодготовленныеОбъектыРасшифровки.Дата)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектРасшифровки,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИсторияПолноеНаименование.ОбъектРасшифровки КАК ОбъектРасшифровки,
	|	МАКСИМУМ(ИсторияПолноеНаименование.Период) КАК Период
	|ПОМЕСТИТЬ МаксимальныйПериод
	|ИЗ
	|	ИсторияПолноеНаименование КАК ИсторияПолноеНаименование
	|
	|СГРУППИРОВАТЬ ПО
	|	ИсторияПолноеНаименование.ОбъектРасшифровки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектРасшифровки,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИсторияПолноеНаименование.ОбъектРасшифровки КАК ОбъектРасшифровки,
	|	ИсторияПолноеНаименование.ПолноеНаименование КАК ПолноеНаименование
	|ПОМЕСТИТЬ ПолноеНаименованиеКонтрагента
	|ИЗ
	|	ИсторияПолноеНаименование КАК ИсторияПолноеНаименование
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ МаксимальныйПериод КАК МаксимальныйПериод
	|		ПО ИсторияПолноеНаименование.ОбъектРасшифровки = МаксимальныйПериод.ОбъектРасшифровки
	|			И ИсторияПолноеНаименование.Период = МаксимальныйПериод.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектРасшифровки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ МаксимальныйПериод
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ИсторияПолноеНаименование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПодготовленныеОбъектыРасшифровки.ОбъектРасшифровки КАК ОбъектРасшифровки,
	|	МАКСИМУМ(КонтактнаяИнформацияТелефон.Представление) КАК Телефон,
	|	МАКСИМУМ(КонтактнаяИнформацияАдрес.Представление) КАК Адрес
	|ПОМЕСТИТЬ КонтактнаяИнформацияПоУмолчанию
	|ИЗ
	|	ПодготовленныеОбъектыРасшифровки КАК ПодготовленныеОбъектыРасшифровки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты.КонтактнаяИнформация КАК КонтактнаяИнформацияТелефон
	|		ПО ПодготовленныеОбъектыРасшифровки.ОбъектРасшифровки = КонтактнаяИнформацияТелефон.Ссылка
	|			И (КонтактнаяИнформацияТелефон.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ТелефонКонтрагента))
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты.КонтактнаяИнформация КАК КонтактнаяИнформацияАдрес
	|		ПО ПодготовленныеОбъектыРасшифровки.ОбъектРасшифровки = КонтактнаяИнформацияАдрес.Ссылка
	|			И (КонтактнаяИнформацияАдрес.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ЮрАдресКонтрагента))
	|
	|СГРУППИРОВАТЬ ПО
	|	ПодготовленныеОбъектыРасшифровки.ОбъектРасшифровки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектРасшифровки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПодготовленныеОбъектыРасшифровки.ОбъектРасшифровки КАК ОбъектРасшифровки,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ПолноеНаименованиеКонтрагента.ПолноеНаименование, """") <> """"
	|			ТОГДА ПолноеНаименованиеКонтрагента.ПолноеНаименование
	|		КОГДА ЕСТЬNULL(Контрагенты.НаименованиеПолное, """") <> """"
	|			ТОГДА Контрагенты.НаименованиеПолное
	|		ИНАЧЕ Контрагенты.Наименование
	|	КОНЕЦ КАК НаименованиеДляПечатныхФорм,
	|	ЕСТЬNULL(ТелефоныКонтрагентов.Телефон, КонтактнаяИнформацияПоУмолчанию.Телефон) КАК Телефоны,
	|	ЕСТЬNULL(ЮридическиеАдресаКонтрагентов.ЮридическийАдрес, КонтактнаяИнформацияПоУмолчанию.Адрес) КАК ЮридическийАдрес,
	|	ВЫРАЗИТЬ(ПодготовленныеОбъектыРасшифровки.ОбъектРасшифровки КАК Справочник.Контрагенты).ИНН КАК ИНН
	|ПОМЕСТИТЬ КонтактнаяИнформация
	|ИЗ
	|	ПодготовленныеОбъектыРасшифровки КАК ПодготовленныеОбъектыРасшифровки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЮридическиеАдресаКонтрагентов КАК ЮридическиеАдресаКонтрагентов
	|		ПО ПодготовленныеОбъектыРасшифровки.ОбъектРасшифровки = ЮридическиеАдресаКонтрагентов.ОбъектРасшифровки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПолноеНаименованиеКонтрагента КАК ПолноеНаименованиеКонтрагента
	|		ПО ПодготовленныеОбъектыРасшифровки.ОбъектРасшифровки = ПолноеНаименованиеКонтрагента.ОбъектРасшифровки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТелефоныКонтрагентов КАК ТелефоныКонтрагентов
	|		ПО ПодготовленныеОбъектыРасшифровки.ОбъектРасшифровки = ТелефоныКонтрагентов.ОбъектРасшифровки
	|		ЛЕВОЕ СОЕДИНЕНИЕ КонтактнаяИнформацияПоУмолчанию КАК КонтактнаяИнформацияПоУмолчанию
	|		ПО ПодготовленныеОбъектыРасшифровки.ОбъектРасшифровки = КонтактнаяИнформацияПоУмолчанию.ОбъектРасшифровки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
	|		ПО ПодготовленныеОбъектыРасшифровки.ОбъектРасшифровки = Контрагенты.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ЮридическиеАдресаКонтрагентов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТелефоныКонтрагентов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПолноеНаименованиеКонтрагента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПодготовленныеОбъектыРасшифровки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ КонтактнаяИнформацияПоУмолчанию
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПредварительныеДанные.Ссылка КАК Ссылка,
	|	ПредварительныеДанные.ВидЗадолженности КАК ВидЗадолженности,
	|	ПредварительныеДанные.НомерСтроки КАК НомерСтроки,
	|	ПредварительныеДанные.ОбъектРасшифровки КАК ОбъектРасшифровки,
	|	ПредварительныеДанные.ДокументОснования КАК ДокументОснования,
	|	СУММА(ПредварительныеДанные.СуммаДт) КАК СуммаДт,
	|	СУММА(ПредварительныеДанные.СуммаКт) КАК СуммаКт,
	|	МИНИМУМ(ПредварительныеДанные.ДатаВозникновения) КАК ДатаВозникновения,
	|	ПредварительныеДанные.Организация КАК Организация,
	|	ПредварительныеДанные.ЗаЧтоЧислится КАК ЗаЧтоЧислится,
	|	ПредварительныеДанные.Дата КАК Дата,
	|	ПредварительныеДанные.Номер КАК Номер,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) КАК ДатаДокументаОснования,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, """") КАК НомерДокументаОснования,
	|	ЕСТЬNULL(КонтактнаяИнформация.НаименованиеДляПечатныхФорм, """") КАК НаименованиеДляПечатныхФорм,
	|	ЕСТЬNULL(КонтактнаяИнформация.Телефоны, """") КАК Телефоны,
	|	ЕСТЬNULL(КонтактнаяИнформация.ЮридическийАдрес, """") КАК ЮридическийАдрес,
	|	ЕСТЬNULL(КонтактнаяИнформация.ИНН, """") КАК ИНН
	|ИЗ
	|	ПредварительныеДанные КАК ПредварительныеДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО ПредварительныеДанные.Организация = ДанныеПервичныхДокументов.Организация
	|			И ПредварительныеДанные.ДокументОснования = ДанныеПервичныхДокументов.Документ
	|		ЛЕВОЕ СОЕДИНЕНИЕ КонтактнаяИнформация КАК КонтактнаяИнформация
	|		ПО ПредварительныеДанные.ОбъектРасшифровки = КонтактнаяИнформация.ОбъектРасшифровки
	|
	|СГРУППИРОВАТЬ ПО
	|	ПредварительныеДанные.Ссылка,
	|	ПредварительныеДанные.ВидЗадолженности,
	|	ПредварительныеДанные.НомерСтроки,
	|	ПредварительныеДанные.ОбъектРасшифровки,
	|	ПредварительныеДанные.ДокументОснования,
	|	ПредварительныеДанные.Организация,
	|	ПредварительныеДанные.ЗаЧтоЧислится,
	|	ПредварительныеДанные.Дата,
	|	ПредварительныеДанные.Номер,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)),
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, """"),
	|	ЕСТЬNULL(КонтактнаяИнформация.НаименованиеДляПечатныхФорм, """"),
	|	ЕСТЬNULL(КонтактнаяИнформация.ИНН, """"),
	|	ЕСТЬNULL(КонтактнаяИнформация.Телефоны, """"),
	|	ЕСТЬNULL(КонтактнаяИнформация.ЮридическийАдрес, """")
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	ВидЗадолженности УБЫВ,
	|	ПредварительныеДанные.НомерСтроки,
	|	ОбъектРасшифровки,
	|	ЗаЧтоЧислится
	|ИТОГИ
	|	МИНИМУМ(Организация),
	|	МИНИМУМ(Дата),
	|	МИНИМУМ(Номер)
	|ПО
	|	Ссылка";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ДанныеДокументаСправкаИНВ17(ДанныеДокумента)
	
	РеквизитыПечатнойФормы = Новый Массив;
	РеквизитыПечатнойФормы.Добавить("ДатаДокумента");
	РеквизитыПечатнойФормы.Добавить("НомерДокумента");
	РеквизитыПечатнойФормы.Добавить("ОрганизацияПредставление");
	РеквизитыПечатнойФормы.Добавить("ДолжностьПодписавшего");
	РеквизитыПечатнойФормы.Добавить("РасшифровкаПодписи");
	РеквизитыПечатнойФормы.Добавить("Дата");
	
	Результат = Новый Структура(СтрСоединить(РеквизитыПечатнойФормы, ","));
	
	Результат.Дата = ДанныеДокумента.Дата;
	Результат.ДатаДокумента = ВРег(Формат(ДанныеДокумента.Дата, "ДФ=dd.MM.yyyy"));
	Результат.НомерДокумента = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ДанныеДокумента.Номер, Истина, Ложь);
	
	ДанныеОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(
		ДанныеДокумента.Организация,
		ДанныеДокумента.Дата);
	Результат.ОрганизацияПредставление = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(
		ДанныеОрганизации,
		"НаименованиеДляПечатныхФорм,ИНН,ЮридическийАдрес,Телефоны");
	
	Руководители = ОтветственныеЛицаБП.ОтветственныеЛица(ДанныеДокумента.Организация, ДанныеДокумента.Дата);
	Результат.ДолжностьПодписавшего = Руководители.ГлавныйБухгалтерДолжностьПредставление;
	Результат.РасшифровкаПодписи    = Руководители.ГлавныйБухгалтерПредставление;
	
	Возврат Результат;
	
КонецФункции

Функция ДанныеСтрокиДокументаСправкаИНВ17(ДетальныеЗаписи, НомерСтроки, ДатаДокумента)
	
	РеквизитыПечатнойФормы = Новый Массив;
	РеквизитыПечатнойФормы.Добавить("НомерСтроки");
	РеквизитыПечатнойФормы.Добавить("ОбъектРасшифровки");
	РеквизитыПечатнойФормы.Добавить("ОбъектаРасшифровкиПредставление");
	РеквизитыПечатнойФормы.Добавить("ЗаЧтоЧислится");
	РеквизитыПечатнойФормы.Добавить("ДатаВозникновения");
	РеквизитыПечатнойФормы.Добавить("СуммаДт");
	РеквизитыПечатнойФормы.Добавить("СуммаКт");
	РеквизитыПечатнойФормы.Добавить("ДокументОснования");
	РеквизитыПечатнойФормы.Добавить("НомерДокументаОснования");
	РеквизитыПечатнойФормы.Добавить("ДатаДокументаОснования");
	
	Результат = Новый Структура(СтрСоединить(РеквизитыПечатнойФормы, ","));
	ЗаполнитьЗначенияСвойств(Результат, ДетальныеЗаписи);
	Результат.НомерСтроки = НомерСтроки;
	
	Если ЗначениеЗаполнено(ДетальныеЗаписи.ДокументОснования) Тогда
		Если ЗначениеЗаполнено(ДетальныеЗаписи.ДатаДокументаОснования)
			И ЗначениеЗаполнено(ДетальныеЗаписи.НомерДокументаОснования) Тогда
			Результат.ДатаДокументаОснования = Формат(ДетальныеЗаписи.ДатаДокументаОснования, "ДФ=dd.MM.yyyy");
			Результат.НомерДокументаОснования = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(
				ДетальныеЗаписи.НомерДокументаОснования, Истина, Ложь);
		Иначе
			РеквизитыДокумента = РеквизитыВыбранногоДокумента(ДетальныеЗаписи.ДокументОснования, "Дата, Номер");
			Если РеквизитыДокумента <> Неопределено Тогда
				Результат.ДатаДокументаОснования = Формат(РеквизитыДокумента.Дата, "ДФ=dd.MM.yyyy");
				Результат.НомерДокументаОснования = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(
					РеквизитыДокумента.Номер, Истина, Ложь);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если ТипЗнч(ДетальныеЗаписи.ОбъектРасшифровки) = Тип("СправочникСсылка.Контрагенты") Тогда
		
		ПредставлениеКонтрагента = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(
			ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(ДетальныеЗаписи),
			"НаименованиеДляПечатныхФорм,ИНН,ЮридическийАдрес,Телефоны");
		
		Результат.ОбъектаРасшифровкиПредставление = ПредставлениеКонтрагента;
		
	ИначеЕсли ЗначениеЗаполнено(ДетальныеЗаписи.ОбъектРасшифровки) Тогда
		Результат.ОбъектаРасшифровкиПредставление = ДетальныеЗаписи.ОбъектРасшифровки;
	Иначе
		Результат.ОбъектаРасшифровкиПредставление = ДетальныеЗаписи.ЗаЧтоЧислится;
		Результат.ОбъектРасшифровки = ДетальныеЗаписи.ЗаЧтоЧислится;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ПРОВЕРКА ЗАПОЛНЕНИЯ

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты, ДокументОбъектИлиФорма = Неопределено, ВФорме = Ложь) Экспорт

	МассивНепроверяемыхРеквизитов = Новый Массив();

	// Если Контрагент или СчетРасчетов не заполнены, то ошибка не выведется, т.к. визуально табличная часть
	//  Контрагенты на форме не представлена. Надо обрабатывать вручную.
	МассивНепроверяемыхРеквизитов.Добавить("Контрагенты.СчетРасчетов");

	Если НЕ ВФорме Тогда
		ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
		Возврат;
	КонецЕсли;

	// Таблицы значений можно проверить только в форме
	Форма  = ДокументОбъектИлиФорма;
	Объект = ДокументОбъектИлиФорма.Объект;

	ИменаСуммовыхПолей = Новый Массив;
	ИменаСуммовыхПолей.Добавить("Подтверждено");
	ИменаСуммовыхПолей.Добавить("НеПодтверждено");
	ИменаСуммовыхПолей.Добавить("ИстекСрокДавности");

	// Сверим суммы в связанных табличных частях.
	Если Объект.ДетализироватьЗадолженность Тогда

		Расхождения = Форма.Дебиторы.Выгрузить(, СтрШаблон("КлючСтроки, %1", СтрСоединить(ИменаСуммовыхПолей, ", ")));
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(Форма.Кредиторы, Расхождения);
		
		Для каждого ИмяПоля Из ИменаСуммовыхПолей Цикл
			Расхождения.Колонки.Добавить(ИмяПоля + "Детали", Расхождения.Колонки.Подтверждено.ТипЗначения);
		КонецЦикла;
		
		Для каждого ДетальнаяЗапись Из Объект.ДетальныеЗаписи Цикл
			НоваяСтрока = Расхождения.Добавить();
			НоваяСтрока.КлючСтроки = ДетальнаяЗапись.КлючСтроки;
			
			Для каждого ИмяПоля Из ИменаСуммовыхПолей Цикл
				// Для контроля за совпадением сумм вычитаем данные из подчиненной табличной части. 
				НоваяСтрока[ИмяПоля] = - ДетальнаяЗапись[ИмяПоля];
				
				// Для вывода сообщений пользователю запоминаем исходную сумму из детальных записей.
				НоваяСтрока[ИмяПоля + "Детали"] = ДетальнаяЗапись[ИмяПоля];
			КонецЦикла;
		КонецЦикла;
		
		СуммируемыеКолонки = Новый Массив;
		Для каждого ИмяПоля Из ИменаСуммовыхПолей Цикл
			СуммируемыеКолонки.Добавить(ИмяПоля);
			СуммируемыеКолонки.Добавить(ИмяПоля + "Детали");
		КонецЦикла;
		
		Расхождения.Свернуть("КлючСтроки", СтрСоединить(СуммируемыеКолонки, ", "));
		
		// Удалим строки, где нет расхождений.
		Индекс = Расхождения.Количество();
		Пока Индекс > 0 Цикл
	
			Индекс = Индекс - 1;
			СтрокаТаблицы = Расхождения[Индекс];
			
			ЕстьРасхождения = Ложь;
			Для каждого ИмяПоля Из ИменаСуммовыхПолей Цикл
				Если СтрокаТаблицы[ИмяПоля] <> 0 Тогда
					ЕстьРасхождения = Истина;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			
			Если НЕ ЕстьРасхождения Тогда
				Расхождения.Удалить(Индекс);
			КонецЕсли;
	
		КонецЦикла;
		
		Расхождения.Индексы.Добавить("КлючСтроки");
		
	КонецЕсли;

	НомерСтрокиДебиторов  = 0;
	НомерСтрокиКредиторов = 0;
	ОтборПоКлючу = Новый Структура("КлючСтроки");
	
	МетаданныеРеквизитов = Метаданные.Документы.ИнвентаризацияРасчетовСКонтрагентами.ТабличныеЧасти.ДетальныеЗаписи.Реквизиты;
	
	СинонимыРеквизитов = Новый Структура();
	Для каждого ИмяПоля Из ИменаСуммовыхПолей Цикл
		СинонимыРеквизитов.Вставить(ИмяПоля, МетаданныеРеквизитов[ИмяПоля].Синоним);
	КонецЦикла;
	
	Для Каждого СтрокаТаблицы Из Объект.Контрагенты Цикл

		Если СтрокаТаблицы.ВидЗадолженности = Перечисления.ВидыЗадолженности.Дебиторская Тогда
			ПутьКДанным = СтрШаблон("Дебиторы[%1]",	Формат(НомерСтрокиДебиторов, "ЧН=0; ЧГ="));
		Иначе
			ПутьКДанным = СтрШаблон("Кредиторы[%1]", Формат(НомерСтрокиКредиторов, "ЧН=0; ЧГ="));
		КонецЕсли;

		// В каждой строке табличной части "Контрагенты" должно быть заполнено или Подтверждено или НеПодтверждено
		Если (СтрокаТаблицы.Подтверждено = 0) И (СтрокаТаблицы.НеПодтверждено = 0) Тогда
			Если СтрокаТаблицы.ВидЗадолженности = Перечисления.ВидыЗадолженности.Дебиторская Тогда
				ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(
					"Колонка",
					"Корректность",
					НСтр("ru = 'Всего'"),
					НомерСтрокиДебиторов + 1,
					"Дебиторы",
					"Должна быть заполнена хотя бы одна из сумм: Подтверждено или Не подтверждено.");
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , ПутьКДанным + ".Всего", , Отказ);
			Иначе
				ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(
					"Колонка",
					"Корректность",
					НСтр("ru = 'Всего'"),
					НомерСтрокиКредиторов + 1,
					"Кредиторы",
					"Должна быть заполнена хотя бы одна из сумм: Подтверждено или Не подтверждено.");
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , ПутьКДанным + ".Всего", , Отказ);
			КонецЕсли;
		КонецЕсли;
		Если СтрокаТаблицы.СчетРасчетов.Пустая() Тогда
			Если СтрокаТаблицы.ВидЗадолженности = Перечисления.ВидыЗадолженности.Дебиторская Тогда
				ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(
					"Колонка",
					"Заполнение",
					НСтр("ru = 'СчетРасчетов'"),
					НомерСтрокиДебиторов + 1,
					"Дебиторы");
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , ПутьКДанным + ".СчетРасчетов", , Отказ);
			Иначе
				ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(
					"Колонка",
					"Заполнение",
					НСтр("ru = 'СчетРасчетов'"),
					НомерСтрокиКредиторов + 1,
					"Кредиторы");
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , ПутьКДанным + ".СчетРасчетов", , Отказ);
			КонецЕсли;
		КонецЕсли;
		
		// Проверим расхождения между табличными частями.
		Если ЗначениеЗаполнено(Расхождения) Тогда
			СтрокаРасхождения = Расхождения.Найти(СтрокаТаблицы.КлючСтроки, "КлючСтроки");

			Если СтрокаРасхождения <> Неопределено Тогда
				// Строка присутствует в детальных записях, суммы должны совпадать.
				Для каждого ИмяПоля Из ИменаСуммовыхПолей Цикл

					Если СтрокаРасхождения[ИмяПоля] = 0 Тогда
						// Нет расхождений.
						Продолжить;
					КонецЕсли;
					
					Если СтрокаТаблицы.ВидЗадолженности = Перечисления.ВидыЗадолженности.Дебиторская Тогда
						ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(
							"Колонка",
							"КОРРЕКТНОСТЬ",
							СинонимыРеквизитов[ИмяПоля],
							НомерСтрокиДебиторов + 1,
							"Дебиторы",
							СтрШаблон(НСтр("ru = 'Не совпадает общая сумма по дебитору %1 с суммой расшифровки по срокам %2'"),
								Формат(СтрокаТаблицы[ИмяПоля], "ЧЦ=15;ЧДЦ=2"),
								Формат(СтрокаРасхождения[ИмяПоля + "Детали"], "ЧЦ=15;ЧДЦ=2;ЧН="))
							);
						ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , ПутьКДанным + "." + ИмяПоля, , Отказ);
					Иначе
						ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(
							"Колонка",
							"КОРРЕКТНОСТЬ",
							СинонимыРеквизитов[ИмяПоля],
							НомерСтрокиКредиторов + 1,
							"Кредиторы",
							СтрШаблон(НСтр("ru = 'Не совпадает общая сумма по кредитору %1 с суммой расшифровки по срокам %2'"),
								Формат(СтрокаТаблицы[ИмяПоля], "ЧЦ=15;ЧДЦ=2"),
								Формат(СтрокаРасхождения[ИмяПоля + "Детали"], "ЧЦ=15;ЧДЦ=2;ЧН="))
							);
						ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , ПутьКДанным + "." + ИмяПоля, , Отказ);
					КонецЕсли;
					
				КонецЦикла;
			КонецЕсли;

		КонецЕсли;
		
		Если СтрокаТаблицы.ВидЗадолженности = Перечисления.ВидыЗадолженности.Дебиторская Тогда
			НомерСтрокиДебиторов  = НомерСтрокиДебиторов + 1;
		Иначе
			НомерСтрокиКредиторов = НомерСтрокиКредиторов + 1;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

Функция ПолучитьДополнительныеРеквизитыДляРеестра() Экспорт
	
	Результат = Новый Структура("Информация", "ПричинаПроведенияИнвентаризации");
	
	Возврат Результат;
	
КонецФункции

#Область СлужебныеПроцедурыИФункции

#Область ЗаполнениеПоОстаткам

Функция ВыбранныеСчетаРасчетов(ИерархияСчетов)
	
	СчетаРасчетов = Новый Массив;
	Для Каждого ТекущийСчет Из ИерархияСчетов Цикл
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(СчетаРасчетов, БухгалтерскийУчетПовтИсп.СчетаВИерархии(ТекущийСчет));
	КонецЦикла;
	
	Возврат СчетаРасчетов;
	
КонецФункции

Функция НовыеПараметрыОбъектаРасшифровки() Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("Организация");                 // СправочникСсылка.Организации
	Результат.Вставить("Дата", '00010101');            // Дата
	Результат.Вставить("СчетаРасчетов", Новый Массив); // Массив - значения ПланСчетовСсылка.Хозрасчетный
	
	Возврат Результат;
	
КонецФункции

Функция НовыйРезультатЗаполнения() Экспорт
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ЗаданиеВыполнено",   Ложь);
	СтруктураПараметров.Вставить("ОткрытьФормуОшибки", Ложь);
	СтруктураПараметров.Вставить("Контрагенты",        Новый Соответствие);
	СтруктураПараметров.Вставить("ДетальныеЗаписи",    Неопределено);
	
	Возврат СтруктураПараметров;
	
КонецФункции

// Получает таблицы расчетов по задолженностям указанного вида. Предназначена для запуска фоновым заданием.
//
// Параметры:
//  ПараметрыЗаполнения - Структура - см. НовыеПараметрыЗаполнения().
//  АдресХранилища - Строка - место, куда фоновое задание поместит результат.
//
Процедура ЗаполнитьПоОстаткам(ПараметрыЗаполнения, АдресХранилища) Экспорт

	Результат = НовыйРезультатЗаполнения();
	
	Если ЗначениеЗаполнено(ПараметрыЗаполнения.ДатаОкончанияАктуализации) Тогда
		
		ПараметрыРасчета = УчетВзаиморасчетовОтложенноеПроведение.НовыеПараметрыРасчета();
		ПараметрыРасчета.Организация                = ПараметрыЗаполнения.Организация;
		ПараметрыРасчета.ДатаОкончания              = ПараметрыЗаполнения.ДатаОкончанияАктуализации;
		ПараметрыРасчета.АдресХранилищаСОшибками    = ПараметрыЗаполнения.АдресХранилищаСОшибками;
		ПараметрыРасчета.СообщатьПрогрессВыполнения = Ложь;
		
		РезультатРасчета = УчетВзаиморасчетовОтложенноеПроведение.ВыполнитьОтложенныеРасчеты(ПараметрыРасчета);
		Если РезультатРасчета.КоличествоДоговоровСОшибками <> 0 Тогда
			
			// При актуализации возникла ошибка. Необходимо сообщить о ней пользователю.
			Результат.ОткрытьФормуОшибки = Истина;
			ПоместитьВоВременноеХранилище(Результат, АдресХранилища);
			Возврат;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ДетальныеЗаписи = НоваяТаблицаДокумента("ДетальныеЗаписи");
	СчетаУчетПоНаименованию = СчетаРасчетовУчетПоНаименованию();
	НаименованиеСчетаТип = ОбщегоНазначения.ОписаниеТипаСтрока(Метаданные.ПланыСчетов.Хозрасчетный.ДлинаНаименования);
	
	Для Каждого ТекущаяТаблица Из ПараметрыЗаполнения.Контрагенты Цикл
		
		Если Не ПараметрыЗаполнения.ДетализироватьЗадолженность Тогда
			
			ОстаткиЗадолженности = ОстаткиЗадолженности(ПараметрыЗаполнения, ТекущаяТаблица.Ключ);
			Результат.Контрагенты.Вставить(ТекущаяТаблица.Ключ, ОстаткиЗадолженности);
			
		Иначе
			
			ОстаткиЗадолженности = ОстаткиЗадолженности(ПараметрыЗаполнения, ТекущаяТаблица.Ключ);
			ТаблицаКонтрагенты = НоваяТаблицаДокумента("Контрагенты");
			ТаблицаКонтрагенты.Колонки.Добавить("НаименованиеСчета", НаименованиеСчетаТип);
			
			НоваяСтрока = Неопределено;
			Если ПараметрыЗаполнения.Свойство("КлючСтроки") Тогда
				Отбор = Новый Структура("КлючСтроки", ПараметрыЗаполнения.КлючСтроки);
				СтрокиОтбора = ТекущаяТаблица.Значение.НайтиСтроки(Отбор);
				Если СтрокиОтбора.Количество() > 0 Тогда
					НоваяСтрока = ТаблицаКонтрагенты.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокиОтбора[0]);
				КонецЕсли;
			КонецЕсли;
			
			Для Каждого ТекущаяСтрока Из ОстаткиЗадолженности Цикл
				
				ЗаполнятьКонтрагента = СчетаУчетПоНаименованию.Найти(ТекущаяСтрока.СчетРасчетов) = Неопределено;
				
				Если НоваяСтрока = Неопределено Тогда
					КонтрагентСовпадает = Ложь;
				ИначеЕсли Не ЗаполнятьКонтрагента Тогда
					КонтрагентСовпадает = Истина;
				Иначе
					КонтрагентСовпадает = НоваяСтрока.Контрагент = ТекущаяСтрока.Субконто1;
				КонецЕсли;
				
				Если НоваяСтрока = Неопределено Или Не КонтрагентСовпадает
					Или НоваяСтрока.СчетРасчетов <> ТекущаяСтрока.СчетРасчетов Тогда
					
					НоваяСтрока = ТаблицаКонтрагенты.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекущаяСтрока, , "Подтверждено");
					НоваяСтрока.КлючСтроки = Новый УникальныйИдентификатор;
					
					Если ЗаполнятьКонтрагента Тогда
						НоваяСтрока.Контрагент = ТекущаяСтрока.Субконто1;
					КонецЕсли;
					
				КонецЕсли;
				
				НоваяСтрока.Подтверждено = НоваяСтрока.Подтверждено + ТекущаяСтрока.Подтверждено;
				ТекущаяСтрока.КлючСтроки = НоваяСтрока.КлючСтроки;
				ЗаполнитьЗначенияСвойств(ДетальныеЗаписи.Добавить(), ТекущаяСтрока);
				
			КонецЦикла;
			
			Результат.Контрагенты.Вставить(ТекущаяТаблица.Ключ, ТаблицаКонтрагенты);
			
		КонецЕсли;
		
		Результат.ЗаданиеВыполнено = Истина;
	
	КонецЦикла;
	
	Результат.Вставить("ДетальныеЗаписи", ДетальныеЗаписи);
	ПоместитьВоВременноеХранилище(Результат, АдресХранилища);
	
КонецПроцедуры

Функция ЗадолженностьПоРасчетамБезДетализации(ПараметрыЗаполнения, ВидЗадолженности)
	
	ЗадолженностьРезультат = НоваяТаблицаДокумента("Контрагенты");
	
	// Для счетов группы 68, 69 в сводную таблицу контрагентов будет выводиться наименование счета
	ЗадолженностьРезультат.Колонки.Добавить("НаименованиеСчета",
		ОбщегоНазначения.ОписаниеТипаСтрока(Метаданные.ПланыСчетов.Хозрасчетный.ДлинаНаименования));
	
	// Расчеты выполняем только по доступным организациям.
	// Если доступных организаций нет, делаем возврат.
	Организации = Новый Массив;
	СписокДоступныхОрганизаций = ОбщегоНазначенияБПВызовСервераПовтИсп.ВсеОрганизацииДанныеКоторыхДоступныПоRLS(Ложь);
	Если СписокДоступныхОрганизаций.Количество() = 0 Тогда
		Возврат ЗадолженностьРезультат;
	ИначеЕсли ТипЗнч(ПараметрыЗаполнения.Организация) = Тип("Массив") Тогда
		Для Каждого Организация Из ПараметрыЗаполнения.Организация Цикл
			Если СписокДоступныхОрганизаций.Найти(Организация) <> Неопределено Тогда
				Организации.Добавить(Организация);
			КонецЕсли;
		КонецЦикла;
	ИначеЕсли ТипЗнч(ПараметрыЗаполнения.Организация) = Тип("СправочникСсылка.Организации") Тогда
		Если СписокДоступныхОрганизаций.Найти(ПараметрыЗаполнения.Организация) <> Неопределено Тогда
			Организации.Добавить(ПараметрыЗаполнения.Организация);
		КонецЕсли;
	КонецЕсли;
	
	Если Организации.Количество() = 0 Тогда
		Возврат ЗадолженностьРезультат;
	КонецЕсли;
	
	ИсключаемыеСчета = СчетаРасчетовСКонтрагентамиИсключения();
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ИсключаемыеСчета, СчетаРасчетовСПерсоналом());
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ИсключаемыеСчета, СчетаРасчетовПоНалогамСборамСтрахованию());
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ИсключаемыеСчета, СчетаРасчетовПоВидамПлатежейУровнямБюджета());
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ИсключаемыеСчета, СчетаРасчетовБезОбработки());
	
	СчетаРасчетовСКонтрагентам = ВыбранныеСчетаРасчетов(ПараметрыЗаполнения.СчетаРасчетов);
	ИсключитьСчетаИзМассива(СчетаРасчетовСКонтрагентам, ИсключаемыеСчета);
	
	СхемаЗапроса = Новый СхемаЗапроса;
	СхемаЗапроса.УстановитьТекстЗапроса(
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОстатки.Счет В (&СчетаРасчетовУчетПоНаименованию)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто1 КАК Справочник.Контрагенты)
	|	КОНЕЦ КАК Контрагент,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОстатки.Счет В (&СчетаРасчетовУчетПоНаименованию)
	|			ТОГДА ХозрасчетныйОстатки.Счет.Наименование
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК НаименованиеСчета,
	|	ХозрасчетныйОстатки.Счет КАК СчетРасчетов,
	|	ВЫБОР
	|		КОГДА &ЭтоДебиторскаяЗадолженность
	|			ТОГДА ХозрасчетныйОстатки.СуммаОстатокДт
	|		ИНАЧЕ ХозрасчетныйОстатки.СуммаОстатокКт
	|	КОНЕЦ КАК Подтверждено,
	|	ВЫБОР
	|		КОГДА &ЭтоДебиторскаяЗадолженность
	|			ТОГДА ХозрасчетныйОстатки.СуммаОстатокДт
	|		ИНАЧЕ ХозрасчетныйОстатки.СуммаОстатокКт
	|	КОНЕЦ КАК Всего
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&Период,
	|			Счет В (&СчетаРасчетовСКонтрагентам),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты),
	|			Организация В (&Организация)
	|				И Субконто1 В (&Субконто1)) КАК ХозрасчетныйОстатки
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &ЭтоДебиторскаяЗадолженность
	|				ТОГДА ХозрасчетныйОстатки.СуммаОстатокДт
	|			ИНАЧЕ ХозрасчетныйОстатки.СуммаОстатокКт
	|		КОНЕЦ > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Контрагент,
	|	СчетРасчетов
	|АВТОУПОРЯДОЧИВАНИЕ");
	
	ЭтоДебиторскаяЗадолженность = (ВидЗадолженности = Перечисления.ВидыЗадолженности.Дебиторская);
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Если ПараметрыЗаполнения.Свойство("ДебиторыКредиторы") Тогда
		
		ОбъектыЗадолженности = ПараметрыЗаполнения.ДебиторыКредиторы;
		
	Иначе
		
		Для Каждого ТекущийПакет Из СхемаЗапроса.ПакетЗапросов Цикл
			Для Каждого ТекущийОператор Из ТекущийПакет.Операторы Цикл
				Для Каждого ТекущийИсточник Из ТекущийОператор.Источники Цикл
					Если ТекущийИсточник.Источник.ИмяТаблицы = "РегистрБухгалтерии.Хозрасчетный.Остатки" Тогда
						ТекущийИсточник.Источник.Параметры[3].Выражение = Новый ВыражениеСхемыЗапроса("Организация В (&Организация)");
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
		
		ОбъектыЗадолженности = Неопределено;
		
	КонецЕсли;
	
	Запрос.Текст = СхемаЗапроса.ПолучитьТекстЗапроса();
	
	Запрос.УстановитьПараметр("Период", Новый Граница(КонецДня(ПараметрыЗаполнения.Дата), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Организация", Организации);
	Запрос.УстановитьПараметр("СчетаРасчетовСКонтрагентам", СчетаРасчетовСКонтрагентам);
	Запрос.УстановитьПараметр("Субконто1", ОбъектыЗадолженности);
	Запрос.УстановитьПараметр("ЭтоДебиторскаяЗадолженность", ЭтоДебиторскаяЗадолженность);
	Запрос.УстановитьПараметр("СчетаРасчетовУчетПоНаименованию", СчетаРасчетовУчетПоНаименованию());
	
	ДополнитьПараметрыЗапросаРасчетыСКонтрагентами(Запрос);
	
	УстановитьПривилегированныйРежим(Истина);
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	УстановитьПривилегированныйРежим(Ложь);
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(РезультатЗапроса, ЗадолженностьРезультат);
	
	// Задолженность перед персоналом
	
	Запрос.УстановитьПараметр("ВыбранныеСчета", ВыбранныеСчетаРасчетов(ПараметрыЗаполнения.СчетаРасчетов));
	Запрос.УстановитьПараметр("СчетаПоРаботникам", СчетаРасчетовСПерсоналом());

	СоздатьВременныеТаблицыРасчетыСРаботниками(Запрос, Истина, ОбъектыЗадолженности);
	Запрос.Текст = ТекстЗапросаОстаткиЗадолженностиРаботникиОрганизаций(ОбъектыЗадолженности, Истина);
	
	УстановитьПривилегированныйРежим(Истина);
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	УстановитьПривилегированныйРежим(Ложь);
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(РезультатЗапроса, ЗадолженностьРезультат);
	
	// Задолженность перед бюджетом по налогам, сборам и социальному страхованию
	
	ДополнитьПараметрыЗапросаРасчетыСБюджетом(Запрос);
	СоздатьВременныеТаблицыРасчетыСБюджетом(Запрос, Истина);
	Запрос.Текст = ТекстЗапросаОстаткиЗадолженностиРасчетыСБюджетом(Истина);
	УстановитьПривилегированныйРежим(Истина);
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	УстановитьПривилегированныйРежим(Ложь);
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(РезультатЗапроса, ЗадолженностьРезультат);
	
	// Прочие счета
	
	Запрос.УстановитьПараметр("СчетаБезОбработки", СчетаРасчетовБезОбработки());
	
	СоздатьВременныеТаблицыРасчетыСчетаБезОбработки(Запрос, Истина);
	
	Запрос.Текст = ТекстЗапросаОстаткиЗадолженностиСчетаБезОбработки(Истина);
	УстановитьПривилегированныйРежим(Истина);
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	УстановитьПривилегированныйРежим(Ложь);
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(РезультатЗапроса, ЗадолженностьРезультат);
	
	// Задолженность перед учредителями
	
	Запрос.УстановитьПараметр("СубконтоУчредители", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Учредители);
	Запрос.УстановитьПараметр("СчетаРасчетовСУчредителями", СчетаРасчетовСУчредителями());
	
	СоздатьВременныеТаблицыРасчетыСУчредителями(Запрос, ОбъектыЗадолженности, Истина);
	
	Запрос.Текст = ТекстЗапросаОстаткиЗадолженностиУчредители(Истина);
	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.Выполнить().Выгрузить();
	УстановитьПривилегированныйРежим(Ложь);
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(Результат, ЗадолженностьРезультат);
	
	ЗадолженностьРезультат.Сортировать("СчетРасчетов Возр, Контрагент Возр");
	
	Возврат ЗадолженностьРезультат;
	
КонецФункции

Функция ОстаткиЗадолженности(ПараметрыЗаполнения, ВидЗадолженности)
	
	Если Не ПараметрыЗаполнения.ДетализироватьЗадолженность Тогда
		
		Возврат ЗадолженностьПоРасчетамБезДетализации(ПараметрыЗаполнения, ВидЗадолженности);
		
	КонецЕсли;
	
	Возврат ЗадолженностьПоРасчетам(ПараметрыЗаполнения, ВидЗадолженности);
	
КонецФункции

Функция НоваяТаблицаДокумента(ИмяТаблицы)
	
	Результат = Новый ТаблицаЗначений;
	РеквизитыМетаданных = Метаданные.Документы.ИнвентаризацияРасчетовСКонтрагентами.ТабличныеЧасти[ИмяТаблицы].Реквизиты;
	Для Каждого ТекущийРеквизит Из РеквизитыМетаданных Цикл
		Результат.Колонки.Добавить(ТекущийРеквизит.Имя, ТекущийРеквизит.Тип);
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область ДетальныеЗаписи

Процедура СоздатьВременныеТаблицыОбщие(Запрос)

	МенеджерВременныхТаблиц = Запрос.МенеджерВременныхТаблиц;
	Если МенеджерВременныхТаблиц.Таблицы.Найти("ПроведенныеАкты") <> Неопределено Тогда
		// Таблицы уже созданы ранее.
		Возврат;
	КонецЕсли;
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ИнвентаризацияРасчетовСКонтрагентами.Организация КАК Организация,
	|	ИнвентаризацияРасчетовСКонтрагентами.Дата КАК Дата,
	|	КОНЕЦПЕРИОДА(ИнвентаризацияРасчетовСКонтрагентами.Дата, ДЕНЬ) КАК ДатаКонецДня,
	|	ИнвентаризацияРасчетовСКонтрагентами.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ПроведенныеАкты
	|ИЗ
	|	Документ.ИнвентаризацияРасчетовСКонтрагентами КАК ИнвентаризацияРасчетовСКонтрагентами
	|ГДЕ
	|	ИнвентаризацияРасчетовСКонтрагентами.Проведен
	|	И ИнвентаризацияРасчетовСКонтрагентами.Ссылка <> &СсылкаНаДокумент
	|	И ИнвентаризацияРасчетовСКонтрагентами.Дата <= &ДатаДокумента
	|	И ИнвентаризацияРасчетовСКонтрагентами.Организация В(&Организация)
	|	И ИнвентаризацияРасчетовСКонтрагентами.ДетализироватьЗадолженность
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	Дата";

	УстановитьПривилегированныйРежим(Истина);
	Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);

КонецПроцедуры

Процедура СоздатьВременныеТаблицыРасчетыСПокупателямиПоставщиками(Запрос, Контрагенты = Неопределено)

	МенеджерВременныхТаблиц = Запрос.МенеджерВременныхТаблиц;
	Если МенеджерВременныхТаблиц.Таблицы.Найти("ВТ_РасчетыСПокупателямиПоставщикамиБезДокументов") <> Неопределено Тогда
		// Таблицы уже созданы ранее.
		Возврат;
	КонецЕсли;

	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ХозрасчетныйОстатки.Организация КАК Организация,
	|	ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто1 КАК Справочник.Контрагенты) КАК Субконто1,
	|	ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто2 КАК Справочник.ДоговорыКонтрагентов) КАК Субконто2,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто2 КАК Справочник.ДоговорыКонтрагентов).УстановленСрокОплаты, ЛОЖЬ) КАК УстановленСрокОплаты,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто2 КАК Справочник.ДоговорыКонтрагентов).ДатаОплаты, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаОплаты,
	|	ВЫБОР
	|		КОГДА ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто2 КАК Справочник.ДоговорыКонтрагентов).УстановленСрокОплаты
	|			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто2 КАК Справочник.ДоговорыКонтрагентов).СрокОплаты
	|		КОГДА ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто2 КАК Справочник.ДоговорыКонтрагентов).ВидДоговора В (&ВидыДоговоровПоставщики)
	|			ТОГДА &СрокОплатыПоставщики
	|		КОГДА ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто2 КАК Справочник.ДоговорыКонтрагентов).ВидДоговора В (&ВидыДоговоровПокупатели)
	|			ТОГДА &СрокОплатыПокупатели
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СрокОплаты,
	|	ХозрасчетныйОстатки.СуммаРазвернутыйОстатокДт,
	|	ХозрасчетныйОстатки.СуммаРазвернутыйОстатокКт,
	|	ХозрасчетныйОстатки.Счет КАК Счет
	|ПОМЕСТИТЬ ВТ_РасчетыСПокупателямиПоставщикамиБезДокументов
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|		&Период,
	|		Счет В (&СчетаРасчетов)
	|			И Счет В (&ВыбранныеСчета),
	|		&ВидыСубконтоБезДокументов,
	|		Организация В (&Организация)
	|			И &ОтборСубконто1) КАК ХозрасчетныйОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ХозрасчетныйОстатки.Организация КАК Организация,
	|	ХозрасчетныйОстатки.Счет КАК Счет,
	|	ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто1 КАК Справочник.Контрагенты) КАК Субконто1,
	|	ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто2 КАК Справочник.ДоговорыКонтрагентов) КАК Субконто2,
	|	ХозрасчетныйОстатки.Субконто3 КАК Субконто3,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто2 КАК Справочник.ДоговорыКонтрагентов).УстановленСрокОплаты, ЛОЖЬ) КАК УстановленСрокОплаты,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто2 КАК Справочник.ДоговорыКонтрагентов).ДатаОплаты, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаОплаты,
	|	ВЫБОР
	|		КОГДА ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто2 КАК Справочник.ДоговорыКонтрагентов).УстановленСрокОплаты
	|			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто2 КАК Справочник.ДоговорыКонтрагентов).СрокОплаты
	|		КОГДА ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто2 КАК Справочник.ДоговорыКонтрагентов).ВидДоговора В (&ВидыДоговоровПоставщики)
	|			ТОГДА &СрокОплатыПоставщики
	|		КОГДА ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто2 КАК Справочник.ДоговорыКонтрагентов).ВидДоговора В (&ВидыДоговоровПокупатели)
	|			ТОГДА &СрокОплатыПокупатели
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СрокОплаты,
	|	ВЫБОР
	|		КОГДА ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто2 КАК Справочник.ДоговорыКонтрагентов).ВидДоговора В (&ВидыДоговоровПоставщики)
	|			ТОГДА &ИспользуютсяСрокиОплатыПоставщики
	|		КОГДА ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто2 КАК Справочник.ДоговорыКонтрагентов).ВидДоговора В (&ВидыДоговоровПокупатели)
	|			ТОГДА &ИспользуютсяСрокиОплатыПокупатели
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ИспользуютсяСрокиОплаты,
	|	ХозрасчетныйОстатки.СуммаРазвернутыйОстатокДт,
	|	ХозрасчетныйОстатки.СуммаРазвернутыйОстатокКт
	|ПОМЕСТИТЬ ВТ_ХозрасчетныйОстаткиCДокументами
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&Период,
	|			Счет В (&СчетаРасчетовСДокументами)
	|				И Счет В (&ВыбранныеСчета),
	|			&ВидыСубконтоСДокументами,
	|			Организация В (&Организация)
	|				И &ОтборСубконто1) КАК ХозрасчетныйОстатки
	|;
	|
	|ВЫБРАТЬ
	|	ВТ_ХозрасчетныйОстаткиCДокументами.Организация КАК Организация,
	|	ВТ_ХозрасчетныйОстаткиCДокументами.Счет КАК Счет,
	|	ВТ_ХозрасчетныйОстаткиCДокументами.Субконто1 КАК Субконто1,
	|	ВТ_ХозрасчетныйОстаткиCДокументами.Субконто2 КАК Субконто2,
	|	ВТ_ХозрасчетныйОстаткиCДокументами.Субконто3 КАК Субконто3,
	|	ВТ_ХозрасчетныйОстаткиCДокументами.УстановленСрокОплаты КАК УстановленСрокОплаты,
	|	ВТ_ХозрасчетныйОстаткиCДокументами.СрокОплаты КАК СрокОплаты,
	|	ВТ_ХозрасчетныйОстаткиCДокументами.ИспользуютсяСрокиОплаты КАК ИспользуютсяСрокиОплаты,
	|	ВТ_ХозрасчетныйОстаткиCДокументами.СуммаРазвернутыйОстатокДт КАК СуммаРазвернутыйОстатокДт,
	|	ВТ_ХозрасчетныйОстаткиCДокументами.СуммаРазвернутыйОстатокКт КАК СуммаРазвернутыйОстатокКт,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.ДатаРегистратора, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) КАК ДатаВозникновения,
	|	ВЫБОР
	|		КОГДА НЕ СрокиОплатыДокументов.СрокОплаты ЕСТЬ NULL
	|			ТОГДА СрокиОплатыДокументов.СрокОплаты
	|		КОГДА ВТ_ХозрасчетныйОстаткиCДокументами.ДатаОплаты <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ВТ_ХозрасчетныйОстаткиCДокументами.ДатаОплаты
	|		КОГДА ДанныеПервичныхДокументов.ДатаРегистратора ЕСТЬ NULL
	|			ТОГДА ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|		ИНАЧЕ ДОБАВИТЬКДАТЕ(ДанныеПервичныхДокументов.ДатаРегистратора, ДЕНЬ, ВТ_ХозрасчетныйОстаткиCДокументами.СрокОплаты)
	|	КОНЕЦ КАК ДатаПогашения
	|ПОМЕСТИТЬ ВТ_РасчетыСПокупателямиПоставщикамиCДокументами
	|ИЗ
	|	ВТ_ХозрасчетныйОстаткиCДокументами КАК ВТ_ХозрасчетныйОстаткиCДокументами
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СрокиОплатыДокументов КАК СрокиОплатыДокументов
	|		ПО (ВТ_ХозрасчетныйОстаткиCДокументами.ИспользуютсяСрокиОплаты)
	|			И ВТ_ХозрасчетныйОстаткиCДокументами.Организация = СрокиОплатыДокументов.Организация
	|			И ВТ_ХозрасчетныйОстаткиCДокументами.Субконто3 = СрокиОплатыДокументов.Документ
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО ВТ_ХозрасчетныйОстаткиCДокументами.Организация = ДанныеПервичныхДокументов.Организация
	|			И ВТ_ХозрасчетныйОстаткиCДокументами.Субконто3 = ДанныеПервичныхДокументов.Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ПОМЕСТИТЬ ВТ_СчетаБезДокументов
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ХозрасчетныйВидыСубконто
	|	ПО Хозрасчетный.Ссылка = ХозрасчетныйВидыСубконто.Ссылка
	|		И ХозрасчетныйВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСКонтрагентами)
	|ГДЕ
	|	Хозрасчетный.Ссылка В (&СчетаРасчетов)
	|	И Хозрасчетный.Ссылка В (&ВыбранныеСчета)
	|	И ХозрасчетныйВидыСубконто.Ссылка ЕСТЬ NULL
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОбороты.Организация КАК Организация,
	|	ХозрасчетныйОбороты.Счет КАК Счет,
	|	ЕСТЬNULL(ХозрасчетныйОбороты.Субконто1, НЕОПРЕДЕЛЕНО) КАК Субконто1,
	|	ЕСТЬNULL(ХозрасчетныйОбороты.Субконто2, НЕОПРЕДЕЛЕНО) КАК Субконто2,
	|	ВЫБОР
	|		КОГДА МИНИМУМ(ВЫБОР
	|					КОГДА ХозрасчетныйОбороты.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
	|							И ХозрасчетныйОбороты.СуммаОборотДт > 0
	|						ТОГДА ХозрасчетныйОбороты.Период
	|					КОГДА ХозрасчетныйОбороты.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
	|							И ХозрасчетныйОбороты.СуммаОборотКт > 0
	|						ТОГДА ХозрасчетныйОбороты.Период
	|					КОГДА ХозрасчетныйОбороты.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.АктивноПассивный)
	|						ТОГДА ХозрасчетныйОбороты.Период
	|					ИНАЧЕ ДАТАВРЕМЯ(2999, 12, 31)
	|				КОНЕЦ) <> ДАТАВРЕМЯ(2999, 12, 31)
	|			ТОГДА МИНИМУМ(ВЫБОР
	|						КОГДА ХозрасчетныйОбороты.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
	|								И ХозрасчетныйОбороты.СуммаОборотДт > 0
	|							ТОГДА ХозрасчетныйОбороты.Период
	|						КОГДА ХозрасчетныйОбороты.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
	|								И ХозрасчетныйОбороты.СуммаОборотКт > 0
	|							ТОГДА ХозрасчетныйОбороты.Период
	|						КОГДА ХозрасчетныйОбороты.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.АктивноПассивный)
	|							ТОГДА ХозрасчетныйОбороты.Период
	|						ИНАЧЕ ДАТАВРЕМЯ(2999, 12, 31)
	|					КОНЕЦ)
	|		ИНАЧЕ МИНИМУМ(ХозрасчетныйОбороты.Период)
	|	КОНЕЦ КАК Период
	|ПОМЕСТИТЬ ПериодыДвиженийРасчетыСПокупателямиПоставщиками
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&НачалоПериода,
	|			&Период,
	|			ДЕНЬ,
	|			Счет В (ВЫБРАТЬ 
	|						ВТ_СчетаБезДокументов.Счет 
	|					ИЗ 
	|						ВТ_СчетаБезДокументов КАК ВТ_СчетаБезДокументов),
	|			&ВидыСубконтоБезДокументов,
	|			Организация В (&Организация)
	|				И &ОтборСубконто1,
	|			,
	|			) КАК ХозрасчетныйОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОбороты.Организация,
	|	ХозрасчетныйОбороты.Счет,
	|	ХозрасчетныйОбороты.Субконто1,
	|	ХозрасчетныйОбороты.Субконто2
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	Счет,
	|	Субконто1,
	|	Субконто2";

	Если Контрагенты = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОтборСубконто1", "ИСТИНА");
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОтборСубконто1", "Субконто1 В(&Субконто1)");
	КонецЕсли;

	УстановитьПривилегированныйРежим(Истина);
	Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);

КонецПроцедуры

Процедура СоздатьВременныеТаблицыРасчетыСПрочимиКонтрагентами(Запрос, Контрагенты = Неопределено)

	МенеджерВременныхТаблиц = Запрос.МенеджерВременныхТаблиц;
	Если МенеджерВременныхТаблиц.Таблицы.Найти("ВТ_РасчетыСПрочимиКонтрагентами") <> Неопределено Тогда
		// Таблицы уже созданы ранее.
		Возврат;
	КонецЕсли;

	// Дата возникновения определяется как последний период по движениям
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Организация КАК Организация,
	|	ХозрасчетныйОстатки.Счет КАК СчетРасчетов,
	|	ХозрасчетныйОстатки.Счет.Вид КАК ВидСчета,
	|	ХозрасчетныйОстатки.Субконто1 КАК Субконто1,
	|	ХозрасчетныйОстатки.СуммаРазвернутыйОстатокДт КАК СуммаРазвернутыйОстатокДт,
	|	ХозрасчетныйОстатки.СуммаРазвернутыйОстатокКт КАК СуммаРазвернутыйОстатокКт
	|ПОМЕСТИТЬ ВТ_РасчетыСПрочимиКонтрагентами
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&Период,
	|			Счет В (&СчетаПрочиеКонтрагенты)
	|				И Счет В (&ВыбранныеСчета),
	|			&ВидСубконтоКонтрагенты,
	|			Организация В (&Организация)
	|				И &ОтборСубконто1) КАК ХозрасчетныйОстатки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	СчетРасчетов,
	|	Субконто1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОбороты.Организация КАК Организация,
	|	ХозрасчетныйОбороты.Счет КАК Счет,
	|	ЕСТЬNULL(ХозрасчетныйОбороты.Субконто1, НЕОПРЕДЕЛЕНО) КАК Субконто1,
	|	ВЫБОР
	|		КОГДА МАКСИМУМ(ВЫБОР
	|					КОГДА ХозрасчетныйОбороты.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
	|							И ХозрасчетныйОбороты.СуммаОборотДт > 0
	|						ТОГДА ХозрасчетныйОбороты.Период
	|					КОГДА ХозрасчетныйОбороты.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
	|							И ХозрасчетныйОбороты.СуммаОборотКт > 0
	|						ТОГДА ХозрасчетныйОбороты.Период
	|					КОГДА ХозрасчетныйОбороты.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.АктивноПассивный)
	|						ТОГДА ХозрасчетныйОбороты.Период
	|					ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|				КОНЕЦ) <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА МАКСИМУМ(ВЫБОР
	|						КОГДА ХозрасчетныйОбороты.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
	|								И ХозрасчетныйОбороты.СуммаОборотДт > 0
	|							ТОГДА ХозрасчетныйОбороты.Период
	|						КОГДА ХозрасчетныйОбороты.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
	|								И ХозрасчетныйОбороты.СуммаОборотКт > 0
	|							ТОГДА ХозрасчетныйОбороты.Период
	|						КОГДА ХозрасчетныйОбороты.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.АктивноПассивный)
	|							ТОГДА ХозрасчетныйОбороты.Период
	|						ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|					КОНЕЦ)
	|		ИНАЧЕ МАКСИМУМ(ХозрасчетныйОбороты.Период)
	|	КОНЕЦ КАК Период
	|ПОМЕСТИТЬ ПериодыДвиженийРасчетыСПрочимиКонтрагентами
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&НачалоПериода,
	|			&Период,
	|			ДЕНЬ,
	|			Счет В (&СчетаПрочиеКонтрагенты)
	|				И Счет В (&ВыбранныеСчета),
	|			&ВидСубконтоКонтрагенты,
	|			Организация В (&Организация)
	|				И &ОтборСубконто1,
	|			,
	|			) КАК ХозрасчетныйОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОбороты.Организация,
	|	ХозрасчетныйОбороты.Счет,
	|	ХозрасчетныйОбороты.Субконто1
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	Счет,
	|	Субконто1";
	
	Если Контрагенты = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОтборСубконто1", "ИСТИНА");
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОтборСубконто1", "Субконто1 В(&Субконто1)");
	КонецЕсли;

	УстановитьПривилегированныйРежим(Истина);
	Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);

КонецПроцедуры

Процедура СоздатьВременныеТаблицыРасчетыСчетаБезОбработки(Запрос, СводныеДанные = Ложь)

	МенеджерВременныхТаблиц = Запрос.МенеджерВременныхТаблиц;
	Если МенеджерВременныхТаблиц.Таблицы.Найти("ВТ_РасчетыПоСчетамБезОбработки") <> Неопределено Тогда
		// Таблицы уже созданы ранее.
		Возврат;
	КонецЕсли;

	// Дата возникновения определяется как последний период по движениям
	
	ТекстыЗапроса = Новый Массив;
	
	ТекстыЗапроса.Добавить(
	"ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Организация КАК Организация,
	|	ХозрасчетныйОстатки.Счет КАК СчетРасчетов,
	|	ХозрасчетныйОстатки.Счет.Наименование КАК НаименованиеСчета,
	|	ХозрасчетныйОстатки.Счет.Вид КАК ВидСчета,
	|	ЕСТЬNULL(ХозрасчетныйОстатки.Субконто1, НЕОПРЕДЕЛЕНО) КАК Субконто1,
	|	ЕСТЬNULL(ХозрасчетныйОстатки.Субконто2, НЕОПРЕДЕЛЕНО) КАК Субконто2,
	|	ЕСТЬNULL(ХозрасчетныйОстатки.Субконто3, НЕОПРЕДЕЛЕНО) КАК Субконто3,
	|	ХозрасчетныйОстатки.СуммаОстатокДт КАК СуммаОстатокДт,
	|	ХозрасчетныйОстатки.СуммаОстатокКт КАК СуммаОстатокКт
	|ПОМЕСТИТЬ ВТ_РасчетыПоСчетамБезОбработки
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&Период,
	|			Счет В (&СчетаБезОбработки)
	|				И Счет В (&ВыбранныеСчета),
	|			,
	|			Организация В (&Организация)) КАК ХозрасчетныйОстатки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	СчетРасчетов,
	|	Субконто1");
	
	Если Не СводныеДанные Тогда
		
		ТекстыЗапроса.Добавить(
		"ВЫБРАТЬ
		|	ХозрасчетныйОбороты.Организация КАК Организация,
		|	ХозрасчетныйОбороты.Счет КАК Счет,
		|	ЕСТЬNULL(ХозрасчетныйОбороты.Субконто1, НЕОПРЕДЕЛЕНО) КАК Субконто1,
		|	ЕСТЬNULL(ХозрасчетныйОбороты.Субконто2, НЕОПРЕДЕЛЕНО) КАК Субконто2,
		|	ЕСТЬNULL(ХозрасчетныйОбороты.Субконто3, НЕОПРЕДЕЛЕНО) КАК Субконто3,
		|	ВЫБОР
		|		КОГДА МАКСИМУМ(ВЫБОР
		|					КОГДА ХозрасчетныйОбороты.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
		|							И ХозрасчетныйОбороты.СуммаОборотДт > 0
		|						ТОГДА ХозрасчетныйОбороты.Период
		|					КОГДА ХозрасчетныйОбороты.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
		|							И ХозрасчетныйОбороты.СуммаОборотКт > 0
		|						ТОГДА ХозрасчетныйОбороты.Период
		|					КОГДА ХозрасчетныйОбороты.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.АктивноПассивный)
		|						ТОГДА ХозрасчетныйОбороты.Период
		|					ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
		|				КОНЕЦ) <> ДАТАВРЕМЯ(1, 1, 1)
		|			ТОГДА МАКСИМУМ(ВЫБОР
		|						КОГДА ХозрасчетныйОбороты.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
		|								И ХозрасчетныйОбороты.СуммаОборотДт > 0
		|							ТОГДА ХозрасчетныйОбороты.Период
		|						КОГДА ХозрасчетныйОбороты.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
		|								И ХозрасчетныйОбороты.СуммаОборотКт > 0
		|							ТОГДА ХозрасчетныйОбороты.Период
		|						КОГДА ХозрасчетныйОбороты.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.АктивноПассивный)
		|							ТОГДА ХозрасчетныйОбороты.Период
		|						ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
		|					КОНЕЦ)
		|		ИНАЧЕ МАКСИМУМ(ХозрасчетныйОбороты.Период)
		|	КОНЕЦ КАК Период
		|ПОМЕСТИТЬ ПериодыДвиженийРасчетыПоСчетамБезОбработки
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(
		|			&НачалоПериода,
		|			&Период,
		|			ДЕНЬ,
		|			Счет В (&СчетаБезОбработки)
		|				И Счет В (&ВыбранныеСчета),
		|			,
		|			Организация В (&Организация),
		|			,
		|			) КАК ХозрасчетныйОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйОбороты.Организация,
		|	ХозрасчетныйОбороты.Счет,
		|	ХозрасчетныйОбороты.Субконто1,
		|	ХозрасчетныйОбороты.Субконто2,
		|	ХозрасчетныйОбороты.Субконто3
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация,
		|	Счет,
		|	Субконто1,
		|	Субконто2,
		|	Субконто3");
		
	КонецЕсли;
	
	Запрос.Текст = СтрСоединить(ТекстыЗапроса, ОбщегоНазначения.РазделительПакетаЗапросов());
	
	УстановитьПривилегированныйРежим(Истина);
	Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);

КонецПроцедуры

Процедура СоздатьВременныеТаблицыРасчетыСУчредителями(Запрос, Учредители = Неопределено, СводныеДанные = Ложь)

	МенеджерВременныхТаблиц = Запрос.МенеджерВременныхТаблиц;
	Если МенеджерВременныхТаблиц.Таблицы.Найти("ВТ_РасчетыСУчредителями") <> Неопределено Тогда
		// Таблицы уже созданы ранее.
		Возврат;
	КонецЕсли;

	ТекстыЗапроса = Новый Массив;
	ТекстыЗапроса.Добавить(
	"ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Организация КАК Организация,
	|	ХозрасчетныйОстатки.Счет КАК СчетРасчетов,
	|	ХозрасчетныйОстатки.Счет.Вид КАК ВидСчета,
	|	ХозрасчетныйОстатки.Субконто1 КАК Субконто1,
	|	ХозрасчетныйОстатки.СуммаРазвернутыйОстатокДт КАК СуммаРазвернутыйОстатокДт,
	|	ХозрасчетныйОстатки.СуммаРазвернутыйОстатокКт КАК СуммаРазвернутыйОстатокКт
	|ПОМЕСТИТЬ ВТ_РасчетыСУчредителями
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&Период,
	|			Счет В (&СчетаРасчетовСУчредителями)
	|				И Счет В (&ВыбранныеСчета),
	|			&СубконтоУчредители,
	|			Организация В (&Организация)
	|				И &ОтборСубконто1) КАК ХозрасчетныйОстатки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	СчетРасчетов,
	|	Субконто1");

	Если Не СводныеДанные Тогда
		
		// Дата возникновения определяется как последний период по движениям
		
		ТекстыЗапроса.Добавить(
		"ВЫБРАТЬ
		|	ХозрасчетныйОбороты.Организация КАК Организация,
		|	ХозрасчетныйОбороты.Счет КАК Счет,
		|	ЕСТЬNULL(ХозрасчетныйОбороты.Субконто1, НЕОПРЕДЕЛЕНО) КАК Субконто1,
		|	ВЫБОР
		|		КОГДА МАКСИМУМ(ВЫБОР
		|					КОГДА ХозрасчетныйОбороты.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
		|							И ХозрасчетныйОбороты.СуммаОборотДт > 0
		|						ТОГДА ХозрасчетныйОбороты.Период
		|					КОГДА ХозрасчетныйОбороты.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
		|							И ХозрасчетныйОбороты.СуммаОборотКт > 0
		|						ТОГДА ХозрасчетныйОбороты.Период
		|					КОГДА ХозрасчетныйОбороты.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.АктивноПассивный)
		|						ТОГДА ХозрасчетныйОбороты.Период
		|					ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
		|				КОНЕЦ) <> ДАТАВРЕМЯ(1, 1, 1)
		|			ТОГДА МАКСИМУМ(ВЫБОР
		|						КОГДА ХозрасчетныйОбороты.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
		|								И ХозрасчетныйОбороты.СуммаОборотДт > 0
		|							ТОГДА ХозрасчетныйОбороты.Период
		|						КОГДА ХозрасчетныйОбороты.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
		|								И ХозрасчетныйОбороты.СуммаОборотКт > 0
		|							ТОГДА ХозрасчетныйОбороты.Период
		|						КОГДА ХозрасчетныйОбороты.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.АктивноПассивный)
		|							ТОГДА ХозрасчетныйОбороты.Период
		|						ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
		|					КОНЕЦ)
		|		ИНАЧЕ МАКСИМУМ(ХозрасчетныйОбороты.Период)
		|	КОНЕЦ КАК Период
		|ПОМЕСТИТЬ ПериодыДвиженийРасчетыСУчредителями
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(
		|			&НачалоПериода,
		|			&Период,
		|			ДЕНЬ,
		|			Счет В (&СчетаРасчетовСУчредителями)
		|				И Счет В (&ВыбранныеСчета),
		|			&СубконтоУчредители,
		|			Организация В (&Организация)
		|				И &ОтборСубконто1,
		|			,
		|			) КАК ХозрасчетныйОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйОбороты.Организация,
		|	ХозрасчетныйОбороты.Счет,
		|	ХозрасчетныйОбороты.Субконто1
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация,
		|	Счет,
		|	Субконто1");
		
	КонецЕсли;
	
	Запрос.Текст = СтрСоединить(ТекстыЗапроса, ОбщегоНазначения.РазделительПакетаЗапросов());
	
	Если Учредители = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОтборСубконто1", "ИСТИНА");
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОтборСубконто1", "Субконто1 В(&Субконто1)");
	КонецЕсли;

	УстановитьПривилегированныйРежим(Истина);
	Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);

КонецПроцедуры

Процедура СоздатьВременныеТаблицыРасчетыСБюджетом(Запрос, СводныеДанные = Ложь)
	
	МенеджерВременныхТаблиц = Запрос.МенеджерВременныхТаблиц;
	Если СводныеДанные И МенеджерВременныхТаблиц.Таблицы.Найти("ВТ_РасчетыСБюджетом") <> Неопределено Тогда
		// Таблицы для сводных данных уже созданы ранее.
		Возврат;
	ИначеЕсли МенеджерВременныхТаблиц.Таблицы.Найти("ВТ_РасчетыСБюджетомПериодыДвижений") <> Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтрокиТекстаЗапроса = Новый Массив;
	СтрокиТекстаЗапроса.Добавить(
	"ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Организация КАК Организация,
	|	ХозрасчетныйОстатки.Счет КАК Счет,
	|	ХозрасчетныйОстатки.Субконто1 КАК Субконто1,
	|	ХозрасчетныйОстатки.СуммаРазвернутыйОстатокДт КАК СуммаРазвернутыйОстатокДт,
	|	ХозрасчетныйОстатки.СуммаРазвернутыйОстатокКт КАК СуммаРазвернутыйОстатокКт
	|ПОМЕСТИТЬ ВТ_РасчетыСБюджетом
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&Период,
	|			Счет В (&СчетаПоВидамПлатежей)
	|				И Счет В (&ВыбранныеСчета),
	|			&СубконтоВидыПлатежей,
	|			Организация В (&Организация)) КАК ХозрасчетныйОстатки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	Счет,
	|	Субконто1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Организация КАК Организация,
	|	ХозрасчетныйОстатки.Счет КАК Счет,
	|	ХозрасчетныйОстатки.Субконто1 КАК Субконто1,
	|	ХозрасчетныйОстатки.Субконто1 КАК Субконто2,
	|	ХозрасчетныйОстатки.СуммаРазвернутыйОстатокДт КАК СуммаРазвернутыйОстатокДт,
	|	ХозрасчетныйОстатки.СуммаРазвернутыйОстатокКт КАК СуммаРазвернутыйОстатокКт
	|ПОМЕСТИТЬ ВТ_РасчетыСБюджетомПоВидамПлатежейУровнямБюджета
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&Период,
	|			Счет В (&СчетаПоВидамПлатежейУровням)
	|				И Счет В (&ВыбранныеСчета),
	|			&СубконтоВидыПлатежейУровни,
	|			Организация В (&Организация)) КАК ХозрасчетныйОстатки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	Счет,
	|	Субконто1,
	|	Субконто2");
	
	Если Не СводныеДанные Тогда
		СтрокиТекстаЗапроса.Добавить(
		"ВЫБРАТЬ
		|	ХозрасчетныйОбороты.Организация КАК Организация,
		|	ХозрасчетныйОбороты.Счет КАК Счет,
		|	ЕСТЬNULL(ХозрасчетныйОбороты.Субконто1, НЕОПРЕДЕЛЕНО) КАК Субконто1,
		|	ВЫБОР
		|		КОГДА МАКСИМУМ(ВЫБОР
		|					КОГДА ХозрасчетныйОбороты.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
		|							И ХозрасчетныйОбороты.СуммаОборотДт > 0
		|						ТОГДА ХозрасчетныйОбороты.Период
		|					КОГДА ХозрасчетныйОбороты.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
		|							И ХозрасчетныйОбороты.СуммаОборотКт > 0
		|						ТОГДА ХозрасчетныйОбороты.Период
		|					КОГДА ХозрасчетныйОбороты.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.АктивноПассивный)
		|						ТОГДА ХозрасчетныйОбороты.Период
		|					ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
		|				КОНЕЦ) <> ДАТАВРЕМЯ(1, 1, 1)
		|			ТОГДА МАКСИМУМ(ВЫБОР
		|						КОГДА ХозрасчетныйОбороты.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
		|								И ХозрасчетныйОбороты.СуммаОборотДт > 0
		|							ТОГДА ХозрасчетныйОбороты.Период
		|						КОГДА ХозрасчетныйОбороты.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
		|								И ХозрасчетныйОбороты.СуммаОборотКт > 0
		|							ТОГДА ХозрасчетныйОбороты.Период
		|						КОГДА ХозрасчетныйОбороты.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.АктивноПассивный)
		|							ТОГДА ХозрасчетныйОбороты.Период
		|						ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
		|					КОНЕЦ)
		|		ИНАЧЕ МАКСИМУМ(ХозрасчетныйОбороты.Период)
		|	КОНЕЦ КАК Период
		|ПОМЕСТИТЬ ВТ_РасчетыСБюджетомПериодыДвижений
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(
		|			&НачалоПериода,
		|			&Период,
		|			ДЕНЬ,
		|			Счет В (&СчетаПоВидамПлатежей)
		|				И Счет В (&ВыбранныеСчета),
		|			&СубконтоВидыПлатежей,
		|			Организация В (&Организация),
		|			,
		|			) КАК ХозрасчетныйОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйОбороты.Организация,
		|	ХозрасчетныйОбороты.Счет,
		|	ХозрасчетныйОбороты.Субконто1
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация,
		|	Счет,
		|	Субконто1
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ХозрасчетныйОбороты.Организация КАК Организация,
		|	ХозрасчетныйОбороты.Счет КАК Счет,
		|	ЕСТЬNULL(ХозрасчетныйОбороты.Субконто1, НЕОПРЕДЕЛЕНО) КАК Субконто1,
		|	ЕСТЬNULL(ХозрасчетныйОбороты.Субконто2, НЕОПРЕДЕЛЕНО) КАК Субконто2,
		|	ВЫБОР
		|		КОГДА МАКСИМУМ(ВЫБОР
		|					КОГДА ХозрасчетныйОбороты.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
		|							И ХозрасчетныйОбороты.СуммаОборотДт > 0
		|						ТОГДА ХозрасчетныйОбороты.Период
		|					КОГДА ХозрасчетныйОбороты.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
		|							И ХозрасчетныйОбороты.СуммаОборотКт > 0
		|						ТОГДА ХозрасчетныйОбороты.Период
		|					КОГДА ХозрасчетныйОбороты.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.АктивноПассивный)
		|						ТОГДА ХозрасчетныйОбороты.Период
		|					ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
		|				КОНЕЦ) <> ДАТАВРЕМЯ(1, 1, 1)
		|			ТОГДА МАКСИМУМ(ВЫБОР
		|						КОГДА ХозрасчетныйОбороты.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
		|								И ХозрасчетныйОбороты.СуммаОборотДт > 0
		|							ТОГДА ХозрасчетныйОбороты.Период
		|						КОГДА ХозрасчетныйОбороты.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
		|								И ХозрасчетныйОбороты.СуммаОборотКт > 0
		|							ТОГДА ХозрасчетныйОбороты.Период
		|						КОГДА ХозрасчетныйОбороты.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.АктивноПассивный)
		|							ТОГДА ХозрасчетныйОбороты.Период
		|						ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
		|					КОНЕЦ)
		|		ИНАЧЕ МАКСИМУМ(ХозрасчетныйОбороты.Период)
		|	КОНЕЦ КАК Период
		|ПОМЕСТИТЬ ВТ_РасчетыСБюджетомПериодыДвиженийПоУровнямБюджета
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(
		|			&НачалоПериода,
		|			&Период,
		|			ДЕНЬ,
		|			Счет В (&СчетаПоВидамПлатежейУровням)
		|				И Счет В (&ВыбранныеСчета),
		|			&СубконтоВидыПлатежейУровни,
		|			Организация В (&Организация),
		|			,
		|			) КАК ХозрасчетныйОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйОбороты.Организация,
		|	ХозрасчетныйОбороты.Счет,
		|	ХозрасчетныйОбороты.Субконто1,
		|	ХозрасчетныйОбороты.Субконто2
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация,
		|	Счет,
		|	Субконто1,
		|	Субконто2");
	КонецЕсли;
	
	////////////////////////////////////////////////////////////////////////////////
	
	Запрос.Текст = СтрСоединить(СтрокиТекстаЗапроса, ОбщегоНазначения.РазделительПакетаЗапросов());
	
	УстановитьПривилегированныйРежим(Истина);
	Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

Процедура СоздатьВременныеТаблицыРасчетыСРаботниками(Запрос, СводныеДанные, ФизическиеЛица = Неопределено)

	МенеджерВременныхТаблиц = Запрос.МенеджерВременныхТаблиц;
	Если МенеджерВременныхТаблиц.Таблицы.Найти("ВТ_РасчетыСРаботниками") <> Неопределено Тогда
		// Таблицы уже созданы ранее.
		Возврат;
	КонецЕсли;

	ТекстыЗапроса = Новый Массив;
	
	// На счетах расчетов по заработной плате учет могут вести сводно (без детализации по субконто Работники).
	// Поэтому фильтр на вид субконто не накладываем, определяем субконто по типу из справочника физических лиц.
	
	ТекстыЗапроса.Добавить(
	"ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Организация КАК Организация,
	|	ХозрасчетныйОстатки.Счет КАК Счет,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОстатки.Субконто1 ССЫЛКА Справочник.ФизическиеЛица
	|			ТОГДА ХозрасчетныйОстатки.Субконто1
	|		КОГДА ХозрасчетныйОстатки.Субконто2 ССЫЛКА Справочник.ФизическиеЛица
	|			ТОГДА ХозрасчетныйОстатки.Субконто2
	|		КОГДА ХозрасчетныйОстатки.Субконто3 ССЫЛКА Справочник.ФизическиеЛица
	|			ТОГДА ХозрасчетныйОстатки.Субконто3
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Субконто1,
	|	ХозрасчетныйОстатки.СуммаРазвернутыйОстатокДт КАК СуммаРазвернутыйОстатокДт,
	|	ХозрасчетныйОстатки.СуммаРазвернутыйОстатокКт КАК СуммаРазвернутыйОстатокКт
	|ПОМЕСТИТЬ ВТ_РасчетыСРаботниками
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&Период,
	|			Счет В (&СчетаПоРаботникам)
	|				И Счет В (&ВыбранныеСчета),
	|			,
	|			Организация В (&Организация)
	|				И &ОтборСубконто1) КАК ХозрасчетныйОстатки");
	
	Если НЕ СводныеДанные Тогда 
		
		// Дата возникновения определяется как последний период по движениям
	
		ТекстыЗапроса.Добавить(
		"ВЫБРАТЬ
		|	ХозрасчетныйОбороты.Организация КАК Организация,
		|	ХозрасчетныйОбороты.Счет КАК Счет,
		|	ВЫБОР
		|		КОГДА ХозрасчетныйОбороты.Субконто1 ССЫЛКА Справочник.ФизическиеЛица
		|			ТОГДА ХозрасчетныйОбороты.Субконто1
		|		КОГДА ХозрасчетныйОбороты.Субконто2 ССЫЛКА Справочник.ФизическиеЛица
		|			ТОГДА ХозрасчетныйОбороты.Субконто2
		|		КОГДА ХозрасчетныйОбороты.Субконто3 ССЫЛКА Справочник.ФизическиеЛица
		|			ТОГДА ХозрасчетныйОбороты.Субконто3
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК Субконто1,
		|	ВЫБОР
		|		КОГДА МАКСИМУМ(ВЫБОР
		|					КОГДА ХозрасчетныйОбороты.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
		|							И ХозрасчетныйОбороты.СуммаОборотДт > 0
		|						ТОГДА ХозрасчетныйОбороты.Период
		|					КОГДА ХозрасчетныйОбороты.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
		|							И ХозрасчетныйОбороты.СуммаОборотКт > 0
		|						ТОГДА ХозрасчетныйОбороты.Период
		|					КОГДА ХозрасчетныйОбороты.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.АктивноПассивный)
		|						ТОГДА ХозрасчетныйОбороты.Период
		|					ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
		|				КОНЕЦ) <> ДАТАВРЕМЯ(1, 1, 1)
		|			ТОГДА МАКСИМУМ(ВЫБОР
		|						КОГДА ХозрасчетныйОбороты.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
		|								И ХозрасчетныйОбороты.СуммаОборотДт > 0
		|							ТОГДА ХозрасчетныйОбороты.Период
		|						КОГДА ХозрасчетныйОбороты.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
		|								И ХозрасчетныйОбороты.СуммаОборотКт > 0
		|							ТОГДА ХозрасчетныйОбороты.Период
		|						КОГДА ХозрасчетныйОбороты.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.АктивноПассивный)
		|							ТОГДА ХозрасчетныйОбороты.Период
		|						ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
		|					КОНЕЦ)
		|		ИНАЧЕ МАКСИМУМ(ХозрасчетныйОбороты.Период)
		|	КОНЕЦ КАК Период
		|ПОМЕСТИТЬ ПериодыДвиженийРасчетыСРаботниками
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(
		|			&НачалоПериода,
		|			&Период,
		|			ДЕНЬ,
		|			Счет В (&СчетаПоРаботникам)
		|				И Счет В (&ВыбранныеСчета),
		|			,
		|			Организация В (&Организация)
		|				И &ОтборСубконто1,
		|			,
		|			) КАК ХозрасчетныйОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйОбороты.Организация,
		|	ХозрасчетныйОбороты.Счет,
		|	ВЫБОР
		|		КОГДА ХозрасчетныйОбороты.Субконто1 ССЫЛКА Справочник.ФизическиеЛица
		|			ТОГДА ХозрасчетныйОбороты.Субконто1
		|		КОГДА ХозрасчетныйОбороты.Субконто2 ССЫЛКА Справочник.ФизическиеЛица
		|			ТОГДА ХозрасчетныйОбороты.Субконто2
		|		КОГДА ХозрасчетныйОбороты.Субконто3 ССЫЛКА Справочник.ФизическиеЛица
		|			ТОГДА ХозрасчетныйОбороты.Субконто3
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация,
		|	Счет,
		|	Субконто1");
		
	КонецЕсли;
	
	Запрос.Текст = СтрСоединить(ТекстыЗапроса, ОбщегоНазначения.РазделительПакетаЗапросов());

	Если ФизическиеЛица = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОтборСубконто1", "ИСТИНА");
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОтборСубконто1", "Субконто1 В(&Субконто1)");
	КонецЕсли;

	УстановитьПривилегированныйРежим(Истина);
	Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);

КонецПроцедуры

Процедура СоздатьВременныеТаблицыКредитыВложения(Запрос, Контрагенты = Неопределено)

	МенеджерВременныхТаблиц = Запрос.МенеджерВременныхТаблиц;
	Если МенеджерВременныхТаблиц.Таблицы.Найти("ВТ_КредитыВложения") <> Неопределено Тогда
		// Таблицы уже созданы ранее.
		Возврат;
	КонецЕсли;

	// Дата возникновения определяется как первый период по движениям
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Организация КАК Организация,
	|	ХозрасчетныйОстатки.Счет КАК СчетРасчетов,
	|	ЕСТЬNULL(ХозрасчетныйОстатки.Субконто1, НЕОПРЕДЕЛЕНО) КАК Субконто1,
	|	ЕСТЬNULL(ХозрасчетныйОстатки.Субконто2, НЕОПРЕДЕЛЕНО) КАК Субконто2,
	|	ХозрасчетныйОстатки.СуммаОстатокДт КАК СуммаОстатокДт,
	|	ХозрасчетныйОстатки.СуммаОстатокКт КАК СуммаОстатокКт
	|ПОМЕСТИТЬ ВТ_КредитыВложения
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&Период,
	|			Счет В (&СчетаКредитыВложения)
	|				И Счет В (&ВыбранныеСчета),
	|			&ВидыСубконтоБезДокументов,
	|			Организация В (&Организация)
	|				И &ОтборСубконто1) КАК ХозрасчетныйОстатки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Организация,
	|	ХозрасчетныйОстатки.Счет,
	|	ЕСТЬNULL(ХозрасчетныйОстатки.Субконто1, НЕОПРЕДЕЛЕНО),
	|	ЕСТЬNULL(ХозрасчетныйОстатки.Субконто2, НЕОПРЕДЕЛЕНО),
	|	ХозрасчетныйОстатки.СуммаОстатокДт,
	|	ХозрасчетныйОстатки.СуммаОстатокКт
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&Период,
	|			Счет В (&СчетаКредитыВложения)
	|				И Счет В (&ВыбранныеСчета),
	|			&ВидыСубконтоКонтрагентыЦенныеБумаги,
	|			Организация В (&Организация)
	|				И &ОтборСубконто1) КАК ХозрасчетныйОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОбороты.Организация КАК Организация,
	|	ХозрасчетныйОбороты.Счет КАК Счет,
	|	ЕСТЬNULL(ХозрасчетныйОбороты.Субконто1, НЕОПРЕДЕЛЕНО) КАК Субконто1,
	|	ЕСТЬNULL(ХозрасчетныйОбороты.Субконто2, НЕОПРЕДЕЛЕНО) КАК Субконто2,
	|	ВЫБОР
	|		КОГДА МИНИМУМ(ВЫБОР
	|					КОГДА ХозрасчетныйОбороты.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
	|							И ХозрасчетныйОбороты.СуммаОборотДт > 0
	|						ТОГДА ХозрасчетныйОбороты.Период
	|					КОГДА ХозрасчетныйОбороты.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
	|							И ХозрасчетныйОбороты.СуммаОборотКт > 0
	|						ТОГДА ХозрасчетныйОбороты.Период
	|					КОГДА ХозрасчетныйОбороты.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.АктивноПассивный)
	|						ТОГДА ХозрасчетныйОбороты.Период
	|					ИНАЧЕ ДАТАВРЕМЯ(2999, 12, 31)
	|				КОНЕЦ) <> ДАТАВРЕМЯ(2999, 12, 31)
	|			ТОГДА МИНИМУМ(ВЫБОР
	|						КОГДА ХозрасчетныйОбороты.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
	|								И ХозрасчетныйОбороты.СуммаОборотДт > 0
	|							ТОГДА ХозрасчетныйОбороты.Период
	|						КОГДА ХозрасчетныйОбороты.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
	|								И ХозрасчетныйОбороты.СуммаОборотКт > 0
	|							ТОГДА ХозрасчетныйОбороты.Период
	|						КОГДА ХозрасчетныйОбороты.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.АктивноПассивный)
	|							ТОГДА ХозрасчетныйОбороты.Период
	|						ИНАЧЕ ДАТАВРЕМЯ(2999, 12, 31)
	|					КОНЕЦ)
	|		ИНАЧЕ МИНИМУМ(ХозрасчетныйОбороты.Период)
	|	КОНЕЦ КАК Период
	|ПОМЕСТИТЬ ПериодыДвиженийКредитыВложения
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&НачалоПериода,
	|			&Период,
	|			ДЕНЬ,
	|			Счет В (&СчетаКредитыВложения)
	|				И Счет В (&ВыбранныеСчета),
	|			,
	|			Организация В (&Организация)
	|				И &ОтборСубконто1,
	|			,
	|			) КАК ХозрасчетныйОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОбороты.Организация,
	|	ХозрасчетныйОбороты.Счет,
	|	ХозрасчетныйОбороты.Субконто1,
	|	ХозрасчетныйОбороты.Субконто2
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	Счет,
	|	Субконто1,
	|	Субконто2
	|";
	
	Если Контрагенты = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОтборСубконто1", "ИСТИНА");
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОтборСубконто1", "Субконто1 В(&Субконто1)");
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

Функция ТекстЗапросаОстаткиЗадолженностиРасчетыСПокупателямиПоставщиками(Контрагенты)
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДанныеРасчетов.Организация КАК Организация,
	|	ДанныеРасчетов.Счет КАК Счет,
	|	ДанныеРасчетов.Субконто1 КАК Субконто1,
	|	ДанныеРасчетов.Субконто2 КАК Субконто2,
	|	ДанныеРасчетов.СрокОплаты КАК СрокОплаты,
	|	ДанныеРасчетов.УстановленСрокОплаты КАК УстановленСрокОплаты,
	|	СУММА(ДанныеРасчетов.Подтверждено) КАК Подтверждено
	|ПОМЕСТИТЬ ОстаткиПоКонтрагентамДоговорам
	|ИЗ
	|	(ВЫБРАТЬ
	|		ХозрасчетныйОстатки.Организация КАК Организация,
	|		ХозрасчетныйОстатки.Субконто1 КАК Субконто1,
	|		ХозрасчетныйОстатки.Субконто2 КАК Субконто2,
	|		ХозрасчетныйОстатки.УстановленСрокОплаты КАК УстановленСрокОплаты,
	|		ХозрасчетныйОстатки.СрокОплаты КАК СрокОплаты,
	|		ВЫБОР
	|			КОГДА &ЭтоДебиторскаяЗадолженность
	|					И ХозрасчетныйОстатки.СуммаРазвернутыйОстатокКт < 0
	|				ТОГДА ХозрасчетныйОстатки.СуммаРазвернутыйОстатокДт - ХозрасчетныйОстатки.СуммаРазвернутыйОстатокКт
	|			КОГДА &ЭтоДебиторскаяЗадолженность
	|				ТОГДА ХозрасчетныйОстатки.СуммаРазвернутыйОстатокДт
	|			КОГДА ХозрасчетныйОстатки.СуммаРазвернутыйОстатокДт < 0
	|				ТОГДА ХозрасчетныйОстатки.СуммаРазвернутыйОстатокКт - ХозрасчетныйОстатки.СуммаРазвернутыйОстатокДт
	|			ИНАЧЕ ХозрасчетныйОстатки.СуммаРазвернутыйОстатокКт
	|		КОНЕЦ КАК Подтверждено,
	|		ХозрасчетныйОстатки.Счет КАК Счет
	|	ИЗ
	|		ВТ_РасчетыСПокупателямиПоставщикамиБезДокументов КАК ХозрасчетныйОстатки
	|	ГДЕ
	|		ХозрасчетныйОстатки.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.АктивноПассивный)
	|		И ВЫБОР
	|			КОГДА &ЭтоДебиторскаяЗадолженность
	|					И ХозрасчетныйОстатки.СуммаРазвернутыйОстатокКт < 0
	|				ТОГДА ХозрасчетныйОстатки.СуммаРазвернутыйОстатокДт - ХозрасчетныйОстатки.СуммаРазвернутыйОстатокКт
	|			КОГДА &ЭтоДебиторскаяЗадолженность
	|				ТОГДА ХозрасчетныйОстатки.СуммаРазвернутыйОстатокДт
	|			КОГДА ХозрасчетныйОстатки.СуммаРазвернутыйОстатокДт < 0
	|				ТОГДА ХозрасчетныйОстатки.СуммаРазвернутыйОстатокКт - ХозрасчетныйОстатки.СуммаРазвернутыйОстатокДт
	|			ИНАЧЕ ХозрасчетныйОстатки.СуммаРазвернутыйОстатокКт
	|		КОНЕЦ <> 0
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ХозрасчетныйОстатки.Организация,
	|		ХозрасчетныйОстатки.Субконто1,
	|		ХозрасчетныйОстатки.Субконто2,
	|		ХозрасчетныйОстатки.УстановленСрокОплаты,
	|		ХозрасчетныйОстатки.СрокОплаты,
	|		ВЫБОР
	|			КОГДА &ЭтоДебиторскаяЗадолженность
	|				ТОГДА ХозрасчетныйОстатки.СуммаРазвернутыйОстатокДт - ХозрасчетныйОстатки.СуммаРазвернутыйОстатокКт
	|			ИНАЧЕ ХозрасчетныйОстатки.СуммаРазвернутыйОстатокКт - ХозрасчетныйОстатки.СуммаРазвернутыйОстатокДт
	|		КОНЕЦ,
	|		ХозрасчетныйОстатки.Счет
	|	ИЗ
	|		ВТ_РасчетыСПокупателямиПоставщикамиБезДокументов КАК ХозрасчетныйОстатки
	|	ГДЕ
	|		ВЫБОР
	|			КОГДА &ЭтоДебиторскаяЗадолженность
	|				ТОГДА ХозрасчетныйОстатки.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
	|			ИНАЧЕ ХозрасчетныйОстатки.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
	|		КОНЕЦ
	|		И ВЫБОР
	|				КОГДА &ЭтоДебиторскаяЗадолженность
	|					ТОГДА ХозрасчетныйОстатки.СуммаРазвернутыйОстатокДт - ХозрасчетныйОстатки.СуммаРазвернутыйОстатокКт
	|				ИНАЧЕ ХозрасчетныйОстатки.СуммаРазвернутыйОстатокКт - ХозрасчетныйОстатки.СуммаРазвернутыйОстатокДт
	|			КОНЕЦ <> 0) КАК ДанныеРасчетов
	|ГДЕ
	|	ДанныеРасчетов.Подтверждено <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеРасчетов.Организация,
	|	ДанныеРасчетов.Субконто1,
	|	ДанныеРасчетов.Субконто2,
	|	ДанныеРасчетов.СрокОплаты,
	|	ДанныеРасчетов.УстановленСрокОплаты,
	|	ДанныеРасчетов.Счет
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	Счет,
	|	Субконто1,
	|	Субконто2
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ХозрасчетныйОстатки.Организация КАК Организация,
	|	ХозрасчетныйОстатки.Счет КАК Счет,
	|	ХозрасчетныйОстатки.Субконто1 КАК Субконто1,
	|	ХозрасчетныйОстатки.Субконто2 КАК Субконто2,
	|	ХозрасчетныйОстатки.Субконто3 КАК Субконто3,
	|	ХозрасчетныйОстатки.УстановленСрокОплаты КАК УстановленСрокОплаты,
	|	ХозрасчетныйОстатки.СрокОплаты КАК СрокОплаты,
	|	ХозрасчетныйОстатки.ИспользуютсяСрокиОплаты КАК ИспользуютсяСрокиОплаты,
	|	ХозрасчетныйОстатки.ДатаВозникновения КАК ДатаВозникновения,
	|	ХозрасчетныйОстатки.ДатаПогашения КАК ДатаПогашения,
	|	ВЫБОР
	|		КОГДА &ЭтоДебиторскаяЗадолженность
	|				И ХозрасчетныйОстатки.СуммаРазвернутыйОстатокКт < 0
	|			ТОГДА ХозрасчетныйОстатки.СуммаРазвернутыйОстатокДт - ХозрасчетныйОстатки.СуммаРазвернутыйОстатокКт
	|		КОГДА &ЭтоДебиторскаяЗадолженность
	|			ТОГДА ХозрасчетныйОстатки.СуммаРазвернутыйОстатокДт
	|		КОГДА ХозрасчетныйОстатки.СуммаРазвернутыйОстатокДт < 0
	|			ТОГДА ХозрасчетныйОстатки.СуммаРазвернутыйОстатокКт - ХозрасчетныйОстатки.СуммаРазвернутыйОстатокДт
	|		ИНАЧЕ ХозрасчетныйОстатки.СуммаРазвернутыйОстатокКт
	|	КОНЕЦ КАК Подтверждено
	|ПОМЕСТИТЬ ПредварительныеДанныеПоДокументам
	|ИЗ
	|	ВТ_РасчетыСПокупателямиПоставщикамиCДокументами КАК ХозрасчетныйОстатки
	|ГДЕ
	|	ХозрасчетныйОстатки.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.АктивноПассивный)
	|	И ВЫБОР
	|		КОГДА &ЭтоДебиторскаяЗадолженность
	|				И ХозрасчетныйОстатки.СуммаРазвернутыйОстатокКт < 0
	|			ТОГДА ХозрасчетныйОстатки.СуммаРазвернутыйОстатокДт - ХозрасчетныйОстатки.СуммаРазвернутыйОстатокКт
	|		КОГДА &ЭтоДебиторскаяЗадолженность
	|			ТОГДА ХозрасчетныйОстатки.СуммаРазвернутыйОстатокДт
	|		КОГДА ХозрасчетныйОстатки.СуммаРазвернутыйОстатокДт < 0
	|			ТОГДА ХозрасчетныйОстатки.СуммаРазвернутыйОстатокКт - ХозрасчетныйОстатки.СуммаРазвернутыйОстатокДт
	|		ИНАЧЕ ХозрасчетныйОстатки.СуммаРазвернутыйОстатокКт
	|	КОНЕЦ <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Организация,
	|	ХозрасчетныйОстатки.Счет,
	|	ХозрасчетныйОстатки.Субконто1,
	|	ХозрасчетныйОстатки.Субконто2,
	|	ХозрасчетныйОстатки.Субконто3,
	|	ХозрасчетныйОстатки.УстановленСрокОплаты,
	|	ХозрасчетныйОстатки.СрокОплаты,
	|	ХозрасчетныйОстатки.ИспользуютсяСрокиОплаты,
	|	ХозрасчетныйОстатки.ДатаВозникновения КАК ДатаВозникновения,
	|	ХозрасчетныйОстатки.ДатаПогашения КАК ДатаПогашения,
	|	ВЫБОР
	|		КОГДА &ЭтоДебиторскаяЗадолженность
	|			ТОГДА ХозрасчетныйОстатки.СуммаРазвернутыйОстатокДт - ХозрасчетныйОстатки.СуммаРазвернутыйОстатокКт
	|		ИНАЧЕ ХозрасчетныйОстатки.СуммаРазвернутыйОстатокКт - ХозрасчетныйОстатки.СуммаРазвернутыйОстатокДт
	|	КОНЕЦ
	|ИЗ
	|	ВТ_РасчетыСПокупателямиПоставщикамиCДокументами КАК ХозрасчетныйОстатки
	|ГДЕ
	|	ВЫБОР
	|		КОГДА &ЭтоДебиторскаяЗадолженность
	|			ТОГДА ХозрасчетныйОстатки.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
	|		ИНАЧЕ ХозрасчетныйОстатки.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
	|	КОНЕЦ
	|	И ВЫБОР
	|		КОГДА &ЭтоДебиторскаяЗадолженность
	|			ТОГДА ХозрасчетныйОстатки.СуммаРазвернутыйОстатокДт - ХозрасчетныйОстатки.СуммаРазвернутыйОстатокКт
	|		ИНАЧЕ ХозрасчетныйОстатки.СуммаРазвернутыйОстатокКт - ХозрасчетныйОстатки.СуммаРазвернутыйОстатокДт
	|	КОНЕЦ <> 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	Счет,
	|	Субконто1,
	|	Субконто2
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПредварительныеДанныеПоДокументам.Организация КАК Организация,
	|	ПредварительныеДанныеПоДокументам.Счет КАК СчетРасчетов,
	|	ПредварительныеДанныеПоДокументам.Субконто1 КАК Субконто1,
	|	ПредварительныеДанныеПоДокументам.Субконто2 КАК Субконто2,
	|	ПредварительныеДанныеПоДокументам.Субконто3 КАК Субконто3,
	|	ПредварительныеДанныеПоДокументам.СрокОплаты КАК СрокОплаты,
	|	ПредварительныеДанныеПоДокументам.УстановленСрокОплаты КАК УстановленСрокОплаты,
	|	ПредварительныеДанныеПоДокументам.ИспользуютсяСрокиОплаты КАК ИспользуютсяСрокиОплаты,
	|	ПредварительныеДанныеПоДокументам.ДатаВозникновения КАК ДатаВозникновения,
	|	ПредварительныеДанныеПоДокументам.ДатаПогашения КАК ДатаПогашения,
	|	ПредварительныеДанныеПоДокументам.Подтверждено КАК Подтверждено
	|ПОМЕСТИТЬ ВТ_ОстаткиПоДокументам
	|ИЗ
	|	ПредварительныеДанныеПоДокументам КАК ПредварительныеДанныеПоДокументам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОстаткиПоКонтрагентамДоговорам КАК ОстаткиПоКонтрагентамДоговорам
	|		ПО ПредварительныеДанныеПоДокументам.Организация = ОстаткиПоКонтрагентамДоговорам.Организация
	|			И ПредварительныеДанныеПоДокументам.Счет = ОстаткиПоКонтрагентамДоговорам.Счет
	|			И ПредварительныеДанныеПоДокументам.Субконто1 = ОстаткиПоКонтрагентамДоговорам.Субконто1
	|			И ПредварительныеДанныеПоДокументам.Субконто2 = ОстаткиПоКонтрагентамДоговорам.Субконто2
	|ГДЕ
	|	ВЫБОР
	|			КОГДА ПредварительныеДанныеПоДокументам.Счет В (&СчетаРасчетовПереносСальдо)
	|					И ОстаткиПоКонтрагентамДоговорам.Подтверждено < 0
	|				ТОГДА ЛОЖЬ
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	СчетРасчетов,
	|	Субконто1,
	|	Субконто2
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПредварительныеДанныеПоДокументам
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ОстаткиПоДокументам.Организация КАК Организация,
	|	ВТ_ОстаткиПоДокументам.СчетРасчетов КАК СчетРасчетов,
	|	ВТ_ОстаткиПоДокументам.Субконто1 КАК Субконто1,
	|	ВТ_ОстаткиПоДокументам.Субконто2 КАК Субконто2,
	|	СУММА(ВТ_ОстаткиПоДокументам.Подтверждено) КАК Подтверждено
	|ПОМЕСТИТЬ ОстаткиПоДокументамПредварительные
	|ИЗ
	|	ВТ_ОстаткиПоДокументам КАК ВТ_ОстаткиПоДокументам
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ОстаткиПоДокументам.Организация,
	|	ВТ_ОстаткиПоДокументам.СчетРасчетов,
	|	ВТ_ОстаткиПоДокументам.Субконто1,
	|	ВТ_ОстаткиПоДокументам.Субконто2
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	СчетРасчетов,
	|	Субконто1,
	|	Субконто2
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиПоКонтрагентамДоговорам.Организация КАК Организация,
	|	ОстаткиПоКонтрагентамДоговорам.Счет КАК Счет,
	|	ЕСТЬNULL(ОстаткиПоКонтрагентамДоговорам.Субконто1, НЕОПРЕДЕЛЕНО) КАК Субконто1,
	|	ЕСТЬNULL(ОстаткиПоКонтрагентамДоговорам.Субконто2, НЕОПРЕДЕЛЕНО) КАК Субконто2,
	|	ОстаткиПоКонтрагентамДоговорам.УстановленСрокОплаты КАК УстановленСрокОплаты,
	|	ОстаткиПоКонтрагентамДоговорам.СрокОплаты КАК СрокОплаты,
	|	ОстаткиПоКонтрагентамДоговорам.Подтверждено - ЕСТЬNULL(ОстаткиПоДокументам.Подтверждено, 0) КАК Подтверждено
	|ПОМЕСТИТЬ ОстаткиПоДоговорамБезДокументов
	|ИЗ
	|	ОстаткиПоКонтрагентамДоговорам КАК ОстаткиПоКонтрагентамДоговорам
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиПоДокументамПредварительные КАК ОстаткиПоДокументам
	|		ПО ОстаткиПоКонтрагентамДоговорам.Организация = ОстаткиПоДокументам.Организация
	|			И ОстаткиПоКонтрагентамДоговорам.Счет = ОстаткиПоДокументам.СчетРасчетов
	|			И ОстаткиПоКонтрагентамДоговорам.Субконто1 = ОстаткиПоДокументам.Субконто1
	|			И ОстаткиПоКонтрагентамДоговорам.Субконто2 = ОстаткиПоДокументам.Субконто2
	|ГДЕ
	|	ВЫБОР
	|			КОГДА ОстаткиПоКонтрагентамДоговорам.Счет В (&СчетаРасчетовПереносСальдо)
	|					И ОстаткиПоКонтрагентамДоговорам.Подтверждено < 0
	|				ТОГДА ОстаткиПоКонтрагентамДоговорам.Подтверждено - ЕСТЬNULL(ОстаткиПоДокументам.Подтверждено, 0) > 0
	|			ИНАЧЕ ОстаткиПоКонтрагентамДоговорам.Подтверждено - ЕСТЬNULL(ОстаткиПоДокументам.Подтверждено, 0) <> 0
	|		КОНЕЦ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	Счет,
	|	Субконто1,
	|	Субконто2
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ОстаткиПоКонтрагентамДоговорам
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ОстаткиПоДокументамПредварительные
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ОстаткиПоДокументам.Организация КАК Организация,
	|	ВТ_ОстаткиПоДокументам.СчетРасчетов КАК СчетРасчетов,
	|	ВТ_ОстаткиПоДокументам.Субконто1 КАК Субконто1,
	|	ВТ_ОстаткиПоДокументам.Субконто2 КАК Субконто2,
	|	ВТ_ОстаткиПоДокументам.Субконто3 КАК Субконто3,
	|	ВТ_ОстаткиПоДокументам.Подтверждено КАК Подтверждено,
	|	ВТ_ОстаткиПоДокументам.ДатаВозникновения КАК ДатаВозникновения,
	|	ВТ_ОстаткиПоДокументам.ДатаПогашения КАК ДатаПогашения,
	|	МАКСИМУМ(ПроведенныеАкты.Дата) КАК ДатаАкта
	|ПОМЕСТИТЬ МаксимальныеДатыПоДокументам
	|ИЗ
	|	ВТ_ОстаткиПоДокументам КАК ВТ_ОстаткиПоДокументам
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПроведенныеАкты КАК ПроведенныеАкты
	|		ПО ВТ_ОстаткиПоДокументам.Организация = ПроведенныеАкты.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИнвентаризацияРасчетовСКонтрагентами.ДетальныеЗаписи КАК ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи
	|		ПО (ПроведенныеАкты.Ссылка = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.Ссылка)
	|			И ВТ_ОстаткиПоДокументам.СчетРасчетов = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.СчетРасчетов
	|			И ВТ_ОстаткиПоДокументам.Субконто1 = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.Субконто1
	|			И ВТ_ОстаткиПоДокументам.Субконто2 = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.Субконто2
	|			И ВТ_ОстаткиПоДокументам.Субконто3 = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.Субконто3
	|			И (&ВидЗадолженности = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.ВидЗадолженности)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ОстаткиПоДокументам.Организация,
	|	ВТ_ОстаткиПоДокументам.СчетРасчетов,
	|	ВТ_ОстаткиПоДокументам.Субконто1,
	|	ВТ_ОстаткиПоДокументам.Субконто2,
	|	ВТ_ОстаткиПоДокументам.Субконто3,
	|	ВТ_ОстаткиПоДокументам.Подтверждено,
	|	ВТ_ОстаткиПоДокументам.ДатаВозникновения,
	|	ВТ_ОстаткиПоДокументам.ДатаПогашения
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ДатаАкта,
	|	СчетРасчетов,
	|	Субконто1,
	|	Субконто2,
	|	Субконто3
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_ОстаткиПоДокументам
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МаксимальныеДатыПоДокументам.Организация КАК Организация,
	|	МаксимальныеДатыПоДокументам.СчетРасчетов КАК СчетРасчетов,
	|	МаксимальныеДатыПоДокументам.Субконто1 КАК Субконто1,
	|	МаксимальныеДатыПоДокументам.Субконто2 КАК Субконто2,
	|	МаксимальныеДатыПоДокументам.Субконто3 КАК Субконто3,
	|	МаксимальныеДатыПоДокументам.Подтверждено КАК Подтверждено,
	|	МаксимальныеДатыПоДокументам.ДатаВозникновения КАК ДатаВозникновения,
	|	МаксимальныеДатыПоДокументам.ДатаПогашения КАК ДатаПогашения,
	|	МАКСИМУМ(ПроведенныеАкты.Ссылка) КАК СсылкаНаДокумент
	|ПОМЕСТИТЬ ПредварительныеДанныеПоДокументам
	|ИЗ
	|	МаксимальныеДатыПоДокументам КАК МаксимальныеДатыПоДокументам
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПроведенныеАкты КАК ПроведенныеАкты
	|		ПО (МаксимальныеДатыПоДокументам.Организация = ПроведенныеАкты.Организация)
	|			И (МаксимальныеДатыПоДокументам.ДатаАкта = ПроведенныеАкты.Дата)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИнвентаризацияРасчетовСКонтрагентами.ДетальныеЗаписи КАК ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи
	|		ПО (ПроведенныеАкты.Ссылка = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.Ссылка)
	|			И МаксимальныеДатыПоДокументам.СчетРасчетов = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.СчетРасчетов
	|			И МаксимальныеДатыПоДокументам.Субконто1 = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.Субконто1
	|			И МаксимальныеДатыПоДокументам.Субконто2 = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.Субконто2
	|			И МаксимальныеДатыПоДокументам.Субконто3 = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.Субконто3
	|			И (&ВидЗадолженности = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.ВидЗадолженности)
	|
	|СГРУППИРОВАТЬ ПО
	|	МаксимальныеДатыПоДокументам.Организация,
	|	МаксимальныеДатыПоДокументам.СчетРасчетов,
	|	МаксимальныеДатыПоДокументам.Субконто1,
	|	МаксимальныеДатыПоДокументам.Субконто2,
	|	МаксимальныеДатыПоДокументам.Субконто3,
	|	МаксимальныеДатыПоДокументам.Подтверждено,
	|	МаксимальныеДатыПоДокументам.ДатаВозникновения,
	|	МаксимальныеДатыПоДокументам.ДатаПогашения
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СсылкаНаДокумент,
	|	СчетРасчетов,
	|	Субконто1,
	|	Субконто2,
	|	Субконто3
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ МаксимальныеДатыПоДокументам
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПредварительныеДанныеПоДокументам.Организация КАК Организация,
	|	ПредварительныеДанныеПоДокументам.СчетРасчетов КАК СчетРасчетов,
	|	ПредварительныеДанныеПоДокументам.Субконто1 КАК Субконто1,
	|	ПредварительныеДанныеПоДокументам.Субконто2 КАК Субконто2,
	|	ПредварительныеДанныеПоДокументам.Субконто3 КАК Субконто3,
	|	ПредварительныеДанныеПоДокументам.Подтверждено КАК Подтверждено,
	|	ВЫБОР
	|		КОГДА МИНИМУМ(ЕСТЬNULL(ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.ДатаВозникновения, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0))) <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА МИНИМУМ(ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.ДатаВозникновения)
	|		ИНАЧЕ ПредварительныеДанныеПоДокументам.ДатаВозникновения
	|	КОНЕЦ КАК ДатаВозникновения,
	|	ВЫБОР
	|		КОГДА МАКСИМУМ(ЕСТЬNULL(ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.ДатаПогашения, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0))) <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА МАКСИМУМ(ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.ДатаПогашения)
	|		ИНАЧЕ ПредварительныеДанныеПоДокументам.ДатаПогашения
	|	КОНЕЦ КАК ДатаПогашения,
	|	&ВидЗадолженности КАК ВидЗадолженности,
	|	МАКСИМУМ(ЕСТЬNULL(ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.Комментарий, """")) КАК Комментарий,
	|	ВЫРАЗИТЬ(ПредварительныеДанныеПоДокументам.СчетРасчетов КАК ПланСчетов.Хозрасчетный).Порядок КАК ПорядокСчета
	|ИЗ
	|	ПредварительныеДанныеПоДокументам КАК ПредварительныеДанныеПоДокументам
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИнвентаризацияРасчетовСКонтрагентами.ДетальныеЗаписи КАК ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи
	|		ПО ПредварительныеДанныеПоДокументам.СсылкаНаДокумент = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.Ссылка
	|			И ПредварительныеДанныеПоДокументам.СчетРасчетов = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.СчетРасчетов
	|			И ПредварительныеДанныеПоДокументам.Субконто1 = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.Субконто1
	|			И ПредварительныеДанныеПоДокументам.Субконто2 = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.Субконто2
	|			И ПредварительныеДанныеПоДокументам.Субконто3 = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.Субконто3
	|			И (&ВидЗадолженности = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.ВидЗадолженности)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПредварительныеДанныеПоДокументам.Организация,
	|	ПредварительныеДанныеПоДокументам.СчетРасчетов,
	|	ПредварительныеДанныеПоДокументам.Субконто1,
	|	ПредварительныеДанныеПоДокументам.Субконто2,
	|	ПредварительныеДанныеПоДокументам.Субконто3,
	|	ПредварительныеДанныеПоДокументам.Подтверждено,
	|	ПредварительныеДанныеПоДокументам.ДатаВозникновения,
	|	ПредварительныеДанныеПоДокументам.ДатаПогашения
	|
	|УПОРЯДОЧИТЬ ПО
	|	СчетРасчетов,
	|	Субконто1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПредварительныеДанныеПоДокументам
	|;
	|
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиПоДоговорамБезДокументов.Организация КАК Организация,
	|	ОстаткиПоДоговорамБезДокументов.Счет КАК СчетРасчетов,
	|	ОстаткиПоДоговорамБезДокументов.Субконто1 КАК Субконто1,
	|	ОстаткиПоДоговорамБезДокументов.Субконто2 КАК Субконто2,
	|	ОстаткиПоДоговорамБезДокументов.Подтверждено КАК Подтверждено,
	|	ЕСТЬNULL(ПериодыДвижений.Период, &НачалоПериода) КАК ДатаВозникновения,
	|	ВЫБОР
	|		КОГДА НЕ ОстаткиПоДоговорамБезДокументов.УстановленСрокОплаты
	|			ТОГДА ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|		ИНАЧЕ ДОБАВИТЬКДАТЕ(ЕСТЬNULL(ПериодыДвижений.Период, &НачалоПериода), ДЕНЬ, ОстаткиПоДоговорамБезДокументов.СрокОплаты)
	|	КОНЕЦ КАК ДатаПогашения
	|ПОМЕСТИТЬ ДанныеПоДоговорам
	|ИЗ
	|	ОстаткиПоДоговорамБезДокументов КАК ОстаткиПоДоговорамБезДокументов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПериодыДвиженийРасчетыСПокупателямиПоставщиками КАК ПериодыДвижений
	|		ПО ОстаткиПоДоговорамБезДокументов.Организация = ПериодыДвижений.Организация
	|			И ОстаткиПоДоговорамБезДокументов.Счет = ПериодыДвижений.Счет
	|			И ОстаткиПоДоговорамБезДокументов.Субконто1 = ПериодыДвижений.Субконто1
	|			И ОстаткиПоДоговорамБезДокументов.Субконто2 = ПериодыДвижений.Субконто2
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	СчетРасчетов,
	|	Субконто1,
	|	Субконто2
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ОстаткиПоДоговорамБезДокументов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеПоДоговорам.Организация КАК Организация,
	|	ДанныеПоДоговорам.СчетРасчетов КАК СчетРасчетов,
	|	ДанныеПоДоговорам.Субконто1 КАК Субконто1,
	|	ДанныеПоДоговорам.Субконто2 КАК Субконто2,
	|	ДанныеПоДоговорам.Подтверждено КАК Подтверждено,
	|	ДанныеПоДоговорам.ДатаВозникновения КАК ДатаВозникновения,
	|	ДанныеПоДоговорам.ДатаПогашения КАК ДатаПогашения,
	|	МАКСИМУМ(ПроведенныеАкты.Дата) КАК ДатаАкта
	|ПОМЕСТИТЬ МаксимальныеДатыПоДокументам
	|ИЗ
	|	ДанныеПоДоговорам КАК ДанныеПоДоговорам
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПроведенныеАкты КАК ПроведенныеАкты
	|		ПО (ДанныеПоДоговорам.Организация = ПроведенныеАкты.Организация)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИнвентаризацияРасчетовСКонтрагентами.ДетальныеЗаписи КАК ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи
	|		ПО (ПроведенныеАкты.Ссылка = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.Ссылка)
	|			И ДанныеПоДоговорам.СчетРасчетов = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.СчетРасчетов
	|			И ДанныеПоДоговорам.Субконто1 = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.Субконто1
	|			И ДанныеПоДоговорам.Субконто2 = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.Субконто2
	|			И (&ВидЗадолженности = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.ВидЗадолженности)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеПоДоговорам.Организация,
	|	ДанныеПоДоговорам.СчетРасчетов,
	|	ДанныеПоДоговорам.Субконто1,
	|	ДанныеПоДоговорам.Субконто2,
	|	ДанныеПоДоговорам.Подтверждено,
	|	ДанныеПоДоговорам.ДатаВозникновения,
	|	ДанныеПоДоговорам.ДатаПогашения
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ДатаАкта,
	|	СчетРасчетов,
	|	Субконто1,
	|	Субконто2
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ДанныеПоДоговорам
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МаксимальныеДатыПоДокументам.Организация КАК Организация,
	|	МаксимальныеДатыПоДокументам.СчетРасчетов КАК СчетРасчетов,
	|	МаксимальныеДатыПоДокументам.Субконто1 КАК Субконто1,
	|	МаксимальныеДатыПоДокументам.Субконто2 КАК Субконто2,
	|	МаксимальныеДатыПоДокументам.Подтверждено КАК Подтверждено,
	|	МаксимальныеДатыПоДокументам.ДатаВозникновения КАК ДатаВозникновения,
	|	МаксимальныеДатыПоДокументам.ДатаПогашения КАК ДатаПогашения,
	|	МАКСИМУМ(ПроведенныеАкты.Ссылка) КАК СсылкаНаДокумент
	|ПОМЕСТИТЬ ПредварительныеДанныеПоДоговорам
	|ИЗ
	|	МаксимальныеДатыПоДокументам КАК МаксимальныеДатыПоДокументам
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПроведенныеАкты КАК ПроведенныеАкты
	|		ПО (МаксимальныеДатыПоДокументам.Организация = ПроведенныеАкты.Организация)
	|			И (МаксимальныеДатыПоДокументам.ДатаАкта = ПроведенныеАкты.Дата)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИнвентаризацияРасчетовСКонтрагентами.ДетальныеЗаписи КАК ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи
	|		ПО (ПроведенныеАкты.Ссылка = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.Ссылка)
	|			И МаксимальныеДатыПоДокументам.СчетРасчетов = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.СчетРасчетов
	|			И МаксимальныеДатыПоДокументам.Субконто1 = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.Субконто1
	|			И МаксимальныеДатыПоДокументам.Субконто2 = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.Субконто2
	|			И (&ВидЗадолженности = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.ВидЗадолженности)
	|
	|СГРУППИРОВАТЬ ПО
	|	МаксимальныеДатыПоДокументам.Организация,
	|	МаксимальныеДатыПоДокументам.СчетРасчетов,
	|	МаксимальныеДатыПоДокументам.Субконто1,
	|	МаксимальныеДатыПоДокументам.Субконто2,
	|	МаксимальныеДатыПоДокументам.Подтверждено,
	|	МаксимальныеДатыПоДокументам.ДатаВозникновения,
	|	МаксимальныеДатыПоДокументам.ДатаПогашения
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СсылкаНаДокумент,
	|	СчетРасчетов,
	|	Субконто1,
	|	Субконто2
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ МаксимальныеДатыПоДокументам
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПредварительныеДанныеПоДоговорам.Организация КАК Организация,
	|	ПредварительныеДанныеПоДоговорам.СчетРасчетов КАК СчетРасчетов,
	|	ПредварительныеДанныеПоДоговорам.Субконто1 КАК Субконто1,
	|	ПредварительныеДанныеПоДоговорам.Субконто2 КАК Субконто2,
	|	ПредварительныеДанныеПоДоговорам.Подтверждено КАК Подтверждено,
	|	ВЫБОР
	|		КОГДА МИНИМУМ(ЕСТЬNULL(ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.ДатаВозникновения, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0))) <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА МИНИМУМ(ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.ДатаВозникновения)
	|		ИНАЧЕ ПредварительныеДанныеПоДоговорам.ДатаВозникновения
	|	КОНЕЦ КАК ДатаВозникновения,
	|	ВЫБОР
	|		КОГДА МАКСИМУМ(ЕСТЬNULL(ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.ДатаПогашения, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0))) <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА МАКСИМУМ(ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.ДатаПогашения)
	|		ИНАЧЕ ПредварительныеДанныеПоДоговорам.ДатаПогашения
	|	КОНЕЦ КАК ДатаПогашения,
	|	&ВидЗадолженности КАК ВидЗадолженности,
	|	МАКСИМУМ(ЕСТЬNULL(ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.Комментарий, """")) КАК Комментарий,
	|	ВЫРАЗИТЬ(ПредварительныеДанныеПоДоговорам.СчетРасчетов КАК ПланСчетов.Хозрасчетный).Порядок КАК ПорядокСчета
	|ИЗ
	|	ПредварительныеДанныеПоДоговорам КАК ПредварительныеДанныеПоДоговорам
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИнвентаризацияРасчетовСКонтрагентами.ДетальныеЗаписи КАК ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи
	|		ПО ПредварительныеДанныеПоДоговорам.СсылкаНаДокумент = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.Ссылка
	|			И ПредварительныеДанныеПоДоговорам.СчетРасчетов = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.СчетРасчетов
	|			И ПредварительныеДанныеПоДоговорам.Субконто1 = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.Субконто1
	|			И ПредварительныеДанныеПоДоговорам.Субконто2 = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.Субконто2
	|			И (&ВидЗадолженности = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.ВидЗадолженности)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПредварительныеДанныеПоДоговорам.Организация,
	|	ПредварительныеДанныеПоДоговорам.СчетРасчетов,
	|	ПредварительныеДанныеПоДоговорам.Субконто1,
	|	ПредварительныеДанныеПоДоговорам.Субконто2,
	|	ПредварительныеДанныеПоДоговорам.Подтверждено,
	|	ПредварительныеДанныеПоДоговорам.ДатаВозникновения,
	|	ПредварительныеДанныеПоДоговорам.ДатаПогашения
	|
	|УПОРЯДОЧИТЬ ПО
	|	СчетРасчетов,
	|	Субконто1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПредварительныеДанныеПоДоговорам";
	
	Если Контрагенты = Неопределено Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОтборСубконто1", "ИСТИНА");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОтборСубконто1", "Субконто1 В(&Субконто1)");
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаОстаткиЗадолженностиПрочиеКонтрагенты()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПредварительныеДанные.Организация КАК Организация,
	|	ПредварительныеДанные.СчетРасчетов КАК СчетРасчетов,
	|	ПредварительныеДанные.Субконто1 КАК Субконто1,
	|	СУММА(ПредварительныеДанные.Подтверждено) КАК Подтверждено,
	|	ПредварительныеДанные.ДатаВозникновения КАК ДатаВозникновения
	|ПОМЕСТИТЬ ОстаткиПрочие
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВТ_РасчетыСПрочимиКонтрагентами.Организация КАК Организация,
	|		ВТ_РасчетыСПрочимиКонтрагентами.СчетРасчетов КАК СчетРасчетов,
	|		ВТ_РасчетыСПрочимиКонтрагентами.Субконто1 КАК Субконто1,
	|		ВЫБОР
	|			КОГДА &ЭтоДебиторскаяЗадолженность
	|				ТОГДА ВТ_РасчетыСПрочимиКонтрагентами.СуммаРазвернутыйОстатокДт - ВТ_РасчетыСПрочимиКонтрагентами.СуммаРазвернутыйОстатокКт
	|			ИНАЧЕ ВТ_РасчетыСПрочимиКонтрагентами.СуммаРазвернутыйОстатокКт - ВТ_РасчетыСПрочимиКонтрагентами.СуммаРазвернутыйОстатокДт
	|		КОНЕЦ КАК Подтверждено,
	|		ЕСТЬNULL(ПериодыДвижений.Период, &НачалоПериода) КАК ДатаВозникновения
	|	ИЗ
	|		ВТ_РасчетыСПрочимиКонтрагентами КАК ВТ_РасчетыСПрочимиКонтрагентами
	|			ЛЕВОЕ СОЕДИНЕНИЕ ПериодыДвиженийРасчетыСПрочимиКонтрагентами КАК ПериодыДвижений
	|			ПО ВТ_РасчетыСПрочимиКонтрагентами.Организация = ПериодыДвижений.Организация
	|				И ВТ_РасчетыСПрочимиКонтрагентами.СчетРасчетов = ПериодыДвижений.Счет
	|				И ВТ_РасчетыСПрочимиКонтрагентами.Субконто1 = ПериодыДвижений.Субконто1
	|	ГДЕ
	|		ВЫБОР
	|				КОГДА &ЭтоДебиторскаяЗадолженность
	|					ТОГДА ВТ_РасчетыСПрочимиКонтрагентами.ВидСчета = ЗНАЧЕНИЕ(ВидСчета.Активный)
	|				ИНАЧЕ ВТ_РасчетыСПрочимиКонтрагентами.ВидСчета = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
	|			КОНЕЦ
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ВТ_РасчетыСПрочимиКонтрагентами.Организация,
	|		ВТ_РасчетыСПрочимиКонтрагентами.СчетРасчетов,
	|		ВТ_РасчетыСПрочимиКонтрагентами.Субконто1,
	|		ВЫБОР
	|			КОГДА &ЭтоДебиторскаяЗадолженность
	|				ТОГДА ВТ_РасчетыСПрочимиКонтрагентами.СуммаРазвернутыйОстатокДт - ВТ_РасчетыСПрочимиКонтрагентами.СуммаРазвернутыйОстатокКт
	|			ИНАЧЕ ВТ_РасчетыСПрочимиКонтрагентами.СуммаРазвернутыйОстатокКт - ВТ_РасчетыСПрочимиКонтрагентами.СуммаРазвернутыйОстатокДт
	|		КОНЕЦ,
	|		ЕСТЬNULL(ПериодыДвижений.Период, &НачалоПериода)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВТ_РасчетыСПрочимиКонтрагентами.Организация,
	|		ВТ_РасчетыСПрочимиКонтрагентами.СчетРасчетов,
	|		ВТ_РасчетыСПрочимиКонтрагентами.Субконто1,
	|		ВЫБОР
	|			КОГДА &ЭтоДебиторскаяЗадолженность
	|					И ВТ_РасчетыСПрочимиКонтрагентами.СуммаРазвернутыйОстатокКт < 0
	|				ТОГДА ВТ_РасчетыСПрочимиКонтрагентами.СуммаРазвернутыйОстатокДт - ВТ_РасчетыСПрочимиКонтрагентами.СуммаРазвернутыйОстатокКт
	|			КОГДА &ЭтоДебиторскаяЗадолженность
	|				ТОГДА ВТ_РасчетыСПрочимиКонтрагентами.СуммаРазвернутыйОстатокДт
	|			КОГДА ВТ_РасчетыСПрочимиКонтрагентами.СуммаРазвернутыйОстатокДт < 0
	|				ТОГДА ВТ_РасчетыСПрочимиКонтрагентами.СуммаРазвернутыйОстатокКт - ВТ_РасчетыСПрочимиКонтрагентами.СуммаРазвернутыйОстатокДт
	|			ИНАЧЕ ВТ_РасчетыСПрочимиКонтрагентами.СуммаРазвернутыйОстатокКт
	|		КОНЕЦ,
	|		ЕСТЬNULL(ПериодыДвижений.Период, &НачалоПериода)
	|	ИЗ
	|		ВТ_РасчетыСПрочимиКонтрагентами КАК ВТ_РасчетыСПрочимиКонтрагентами
	|			ЛЕВОЕ СОЕДИНЕНИЕ ПериодыДвиженийРасчетыСПрочимиКонтрагентами КАК ПериодыДвижений
	|			ПО ВТ_РасчетыСПрочимиКонтрагентами.Организация = ПериодыДвижений.Организация
	|				И ВТ_РасчетыСПрочимиКонтрагентами.СчетРасчетов = ПериодыДвижений.Счет
	|				И ВТ_РасчетыСПрочимиКонтрагентами.Субконто1 = ПериодыДвижений.Субконто1
	|	ГДЕ
	|		ВТ_РасчетыСПрочимиКонтрагентами.ВидСчета = ЗНАЧЕНИЕ(ВидСчета.АктивноПассивный)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ВТ_РасчетыСПрочимиКонтрагентами.Организация,
	|		ВТ_РасчетыСПрочимиКонтрагентами.СчетРасчетов,
	|		ВТ_РасчетыСПрочимиКонтрагентами.Субконто1,
	|		ВЫБОР
	|			КОГДА &ЭтоДебиторскаяЗадолженность
	|					И ВТ_РасчетыСПрочимиКонтрагентами.СуммаРазвернутыйОстатокКт < 0
	|				ТОГДА ВТ_РасчетыСПрочимиКонтрагентами.СуммаРазвернутыйОстатокДт - ВТ_РасчетыСПрочимиКонтрагентами.СуммаРазвернутыйОстатокКт
	|			КОГДА &ЭтоДебиторскаяЗадолженность
	|				ТОГДА ВТ_РасчетыСПрочимиКонтрагентами.СуммаРазвернутыйОстатокДт
	|			КОГДА ВТ_РасчетыСПрочимиКонтрагентами.СуммаРазвернутыйОстатокДт < 0
	|				ТОГДА ВТ_РасчетыСПрочимиКонтрагентами.СуммаРазвернутыйОстатокКт - ВТ_РасчетыСПрочимиКонтрагентами.СуммаРазвернутыйОстатокДт
	|			ИНАЧЕ ВТ_РасчетыСПрочимиКонтрагентами.СуммаРазвернутыйОстатокКт
	|		КОНЕЦ,
	|		ЕСТЬNULL(ПериодыДвижений.Период, &НачалоПериода)) КАК ПредварительныеДанные
	|ГДЕ
	|	ПредварительныеДанные.Подтверждено <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ПредварительныеДанные.Организация,
	|	ПредварительныеДанные.СчетРасчетов,
	|	ПредварительныеДанные.Субконто1,
	|	ПредварительныеДанные.ДатаВозникновения
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПредварительныеДанные.Организация,
	|	ПредварительныеДанные.СчетРасчетов,
	|	ПредварительныеДанные.Субконто1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиПрочие.Организация КАК Организация,
	|	ОстаткиПрочие.СчетРасчетов КАК СчетРасчетов,
	|	ОстаткиПрочие.Субконто1 КАК Субконто1,
	|	ОстаткиПрочие.Подтверждено КАК Подтверждено,
	|	ОстаткиПрочие.ДатаВозникновения КАК ДатаВозникновения,
	|	МАКСИМУМ(ПроведенныеАкты.Дата) КАК ДатаАкта
	|ПОМЕСТИТЬ МаксимальныеДатыПоДокументам
	|ИЗ
	|	ОстаткиПрочие КАК ОстаткиПрочие
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПроведенныеАкты КАК ПроведенныеАкты
	|		ПО (ОстаткиПрочие.Организация = ПроведенныеАкты.Организация)
	|			И (ОстаткиПрочие.ДатаВозникновения <= ПроведенныеАкты.ДатаКонецДня)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИнвентаризацияРасчетовСКонтрагентами.ДетальныеЗаписи КАК ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи
	|		ПО (ПроведенныеАкты.Ссылка = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.Ссылка)
	|			И ОстаткиПрочие.СчетРасчетов = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.СчетРасчетов
	|			И ОстаткиПрочие.Субконто1 = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.Субконто1
	|			И (&ВидЗадолженности = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.ВидЗадолженности)
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиПрочие.Организация,
	|	ОстаткиПрочие.СчетРасчетов,
	|	ОстаткиПрочие.Субконто1,
	|	ОстаткиПрочие.Подтверждено,
	|	ОстаткиПрочие.ДатаВозникновения
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ДатаАкта,
	|	СчетРасчетов,
	|	Субконто1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МаксимальныеДатыПоДокументам.Организация КАК Организация,
	|	МаксимальныеДатыПоДокументам.СчетРасчетов КАК СчетРасчетов,
	|	МаксимальныеДатыПоДокументам.Субконто1 КАК Субконто1,
	|	МаксимальныеДатыПоДокументам.Подтверждено КАК Подтверждено,
	|	МаксимальныеДатыПоДокументам.ДатаВозникновения КАК ДатаВозникновения,
	|	МАКСИМУМ(ПроведенныеАкты.Ссылка) КАК СсылкаНаДокумент
	|ПОМЕСТИТЬ ПредварительныеДанные
	|ИЗ
	|	МаксимальныеДатыПоДокументам КАК МаксимальныеДатыПоДокументам
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПроведенныеАкты КАК ПроведенныеАкты
	|		ПО (МаксимальныеДатыПоДокументам.Организация = ПроведенныеАкты.Организация)
	|			И (МаксимальныеДатыПоДокументам.ДатаАкта = ПроведенныеАкты.Дата)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИнвентаризацияРасчетовСКонтрагентами.ДетальныеЗаписи КАК ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи
	|		ПО (ПроведенныеАкты.Ссылка = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.Ссылка)
	|			И МаксимальныеДатыПоДокументам.СчетРасчетов = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.СчетРасчетов
	|			И МаксимальныеДатыПоДокументам.Субконто1 = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.Субконто1
	|			И (&ВидЗадолженности = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.ВидЗадолженности)
	|
	|СГРУППИРОВАТЬ ПО
	|	МаксимальныеДатыПоДокументам.Организация,
	|	МаксимальныеДатыПоДокументам.СчетРасчетов,
	|	МаксимальныеДатыПоДокументам.Субконто1,
	|	МаксимальныеДатыПоДокументам.Подтверждено,
	|	МаксимальныеДатыПоДокументам.ДатаВозникновения
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СсылкаНаДокумент,
	|	СчетРасчетов,
	|	Субконто1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ОстаткиПрочие
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ МаксимальныеДатыПоДокументам
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПредварительныеДанные.Организация КАК Организация,
	|	ПредварительныеДанные.СчетРасчетов КАК СчетРасчетов,
	|	ПредварительныеДанные.Субконто1 КАК Субконто1,
	|	ПредварительныеДанные.Подтверждено КАК Подтверждено,
	|	ВЫБОР
	|		КОГДА МИНИМУМ(ЕСТЬNULL(ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.ДатаВозникновения, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0))) <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА МИНИМУМ(ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.ДатаВозникновения)
	|		ИНАЧЕ ПредварительныеДанные.ДатаВозникновения
	|	КОНЕЦ КАК ДатаВозникновения,
	|	МАКСИМУМ(ЕСТЬNULL(ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.ДатаПогашения, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0))) КАК ДатаПогашения,
	|	&ВидЗадолженности КАК ВидЗадолженности,
	|	МАКСИМУМ(ЕСТЬNULL(ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.Комментарий, """")) КАК Комментарий,
	|	ВЫРАЗИТЬ(ПредварительныеДанные.СчетРасчетов КАК ПланСчетов.Хозрасчетный).Порядок КАК ПорядокСчета
	|ИЗ
	|	ПредварительныеДанные КАК ПредварительныеДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИнвентаризацияРасчетовСКонтрагентами.ДетальныеЗаписи КАК ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи
	|		ПО ПредварительныеДанные.СсылкаНаДокумент = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.Ссылка
	|			И ПредварительныеДанные.СчетРасчетов = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.СчетРасчетов
	|			И ПредварительныеДанные.Субконто1 = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.Субконто1
	|			И (&ВидЗадолженности = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.ВидЗадолженности)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПредварительныеДанные.Организация,
	|	ПредварительныеДанные.СчетРасчетов,
	|	ПредварительныеДанные.Субконто1,
	|	ПредварительныеДанные.Подтверждено,
	|	ПредварительныеДанные.ДатаВозникновения
	|
	|УПОРЯДОЧИТЬ ПО
	|	СчетРасчетов,
	|	Субконто1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПредварительныеДанные";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаОстаткиЗадолженностиРаботникиОрганизаций(ФизическиеЛица, СводныеДанные = Ложь)
	
	СтрокиТекстаЗапроса = Новый Массив;
	
	СтрокиТекстаЗапроса.Добавить(
	"ВЫБРАТЬ
	|	ДанныеРасчетов.Организация КАК Организация,
	|	ДанныеРасчетов.Счет КАК СчетРасчетов,
	|	ЕСТЬNULL(ДанныеРасчетов.Субконто1, НЕОПРЕДЕЛЕНО) КАК Субконто1,
	|	СУММА(ДанныеРасчетов.Подтверждено) КАК Подтверждено
	|ПОМЕСТИТЬ ВТ_ОстаткиРасчетовСРаботниками
	|ИЗ
	|	(ВЫБРАТЬ
	|		ХозрасчетныйОстатки.Организация КАК Организация,
	|		ХозрасчетныйОстатки.Счет КАК Счет,
	|		ХозрасчетныйОстатки.Субконто1 КАК Субконто1,
	|		ВЫБОР
	|			КОГДА &ЭтоДебиторскаяЗадолженность
	|					И ХозрасчетныйОстатки.СуммаРазвернутыйОстатокКт < 0
	|				ТОГДА ХозрасчетныйОстатки.СуммаРазвернутыйОстатокДт - ХозрасчетныйОстатки.СуммаРазвернутыйОстатокКт
	|			КОГДА &ЭтоДебиторскаяЗадолженность
	|				ТОГДА ХозрасчетныйОстатки.СуммаРазвернутыйОстатокДт
	|			КОГДА ХозрасчетныйОстатки.СуммаРазвернутыйОстатокДт < 0
	|				ТОГДА ХозрасчетныйОстатки.СуммаРазвернутыйОстатокКт - ХозрасчетныйОстатки.СуммаРазвернутыйОстатокДт
	|			ИНАЧЕ ХозрасчетныйОстатки.СуммаРазвернутыйОстатокКт
	|		КОНЕЦ КАК Подтверждено
	|	ИЗ
	|		ВТ_РасчетыСРаботниками КАК ХозрасчетныйОстатки
	|	ГДЕ
	|		ХозрасчетныйОстатки.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.АктивноПассивный)
	|		И ВЫБОР
	|			КОГДА &ЭтоДебиторскаяЗадолженность
	|					И ХозрасчетныйОстатки.СуммаРазвернутыйОстатокКт < 0
	|				ТОГДА ХозрасчетныйОстатки.СуммаРазвернутыйОстатокДт - ХозрасчетныйОстатки.СуммаРазвернутыйОстатокКт
	|			КОГДА &ЭтоДебиторскаяЗадолженность
	|				ТОГДА ХозрасчетныйОстатки.СуммаРазвернутыйОстатокДт
	|			КОГДА ХозрасчетныйОстатки.СуммаРазвернутыйОстатокДт < 0
	|				ТОГДА ХозрасчетныйОстатки.СуммаРазвернутыйОстатокКт - ХозрасчетныйОстатки.СуммаРазвернутыйОстатокДт
	|			ИНАЧЕ ХозрасчетныйОстатки.СуммаРазвернутыйОстатокКт
	|		КОНЕЦ <> 0
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ХозрасчетныйОстатки.Организация,
	|		ХозрасчетныйОстатки.Счет,
	|		ХозрасчетныйОстатки.Субконто1,
	|		ВЫБОР
	|			КОГДА &ЭтоДебиторскаяЗадолженность
	|				ТОГДА ХозрасчетныйОстатки.СуммаРазвернутыйОстатокДт - ХозрасчетныйОстатки.СуммаРазвернутыйОстатокКт
	|			ИНАЧЕ ХозрасчетныйОстатки.СуммаРазвернутыйОстатокКт - ХозрасчетныйОстатки.СуммаРазвернутыйОстатокДт
	|		КОНЕЦ
	|	ИЗ
	|		ВТ_РасчетыСРаботниками КАК ХозрасчетныйОстатки
	|	ГДЕ
	|		ВЫБОР
	|			КОГДА &ЭтоДебиторскаяЗадолженность
	|				ТОГДА Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
	|			ИНАЧЕ Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
	|		КОНЕЦ
	|		И ВЫБОР
	|				КОГДА &ЭтоДебиторскаяЗадолженность
	|					ТОГДА ХозрасчетныйОстатки.СуммаРазвернутыйОстатокДт - ХозрасчетныйОстатки.СуммаРазвернутыйОстатокКт
	|				ИНАЧЕ ХозрасчетныйОстатки.СуммаРазвернутыйОстатокКт - ХозрасчетныйОстатки.СуммаРазвернутыйОстатокДт
	|			КОНЕЦ <> 0) КАК ДанныеРасчетов
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеРасчетов.Организация,
	|	ДанныеРасчетов.Счет,
	|	ДанныеРасчетов.Субконто1
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ДанныеРасчетов.Счет,
	|	Субконто1");
	
	Если СводныеДанные Тогда 
		СтрокиТекстаЗапроса.Добавить(ТекстЗапросаДополнениеСводныеДанные("ВТ_ОстаткиРасчетовСРаботниками"));
	Иначе
		
		СтрокиТекстаЗапроса.Добавить(
		"ВЫБРАТЬ
		|	ВТ_ОстаткиРасчетовСРаботниками.Организация КАК Организация,
		|	ВТ_ОстаткиРасчетовСРаботниками.СчетРасчетов КАК СчетРасчетов,
		|	ВТ_ОстаткиРасчетовСРаботниками.Субконто1 КАК Субконто1,
		|	ВТ_ОстаткиРасчетовСРаботниками.Подтверждено КАК Подтверждено,
		|	ЕСТЬNULL(ПериодыДвижений.Период, &НачалоПериода) КАК ДатаВозникновения
		|ПОМЕСТИТЬ ОстаткиПоРаботникам
		|ИЗ
		|	ВТ_ОстаткиРасчетовСРаботниками КАК ВТ_ОстаткиРасчетовСРаботниками
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПериодыДвиженийРасчетыСРаботниками КАК ПериодыДвижений
		|		ПО ВТ_ОстаткиРасчетовСРаботниками.Организация = ПериодыДвижений.Организация
		|			И ВТ_ОстаткиРасчетовСРаботниками.СчетРасчетов = ПериодыДвижений.Счет
		|			И ВТ_ОстаткиРасчетовСРаботниками.Субконто1 = ПериодыДвижений.Субконто1
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация,
		|	СчетРасчетов,
		|	Субконто1
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТ_ОстаткиРасчетовСРаботниками
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОстаткиПоРаботникам.Организация КАК Организация,
		|	ОстаткиПоРаботникам.СчетРасчетов КАК СчетРасчетов,
		|	ОстаткиПоРаботникам.Субконто1 КАК Субконто1,
		|	ОстаткиПоРаботникам.Подтверждено КАК Подтверждено,
		|	ОстаткиПоРаботникам.ДатаВозникновения КАК ДатаВозникновения,
		|	МАКСИМУМ(ПроведенныеАкты.Дата) КАК ДатаАкта
		|ПОМЕСТИТЬ МаксимальныеДатыПоДокументам
		|ИЗ
		|	ОстаткиПоРаботникам КАК ОстаткиПоРаботникам
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПроведенныеАкты КАК ПроведенныеАкты
		|		ПО (ОстаткиПоРаботникам.Организация = ПроведенныеАкты.Организация)
		|			И (ОстаткиПоРаботникам.ДатаВозникновения <= ПроведенныеАкты.ДатаКонецДня)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИнвентаризацияРасчетовСКонтрагентами.ДетальныеЗаписи КАК ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи
		|		ПО (ПроведенныеАкты.Ссылка = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.Ссылка)
		|			И ОстаткиПоРаботникам.СчетРасчетов = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.СчетРасчетов
		|			И ОстаткиПоРаботникам.Субконто1 = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.Субконто1
		|			И (&ВидЗадолженности = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.ВидЗадолженности)
		|
		|СГРУППИРОВАТЬ ПО
		|	ОстаткиПоРаботникам.Организация,
		|	ОстаткиПоРаботникам.СчетРасчетов,
		|	ОстаткиПоРаботникам.Субконто1,
		|	ОстаткиПоРаботникам.Подтверждено,
		|	ОстаткиПоРаботникам.ДатаВозникновения
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация,
		|	ДатаАкта,
		|	СчетРасчетов,
		|	Субконто1
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МаксимальныеДатыПоДокументам.Организация КАК Организация,
		|	МаксимальныеДатыПоДокументам.СчетРасчетов КАК СчетРасчетов,
		|	МаксимальныеДатыПоДокументам.Субконто1 КАК Субконто1,
		|	МаксимальныеДатыПоДокументам.Подтверждено КАК Подтверждено,
		|	МаксимальныеДатыПоДокументам.ДатаВозникновения КАК ДатаВозникновения,
		|	МАКСИМУМ(ПроведенныеАкты.Ссылка) КАК СсылкаНаДокумент
		|ПОМЕСТИТЬ ПредварительныеДанные
		|ИЗ
		|	МаксимальныеДатыПоДокументам КАК МаксимальныеДатыПоДокументам
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПроведенныеАкты КАК ПроведенныеАкты
		|		ПО (МаксимальныеДатыПоДокументам.Организация = ПроведенныеАкты.Организация)
		|			И (МаксимальныеДатыПоДокументам.ДатаАкта = ПроведенныеАкты.Дата)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИнвентаризацияРасчетовСКонтрагентами.ДетальныеЗаписи КАК ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи
		|		ПО (ПроведенныеАкты.Ссылка = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.Ссылка)
		|			И МаксимальныеДатыПоДокументам.СчетРасчетов = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.СчетРасчетов
		|			И МаксимальныеДатыПоДокументам.Субконто1 = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.Субконто1
		|			И (&ВидЗадолженности = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.ВидЗадолженности)
		|
		|СГРУППИРОВАТЬ ПО
		|	МаксимальныеДатыПоДокументам.Организация,
		|	МаксимальныеДатыПоДокументам.СчетРасчетов,
		|	МаксимальныеДатыПоДокументам.Субконто1,
		|	МаксимальныеДатыПоДокументам.Подтверждено,
		|	МаксимальныеДатыПоДокументам.ДатаВозникновения
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СсылкаНаДокумент,
		|	СчетРасчетов,
		|	Субконто1
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ОстаткиПоРаботникам
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ МаксимальныеДатыПоДокументам
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПредварительныеДанные.Организация КАК Организация,
		|	ПредварительныеДанные.СчетРасчетов КАК СчетРасчетов,
		|	ПредварительныеДанные.Субконто1 КАК Субконто1,
		|	ПредварительныеДанные.Подтверждено КАК Подтверждено,
		|	ВЫБОР
		|		КОГДА МИНИМУМ(ЕСТЬNULL(ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.ДатаВозникновения, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0))) <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|			ТОГДА МИНИМУМ(ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.ДатаВозникновения)
		|		ИНАЧЕ ПредварительныеДанные.ДатаВозникновения
		|	КОНЕЦ КАК ДатаВозникновения,
		|	МАКСИМУМ(ЕСТЬNULL(ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.ДатаПогашения, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0))) КАК ДатаПогашения,
		|	&ВидЗадолженности КАК ВидЗадолженности,
		|	МАКСИМУМ(ЕСТЬNULL(ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.Комментарий, """")) КАК Комментарий,
		|	ВЫРАЗИТЬ(ПредварительныеДанные.СчетРасчетов КАК ПланСчетов.Хозрасчетный).Порядок КАК ПорядокСчета
		|ИЗ
		|	ПредварительныеДанные КАК ПредварительныеДанные
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИнвентаризацияРасчетовСКонтрагентами.ДетальныеЗаписи КАК ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи
		|		ПО ПредварительныеДанные.СсылкаНаДокумент = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.Ссылка
		|			И ПредварительныеДанные.СчетРасчетов = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.СчетРасчетов
		|			И ПредварительныеДанные.Субконто1 = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.Субконто1
		|			И (&ВидЗадолженности = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.ВидЗадолженности)
		|
		|СГРУППИРОВАТЬ ПО
		|	ПредварительныеДанные.Организация,
		|	ПредварительныеДанные.СчетРасчетов,
		|	ПредварительныеДанные.Субконто1,
		|	ПредварительныеДанные.Подтверждено,
		|	ПредварительныеДанные.ДатаВозникновения
		|
		|УПОРЯДОЧИТЬ ПО
		|	СчетРасчетов,
		|	Субконто1
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ПредварительныеДанные");
		
	КонецЕсли;
	
	ТекстЗапроса = СтрСоединить(СтрокиТекстаЗапроса, ОбщегоНазначения.РазделительПакетаЗапросов());
	
	Если ФизическиеЛица = Неопределено Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОтборСубконто1", "ИСТИНА");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОтборСубконто1", "Субконто1 В(&Субконто1)");
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаОстаткиЗадолженностиРасчетыСБюджетом(СводныеДанные = Ложь)
	
	СтрокиТекстаЗапроса = Новый Массив;
	
	СтрокиТекстаЗапроса.Добавить(
	"ВЫБРАТЬ
	|	ДанныеРасчетов.Организация КАК Организация,
	|	ДанныеРасчетов.Счет КАК Счет,
	|	ЕСТЬNULL(ДанныеРасчетов.Субконто1, НЕОПРЕДЕЛЕНО) КАК Субконто1,
	|	СУММА(ДанныеРасчетов.Подтверждено) КАК Подтверждено
	|ПОМЕСТИТЬ ВТ_ОстаткиПоВидамПлатежей
	|ИЗ
	|	(ВЫБРАТЬ
	|		ХозрасчетныйОстатки.Организация КАК Организация,
	|		ХозрасчетныйОстатки.Счет КАК Счет,
	|		ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто1 КАК Перечисление.ВидыПлатежейВГосБюджет) КАК Субконто1,
	|		ВЫБОР
	|			КОГДА &ЭтоДебиторскаяЗадолженность
	|					И ХозрасчетныйОстатки.СуммаРазвернутыйОстатокКт < 0
	|				ТОГДА ХозрасчетныйОстатки.СуммаРазвернутыйОстатокДт - ХозрасчетныйОстатки.СуммаРазвернутыйОстатокКт
	|			КОГДА &ЭтоДебиторскаяЗадолженность
	|				ТОГДА ХозрасчетныйОстатки.СуммаРазвернутыйОстатокДт
	|			КОГДА ХозрасчетныйОстатки.СуммаРазвернутыйОстатокДт < 0
	|				ТОГДА ХозрасчетныйОстатки.СуммаРазвернутыйОстатокКт - ХозрасчетныйОстатки.СуммаРазвернутыйОстатокДт
	|			ИНАЧЕ ХозрасчетныйОстатки.СуммаРазвернутыйОстатокКт
	|		КОНЕЦ КАК Подтверждено
	|	ИЗ
	|		ВТ_РасчетыСБюджетом КАК ХозрасчетныйОстатки
	|	ГДЕ
	|		ХозрасчетныйОстатки.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.АктивноПассивный)
	|		И ВЫБОР
	|				КОГДА &ЭтоДебиторскаяЗадолженность
	|						И ХозрасчетныйОстатки.СуммаРазвернутыйОстатокКт < 0
	|					ТОГДА ХозрасчетныйОстатки.СуммаРазвернутыйОстатокДт - ХозрасчетныйОстатки.СуммаРазвернутыйОстатокКт
	|				КОГДА &ЭтоДебиторскаяЗадолженность
	|					ТОГДА ХозрасчетныйОстатки.СуммаРазвернутыйОстатокДт
	|				КОГДА ХозрасчетныйОстатки.СуммаРазвернутыйОстатокДт < 0
	|					ТОГДА ХозрасчетныйОстатки.СуммаРазвернутыйОстатокКт - ХозрасчетныйОстатки.СуммаРазвернутыйОстатокДт
	|				ИНАЧЕ ХозрасчетныйОстатки.СуммаРазвернутыйОстатокКт
	|			КОНЕЦ <> 0
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ХозрасчетныйОстатки.Организация,
	|		ХозрасчетныйОстатки.Счет,
	|		ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто1 КАК Перечисление.ВидыПлатежейВГосБюджет),
	|		ВЫБОР
	|			КОГДА &ЭтоДебиторскаяЗадолженность
	|				ТОГДА ХозрасчетныйОстатки.СуммаРазвернутыйОстатокДт - ХозрасчетныйОстатки.СуммаРазвернутыйОстатокКт
	|			ИНАЧЕ ХозрасчетныйОстатки.СуммаРазвернутыйОстатокКт - ХозрасчетныйОстатки.СуммаРазвернутыйОстатокДт
	|		КОНЕЦ
	|	ИЗ
	|		ВТ_РасчетыСБюджетом КАК ХозрасчетныйОстатки
	|	ГДЕ
	|		ВЫБОР
	|				КОГДА &ЭтоДебиторскаяЗадолженность
	|					ТОГДА ХозрасчетныйОстатки.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
	|				ИНАЧЕ ХозрасчетныйОстатки.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
	|			КОНЕЦ
	|		И ВЫБОР
	|				КОГДА &ЭтоДебиторскаяЗадолженность
	|					ТОГДА ХозрасчетныйОстатки.СуммаРазвернутыйОстатокДт - ХозрасчетныйОстатки.СуммаРазвернутыйОстатокКт
	|				ИНАЧЕ ХозрасчетныйОстатки.СуммаРазвернутыйОстатокКт - ХозрасчетныйОстатки.СуммаРазвернутыйОстатокДт
	|			КОНЕЦ <> 0) КАК ДанныеРасчетов
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеРасчетов.Организация,
	|	ДанныеРасчетов.Счет,
	|	ДанныеРасчетов.Субконто1
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	Счет,
	|	Субконто1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеРасчетов.Организация КАК Организация,
	|	ДанныеРасчетов.Счет КАК Счет,
	|	ЕСТЬNULL(ДанныеРасчетов.Субконто1, НЕОПРЕДЕЛЕНО) КАК Субконто1,
	|	ЕСТЬNULL(ДанныеРасчетов.Субконто2, НЕОПРЕДЕЛЕНО) КАК Субконто2,
	|	СУММА(ДанныеРасчетов.Подтверждено) КАК Подтверждено
	|ПОМЕСТИТЬ ВТ_ОстаткиПоВидамПлатежейУровнямБюджета
	|ИЗ
	|	(ВЫБРАТЬ
	|		ХозрасчетныйОстатки.Организация КАК Организация,
	|		ХозрасчетныйОстатки.Счет КАК Счет,
	|		ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто1 КАК Перечисление.ВидыПлатежейВГосБюджет) КАК Субконто1,
	|		ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто2 КАК Перечисление.УровниБюджетов) КАК Субконто2,
	|		ВЫБОР
	|			КОГДА &ЭтоДебиторскаяЗадолженность
	|					И ХозрасчетныйОстатки.СуммаРазвернутыйОстатокКт < 0
	|				ТОГДА ХозрасчетныйОстатки.СуммаРазвернутыйОстатокДт - ХозрасчетныйОстатки.СуммаРазвернутыйОстатокКт
	|			КОГДА &ЭтоДебиторскаяЗадолженность
	|				ТОГДА ХозрасчетныйОстатки.СуммаРазвернутыйОстатокДт
	|			КОГДА ХозрасчетныйОстатки.СуммаРазвернутыйОстатокДт < 0
	|				ТОГДА ХозрасчетныйОстатки.СуммаРазвернутыйОстатокКт - ХозрасчетныйОстатки.СуммаРазвернутыйОстатокДт
	|			ИНАЧЕ ХозрасчетныйОстатки.СуммаРазвернутыйОстатокКт
	|		КОНЕЦ КАК Подтверждено
	|	ИЗ
	|		ВТ_РасчетыСБюджетомПоВидамПлатежейУровнямБюджета КАК ХозрасчетныйОстатки
	|	ГДЕ
	|		ХозрасчетныйОстатки.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.АктивноПассивный)
	|		И ВЫБОР
	|				КОГДА &ЭтоДебиторскаяЗадолженность
	|						И ХозрасчетныйОстатки.СуммаРазвернутыйОстатокКт < 0
	|					ТОГДА ХозрасчетныйОстатки.СуммаРазвернутыйОстатокДт - ХозрасчетныйОстатки.СуммаРазвернутыйОстатокКт
	|				КОГДА &ЭтоДебиторскаяЗадолженность
	|					ТОГДА ХозрасчетныйОстатки.СуммаРазвернутыйОстатокДт
	|				КОГДА ХозрасчетныйОстатки.СуммаРазвернутыйОстатокДт < 0
	|					ТОГДА ХозрасчетныйОстатки.СуммаРазвернутыйОстатокКт - ХозрасчетныйОстатки.СуммаРазвернутыйОстатокДт
	|				ИНАЧЕ ХозрасчетныйОстатки.СуммаРазвернутыйОстатокКт
	|			КОНЕЦ <> 0
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ХозрасчетныйОстатки.Организация,
	|		ХозрасчетныйОстатки.Счет,
	|		ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто1 КАК Перечисление.ВидыПлатежейВГосБюджет),
	|		ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто2 КАК Перечисление.УровниБюджетов),
	|		ВЫБОР
	|			КОГДА &ЭтоДебиторскаяЗадолженность
	|				ТОГДА ХозрасчетныйОстатки.СуммаРазвернутыйОстатокДт - ХозрасчетныйОстатки.СуммаРазвернутыйОстатокКт
	|			ИНАЧЕ ХозрасчетныйОстатки.СуммаРазвернутыйОстатокКт - ХозрасчетныйОстатки.СуммаРазвернутыйОстатокДт
	|		КОНЕЦ
	|	ИЗ
	|		ВТ_РасчетыСБюджетомПоВидамПлатежейУровнямБюджета КАК ХозрасчетныйОстатки
	|	ГДЕ
	|		ВЫБОР
	|				КОГДА &ЭтоДебиторскаяЗадолженность
	|					ТОГДА ХозрасчетныйОстатки.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
	|				ИНАЧЕ ХозрасчетныйОстатки.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
	|			КОНЕЦ
	|		И ВЫБОР
	|				КОГДА &ЭтоДебиторскаяЗадолженность
	|					ТОГДА ХозрасчетныйОстатки.СуммаРазвернутыйОстатокДт - ХозрасчетныйОстатки.СуммаРазвернутыйОстатокКт
	|				ИНАЧЕ ХозрасчетныйОстатки.СуммаРазвернутыйОстатокКт - ХозрасчетныйОстатки.СуммаРазвернутыйОстатокДт
	|			КОНЕЦ <> 0) КАК ДанныеРасчетов
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеРасчетов.Организация,
	|	ДанныеРасчетов.Счет,
	|	ДанныеРасчетов.Субконто1,
	|	ДанныеРасчетов.Субконто2
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	Счет,
	|	Субконто1,
	|	Субконто2");
	
	Если СводныеДанные Тогда
		
		СтрокиТекстаЗапроса.Добавить(
		"ВЫБРАТЬ
		|	ВТ_ОстаткиПоВидамПлатежей.Счет КАК СчетРасчетов,
		|	СУММА(ВТ_ОстаткиПоВидамПлатежей.Подтверждено) КАК Подтверждено,
		|	СУММА(ВТ_ОстаткиПоВидамПлатежей.Подтверждено) КАК Всего
		|ПОМЕСТИТЬ ПредварительныеДанные
		|ИЗ
		|	ВТ_ОстаткиПоВидамПлатежей КАК ВТ_ОстаткиПоВидамПлатежей
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ОстаткиПоВидамПлатежей.Счет,
		|	ВТ_ОстаткиПоВидамПлатежей.Субконто1
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_ОстаткиПоВидамПлатежейУровнямБюджета.Счет,
		|	СУММА(ВТ_ОстаткиПоВидамПлатежейУровнямБюджета.Подтверждено),
		|	СУММА(ВТ_ОстаткиПоВидамПлатежейУровнямБюджета.Подтверждено)
		|ИЗ
		|	ВТ_ОстаткиПоВидамПлатежейУровнямБюджета КАК ВТ_ОстаткиПоВидамПлатежейУровнямБюджета
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ОстаткиПоВидамПлатежейУровнямБюджета.Счет,
		|	ВТ_ОстаткиПоВидамПлатежейУровнямБюджета.Субконто1
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НЕОПРЕДЕЛЕНО КАК Контрагент,
		|	ВЫРАЗИТЬ(ПредварительныеДанные.СчетРасчетов КАК ПланСчетов.Хозрасчетный).Наименование КАК НаименованиеСчета,
		|	ПредварительныеДанные.СчетРасчетов КАК СчетРасчетов,
		|	СУММА(ПредварительныеДанные.Подтверждено) КАК Подтверждено,
		|	СУММА(ПредварительныеДанные.Всего) КАК Всего
		|ИЗ
		|	ПредварительныеДанные КАК ПредварительныеДанные
		|
		|СГРУППИРОВАТЬ ПО
		|	ПредварительныеДанные.СчетРасчетов
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ПредварительныеДанные");
		
	Иначе
		
		СтрокиТекстаЗапроса.Добавить(
		"ВЫБРАТЬ
		|	ВТ_ОстаткиПоВидамПлатежей.Организация КАК Организация,
		|	ВТ_ОстаткиПоВидамПлатежей.Счет КАК СчетРасчетов,
		|	ВТ_ОстаткиПоВидамПлатежей.Счет.Наименование КАК НаименованиеСчета,
		|	ВТ_ОстаткиПоВидамПлатежей.Субконто1 КАК Субконто1,
		|	НЕОПРЕДЕЛЕНО КАК Субконто2,
		|	ВТ_ОстаткиПоВидамПлатежей.Подтверждено КАК Подтверждено,
		|	ЕСТЬNULL(ПериодыДвижений.Период, &НачалоПериода) КАК ДатаВозникновения
		|ПОМЕСТИТЬ ОстаткиЗадолженности
		|ИЗ
		|	ВТ_ОстаткиПоВидамПлатежей КАК ВТ_ОстаткиПоВидамПлатежей
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РасчетыСБюджетомПериодыДвижений КАК ПериодыДвижений
		|		ПО ВТ_ОстаткиПоВидамПлатежей.Организация = ПериодыДвижений.Организация
		|			И ВТ_ОстаткиПоВидамПлатежей.Счет = ПериодыДвижений.Счет
		|			И ВТ_ОстаткиПоВидамПлатежей.Субконто1 = ПериодыДвижений.Субконто1
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_ОстаткиПоВидамПлатежейУровнямБюджета.Организация,
		|	ВТ_ОстаткиПоВидамПлатежейУровнямБюджета.Счет,
		|	ВТ_ОстаткиПоВидамПлатежейУровнямБюджета.Счет.Наименование,
		|	ВТ_ОстаткиПоВидамПлатежейУровнямБюджета.Субконто1,
		|	ВТ_ОстаткиПоВидамПлатежейУровнямБюджета.Субконто2,
		|	ВТ_ОстаткиПоВидамПлатежейУровнямБюджета.Подтверждено,
		|	ЕСТЬNULL(ПериодыДвиженийПоУровнямБюджета.Период, &НачалоПериода)
		|ИЗ
		|	ВТ_ОстаткиПоВидамПлатежейУровнямБюджета КАК ВТ_ОстаткиПоВидамПлатежейУровнямБюджета
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РасчетыСБюджетомПериодыДвиженийПоУровнямБюджета КАК ПериодыДвиженийПоУровнямБюджета
		|		ПО ВТ_ОстаткиПоВидамПлатежейУровнямБюджета.Организация = ПериодыДвиженийПоУровнямБюджета.Организация
		|			И ВТ_ОстаткиПоВидамПлатежейУровнямБюджета.Счет = ПериодыДвиженийПоУровнямБюджета.Счет
		|			И ВТ_ОстаткиПоВидамПлатежейУровнямБюджета.Субконто1 = ПериодыДвиженийПоУровнямБюджета.Субконто1
		|			И ВТ_ОстаткиПоВидамПлатежейУровнямБюджета.Субконто2 = ПериодыДвиженийПоУровнямБюджета.Субконто2
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация,
		|	СчетРасчетов,
		|	Субконто1,
		|	Субконто2
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТ_ОстаткиПоВидамПлатежейУровнямБюджета
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТ_ОстаткиПоВидамПлатежей
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОстаткиЗадолженности.Организация КАК Организация,
		|	ОстаткиЗадолженности.СчетРасчетов КАК СчетРасчетов,
		|	ОстаткиЗадолженности.НаименованиеСчета КАК НаименованиеСчета,
		|	ОстаткиЗадолженности.Субконто1 КАК Субконто1,
		|	ОстаткиЗадолженности.Субконто2 КАК Субконто2,
		|	ОстаткиЗадолженности.Подтверждено КАК Подтверждено,
		|	ОстаткиЗадолженности.ДатаВозникновения КАК ДатаВозникновения,
		|	МАКСИМУМ(ПроведенныеАкты.Дата) КАК ДатаАкта
		|ПОМЕСТИТЬ МаксимальныеДатыПоДокументам
		|ИЗ
		|	ОстаткиЗадолженности КАК ОстаткиЗадолженности
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПроведенныеАкты КАК ПроведенныеАкты
		|		ПО (ОстаткиЗадолженности.Организация = ПроведенныеАкты.Организация)
		|			И (ОстаткиЗадолженности.ДатаВозникновения <= ПроведенныеАкты.ДатаКонецДня)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИнвентаризацияРасчетовСКонтрагентами.ДетальныеЗаписи КАК ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи
		|		ПО (ПроведенныеАкты.Ссылка = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.Ссылка)
		|			И ОстаткиЗадолженности.СчетРасчетов = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.СчетРасчетов
		|			И ОстаткиЗадолженности.Субконто1 = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.Субконто1
		|			И ОстаткиЗадолженности.Субконто2 = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.Субконто2
		|			И (&ВидЗадолженности = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.ВидЗадолженности)
		|
		|СГРУППИРОВАТЬ ПО
		|	ОстаткиЗадолженности.Организация,
		|	ОстаткиЗадолженности.СчетРасчетов,
		|	ОстаткиЗадолженности.Субконто1,
		|	ОстаткиЗадолженности.Субконто2,
		|	ОстаткиЗадолженности.Подтверждено,
		|	ОстаткиЗадолженности.ДатаВозникновения,
		|	ОстаткиЗадолженности.НаименованиеСчета
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация,
		|	ДатаАкта,
		|	СчетРасчетов,
		|	Субконто1,
		|	Субконто2
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МаксимальныеДатыПоДокументам.Организация КАК Организация,
		|	МаксимальныеДатыПоДокументам.СчетРасчетов КАК СчетРасчетов,
		|	МаксимальныеДатыПоДокументам.НаименованиеСчета КАК НаименованиеСчета,
		|	МаксимальныеДатыПоДокументам.Субконто1 КАК Субконто1,
		|	МаксимальныеДатыПоДокументам.Субконто2 КАК Субконто2,
		|	МаксимальныеДатыПоДокументам.Подтверждено КАК Подтверждено,
		|	МаксимальныеДатыПоДокументам.ДатаВозникновения КАК ДатаВозникновения,
		|	МАКСИМУМ(ПроведенныеАкты.Ссылка) КАК СсылкаНаДокумент
		|ПОМЕСТИТЬ ПредварительныеДанные
		|ИЗ
		|	МаксимальныеДатыПоДокументам КАК МаксимальныеДатыПоДокументам
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПроведенныеАкты КАК ПроведенныеАкты
		|		ПО (МаксимальныеДатыПоДокументам.Организация = ПроведенныеАкты.Организация)
		|			И (МаксимальныеДатыПоДокументам.ДатаАкта = ПроведенныеАкты.Дата)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИнвентаризацияРасчетовСКонтрагентами.ДетальныеЗаписи КАК ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи
		|		ПО (ПроведенныеАкты.Ссылка = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.Ссылка)
		|			И МаксимальныеДатыПоДокументам.СчетРасчетов = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.СчетРасчетов
		|			И МаксимальныеДатыПоДокументам.Субконто1 = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.Субконто1
		|			И МаксимальныеДатыПоДокументам.Субконто2 = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.Субконто2
		|			И (&ВидЗадолженности = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.ВидЗадолженности)
		|
		|СГРУППИРОВАТЬ ПО
		|	МаксимальныеДатыПоДокументам.Организация,
		|	МаксимальныеДатыПоДокументам.СчетРасчетов,
		|	МаксимальныеДатыПоДокументам.Субконто1,
		|	МаксимальныеДатыПоДокументам.Субконто2,
		|	МаксимальныеДатыПоДокументам.Подтверждено,
		|	МаксимальныеДатыПоДокументам.ДатаВозникновения,
		|	МаксимальныеДатыПоДокументам.НаименованиеСчета
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СсылкаНаДокумент,
		|	СчетРасчетов,
		|	Субконто1,
		|	Субконто2
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ОстаткиЗадолженности
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ МаксимальныеДатыПоДокументам
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПредварительныеДанные.Организация КАК Организация,
		|	ПредварительныеДанные.СчетРасчетов КАК СчетРасчетов,
		|	ПредварительныеДанные.НаименованиеСчета КАК НаименованиеСчета,
		|	ПредварительныеДанные.Субконто1 КАК Субконто1,
		|	ПредварительныеДанные.Субконто2 КАК Субконто2,
		|	ПредварительныеДанные.Подтверждено КАК Подтверждено,
		|	ВЫБОР
		|		КОГДА МИНИМУМ(ЕСТЬNULL(ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.ДатаВозникновения, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0))) <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|			ТОГДА МИНИМУМ(ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.ДатаВозникновения)
		|		ИНАЧЕ ПредварительныеДанные.ДатаВозникновения
		|	КОНЕЦ КАК ДатаВозникновения,
		|	МАКСИМУМ(ЕСТЬNULL(ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.ДатаПогашения, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0))) КАК ДатаПогашения,
		|	&ВидЗадолженности КАК ВидЗадолженности,
		|	МАКСИМУМ(ЕСТЬNULL(ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.Комментарий, """")) КАК Комментарий,
		|	ВЫРАЗИТЬ(ПредварительныеДанные.СчетРасчетов КАК ПланСчетов.Хозрасчетный).Порядок КАК ПорядокСчета
		|ИЗ
		|	ПредварительныеДанные КАК ПредварительныеДанные
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИнвентаризацияРасчетовСКонтрагентами.ДетальныеЗаписи КАК ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи
		|		ПО ПредварительныеДанные.СсылкаНаДокумент = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.Ссылка
		|			И ПредварительныеДанные.СчетРасчетов = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.СчетРасчетов
		|			И ПредварительныеДанные.Субконто1 = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.Субконто1
		|			И ПредварительныеДанные.Субконто2 = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.Субконто2
		|			И (&ВидЗадолженности = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.ВидЗадолженности)
		|
		|СГРУППИРОВАТЬ ПО
		|	ПредварительныеДанные.Организация,
		|	ПредварительныеДанные.СчетРасчетов,
		|	ПредварительныеДанные.НаименованиеСчета,
		|	ПредварительныеДанные.Субконто1,
		|	ПредварительныеДанные.Субконто2,
		|	ПредварительныеДанные.Подтверждено,
		|	ПредварительныеДанные.ДатаВозникновения
		|
		|УПОРЯДОЧИТЬ ПО
		|	СчетРасчетов,
		|	Субконто1
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ПредварительныеДанные");
		
	КонецЕсли;
	
	Возврат СтрСоединить(СтрокиТекстаЗапроса, ОбщегоНазначения.РазделительПакетаЗапросов());
	
КонецФункции

Функция ТекстЗапросаОстаткиЗадолженностиСчетаБезОбработки(СводныеДанные = Ложь)
	
	Если СводныеДанные Тогда 
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ВТ_РасчетыПоСчетамБезОбработки.СчетРасчетов КАК СчетРасчетов,
		|	ВТ_РасчетыПоСчетамБезОбработки.СчетРасчетов.Наименование КАК НаименованиеСчета,
		|	СУММА(ВЫБОР
		|			КОГДА &ЭтоДебиторскаяЗадолженность
		|				ТОГДА ВТ_РасчетыПоСчетамБезОбработки.СуммаОстатокДт
		|			ИНАЧЕ ВТ_РасчетыПоСчетамБезОбработки.СуммаОстатокКт
		|		КОНЕЦ) КАК Подтверждено,
		|	СУММА(ВЫБОР
		|			КОГДА &ЭтоДебиторскаяЗадолженность
		|				ТОГДА ВТ_РасчетыПоСчетамБезОбработки.СуммаОстатокДт
		|			ИНАЧЕ ВТ_РасчетыПоСчетамБезОбработки.СуммаОстатокКт
		|		КОНЕЦ) КАК Всего
		|ИЗ
		|	ВТ_РасчетыПоСчетамБезОбработки КАК ВТ_РасчетыПоСчетамБезОбработки
		|ГДЕ
		|	ВЫБОР
		|			КОГДА &ЭтоДебиторскаяЗадолженность
		|				ТОГДА ВТ_РасчетыПоСчетамБезОбработки.СуммаОстатокДт
		|			ИНАЧЕ ВТ_РасчетыПоСчетамБезОбработки.СуммаОстатокКт
		|		КОНЕЦ <> 0
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_РасчетыПоСчетамБезОбработки.СчетРасчетов,
		|	ВТ_РасчетыПоСчетамБезОбработки.СчетРасчетов.Наименование";
	Иначе
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ВТ_РасчетыПоСчетамБезОбработки.Организация КАК Организация,
		|	ВТ_РасчетыПоСчетамБезОбработки.СчетРасчетов КАК СчетРасчетов,
		|	ВТ_РасчетыПоСчетамБезОбработки.Субконто1 КАК Субконто1,
		|	ВТ_РасчетыПоСчетамБезОбработки.Субконто2 КАК Субконто2,
		|	ВТ_РасчетыПоСчетамБезОбработки.Субконто3 КАК Субконто3,
		|	ВЫБОР
		|		КОГДА &ЭтоДебиторскаяЗадолженность
		|			ТОГДА ВТ_РасчетыПоСчетамБезОбработки.СуммаОстатокДт
		|		ИНАЧЕ ВТ_РасчетыПоСчетамБезОбработки.СуммаОстатокКт
		|	КОНЕЦ КАК Подтверждено,
		|	ЕСТЬNULL(ДанныеПервичныхДокументов.ДатаРегистратора, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) КАК ДатаВозникновения
		|ПОМЕСТИТЬ ОстаткиПоПрочимСчетам
		|ИЗ
		|	ВТ_РасчетыПоСчетамБезОбработки КАК ВТ_РасчетыПоСчетамБезОбработки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
		|		ПО ВТ_РасчетыПоСчетамБезОбработки.Организация = ДанныеПервичныхДокументов.Организация
		|			И ВТ_РасчетыПоСчетамБезОбработки.Субконто3 = ДанныеПервичныхДокументов.Документ
		|ГДЕ
		|	ВЫБОР
		|			КОГДА &ЭтоДебиторскаяЗадолженность
		|				ТОГДА ВТ_РасчетыПоСчетамБезОбработки.СуммаОстатокДт
		|			ИНАЧЕ ВТ_РасчетыПоСчетамБезОбработки.СуммаОстатокКт
		|		КОНЕЦ <> 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОстаткиПоПрочимСчетам.Организация КАК Организация,
		|	ОстаткиПоПрочимСчетам.СчетРасчетов КАК СчетРасчетов,
		|	ОстаткиПоПрочимСчетам.Субконто1 КАК Субконто1,
		|	ОстаткиПоПрочимСчетам.Субконто2 КАК Субконто2,
		|	ОстаткиПоПрочимСчетам.Субконто3 КАК Субконто3,
		|	ОстаткиПоПрочимСчетам.Подтверждено КАК Подтверждено,
		|	ОстаткиПоПрочимСчетам.ДатаВозникновения КАК ДатаВозникновения
		|ПОМЕСТИТЬ ДанныеБезДатыВозникновения
		|ИЗ
		|	ОстаткиПоПрочимСчетам КАК ОстаткиПоПрочимСчетам
		|ГДЕ
		|	ОстаткиПоПрочимСчетам.ДатаВозникновения = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация,
		|	СчетРасчетов,
		|	Субконто1,
		|	Субконто2,
		|	Субконто3
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОстаткиПоПрочимСчетам.Организация КАК Организация,
		|	ОстаткиПоПрочимСчетам.СчетРасчетов КАК СчетРасчетов,
		|	ОстаткиПоПрочимСчетам.Субконто1 КАК Субконто1,
		|	ОстаткиПоПрочимСчетам.Субконто2 КАК Субконто2,
		|	ОстаткиПоПрочимСчетам.Субконто3 КАК Субконто3,
		|	ОстаткиПоПрочимСчетам.Подтверждено КАК Подтверждено,
		|	ОстаткиПоПрочимСчетам.ДатаВозникновения КАК ДатаВозникновения
		|ПОМЕСТИТЬ ОстаткиЗадолженности
		|ИЗ
		|	ОстаткиПоПрочимСчетам КАК ОстаткиПоПрочимСчетам
		|ГДЕ
		|	ОстаткиПоПрочимСчетам.ДатаВозникновения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДанныеБезДатыВозникновения.Организация,
		|	ДанныеБезДатыВозникновения.СчетРасчетов,
		|	ДанныеБезДатыВозникновения.Субконто1,
		|	ДанныеБезДатыВозникновения.Субконто2,
		|	ДанныеБезДатыВозникновения.Субконто3,
		|	ДанныеБезДатыВозникновения.Подтверждено,
		|	ЕСТЬNULL(ПериодыДвижений.Период, &НачалоПериода)
		|ИЗ
		|	ДанныеБезДатыВозникновения КАК ДанныеБезДатыВозникновения
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПериодыДвиженийРасчетыПоСчетамБезОбработки КАК ПериодыДвижений
		|		ПО ДанныеБезДатыВозникновения.Организация = ПериодыДвижений.Организация
		|			И ДанныеБезДатыВозникновения.СчетРасчетов = ПериодыДвижений.Счет
		|			И ДанныеБезДатыВозникновения.Субконто1 = ПериодыДвижений.Субконто1
		|			И ДанныеБезДатыВозникновения.Субконто2 = ПериодыДвижений.Субконто2
		|			И ДанныеБезДатыВозникновения.Субконто3 = ПериодыДвижений.Субконто3
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация,
		|	СчетРасчетов,
		|	Субконто1,
		|	Субконто2,
		|	Субконто3
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ОстаткиПоПрочимСчетам
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ДанныеБезДатыВозникновения
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОстаткиЗадолженности.Организация КАК Организация,
		|	ОстаткиЗадолженности.СчетРасчетов КАК СчетРасчетов,
		|	ОстаткиЗадолженности.Субконто1 КАК Субконто1,
		|	ОстаткиЗадолженности.Субконто2 КАК Субконто2,
		|	ОстаткиЗадолженности.Субконто3 КАК Субконто3,
		|	ОстаткиЗадолженности.Подтверждено КАК Подтверждено,
		|	ОстаткиЗадолженности.ДатаВозникновения КАК ДатаВозникновения,
		|	МАКСИМУМ(ПроведенныеАкты.Дата) КАК ДатаАкта
		|ПОМЕСТИТЬ МаксимальныеДатыПоДокументам
		|ИЗ
		|	ОстаткиЗадолженности КАК ОстаткиЗадолженности
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПроведенныеАкты КАК ПроведенныеАкты
		|		ПО (ОстаткиЗадолженности.Организация = ПроведенныеАкты.Организация)
		|			И (ОстаткиЗадолженности.ДатаВозникновения <= ПроведенныеАкты.ДатаКонецДня)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИнвентаризацияРасчетовСКонтрагентами.ДетальныеЗаписи КАК ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи
		|		ПО (ПроведенныеАкты.Ссылка = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.Ссылка)
		|			И ОстаткиЗадолженности.СчетРасчетов = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.СчетРасчетов
		|			И ОстаткиЗадолженности.Субконто1 = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.Субконто1
		|			И ОстаткиЗадолженности.Субконто2 = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.Субконто2
		|			И ОстаткиЗадолженности.Субконто3 = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.Субконто3
		|			И (&ВидЗадолженности = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.ВидЗадолженности)
		|
		|СГРУППИРОВАТЬ ПО
		|	ОстаткиЗадолженности.Организация,
		|	ОстаткиЗадолженности.СчетРасчетов,
		|	ОстаткиЗадолженности.Субконто1,
		|	ОстаткиЗадолженности.Субконто2,
		|	ОстаткиЗадолженности.Субконто3,
		|	ОстаткиЗадолженности.Подтверждено,
		|	ОстаткиЗадолженности.ДатаВозникновения
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация,
		|	ДатаАкта,
		|	СчетРасчетов,
		|	Субконто1,
		|	Субконто2,
		|	Субконто3
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МаксимальныеДатыПоДокументам.Организация КАК Организация,
		|	МаксимальныеДатыПоДокументам.СчетРасчетов КАК СчетРасчетов,
		|	МаксимальныеДатыПоДокументам.Субконто1 КАК Субконто1,
		|	МаксимальныеДатыПоДокументам.Субконто2 КАК Субконто2,
		|	МаксимальныеДатыПоДокументам.Субконто3 КАК Субконто3,
		|	МаксимальныеДатыПоДокументам.Подтверждено КАК Подтверждено,
		|	МаксимальныеДатыПоДокументам.ДатаВозникновения КАК ДатаВозникновения,
		|	МАКСИМУМ(ПроведенныеАкты.Ссылка) КАК СсылкаНаДокумент
		|ПОМЕСТИТЬ ПредварительныеДанные
		|ИЗ
		|	МаксимальныеДатыПоДокументам КАК МаксимальныеДатыПоДокументам
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПроведенныеАкты КАК ПроведенныеАкты
		|		ПО (МаксимальныеДатыПоДокументам.Организация = ПроведенныеАкты.Организация)
		|			И (МаксимальныеДатыПоДокументам.ДатаАкта = ПроведенныеАкты.Дата)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИнвентаризацияРасчетовСКонтрагентами.ДетальныеЗаписи КАК ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи
		|		ПО (ПроведенныеАкты.Ссылка = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.Ссылка)
		|			И МаксимальныеДатыПоДокументам.СчетРасчетов = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.СчетРасчетов
		|			И МаксимальныеДатыПоДокументам.Субконто1 = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.Субконто1
		|			И МаксимальныеДатыПоДокументам.Субконто2 = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.Субконто2
		|			И МаксимальныеДатыПоДокументам.Субконто3 = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.Субконто3
		|			И (&ВидЗадолженности = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.ВидЗадолженности)
		|
		|СГРУППИРОВАТЬ ПО
		|	МаксимальныеДатыПоДокументам.Организация,
		|	МаксимальныеДатыПоДокументам.СчетРасчетов,
		|	МаксимальныеДатыПоДокументам.Субконто1,
		|	МаксимальныеДатыПоДокументам.Субконто2,
		|	МаксимальныеДатыПоДокументам.Субконто3,
		|	МаксимальныеДатыПоДокументам.Подтверждено,
		|	МаксимальныеДатыПоДокументам.ДатаВозникновения
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СсылкаНаДокумент,
		|	СчетРасчетов,
		|	Субконто1,
		|	Субконто2,
		|	Субконто3
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ОстаткиЗадолженности
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ МаксимальныеДатыПоДокументам
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПредварительныеДанные.Организация КАК Организация,
		|	ПредварительныеДанные.СчетРасчетов КАК СчетРасчетов,
		|	ВЫРАЗИТЬ(ПредварительныеДанные.СчетРасчетов КАК ПланСчетов.Хозрасчетный).Наименование КАК НаименованиеСчета,
		|	ПредварительныеДанные.Субконто1 КАК Субконто1,
		|	ПредварительныеДанные.Субконто2 КАК Субконто2,
		|	ПредварительныеДанные.Субконто3 КАК Субконто3,
		|	ПредварительныеДанные.Подтверждено КАК Подтверждено,
		|	ВЫБОР
		|		КОГДА МИНИМУМ(ЕСТЬNULL(ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.ДатаВозникновения, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0))) <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|			ТОГДА МИНИМУМ(ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.ДатаВозникновения)
		|		ИНАЧЕ ПредварительныеДанные.ДатаВозникновения
		|	КОНЕЦ КАК ДатаВозникновения,
		|	МАКСИМУМ(ЕСТЬNULL(ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.ДатаПогашения, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0))) КАК ДатаПогашения,
		|	&ВидЗадолженности КАК ВидЗадолженности,
		|	МАКСИМУМ(ЕСТЬNULL(ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.Комментарий, """")) КАК Комментарий,
		|	ВЫРАЗИТЬ(ПредварительныеДанные.СчетРасчетов КАК ПланСчетов.Хозрасчетный).Порядок КАК ПорядокСчета
		|ИЗ
		|	ПредварительныеДанные КАК ПредварительныеДанные
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИнвентаризацияРасчетовСКонтрагентами.ДетальныеЗаписи КАК ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи
		|		ПО ПредварительныеДанные.СсылкаНаДокумент = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.Ссылка
		|			И ПредварительныеДанные.СчетРасчетов = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.СчетРасчетов
		|			И ПредварительныеДанные.Субконто1 = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.Субконто1
		|			И ПредварительныеДанные.Субконто2 = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.Субконто2
		|			И ПредварительныеДанные.Субконто3 = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.Субконто3
		|			И (&ВидЗадолженности = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.ВидЗадолженности)
		|
		|СГРУППИРОВАТЬ ПО
		|	ПредварительныеДанные.Организация,
		|	ПредварительныеДанные.СчетРасчетов,
		|	ПредварительныеДанные.Субконто1,
		|	ПредварительныеДанные.Субконто2,
		|	ПредварительныеДанные.Субконто3,
		|	ПредварительныеДанные.Подтверждено,
		|	ПредварительныеДанные.ДатаВозникновения
		|
		|УПОРЯДОЧИТЬ ПО
		|	СчетРасчетов,
		|	Субконто1
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ПредварительныеДанные";
		
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаОстаткиЗадолженностиКредитыВложения(Контрагенты)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Организация КАК Организация,
	|	ХозрасчетныйОстатки.СчетРасчетов КАК СчетРасчетов,
	|	ЕСТЬNULL(ХозрасчетныйОстатки.Субконто1, НЕОПРЕДЕЛЕНО) КАК Субконто1,
	|	ЕСТЬNULL(ХозрасчетныйОстатки.Субконто2, НЕОПРЕДЕЛЕНО) КАК Субконто2,
	|	ВЫБОР
	|		КОГДА &ЭтоДебиторскаяЗадолженность
	|			ТОГДА ХозрасчетныйОстатки.СуммаОстатокДт
	|		ИНАЧЕ ХозрасчетныйОстатки.СуммаОстатокКт
	|	КОНЕЦ КАК Подтверждено
	|ПОМЕСТИТЬ ПредварительныеДанные
	|ИЗ
	|	ВТ_КредитыВложения КАК ХозрасчетныйОстатки
	|ГДЕ
	|	&ЭтоДебиторскаяЗадолженность
	|		И СчетРасчетов.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
	|	ИЛИ НЕ &ЭтоДебиторскаяЗадолженность
	|		И СчетРасчетов.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПредварительныеДанные.Организация КАК Организация,
	|	ПредварительныеДанные.СчетРасчетов КАК СчетРасчетов,
	|	ПредварительныеДанные.Субконто1 КАК Субконто1,
	|	ПредварительныеДанные.Субконто2 КАК Субконто2,
	|	ПредварительныеДанные.Подтверждено КАК Подтверждено,
	|	ЕСТЬNULL(ПериодыДвижений.Период, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) КАК ДатаВозникновения
	|ПОМЕСТИТЬ ОстаткиЗадолженности
	|ИЗ
	|	ПредварительныеДанные КАК ПредварительныеДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПериодыДвиженийКредитыВложения КАК ПериодыДвижений
	|		ПО ПредварительныеДанные.Организация = ПериодыДвижений.Организация
	|			И ПредварительныеДанные.СчетРасчетов = ПериодыДвижений.Счет
	|			И ПредварительныеДанные.Субконто1 = ПериодыДвижений.Субконто1
	|			И ПредварительныеДанные.Субконто2 = ПериодыДвижений.Субконто2
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	СчетРасчетов,
	|	Субконто1,
	|	Субконто2
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПредварительныеДанные
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиЗадолженности.Организация КАК Организация,
	|	ОстаткиЗадолженности.СчетРасчетов КАК СчетРасчетов,
	|	ОстаткиЗадолженности.Субконто1 КАК Субконто1,
	|	ОстаткиЗадолженности.Субконто2 КАК Субконто2,
	|	ОстаткиЗадолженности.Подтверждено КАК Подтверждено,
	|	ОстаткиЗадолженности.ДатаВозникновения КАК ДатаВозникновения,
	|	МАКСИМУМ(ПроведенныеАкты.Дата) КАК ДатаАкта
	|ПОМЕСТИТЬ МаксимальныеДатыПоДокументам
	|ИЗ
	|	ОстаткиЗадолженности КАК ОстаткиЗадолженности
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПроведенныеАкты КАК ПроведенныеАкты
	|		ПО (ОстаткиЗадолженности.Организация = ПроведенныеАкты.Организация)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИнвентаризацияРасчетовСКонтрагентами.ДетальныеЗаписи КАК ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи
	|		ПО (ПроведенныеАкты.Ссылка = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.Ссылка)
	|			И ОстаткиЗадолженности.СчетРасчетов = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.СчетРасчетов
	|			И ОстаткиЗадолженности.Субконто1 = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.Субконто1
	|			И ОстаткиЗадолженности.Субконто2 = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.Субконто2
	|			И (&ВидЗадолженности = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.ВидЗадолженности)
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиЗадолженности.Организация,
	|	ОстаткиЗадолженности.СчетРасчетов,
	|	ОстаткиЗадолженности.Субконто1,
	|	ОстаткиЗадолженности.Субконто2,
	|	ОстаткиЗадолженности.Подтверждено,
	|	ОстаткиЗадолженности.ДатаВозникновения
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ДатаАкта,
	|	СчетРасчетов,
	|	Субконто1,
	|	Субконто2
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МаксимальныеДатыПоДокументам.Организация КАК Организация,
	|	МаксимальныеДатыПоДокументам.СчетРасчетов КАК СчетРасчетов,
	|	МаксимальныеДатыПоДокументам.Субконто1 КАК Субконто1,
	|	МаксимальныеДатыПоДокументам.Субконто2 КАК Субконто2,
	|	МаксимальныеДатыПоДокументам.Подтверждено КАК Подтверждено,
	|	МаксимальныеДатыПоДокументам.ДатаВозникновения КАК ДатаВозникновения,
	|	МАКСИМУМ(ПроведенныеАкты.Ссылка) КАК СсылкаНаДокумент
	|ПОМЕСТИТЬ ПредварительныеДанные
	|ИЗ
	|	МаксимальныеДатыПоДокументам КАК МаксимальныеДатыПоДокументам
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПроведенныеАкты КАК ПроведенныеАкты
	|		ПО (МаксимальныеДатыПоДокументам.Организация = ПроведенныеАкты.Организация)
	|			И (МаксимальныеДатыПоДокументам.ДатаАкта = ПроведенныеАкты.Дата)	
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИнвентаризацияРасчетовСКонтрагентами.ДетальныеЗаписи КАК ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи
	|		ПО (ПроведенныеАкты.Ссылка = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.Ссылка)
	|			И МаксимальныеДатыПоДокументам.СчетРасчетов = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.СчетРасчетов
	|			И МаксимальныеДатыПоДокументам.Субконто1 = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.Субконто1
	|			И МаксимальныеДатыПоДокументам.Субконто2 = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.Субконто2
	|			И (&ВидЗадолженности = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.ВидЗадолженности)
	|
	|СГРУППИРОВАТЬ ПО
	|	МаксимальныеДатыПоДокументам.Организация,
	|	МаксимальныеДатыПоДокументам.СчетРасчетов,
	|	МаксимальныеДатыПоДокументам.Субконто1,
	|	МаксимальныеДатыПоДокументам.Субконто2,
	|	МаксимальныеДатыПоДокументам.Подтверждено,
	|	МаксимальныеДатыПоДокументам.ДатаВозникновения
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СсылкаНаДокумент,
	|	СчетРасчетов,
	|	Субконто1,
	|	Субконто2
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ОстаткиЗадолженности
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ МаксимальныеДатыПоДокументам
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПредварительныеДанные.Организация КАК Организация,
	|	ПредварительныеДанные.СчетРасчетов КАК СчетРасчетов,
	|	ПредварительныеДанные.Субконто1 КАК Субконто1,
	|	ПредварительныеДанные.Субконто2 КАК Субконто2,
	|	ПредварительныеДанные.Подтверждено КАК Подтверждено,
	|	ВЫБОР
	|		КОГДА МИНИМУМ(ЕСТЬNULL(ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.ДатаВозникновения, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0))) <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА МИНИМУМ(ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.ДатаВозникновения)
	|		ИНАЧЕ ПредварительныеДанные.ДатаВозникновения
	|	КОНЕЦ КАК ДатаВозникновения,
	|	МАКСИМУМ(ЕСТЬNULL(ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.ДатаПогашения, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0))) КАК ДатаПогашения,
	|	&ВидЗадолженности КАК ВидЗадолженности,
	|	МАКСИМУМ(ЕСТЬNULL(ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.Комментарий, """")) КАК Комментарий,
	|	ПредварительныеДанные.СчетРасчетов.Порядок КАК ПорядокСчета
	|ИЗ
	|	ПредварительныеДанные КАК ПредварительныеДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИнвентаризацияРасчетовСКонтрагентами.ДетальныеЗаписи КАК ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи
	|		ПО ПредварительныеДанные.СсылкаНаДокумент = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.Ссылка
	|			И ПредварительныеДанные.СчетРасчетов = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.СчетРасчетов
	|			И ПредварительныеДанные.Субконто1 = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.Субконто1
	|			И ПредварительныеДанные.Субконто2 = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.Субконто2
	|			И (&ВидЗадолженности = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.ВидЗадолженности)
	|СГРУППИРОВАТЬ ПО
	|	ПредварительныеДанные.Организация,
	|	ПредварительныеДанные.СчетРасчетов,
	|	ПредварительныеДанные.Субконто1,
	|	ПредварительныеДанные.Субконто2,
	|	ПредварительныеДанные.Подтверждено,
	|	ПредварительныеДанные.ДатаВозникновения
	|
	|УПОРЯДОЧИТЬ ПО
	|	СчетРасчетов,
	|	Субконто1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПредварительныеДанные";
	
	Если Контрагенты = Неопределено Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОтборСубконто1", "ИСТИНА");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОтборСубконто1", "Субконто1 В(&Субконто1)");
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаДополнениеСводныеДанные(ИмяТаблицы)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПредварительныеДанные.СчетРасчетов КАК СчетРасчетов,
	|	ВЫБОР
	|		КОГДА ПредварительныеДанные.СчетРасчетов В (&СчетаРасчетовУчетПоНаименованию)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ПредварительныеДанные.Субконто1
	|	КОНЕЦ КАК Контрагент,
	|	ВЫБОР
	|		КОГДА ПредварительныеДанные.СчетРасчетов В (&СчетаРасчетовУчетПоНаименованию)
	|			ТОГДА ВЫРАЗИТЬ(ПредварительныеДанные.СчетРасчетов КАК ПланСчетов.Хозрасчетный).Наименование
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК НаименованиеСчета,
	|	СУММА(ПредварительныеДанные.Подтверждено) КАК Подтверждено,
	|	СУММА(ПредварительныеДанные.Подтверждено) КАК Всего
	|ИЗ
	|	ИмяТаблицы КАК ПредварительныеДанные
	|
	|СГРУППИРОВАТЬ ПО
	|	ПредварительныеДанные.СчетРасчетов,
	|	ВЫБОР
	|		КОГДА ПредварительныеДанные.СчетРасчетов В (&СчетаРасчетовУчетПоНаименованию)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ПредварительныеДанные.Субконто1
	|	КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	СчетРасчетов,
	|	Контрагент";
	
	Возврат СтрЗаменить(ТекстЗапроса, "ИмяТаблицы", ИмяТаблицы);
	
КонецФункции

Функция ТекстЗапросаОстаткиЗадолженностиУчредители(СводныеДанные = Ложь)
	
	Если СводныеДанные Тогда
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ПредварительныеДанные.СчетРасчетов КАК СчетРасчетов,
		|	ПредварительныеДанные.Субконто1 КАК Контрагент,
		|	СУММА(ВЫБОР
		|			КОГДА &ЭтоДебиторскаяЗадолженность
		|				ТОГДА ПредварительныеДанные.СуммаРазвернутыйОстатокДт - ПредварительныеДанные.СуммаРазвернутыйОстатокКт
		|			ИНАЧЕ ПредварительныеДанные.СуммаРазвернутыйОстатокКт - ПредварительныеДанные.СуммаРазвернутыйОстатокДт
		|		КОНЕЦ) КАК Подтверждено,
		|	СУММА(ВЫБОР
		|			КОГДА &ЭтоДебиторскаяЗадолженность
		|				ТОГДА ПредварительныеДанные.СуммаРазвернутыйОстатокДт - ПредварительныеДанные.СуммаРазвернутыйОстатокКт
		|			ИНАЧЕ ПредварительныеДанные.СуммаРазвернутыйОстатокКт - ПредварительныеДанные.СуммаРазвернутыйОстатокДт
		|		КОНЕЦ) КАК Всего
		|ИЗ
		|	ВТ_РасчетыСУчредителями КАК ПредварительныеДанные
		|ГДЕ
		|	ВЫБОР
		|			КОГДА &ЭтоДебиторскаяЗадолженность
		|				ТОГДА ПредварительныеДанные.ВидСчета = ЗНАЧЕНИЕ(ВидСчета.Активный)
		|			ИНАЧЕ ПредварительныеДанные.ВидСчета = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
		|		КОНЕЦ
		|
		|СГРУППИРОВАТЬ ПО
		|	ПредварительныеДанные.СчетРасчетов,
		|	ПредварительныеДанные.Субконто1
		|
		|ИМЕЮЩИЕ
		|	СУММА(ВЫБОР
		|			КОГДА &ЭтоДебиторскаяЗадолженность
		|				ТОГДА ПредварительныеДанные.СуммаРазвернутыйОстатокДт - ПредварительныеДанные.СуммаРазвернутыйОстатокКт
		|			ИНАЧЕ ПредварительныеДанные.СуммаРазвернутыйОстатокКт - ПредварительныеДанные.СуммаРазвернутыйОстатокДт
		|		КОНЕЦ) <> 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	СчетРасчетов,
		|	Контрагент";
	Иначе
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ВТ_РасчетыСУчредителями.Организация КАК Организация,
		|	ВТ_РасчетыСУчредителями.СчетРасчетов КАК СчетРасчетов,
		|	ВТ_РасчетыСУчредителями.Субконто1 КАК Субконто1,
		|	СУММА(ВЫБОР
		|			КОГДА &ЭтоДебиторскаяЗадолженность
		|				ТОГДА ВТ_РасчетыСУчредителями.СуммаРазвернутыйОстатокДт - ВТ_РасчетыСУчредителями.СуммаРазвернутыйОстатокКт
		|			ИНАЧЕ ВТ_РасчетыСУчредителями.СуммаРазвернутыйОстатокКт - ВТ_РасчетыСУчредителями.СуммаРазвернутыйОстатокДт
		|		КОНЕЦ) КАК Подтверждено,
		|	ЕСТЬNULL(ПериодыДвижений.Период, &НачалоПериода) КАК ДатаВозникновения
		|ПОМЕСТИТЬ ОстаткиПоУчредителям
		|ИЗ
		|	ВТ_РасчетыСУчредителями КАК ВТ_РасчетыСУчредителями
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПериодыДвиженийРасчетыСУчредителями КАК ПериодыДвижений
		|		ПО ВТ_РасчетыСУчредителями.Организация = ПериодыДвижений.Организация
		|			И ВТ_РасчетыСУчредителями.СчетРасчетов = ПериодыДвижений.Счет
		|			И ВТ_РасчетыСУчредителями.Субконто1 = ПериодыДвижений.Субконто1
		|ГДЕ
		|	ВЫБОР
		|			КОГДА &ЭтоДебиторскаяЗадолженность
		|				ТОГДА ВТ_РасчетыСУчредителями.ВидСчета = ЗНАЧЕНИЕ(ВидСчета.Активный)
		|			ИНАЧЕ ВТ_РасчетыСУчредителями.ВидСчета = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
		|		КОНЕЦ
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_РасчетыСУчредителями.Организация,
		|	ВТ_РасчетыСУчредителями.СчетРасчетов,
		|	ВТ_РасчетыСУчредителями.Субконто1,
		|	ЕСТЬNULL(ПериодыДвижений.Период, &НачалоПериода)
		|
		|ИМЕЮЩИЕ
		|	СУММА(ВЫБОР
		|			КОГДА &ЭтоДебиторскаяЗадолженность
		|				ТОГДА ВТ_РасчетыСУчредителями.СуммаРазвернутыйОстатокДт - ВТ_РасчетыСУчредителями.СуммаРазвернутыйОстатокКт
		|			ИНАЧЕ ВТ_РасчетыСУчредителями.СуммаРазвернутыйОстатокКт - ВТ_РасчетыСУчредителями.СуммаРазвернутыйОстатокДт
		|		КОНЕЦ) <> 0
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация,
		|	СчетРасчетов,
		|	Субконто1
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОстаткиПоУчредителям.Организация КАК Организация,
		|	ОстаткиПоУчредителям.СчетРасчетов КАК СчетРасчетов,
		|	ОстаткиПоУчредителям.Субконто1 КАК Субконто1,
		|	ОстаткиПоУчредителям.Подтверждено КАК Подтверждено,
		|	ОстаткиПоУчредителям.ДатаВозникновения КАК ДатаВозникновения,
		|	МАКСИМУМ(ПроведенныеАкты.Дата) КАК ДатаАкта
		|ПОМЕСТИТЬ МаксимальныеДатыПоДокументам
		|ИЗ
		|	ОстаткиПоУчредителям КАК ОстаткиПоУчредителям
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПроведенныеАкты КАК ПроведенныеАкты
		|		ПО (ОстаткиПоУчредителям.Организация = ПроведенныеАкты.Организация)
		|			И (ОстаткиПоУчредителям.ДатаВозникновения <= ПроведенныеАкты.ДатаКонецДня)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИнвентаризацияРасчетовСКонтрагентами.ДетальныеЗаписи КАК ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи
		|		ПО (ПроведенныеАкты.Ссылка = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.Ссылка)
		|			И ОстаткиПоУчредителям.СчетРасчетов = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.СчетРасчетов
		|			И ОстаткиПоУчредителям.Субконто1 = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.Субконто1
		|			И (&ВидЗадолженности = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.ВидЗадолженности)
		|
		|СГРУППИРОВАТЬ ПО
		|	ОстаткиПоУчредителям.Организация,
		|	ОстаткиПоУчредителям.СчетРасчетов,
		|	ОстаткиПоУчредителям.Субконто1,
		|	ОстаткиПоУчредителям.Подтверждено,
		|	ОстаткиПоУчредителям.ДатаВозникновения
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация,
		|	ДатаАкта,
		|	СчетРасчетов,
		|	Субконто1
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ОстаткиПоУчредителям
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МаксимальныеДатыПоДокументам.Организация КАК Организация,
		|	МаксимальныеДатыПоДокументам.СчетРасчетов КАК СчетРасчетов,
		|	МаксимальныеДатыПоДокументам.Субконто1 КАК Субконто1,
		|	МаксимальныеДатыПоДокументам.Подтверждено КАК Подтверждено,
		|	МаксимальныеДатыПоДокументам.ДатаВозникновения КАК ДатаВозникновения,
		|	МАКСИМУМ(ПроведенныеАкты.Ссылка) КАК СсылкаНаДокумент
		|ПОМЕСТИТЬ ПредварительныеДанные
		|ИЗ
		|	МаксимальныеДатыПоДокументам КАК МаксимальныеДатыПоДокументам
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПроведенныеАкты КАК ПроведенныеАкты
		|		ПО (МаксимальныеДатыПоДокументам.Организация = ПроведенныеАкты.Организация)
		|			И (МаксимальныеДатыПоДокументам.ДатаАкта = ПроведенныеАкты.Дата)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИнвентаризацияРасчетовСКонтрагентами.ДетальныеЗаписи КАК ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи
		|		ПО (ПроведенныеАкты.Ссылка = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.Ссылка)
		|			И МаксимальныеДатыПоДокументам.СчетРасчетов = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.СчетРасчетов
		|			И МаксимальныеДатыПоДокументам.Субконто1 = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.Субконто1
		|			И (&ВидЗадолженности = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.ВидЗадолженности)
		|
		|СГРУППИРОВАТЬ ПО
		|	МаксимальныеДатыПоДокументам.Организация,
		|	МаксимальныеДатыПоДокументам.СчетРасчетов,
		|	МаксимальныеДатыПоДокументам.Субконто1,
		|	МаксимальныеДатыПоДокументам.Подтверждено,
		|	МаксимальныеДатыПоДокументам.ДатаВозникновения
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СсылкаНаДокумент,
		|	СчетРасчетов,
		|	Субконто1
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ МаксимальныеДатыПоДокументам
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПредварительныеДанные.Организация КАК Организация,
		|	ПредварительныеДанные.СчетРасчетов КАК СчетРасчетов,
		|	ПредварительныеДанные.Субконто1 КАК Субконто1,
		|	ПредварительныеДанные.Подтверждено КАК Подтверждено,
		|	ВЫБОР
		|		КОГДА МИНИМУМ(ЕСТЬNULL(ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.ДатаВозникновения, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0))) <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|			ТОГДА МИНИМУМ(ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.ДатаВозникновения)
		|		ИНАЧЕ ПредварительныеДанные.ДатаВозникновения
		|	КОНЕЦ КАК ДатаВозникновения,
		|	МАКСИМУМ(ЕСТЬNULL(ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.ДатаПогашения, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0))) КАК ДатаПогашения,
		|	&ВидЗадолженности КАК ВидЗадолженности,
		|	МАКСИМУМ(ЕСТЬNULL(ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.Комментарий, """")) КАК Комментарий,
		|	ВЫРАЗИТЬ(ПредварительныеДанные.СчетРасчетов КАК ПланСчетов.Хозрасчетный).Порядок КАК ПорядокСчета
		|ИЗ
		|	ПредварительныеДанные КАК ПредварительныеДанные
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИнвентаризацияРасчетовСКонтрагентами.ДетальныеЗаписи КАК ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи
		|		ПО ПредварительныеДанные.СсылкаНаДокумент = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.Ссылка
		|			И ПредварительныеДанные.СчетРасчетов = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.СчетРасчетов
		|			И ПредварительныеДанные.Субконто1 = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.Субконто1
		|			И (&ВидЗадолженности = ИнвентаризацияРасчетовСКонтрагентамиДетальныеЗаписи.ВидЗадолженности)
		|
		|СГРУППИРОВАТЬ ПО
		|	ПредварительныеДанные.Организация,
		|	ПредварительныеДанные.СчетРасчетов,
		|	ПредварительныеДанные.Субконто1,
		|	ПредварительныеДанные.ДатаВозникновения,
		|	ПредварительныеДанные.Подтверждено
		|
		|УПОРЯДОЧИТЬ ПО
		|	СчетРасчетов,
		|	Субконто1
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ПредварительныеДанные";
		
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция СчетаРасчетовСПоставщикамиПокупателямиПрочимиКонтрагентами()
	
	Результат = Новый Массив;
	
	// 60 - Расчеты с поставщиками и подрядчиками
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(Результат,
		БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.РасчетыСПоставщикамиИПодрядчиками));
	
	// 62 - Расчеты с покупателями и заказчиками
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(Результат,
		БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.РасчетыСПокупателямиИЗаказчиками));
	
	// 76 - Расчеты с разными дебиторами и кредиторами
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(Результат,
		БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.РасчетыСРазнымиДебиторамиИКредиторами));
	
	// Исключаем счета расчетов с работниками организации
	ИсключитьСчетаИзМассива(Результат, СчетаРасчетовСПерсоналом()); // 76.04, 76.10, 76.14
	ИсключитьСчетаИзМассива(Результат, СчетаРасчетовПоПрочимКонтрагентам()); // 76.41, 76.49
	ИсключитьСчетаИзМассива(Результат, СчетаРасчетовСКонтрагентамиИсключения());
	
	Возврат Результат;
	
КонецФункции

Функция СчетаРасчетовКонтрагентыДоговоры()
	
	// Счета группы 76 только с субконто Контрагенты, Договоры
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ СчетаСубконтоКонтрагенты
	|ИЗ
	|	ПланСчетов.Хозрасчетный.ВидыСубконто КАК ХозрасчетныйВидыСубконто
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|		ПО ХозрасчетныйВидыСубконто.Ссылка = Хозрасчетный.Ссылка
	|ГДЕ
	|	НЕ Хозрасчетный.ПометкаУдаления
	|	И ХозрасчетныйВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты)
	|	И Хозрасчетный.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСРазнымиДебиторамиИКредиторами))
	|	И НЕ Хозрасчетный.ЗапретитьИспользоватьВПроводках
	|	И НЕ Хозрасчетный.Ссылка В (&СчетаИсключаемые)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СчетаСубконтоКонтрагенты.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ СубконтоДокументыРасчетов
	|ИЗ
	|	СчетаСубконтоКонтрагенты КАК СчетаСубконтоКонтрагенты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ХозрасчетныйВидыСубконто
	|		ПО СчетаСубконтоКонтрагенты.Ссылка = ХозрасчетныйВидыСубконто.Ссылка
	|ГДЕ
	|	ХозрасчетныйВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСКонтрагентами)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СчетаСубконтоКонтрагенты.Ссылка КАК Ссылка
	|ИЗ
	|	СчетаСубконтоКонтрагенты КАК СчетаСубконтоКонтрагенты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ХозрасчетныйВидыСубконто
	|		ПО СчетаСубконтоКонтрагенты.Ссылка = ХозрасчетныйВидыСубконто.Ссылка
	|			И (ХозрасчетныйВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры))
	|		ЛЕВОЕ СОЕДИНЕНИЕ СубконтоДокументыРасчетов КАК СубконтоДокументыРасчетов
	|		ПО СчетаСубконтоКонтрагенты.Ссылка = СубконтоДокументыРасчетов.Ссылка
	|ГДЕ
	|	СубконтоДокументыРасчетов.Ссылка ЕСТЬ NULL");
	
	Запрос.УстановитьПараметр("СчетаИсключаемые", СчетаРасчетовСКонтрагентамиИсключения());
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
КонецФункции

Функция СчетаРасчетовПоПрочимКонтрагентам()
	
	Результат = Новый Массив;
	
	// 76.41 - Расчеты по исполнительным документам работников
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(Результат,
		БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.РасчетыПоИсполнительнымДокументамРаботников));
	
	// 76.49 - Расчеты по прочим удержаниям из заработной платы работников
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(Результат,
		БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.РасчетыПоПрочимУдержаниямРаботников));
	
	// 58.01.1 - Паи
	Результат.Добавить(ПланыСчетов.Хозрасчетный.Паи);
	
	Возврат Результат;
	
КонецФункции

Функция СчетаРасчетовСБюджетом() Экспорт
	
	Результат = Новый Массив;
	
	// 68 - Расчеты по налогам и сборам
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(Результат,
		БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.РасчетыПоНалогам));
	
	// 69 - Расчеты по социальному страхованию и обеспечению
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(Результат,
		БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.РасчетыПоСоциальномуСтрахованию));
	
	ИсключитьСчетаИзМассива(Результат, СчетаРасчетовБезОбработки());
	
	Возврат Результат;
	
КонецФункции

Функция СчетаРасчетовПереносСальдо() Экспорт
	
	// Для варианта отчета по строкам баланса
	//
	// Счета, по которым отрицательное сальдо включается в бух.баланс в разрезе субконто "Контрагенты", "Договоры":
	//  - в дебиторскую задолженность сальдо по кредиту счетов
	//  - в кредиторскую задолженность сальдо по дебиту счетов
	
	Результат = Новый Массив;
	
	// 60.01 - Расчеты с поставщиками и подрядчиками
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(Результат,
		БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.РасчетыСПоставщиками));
	
	// 60.21 - Расчеты с поставщиками и подрядчиками (в валюте)
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(Результат,
		БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.РасчетыСПоставщикамиВал));
	
	// 60.31 - Расчеты с поставщиками и подрядчиками (в у.е.)
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(Результат,
		БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.РасчетыСПоставщикамиУЕ));
	
	// 62.01 - Расчеты с покупателями и заказчиками
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(Результат,
		БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.РасчетыСПокупателями));
	
	// 62.21 - Расчеты с покупателями и заказчиками (в валюте)
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(Результат,
		БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.РасчетыСПокупателямиВал));
	
	// 62.31 - Расчеты с покупателями и заказчиками (в у.е.)
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(Результат,
		БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.РасчетыСПокупателямиУЕ));
	
	Возврат Результат;
	
КонецФункции

Функция СчетаРасчетовПоНалогамСборамСтрахованию()
	
	Результат = Новый Массив;
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(Результат, СчетаРасчетовСБюджетом());
	
	// Удалим счета, которые детализируются отдельно по уровням бюджета
	ИсключитьСчетаИзМассива(Результат, СчетаРасчетовПоВидамПлатежейУровнямБюджета());
	
	Возврат Результат;
	
КонецФункции

Функция СчетаРасчетовПоВидамПлатежейУровнямБюджета()
	
	Результат = Новый Массив;
	
	// 68.04.1 - Расчеты с бюджетом
	Результат.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСБюджетом);
	
	// 68.10 - Прочие налоги и сборы
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(Результат,
		БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.ПрочиеНалогиИСборы));
	
	Возврат Результат;
	
КонецФункции

Функция СчетаРасчетовСПерсоналом() Экспорт
	
	Результат = Новый Массив;
	
	// 70 - Расчеты с персоналом по оплате труда
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(Результат,
		БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда));
	
	// 71 - Расчеты с подотчетными лицами
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(Результат,
		БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.РасчетыСПодотчетнымиЛицами_));
	
	// 73 - Расчеты с персоналом по прочим операциям
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(Результат,
		БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоПрочимОперациям));
	
	// 76.04 - Расчеты по депонированным суммам
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(Результат,
		БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.РасчетыПоДепонированнымСуммам));
	
	// 76.10 - Прочие расчеты с физическими лицами
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(Результат,
		БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.ПрочиеРасчетыСФизическимиЛицами));
	
	// 76.14 - Приобретение билетов для командировок
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(Результат,
		БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.Билеты));
	
	Возврат Результат;
	
КонецФункции

Функция СчетаРасчетовСКонтрагентамиИсключения() Экспорт
	
	Результат = Новый Массив;
	
	// 76.01.2 - Платежи (взносы) по добровольному страхованию на случай смерти и причинения вреда здоровью
	Результат.Добавить(ПланыСчетов.Хозрасчетный.ПлатежиПоДобровольномуСтрахованиюРаботников);
	
	// 76.01.9 - Платежи (взносы) по прочим видам страхования
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(Результат,
		БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.ПлатежиПоПрочимВидамСтрахования));
	
	// 76.АВ - НДС по авансам и предоплатам
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(Результат,
		БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.НДСпоАвансамИПредоплатам));
	
	// 76.ВА - НДС по авансам и предоплатам выданным
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(Результат,
		БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.НДСпоАвансамИПредоплатамВыданным));
	
	// 76.К - Корректировка расчетов прошлого периода
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(Результат,
		БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.КорректировкаРасчетовПрошлогоПериода));
	
	// 76.Н - Расчеты по НДС, отложенному для уплаты в бюджет
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(Результат,
		БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.РасчетыПоНДСотложенномуДляУплатыВБюджет));
	
	// 76.НА - Расчеты по НДС при исполнении обязанностей налогового агента
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(Результат,
		БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.РасчетыНДСНалоговогоАгента));
	
	// 76.ОТ - НДС, начисленный по отгрузке
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(Результат,
		БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.НДСНачисленныйПоОтгрузке));
	
	Возврат Результат;
	
КонецФункции

Функция СчетаРасчетовБезОбработки()
	
	Результат = Новый Массив;
	
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(Результат, СчетаПрочиеУчетПоНаименованиюСчета());
	
	// 46 - Выполненные этапы по незавершенным работам
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(Результат,
		БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.ВыполненныеЭтапыПоНезавершеннымРаботам));
	
	// 68.04.2 - Расчет налога на прибыль
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(Результат,
		БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.РасчетНалогаНаПрибыль));
	
	// 69.13 - Расчеты по средствам ФСС для страхователей, применяющих специальные режимы налогообложения
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(Результат,
		БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.ФСС_СПЕЦ));
	
	Возврат Результат;
	
КонецФункции

Функция СчетаРасчетовКредитыВложения()
	
	Результат = Новый Массив;
	
	// 66 - Расчеты по краткосрочным кредитам и займам
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(Результат,
		БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.РасчетыПоКраткосрочнымКредитамИЗаймам));
	
	// 67 - Расчеты по долгосрочным кредитам и займам
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(Результат,
		БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.РасчетыПоДолгосрочнымКредитамИЗаймам));
	
	// 58 - Финансовые вложения
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(Результат,
		БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.ФинансовыеВложения));
	ИсключитьСчетаИзМассива(Результат, БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.Паи));
	
	Возврат Результат;
	
КонецФункции

Функция СчетаРасчетовСУчредителями()
	
	Результат = Новый Массив;
	
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(Результат, СчетаПрочиеУчетПоНаименованиюСчета());
	
	// 75 - Расчеты с учредителями
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(Результат,
		БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.РасчетыСУчредителями));
	
	Возврат Результат;
	
КонецФункции

Функция СчетаПрочиеУчетПоНаименованиюСчета()
	
	Результат = Новый Массив;
	
	// 46 - Выполненные этапы по незавершенным работам
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(Результат,
		БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.ВыполненныеЭтапыПоНезавершеннымРаботам));
	
	// 68.22 - НДС по экспорту к возмещению
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(Результат,
		БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.НДСпоЭкспортуКВозмещению));
	
	// 68.32 - НДС при исполнении обязанностей налогового агента
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(Результат,
		БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.НДСНалоговогоАгента));
	
	// 68.42 - НДС при импорте товаров из Таможенного союза
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(Результат,
		БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.НДСТаможенныйСоюзКУплате));
	
	Возврат Результат;
	
КонецФункции

Функция СчетаРасчетовУчетПоНаименованию() Экспорт
	
	Результат = СчетаРасчетовПоНалогамСборамСтрахованию();
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(Результат, СчетаРасчетовПоВидамПлатежейУровнямБюджета());
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(Результат, СчетаПрочиеУчетПоНаименованиюСчета());
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(Результат, СчетаРасчетовБезОбработки());
	
	Возврат Результат;
	
КонецФункции

Процедура ИсключитьСчетаИзМассива(СчетаРасчетов, ИсключаемыеСчета)
	
	Для Каждого ТекущийСчет Из ИсключаемыеСчета Цикл
		ИндексСчета = СчетаРасчетов.Найти(ТекущийСчет);
		Если ИндексСчета <> Неопределено Тогда 
			СчетаРасчетов.Удалить(ИндексСчета);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ДополнитьПараметрыЗапросаРасчетыСКонтрагентами(Запрос)
	
	ВидСубконтоКонтрагенты = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты;
	ВидСубконтоДоговоры    = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры;
	ВидСубконтоДокументы   = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСКонтрагентами;
	
	ВидыСубконтоБезДокументов = Новый Массив;
	ВидыСубконтоБезДокументов.Добавить(ВидСубконтоКонтрагенты);
	ВидыСубконтоБезДокументов.Добавить(ВидСубконтоДоговоры);
	
	ВидыСубконтоСДокументами = Новый Массив;
	ВидыСубконтоСДокументами.Добавить(ВидСубконтоКонтрагенты);
	ВидыСубконтоСДокументами.Добавить(ВидСубконтоДоговоры);
	ВидыСубконтоСДокументами.Добавить(ВидСубконтоДокументы);
	
	СчетаРасчетов = СчетаРасчетовСПоставщикамиПокупателямиПрочимиКонтрагентами();
	СчетаРасчетовСДокументами = Новый Массив;
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(СчетаРасчетовСДокументами, СчетаРасчетов);
	ИсключитьСчетаИзМассива(СчетаРасчетовСДокументами, СчетаРасчетовКонтрагентыДоговоры());
	
	Запрос.УстановитьПараметр("ВидСубконтоКонтрагенты",    ВидСубконтоКонтрагенты);
	Запрос.УстановитьПараметр("ВидСубконтоДоговоры",       ВидСубконтоДоговоры);
	Запрос.УстановитьПараметр("ВидСубконтоДокументы",      ВидСубконтоДокументы);
	Запрос.УстановитьПараметр("ВидыСубконтоСДокументами",  ВидыСубконтоСДокументами);
	Запрос.УстановитьПараметр("ВидыСубконтоБезДокументов", ВидыСубконтоБезДокументов);
	
	Запрос.УстановитьПараметр("ВидыДоговоровПоставщики", БухгалтерскиеОтчеты.ВидыДоговоровПоставщиков());
	Запрос.УстановитьПараметр("ВидыДоговоровПокупатели", БухгалтерскиеОтчеты.ВидыДоговоровПокупателей());
	
	Запрос.УстановитьПараметр("СчетаРасчетов", СчетаРасчетов);
	Запрос.УстановитьПараметр("СчетаРасчетовСДокументами", СчетаРасчетовСДокументами);
	Запрос.УстановитьПараметр("СчетаРасчетовПереносСальдо", СчетаРасчетовПереносСальдо());
	
КонецПроцедуры

Процедура ДополнитьПараметрыЗапросаРасчетыСБюджетом(Запрос)
	
	СубконтоВидыПлатежей = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидыПлатежейВГосБюджет;
	
	СубконтоВидыПлатежейУровни = Новый Массив;
	СубконтоВидыПлатежейУровни.Добавить(СубконтоВидыПлатежей);
	СубконтоВидыПлатежейУровни.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.УровниБюджетов);
	
	Запрос.УстановитьПараметр("СубконтоВидыПлатежей", СубконтоВидыПлатежей);
	Запрос.УстановитьПараметр("СчетаПоВидамПлатежей", СчетаРасчетовПоНалогамСборамСтрахованию());
	
	Запрос.УстановитьПараметр("СубконтоВидыПлатежейУровни", СубконтоВидыПлатежейУровни);
	Запрос.УстановитьПараметр("СчетаПоВидамПлатежейУровням", СчетаРасчетовПоВидамПлатежейУровнямБюджета());
	
КонецПроцедуры
#КонецОбласти

#КонецОбласти

#КонецЕсли