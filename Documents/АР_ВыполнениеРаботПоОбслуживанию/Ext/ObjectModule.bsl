#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура предназначена для формирования документов "Поступление товаров и услуг" по данным о выполненных работах
Процедура СформироватьДокументыПоступленияУслуг() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	АР_ВыполнениеРаботПоОбслуживаниюРаботы.Подрядчик КАК Подрядчик,
	|	АР_ВыполнениеРаботПоОбслуживаниюРаботы.Работа КАК Номенклатура,
	|	АР_ВыполнениеРаботПоОбслуживаниюРаботы.Цена,
	|	АР_ВыполнениеРаботПоОбслуживаниюРаботы.Количество,
	|	АР_ВыполнениеРаботПоОбслуживаниюРаботы.Сумма,
	|	АР_ВыполнениеРаботПоОбслуживаниюРаботы.ТехОперация.Наименование КАК Содержание
	|ИЗ
	|	Документ.АР_ВыполнениеРаботПоОбслуживанию.Работы КАК АР_ВыполнениеРаботПоОбслуживаниюРаботы
	|ГДЕ
	|	(НЕ АР_ВыполнениеРаботПоОбслуживаниюРаботы.ВнутренняяРабота)
	|	И АР_ВыполнениеРаботПоОбслуживаниюРаботы.Ссылка = &Ссылка
	|ИТОГИ ПО
	|	Подрядчик";
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	
	ВыборкаПоПодрядчикам = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаПоПодрядчикам.Следующий() Цикл
		
		Если Не ЗначениеЗаполнено(ВыборкаПоПодрядчикам.Подрядчик) Тогда
			Продолжить;
		КонецЕсли;
			
		//создаем документ "Поступление товаров и услуг"
		Док = Документы.ПоступлениеТоваровУслуг.СоздатьДокумент();
		Док.Дата = Дата;
		Док.ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ПокупкаКомиссия;
		Док.Комментарий = "Создан из документа "+СокрЛП(ЭтотОбъект);
		Док.Ответственный = ПараметрыСеанса.ТекущийПользователь;
		
		Док.Организация = Организация;
		Док.Контрагент 	= ВыборкаПоПодрядчикам.Подрядчик;
		ЗаполнениеДокументов.ПриИзмененииЗначенияКонтрагента(Док);
		Док.ВалютаДокумента = Док.ДоговорКонтрагента.ВалютаВзаиморасчетов;
		
		//заполняем табличную часть услуг
		ВыборкаПоУслугам = ВыборкаПоПодрядчикам.Выбрать();
		Пока ВыборкаПоУслугам.Следующий() Цикл
			СтрТЧ = Док.Услуги.Добавить();
			ЗаполнитьЗначенияСвойств(СтрТЧ,ВыборкаПоУслугам);
		КонецЦикла;
		
		Попытка
			Док.Записать();
			Сообщить("Успешно записан документ "+СокрЛП(Док));
		Исключение
			Сообщить("Не удалось записать документ поступления услуг для подрядчика "+ВыборкаПоПодрядчикам.Подрядчик,СтатусСообщения.Важное);
		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры

// Процедура предназначена для автоматического заполнения списка работ по данным технологических карт
Процедура ЗаполнитьРаботы() Экспорт
		
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МоментВремени", ?(ЗначениеЗаполнено(Дата), КонецДня(Дата), КонецДня(ТекущаяДата())));
	Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.УстановитьПараметр("ОбъектАренды",ОбъектАренды);
	Запрос.УстановитьПараметр("ЭлементОбъекта",ЭлементОбъекта);
	
	Если ЗначениеЗаполнено(Заявка) Тогда
		Запрос.УстановитьПараметр("Заявка", Заявка);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	АР_ЗаявкиНаОбслуживаниеОстатки.КомплексРабот,
		|	АР_ЗаявкиНаОбслуживаниеОстатки.Номенклатура КАК Работа,
		|	АР_ЗаявкиНаОбслуживаниеОстатки.КоличествоОстаток КАК Количество
		|ИЗ
		|	РегистрНакопления.АР_ЗаявкиНаОбслуживание.Остатки(
		|			&МоментВремени,
		|			Заявка = &Заявка
		|				И ОбъектАренды = &ОбъектАренды
		|				И ЭлементОбъекта = &ЭлементОбъекта
		|				И Организация = &Организация) КАК АР_ЗаявкиНаОбслуживаниеОстатки";
		ТаблицаРабот = Запрос.Выполнить().Выгрузить();
	КонецЕсли;
	
	ДопУсловие = "";
	
	Если ЗначениеЗаполнено(Заявка) Тогда //делаем отбор только по тем работам, которые указаны в заявке
		ДопУсловие = " И КомплексРабот В (&КомплексыРабот) ";
		МассивКомплексныхРабот = ТаблицаРабот.Скопировать();
		МассивКомплексныхРабот.Свернуть("КомплексРабот");
		Запрос.УстановитьПараметр("КомплексыРабот",МассивКомплексныхРабот.ВыгрузитьКолонку("КомплексРабот"));
	КонецЕсли;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	АР_ПараметрыЭксплуатацииОбъектовСрезПоследних.Организация,
	|	АР_ПараметрыЭксплуатацииОбъектовСрезПоследних.ОбъектАренды,
	|	АР_ПараметрыЭксплуатацииОбъектовСрезПоследних.ЭлементОбъекта,
	|	АР_ПараметрыЭксплуатацииОбъектовСрезПоследних.КомплексРабот,
	|	АР_ПараметрыЭксплуатацииОбъектовСрезПоследних.Спецификация,
	|	АР_ПараметрыЭксплуатацииОбъектовСрезПоследних.ТипОбслуживания,
	|	АР_ПараметрыЭксплуатацииОбъектовСрезПоследних.ГрафикОбслуживания,
	|	АР_ПараметрыЭксплуатацииОбъектовСрезПоследних.ПоказательВыработки,
	|	АР_ПараметрыЭксплуатацииОбъектовСрезПоследних.ПороговоеЗначениеВыработки,
	|	АР_ПараметрыЭксплуатацииОбъектовСрезПоследних.ГрафикОбслуживания,
	|	АР_ПараметрыЭксплуатацииОбъектовСрезПоследних.ТехнологическаяКарта,
	|	АР_ТехнологическиеКартыТехОбслуживанияМаршрут.Операция КАК ТехОперация,
	|	АР_ТехнологическиеКартыТехОбслуживанияМаршрут.Операция.СтатьяЗатрат КАК СтатьяЗатрат,
	|	АР_ТехнологическиеКартыТехОбслуживанияМаршрут.ВремяВыполнения,
	|	АР_ТехнологическиеКартыТехОбслуживанияМаршрут.Количество,
	|	АР_ТехнологическиеКартыТехОбслуживанияМаршрут.Работа,
	|	АР_ТехнологическиеКартыТехОбслуживанияМаршрут.ВнутренняяРабота,
	|	АР_ТехнологическиеКартыТехОбслуживанияМаршрут.Операция.Расценка КАК Цена,
	|	АР_ТехнологическиеКартыТехОбслуживанияМаршрут.Операция.Расценка * АР_ТехнологическиеКартыТехОбслуживанияМаршрут.Количество КАК Сумма
	|ИЗ
	|	РегистрСведений.АР_ПараметрыЭксплуатацииОбъектов.СрезПоследних(&МоментВремени, Организация = &Организация И ОбъектАренды = &ОбъектАренды И ЭлементОбъекта = &ЭлементОбъекта"
	+ДопУсловие+") КАК АР_ПараметрыЭксплуатацииОбъектовСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.АР_ТехнологическиеКартыТехОбслуживания.Маршрут КАК АР_ТехнологическиеКартыТехОбслуживанияМаршрут
	|		ПО АР_ПараметрыЭксплуатацииОбъектовСрезПоследних.ТехнологическаяКарта = АР_ТехнологическиеКартыТехОбслуживанияМаршрут.Ссылка";
	
	
	РезультатЗапроса = Запрос.Выполнить();
	
	//теперь пройдемся по всем объектам и их элементам	

	Если ЗначениеЗаполнено(Заявка) Тогда
		
		////заполняется по заявке, необходимо учесть количество комплексных работ в заявке
		//ТаблицаРабот = Заявка.Работы.Выгрузить();
		//ТаблицаРабот.Свернуть("КомплексРабот,Работа","Количество");
	
	 	//теперь пройдемся по всем объектам и их элементам	
		Отбор = Новый Структура("КомплексРабот, Работа");
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			ЗаполнитьЗначенияСвойств(Отбор, Выборка);
			СтрокиВЗаявке = ТаблицаРабот.НайтиСтроки(Отбор);
			Если СтрокиВЗаявке.Количество() = 0 Тогда
				Продолжить;
			Иначе
				СтрокаВЗаявке = СтрокиВЗаявке[0];
				Если СтрокаВЗаявке.Количество = 0 Тогда
					Продолжить;
				КонецЕсли;
			КонецЕсли;
			
			//добавляем работу в табличную часть
			СтрокаТЧ = Работы.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТЧ, Выборка);
			
			СтрокаТЧ.Количество = СтрокаВЗаявке.Количество;
			СтрокаТЧ.Сумма = СтрокаТЧ.Количество * СтрокаТЧ.Цена;
			
		КонецЦикла;
		
	Иначе
		
		//заполняем в однократном размере по каждому комплексу работ	
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			//добавляем работу в табличную часть
			СтрокаТЧ = Работы.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТЧ,Выборка);
			
		КонецЦикла;
		
	КонецЕсли;

КонецПроцедуры

// Процедура предназначена для автоматического заполнения списка работ по данным спецификаций
Процедура ЗаполнитьМатериалы() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Работы", Работы.Выгрузить());
	Запрос.УстановитьПараметр("ОбъектАренды", ОбъектАренды);
	Запрос.УстановитьПараметр("ЭлементОбъекта", ЭлементОбъекта);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&ОбъектАренды КАК ОбъектАренды,
	|	&ЭлементОбъекта КАК ЭлементОбъекта,
	|	Работы.КомплексРабот КАК КомплексРабот
	|ПОМЕСТИТЬ ВТРаботы
	|ИЗ
	|	&Работы КАК Работы";
	Запрос.Выполнить();
	
	Запрос.УстановитьПараметр("МоментВремени", ?(ЗначениеЗаполнено(Дата), КонецДня(Дата), КонецДня(ТекущаяДата())));
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ПустаяСтатья", Справочники.СтатьиЗатрат.ПустаяСсылка());
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Материалы.Номенклатура,
	|	Материалы.Количество,
	|	Материалы.КомплексРабот,
	|	Материалы.ГрафикОбслуживания,
	|	ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0) КАК Цена,
	|	Материалы.ОбъектАренды,
	|	Материалы.ЭлементОбъекта,
	|	Материалы.СтатьяЗатрат
	|ИЗ
	|	(ВЫБРАТЬ
	|		СпецификацияКомплектующие.Номенклатура КАК Номенклатура,
	|		СУММА(СпецификацияКомплектующие.Количество) КАК Количество,
	|		Работы.КомплексРабот КАК КомплексРабот,
	|		ПараметрыЭксплуатации.ГрафикОбслуживания КАК ГрафикОбслуживания,
	|		Работы.ОбъектАренды КАК ОбъектАренды,
	|		Работы.ЭлементОбъекта КАК ЭлементОбъекта,
	|		СпецификацияКомплектующие.Номенклатура.СтатьяЗатрат КАК СтатьяЗатрат
	|	ИЗ
	|		ВТРаботы КАК Работы
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АР_ПараметрыЭксплуатацииОбъектов.СрезПоследних(&МоментВремени, Организация = &Организация) КАК ПараметрыЭксплуатации
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СпецификацииНоменклатуры.ИсходныеКомплектующие КАК СпецификацияКомплектующие
	|				ПО ПараметрыЭксплуатации.Спецификация = СпецификацияКомплектующие.Ссылка
	|			ПО Работы.ОбъектАренды = ПараметрыЭксплуатации.ОбъектАренды
	|				И Работы.ЭлементОбъекта = ПараметрыЭксплуатации.ЭлементОбъекта
	|				И Работы.КомплексРабот = ПараметрыЭксплуатации.КомплексРабот
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Работы.КомплексРабот,
	|		СпецификацияКомплектующие.Номенклатура,
	|		ПараметрыЭксплуатации.ГрафикОбслуживания,
	|		Работы.ОбъектАренды,
	|		Работы.ЭлементОбъекта,
	|		СпецификацияКомплектующие.Номенклатура.СтатьяЗатрат) КАК Материалы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&МоментВремени, ТипЦен = &ПлановыеЦены) КАК ЦеныНоменклатуры
	|		ПО Материалы.Номенклатура = ЦеныНоменклатуры.Номенклатура";
	 
	Запрос.УстановитьПараметр("ПлановыеЦены", Константы.АР_ТипЦенПлановойСебестоимостиМатериалов.Получить());
	
	РезультатЗапроса = Запрос.Выполнить();
	
	
	Если ЗначениеЗаполнено(Заявка) Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			//добавляем работу в табличную часть
			СтрокаТЧ = Материалы.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТЧ,Выборка);
			
			//СтрокаТЧ.Количество = СтрокаТЧ.Количество * СтрокаВЗаявке.Количество;
			СтрокаТЧ.Сумма = СтрокаТЧ.Количество * СтрокаТЧ.Цена;
			
		КонецЦикла;
		
	Иначе
		
		//заполняем в однократном размере по каждому комплексу работ	
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			//добавляем работу в табличную часть
			СтрокаТЧ = Материалы.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТЧ,Выборка);
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

// Процедура предназначена для автоматического заполнения списка работ по данным требований-накладных
Процедура ЗаполнитьМатериалыПоТН() Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("МоментВремени", ?(ЗначениеЗаполнено(Дата), КонецДня(Дата), КонецДня(ТекущаяДата())));
	Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.УстановитьПараметр("ОбъектАренды",ОбъектАренды);
	Запрос.УстановитьПараметр("ЭлементОбъекта",ЭлементОбъекта);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("СтатьиЗатрат", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТребованиеНакладнаяМатериалы.Номенклатура,
	|	ТребованиеНакладнаяМатериалы.Количество,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйДвиженияССубконто.ВидСубконтоДт1 = &СтатьиЗатрат
	|			ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт1
	|		КОГДА ХозрасчетныйДвиженияССубконто.ВидСубконтоДт2 = &СтатьиЗатрат
	|			ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт2
	|		КОГДА ХозрасчетныйДвиженияССубконто.ВидСубконтоДт3 = &СтатьиЗатрат
	|			ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт3
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка)
	|	КОНЕЦ КАК СтатьяЗатрат,
	|	ЕСТЬNULL(ХозрасчетныйДвиженияССубконто.Сумма, 0) КАК Сумма,
	|	ЕСТЬNULL(ХозрасчетныйДвиженияССубконто.Сумма, 0) / ТребованиеНакладнаяМатериалы.Количество КАК Цена,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.Количество = 1
	|			ТОГДА ВложенныйЗапрос.КомплексРабот
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	КОНЕЦ КАК КомплексРабот,
	|	ЕСТЬNULL(ВложенныйЗапрос.Количество, 0) КАК КоличествоКомплексРабот
	|ИЗ
	|	Документ.АР_ВыполнениеРаботПоОбслуживанию.ДокументыСписания КАК АР_ВыполнениеРаботПоОбслуживаниюДокументыСписания
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ТребованиеНакладная.Материалы КАК ТребованиеНакладнаяМатериалы
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.ДвиженияССубконто КАК ХозрасчетныйДвиженияССубконто
	|			ПО ТребованиеНакладнаяМатериалы.Ссылка = ХозрасчетныйДвиженияССубконто.Регистратор
	|				И ТребованиеНакладнаяМатериалы.Номенклатура = ХозрасчетныйДвиженияССубконто.СубконтоКт1
	|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				КОЛИЧЕСТВО(РАЗЛИЧНЫЕ АР_ПараметрыЭксплуатацииОбъектовСрезПоследних.КомплексРабот) КАК Количество,
	|				СпецификацииНоменклатурыИсходныеКомплектующие.Номенклатура КАК Номенклатура,
	|				МАКСИМУМ(АР_ПараметрыЭксплуатацииОбъектовСрезПоследних.КомплексРабот) КАК КомплексРабот
	|			ИЗ
	|				РегистрСведений.АР_ПараметрыЭксплуатацииОбъектов.СрезПоследних(
	|						&МоментВремени,
	|						ОбъектАренды = &ОбъектАренды
	|							И ЭлементОбъекта = &ЭлементОбъекта) КАК АР_ПараметрыЭксплуатацииОбъектовСрезПоследних
	|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СпецификацииНоменклатуры.ИсходныеКомплектующие КАК СпецификацииНоменклатурыИсходныеКомплектующие
	|					ПО АР_ПараметрыЭксплуатацииОбъектовСрезПоследних.Спецификация = СпецификацииНоменклатурыИсходныеКомплектующие.Ссылка
	|			
	|			СГРУППИРОВАТЬ ПО
	|				СпецификацииНоменклатурыИсходныеКомплектующие.Номенклатура) КАК ВложенныйЗапрос
	|			ПО ТребованиеНакладнаяМатериалы.Номенклатура = ВложенныйЗапрос.Номенклатура
	|		ПО АР_ВыполнениеРаботПоОбслуживаниюДокументыСписания.ТребованиеНакладная = ТребованиеНакладнаяМатериалы.Ссылка
	|ГДЕ
	|	АР_ВыполнениеРаботПоОбслуживаниюДокументыСписания.Ссылка = &Ссылка";
	 
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		//добавляем работу в табличную часть
		СтрокаТЧ = Материалы.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТЧ,Выборка);
		
		Если Выборка.КоличествоКомплексРабот > 1 Тогда
			Сообщить("Материал """ + Выборка.Номенклатура + """ используется в нескольких комплексах работ!");
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьСебестоимостьМатериалов()
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СебестоимостьНоменклатуры.Номенклатура,
	|	ВЫБОР
	|		КОГДА СебестоимостьНоменклатуры.Количество <> 0
	|			ТОГДА СебестоимостьНоменклатуры.Сумма / СебестоимостьНоменклатуры.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Себестоимость,
	|	СебестоимостьНоменклатуры.Сумма,
	|	СебестоимостьНоменклатуры.Количество
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ХозрасчетныйДвиженияССубконто.СубконтоКт1 КАК Номенклатура,
	|		СУММА(ХозрасчетныйДвиженияССубконто.Сумма) КАК Сумма,
	|		СУММА(ХозрасчетныйДвиженияССубконто.КоличествоКт) КАК Количество
	|	ИЗ
	|		РегистрБухгалтерии.Хозрасчетный.ДвиженияССубконто(
	|				,
	|				,
	|				Регистратор В
	|						(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|							АР_ВыполнениеРаботПоОбслуживаниюДокументыСписания.ТребованиеНакладная
	|						ИЗ
	|							Документ.АР_ВыполнениеРаботПоОбслуживанию.ДокументыСписания КАК АР_ВыполнениеРаботПоОбслуживаниюДокументыСписания
	|						ГДЕ
	|							АР_ВыполнениеРаботПоОбслуживаниюДокументыСписания.Ссылка = &Ссылка)
	|					И (СчетКт В ИЕРАРХИИ (&Счет10)
	|						ИЛИ СчетКт В ИЕРАРХИИ (&Счет41)
	|						ИЛИ СчетКт В ИЕРАРХИИ (&Счет43))) КАК ХозрасчетныйДвиженияССубконто
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ХозрасчетныйДвиженияССубконто.СубконтоКт1) КАК СебестоимостьНоменклатуры";
	
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	Запрос.УстановитьПараметр("Счет10",ПланыСчетов.Хозрасчетный.Материалы);
	Запрос.УстановитьПараметр("Счет41",ПланыСчетов.Хозрасчетный.Товары);
	Запрос.УстановитьПараметр("Счет43",ПланыСчетов.Хозрасчетный.ГотоваяПродукция);
	
	ТаблицаСебестоимости = Запрос.Выполнить().Выгрузить();
	Возврат ТаблицаСебестоимости;
	
КонецФункции

// Процедура предназначена для автоматического заполнения стоимостей списания материалов
Процедура РассчитатьСтоимостьМатериалов() Экспорт
	ТаблицаСебестоимости = ПолучитьСебестоимостьМатериалов();
	Для Каждого Стр Из Материалы Цикл
		СтрокаСебестоимости = ТаблицаСебестоимости.Найти(Стр.Номенклатура,"Номенклатура");
		Если ЗначениеЗаполнено(СтрокаСебестоимости) Тогда
			
			Если СтрокаСебестоимости.Количество<Стр.Количество Тогда
				Сообщить("По документам списания не хватает "+Строка(Стр.Количество - СтрокаСебестоимости.Количество)+" ед. номенклатуры """+
				Стр.Номенклатура+"""!",СтатусСообщения.Важное);
			КонецЕсли;
				
			Стр.Цена = СтрокаСебестоимости.Себестоимость;
			Стр.Сумма = Стр.Количество*Стр.Цена;
		Иначе	
			Сообщить("По документам списания не хватает "+Строка(Стр.Количество)+" ед. номенклатуры """+Стр.Номенклатура+"""!",СтатусСообщения.Важное);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	Если ДанныеЗаполнения <> Неопределено И ТипДанныхЗаполнения <> Тип("Структура")
		И Метаданные().ВводитсяНаОсновании.Содержит(ДанныеЗаполнения.Метаданные()) Тогда
		ДокументОснование = ДанныеЗаполнения;
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДокументОснование,, "Дата, Номер, Проведен, ПометкаУдаления");
		Заявка = ДанныеЗаполнения.Ссылка;
		ЗаполнитьРаботы();
		ЗаполнитьМатериалы();
	КонецЕсли;
	ЗаполнениеДокументов.Заполнить(ЭтотОбъект, ДанныеЗаполнения);

КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)

	Дата = НачалоДня(ОбщегоНазначения.ТекущаяДатаПользователя());
	Ответственный = Пользователи.ТекущийПользователь();

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
		
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка  Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	// Исключаем из проверки реквизиты, заполнение которых стало необязательным:
	МассивНепроверяемыхРеквизитов = Новый Массив();
	
	//ПроверитьПринадлежностьЭлементаОбъекту(Отказ);
	
	// Удаляем из проверяемых реквизитов все, по которым автоматическая проверка не нужна:
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)

	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ДОКУМЕНТА

	ПроведениеСервер.ПодготовитьНаборыЗаписейКПроведению(ЭтотОбъект);
	Если РучнаяКорректировка Тогда
		Возврат;
	КонецЕсли;

	ПараметрыПроведения = Документы.АР_ВыполнениеРаботПоОбслуживанию.ПодготовитьПараметрыПроведения(Ссылка, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;

	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ИНФОРМАЦИОННОЙ БАЗЫ

	// ФОРМИРОВАНИЕ ДВИЖЕНИЙ
	
	АР_ОбщиеПроцедуры.СформироватьДвиженияПоРегистру(ПараметрыПроведения.ЗаявкиРаботы, Движения, "АР_ЗаявкиНаОбслуживание", Отказ);
	АР_ОбщиеПроцедуры.СформироватьДвиженияПоРегистру(ПараметрыПроведения.ЗаявкиМатериалы, Движения, "АР_ЗаявкиНаОбслуживание", Отказ);
	
	АР_ОбщиеПроцедуры.СформироватьДвиженияПоРегистру(ПараметрыПроведения.ЗатратыРаботы, Движения, "АР_ФактическиеЗатратыНаОбслуживаниеОбъектов", Отказ);
	АР_ОбщиеПроцедуры.СформироватьДвиженияПоРегистру(ПараметрыПроведения.ЗатратыМатериалы, Движения, "АР_ФактическиеЗатратыНаОбслуживаниеОбъектов", Отказ);
	
	АР_ОбщиеПроцедуры.СформироватьДвиженияПоРегистру(ПараметрыПроведения.ВыполнениеРабот, Движения, "АР_ВыполнениеРаботПоОбслуживанию", Отказ);
	
	ПроведениеСервер.УстановитьЗаписьОчищаемыхНаборовЗаписей(ЭтотОбъект);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)

	ПроведениеСервер.ПодготовитьНаборыЗаписейКОтменеПроведения(ЭтотОбъект);
	Движения.Записать();

КонецПроцедуры

#КонецЕсли
