#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция ВремяДокументаПоУмолчанию() Экспорт
	
	Возврат Новый Структура("Часы, Минуты", 14, 0);
	
КонецФункции

Функция ТекстЗапросаДанныеДляПечатиСчетовФактур(НомераТаблиц) Экспорт

	НомераТаблиц.Вставить("Реквизиты",                         НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТ_РублевыеСуммыДокументовВВалюте", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВременнаяТаблицаДокумента",         НомераТаблиц.Количество());
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Реквизиты.Дата КАК ДатаОснования,
	|	Реквизиты.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК Склад,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	ВЫБОР
	|		КОГДА Реквизиты.ПодразделениеОрганизации.ОбособленноеПодразделение
	|			ТОГДА Реквизиты.ПодразделениеОрганизации.ЦифровойИндексОбособленногоПодразделения
	|		ИНАЧЕ ВЫБОР
	|				КОГДА Реквизиты.Организация.ОбособленноеПодразделение
	|					ТОГДА Реквизиты.Организация.ЦифровойИндексОбособленногоПодразделения
	|				ИНАЧЕ """"
	|			КОНЕЦ
	|	КОНЕЦ КАК ЦифровойИндексОбособленногоПодразделения,
	|	ВЫБОР
	|		КОГДА Реквизиты.Организация.ОбособленноеПодразделение
	|			ТОГДА Реквизиты.Организация.ГоловнаяОрганизация
	|		ИНАЧЕ Реквизиты.Организация
	|	КОНЕЦ КАК Поставщик,
	|	ВЫБОР
	|		КОГДА Реквизиты.Организация.ОбособленноеПодразделение
	|			ТОГДА Реквизиты.Организация.ГоловнаяОрганизация.ИНН
	|		ИНАЧЕ Реквизиты.Организация.ИНН
	|	КОНЕЦ КАК ИННпоставщика,
	|	ВЫБОР
	|		КОГДА Реквизиты.ПодразделениеОрганизации.ОбособленноеПодразделение
	|			ТОГДА Реквизиты.ПодразделениеОрганизации
	|		ИНАЧЕ Реквизиты.Организация
	|	КОНЕЦ КАК ОбособленноеПодразделениеПоставщика,
	|	НЕОПРЕДЕЛЕНО КАК Грузоотправитель,
	|	ВЫБОР
	|		КОГДА Реквизиты.Контрагент.ОбособленноеПодразделение
	|				И Реквизиты.Контрагент.ГоловнойКонтрагент.СтранаРегистрации = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|			ТОГДА Реквизиты.Контрагент.ГоловнойКонтрагент
	|		ИНАЧЕ Реквизиты.Контрагент
	|	КОНЕЦ КАК Покупатель,
	|	Реквизиты.Контрагент.ИНН КАК ИННпокупателя,
	|	Реквизиты.Контрагент КАК ОбособленноеПодразделениеПокупателя,
	|	НЕОПРЕДЕЛЕНО КАК Грузополучатель,
	|	Реквизиты.ВалютаДокумента КАК Валюта,
	|	Реквизиты.ДоговорКонтрагента.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	Реквизиты.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах КАК РасчетыВУсловныхЕдиницах,
	|	Реквизиты.ДоговорКонтрагента.ВидДоговора КАК ВидДоговора,
	|	Реквизиты.ДоговорКонтрагента.Представление КАК Основание,
	|	Реквизиты.ДоговорКонтрагента.Дата КАК ОснованиеДата,
	|	Реквизиты.ДоговорКонтрагента.Номер КАК ОснованиеНомер,
	|	Реквизиты.Исполнитель КАК Исполнитель,
	|	Реквизиты.ИсполнительНаОсновании КАК ИсполнительНаОсновании,
	|	НЕОПРЕДЕЛЕНО КАК ОтпускПроизвел,
	|	НЕОПРЕДЕЛЕНО КАК ДоверенностьНомер,
	|	НЕОПРЕДЕЛЕНО КАК ДоверенностьДата,
	|	НЕОПРЕДЕЛЕНО КАК ДоверенностьВыдана,
	|	НЕОПРЕДЕЛЕНО КАК ДоверенностьЧерезКого,
	|	НЕОПРЕДЕЛЕНО КАК ЗаЗаказчикаНаОсновании,
	|	ЛОЖЬ КАК ЕстьТовары,
	|	Реквизиты.Контрагент КАК Контрагент,
	|	"""" КАК АдресДоставки,
	|	"""" КАК СведенияОТранспортировкеИГрузе,
	|	НЕОПРЕДЕЛЕНО КАК ОтветственныйЗаОформление,
	|	"""" КАК СопроводительныеДокументы,
	|	НЕОПРЕДЕЛЕНО КАК Перевозчик,
	|	ЛОЖЬ КАК ПеревозкаАвтотранспортом
	|ИЗ
	|	Документ.АктОбОказанииПроизводственныхУслуг КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента КАК НомерСтрокиДокумента,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента КАК ТабличнаяЧастьДокумента,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего КАК Всего,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС КАК НДС,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС КАК НалоговаяБазаНДС
	|ПОМЕСТИТЬ РегистрСведенийРублевыеСуммыДокументовВВалюте
	|ИЗ
	|	РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|ГДЕ
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор = &ДокументОснование
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	1 КАК НомерТабЧасти,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура КАК Товар,
	|	ТаблицаТовары.Номенклатура.Код КАК ТоварКод,
	|	ТаблицаТовары.Номенклатура.КодОКВЭД2 КАК ТоварАртикул,
	|	ТаблицаТовары.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
	|	ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка) КАК СтранаПроисхождения,
	|	НЕОПРЕДЕЛЕНО КАК ПредставлениеСтраны,
	|	НЕОПРЕДЕЛЕНО КАК НомерГТД,
	|	НЕОПРЕДЕЛЕНО КАК ПредставлениеГТД,
	|	НЕОПРЕДЕЛЕНО КАК РегистрационныйНомерТД,
	|	ТаблицаТовары.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.Цена КАК Цена,
	|	ТаблицаТовары.Сумма КАК Сумма,
	|	ТаблицаТовары.СуммаНДС КАК СуммаНДС,
	|	ТаблицаТовары.СтавкаНДС КАК СтавкаНДС,
	|	ЛОЖЬ КАК ЭтоУслуга,
	|	ТаблицаТовары.Ссылка.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ЛОЖЬ КАК ЭтоКомиссия,
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего, 0) КАК ВсегоРуб,
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС, 0) КАК СуммаБезНДСРуб,
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС, 0) КАК НДСРуб,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК КонтрагентСводныйСФ,
	|	ТаблицаТовары.Номенклатура.ПериодичностьУслуги КАК ПериодичностьУслуги,
	|	ЗНАЧЕНИЕ(Справочник.КлассификаторТНВЭД.ПустаяСсылка) КАК ТоварКодТНВЭД
	|ПОМЕСТИТЬ ТаблицаДокумента
	|ИЗ
	|	Документ.АктОбОказанииПроизводственныхУслуг.Услуги КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|		ПО ТаблицаТовары.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента
	|			И (РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Услуги))
	|			И (ТаблицаТовары.Ссылка.ВалютаДокумента <> &ВалютаРеглУчета)
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &ДокументОснование";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаПечатьУниверсальныхПередаточныхДокументов(ИспользуетсяПостановлениеНДС981 = Истина) Экспорт

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Документ.СчетФактураВыданный.ПустаяСсылка) КАК СчетФактура,
	|	АктОбОказанииПроизводственныхУслуг.Дата КАК Дата,
	|	АктОбОказанииПроизводственныхУслуг.Номер КАК Номер,
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК Руководитель,
	|	НЕОПРЕДЕЛЕНО КАК ГлавныйБухгалтер,
	|	ИСТИНА КАК СчетФактураБезНДС,
	|	ЛОЖЬ КАК Исправление,
	|	НЕОПРЕДЕЛЕНО КАК НомерИсправления,
	|	НЕОПРЕДЕЛЕНО КАК ДатаИсправления,
	|	ИСТИНА КАК УдалитьПрефиксыИзНомера,
	|	ИСТИНА КАК ЭтоСчетФактураВыданный,
	|	ИСТИНА КАК ВыводитьСуммуБезНДС,
	|	АктОбОказанииПроизводственныхУслуг.Ссылка КАК ДокументОснование,
	|	1 КАК НомерСтроки,
	|	АктОбОказанииПроизводственныхУслуг.Контрагент,
	|	АктОбОказанииПроизводственныхУслуг.ДоговорКонтрагента,
	|	"""" КАК ИдентификаторГосКонтракта,
	|	"""" КАК КППСчетаФактуры,
	|	"""" КАК КПППродавца,
	|	АктОбОказанииПроизводственныхУслуг.Дата КАК ДатаСведений
	|ИЗ
	|	Документ.АктОбОказанииПроизводственныхУслуг КАК АктОбОказанииПроизводственныхУслуг
	|ГДЕ
	|	АктОбОказанииПроизводственныхУслуг.Ссылка В(&МассивОбъектов)
	|	И &УсловиеПоДате";
	
	Если ИспользуетсяПостановлениеНДС981 Тогда 
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеПоДате",
			"АктОбОказанииПроизводственныхУслуг.Дата >= ДАТАВРЕМЯ(2017,10,1)");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеПоДате",
			"АктОбОказанииПроизводственныхУслуг.Дата < ДАТАВРЕМЯ(2017,10,1)");
	КонецЕсли;

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаДанныеДляОбновленияЦенДокументов() Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	АктОбОказанииПроизводственныхУслугУслуги.Номенклатура КАК Номенклатура,
	|	АктОбОказанииПроизводственныхУслугУслуги.Цена КАК Цена,
	|	&Валюта КАК Валюта,
	|	&СпособЗаполненияЦены,
	|	&ЦенаВключаетНДС
	|ПОМЕСТИТЬ ТаблицаНоменклатуры
	|ИЗ
	|	Документ.АктОбОказанииПроизводственныхУслуг.Услуги КАК АктОбОказанииПроизводственныхУслугУслуги
	|ГДЕ
	|	АктОбОказанииПроизводственныхУслугУслуги.Ссылка = &Ссылка";
	
	Если Не ЗначениеЗаполнено(Константы.ТипЦенПлановойСебестоимостиНоменклатуры.Получить()) Тогда
		ТекстЗапроса = ТекстЗапроса 
		+ "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	АктОбОказанииПроизводственныхУслугУслуги.Номенклатура КАК Номенклатура,
		|	АктОбОказанииПроизводственныхУслугУслуги.ПлановаяСтоимость КАК Цена,
		|	&Валюта,
		|	ЗНАЧЕНИЕ(Перечисление.СпособыЗаполненияЦен.ПоПлановымЦенам),
		|	&ЦенаВключаетНДС
		|ИЗ
		|	Документ.АктОбОказанииПроизводственныхУслуг.Услуги КАК АктОбОказанииПроизводственныхУслугУслуги
		|ГДЕ
		|	АктОбОказанииПроизводственныхУслугУслуги.Ссылка = &Ссылка";
	КонецЕсли;
	
	ТекстЗапроса= ТекстЗапроса
	+"
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Цена,
	|	Валюта";
	
	ТекстЗапроса = ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ЗаполнитьСчетаУчетаРасчетов(Объект, СчетаУчета = Неопределено) Экспорт

	Если СчетаУчета = Неопределено Тогда
		СчетаУчета = БухгалтерскийУчетПереопределяемый.ПолучитьСчетаРасчетовСКонтрагентом(Объект.Организация, Объект.Контрагент, Объект.ДоговорКонтрагента);
	КонецЕсли;
	
	Объект.СчетУчетаРасчетовСКонтрагентом = СчетаУчета.СчетРасчетовПокупателя;
	
	Если Объект.СпособЗачетаАвансов = Перечисления.СпособыЗачетаАвансов.Автоматически
		ИЛИ Объект.СпособЗачетаАвансов = Перечисления.СпособыЗачетаАвансов.ПоДокументу Тогда
		Объект.СчетУчетаРасчетовПоАвансам = СчетаУчета.СчетАвансовПокупателя;
	Иначе
		Объект.СчетУчетаРасчетовПоАвансам = ПланыСчетов.Хозрасчетный.ПустаяСсылка();
	КонецЕсли;

КонецПроцедуры

// Заполняет счета учета номенклатуры в табличной части документа
//
Процедура ЗаполнитьСчетаУчетаВТабличнойЧасти(Объект, ИмяТабличнойЧасти) Экспорт

	ТабличнаяЧасть = Объект[ИмяТабличнойЧасти];
	
	ДанныеОбъекта = Новый Структура("Дата, Организация, ДеятельностьНаПатенте, Реализация, ДокументБезНДС");
	ЗаполнитьЗначенияСвойств(ДанныеОбъекта, Объект);
	ДанныеОбъекта.Реализация = Истина;
	
	СоответствиеСведенийОНоменклатуре = БухгалтерскийУчетПереопределяемый.ПолучитьСведенияОСпискеНоменклатуры(
		ОбщегоНазначения.ВыгрузитьКолонку(ТабличнаяЧасть, "Номенклатура", Истина), ДанныеОбъекта);
	
	Для каждого СтрокаТабличнойЧасти Из ТабличнаяЧасть Цикл
		СведенияОНоменклатуре = СоответствиеСведенийОНоменклатуре.Получить(СтрокаТабличнойЧасти.Номенклатура);
		ЗаполнитьСчетаУчетаВСтрокеТабличнойЧасти(ДанныеОбъекта, СтрокаТабличнойЧасти, ИмяТабличнойЧасти, СведенияОНоменклатуре);
	КонецЦикла;

КонецПроцедуры

// Возвращаяет массив документов, для которых выписка счетов-фактур не требуется
//
Функция ПолучитьДокументыСчетФактураНеТребуются(МассивДокументов) Экспорт
	
	ДокументыСчетФактураНеТребуются = Новый Массив;
	
	Если НЕ ЗначениеЗаполнено(МассивДокументов) Тогда
		Возврат ДокументыСчетФактураНеТребуются
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	АктОбОказанииПроизводственныхУслуг.Ссылка КАК Ссылка,
	|	ИСТИНА КАК ЕстьНДС
	|ПОМЕСТИТЬ ВТ_ДокументыСНДС
	|ИЗ
	|	Документ.АктОбОказанииПроизводственныхУслуг.Услуги КАК АктОбОказанииПроизводственныхУслуг
	|ГДЕ
	|	АктОбОказанииПроизводственныхУслуг.Ссылка В(&МассивДокументов)
	|	И АктОбОказанииПроизводственныхУслуг.СуммаНДС > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АктОбОказанииПроизводственныхУслуг.Ссылка,
	|	АктОбОказанииПроизводственныхУслуг.Дата,
	|	АктОбОказанииПроизводственныхУслуг.Организация,
	|	ЕСТЬNULL(ВТ_ДокументыСНДС.ЕстьНДС, ЛОЖЬ) КАК ЕстьНДС
	|ИЗ
	|	Документ.АктОбОказанииПроизводственныхУслуг КАК АктОбОказанииПроизводственныхУслуг
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДокументыСНДС КАК ВТ_ДокументыСНДС
	|		ПО (ВТ_ДокументыСНДС.Ссылка = АктОбОказанииПроизводственныхУслуг.Ссылка)
	|ГДЕ
	|	АктОбОказанииПроизводственныхУслуг.Ссылка В(&МассивДокументов)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если НЕ Выборка.ЕстьНДС
			И (НЕ УчетнаяПолитика.ПлательщикНДС(Выборка.Организация, Выборка.Дата) 
			ИЛИ УчетНДСПереопределяемый.ВерсияПостановленияНДС1137(Выборка.Дата) >= 3 
			И НЕ УчетнаяПолитика.ПрименяетсяОсвобождениеОтУплатыНДС(Выборка.Организация, Выборка.Дата)) Тогда
			ДокументыСчетФактураНеТребуются.Добавить(Выборка.Ссылка);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ДокументыСчетФактураНеТребуются;
	
КонецФункции

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Функция РеквизитыНеРедактируемыеВГрупповойОбработке() Экспорт
	
	МассивРеквизитов = Новый Массив();
	МассивРеквизитов.Добавить("УдалитьСделка");
	МассивРеквизитов.Добавить("УдалитьУчитыватьНДС");
	Возврат МассивРеквизитов;
	
КонецФункции

// Заполняет счета учета номенклатуры в строке табличной части документа
//
// Параметры:
//  ДанныеОбъекта         - структура данных объекта, используемых при заполнении счетов учета (вид операции,
//                          вид договора контрагента, признак комиссионной торговли и т.п.)
//  СтрокаТабличнойЧасти  - строка табличной части документа
//  ИмяТабличнойЧасти     - имя табличной части документа
//  СведенияОНоменклатуре - структура сведений о номенклатуре, либо стуктура счетов учета
//
Процедура ЗаполнитьСчетаУчетаВСтрокеТабличнойЧасти(ДанныеОбъекта, СтрокаТабличнойЧасти, ИмяТабличнойЧасти, СведенияОНоменклатуре) Экспорт

	Если СведенияОНоменклатуре = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если СведенияОНоменклатуре.Свойство("СчетаУчета") Тогда
		// СведенияОНоменклатуре - структура сведений номенклатуры
		СчетаУчета = СведенияОНоменклатуре.СчетаУчета;
	ИначеЕсли СведенияОНоменклатуре.Свойство("СчетУчета") Тогда
		// СведенияОНоменклатуре - структура счетов учета номенклатуры
		СчетаУчета = СведенияОНоменклатуре;
	Иначе
		Возврат;
	КонецЕсли;
	
	Если ИмяТабличнойЧасти = "Услуги" Тогда
				
		Если ЗначениеЗаполнено(СчетаУчета.СчетДоходов) Тогда
			СтрокаТабличнойЧасти.СчетДоходов = СчетаУчета.СчетДоходов;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СчетаУчета.СчетРасходов) Тогда
			СтрокаТабличнойЧасти.СчетРасходов = СчетаУчета.СчетРасходов;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СчетаУчета.СчетУчетаНДСПродажи) Тогда
			СтрокаТабличнойЧасти.СчетУчетаНДСПоРеализации = СчетаУчета.СчетУчетаНДСПродажи;
		КонецЕсли;
		
		Если СведенияОНоменклатуре.Свойство("Субконто")
			И ЗначениеЗаполнено(СведенияОНоменклатуре.Субконто) Тогда
			
			СтрокаТабличнойЧасти.Субконто = СведенияОНоменклатуре.Субконто;
			
		ИначеЕсли СведенияОНоменклатуре.Свойство("ВидСубконтоТипЗначения")
			И ЗначениеЗаполнено(СведенияОНоменклатуре.ВидСубконтоТипЗначения) Тогда
			
			СтрокаТабличнойЧасти.Субконто =
				СведенияОНоменклатуре.ВидСубконтоТипЗначения.ПривестиЗначение(СтрокаТабличнойЧасти.Субконто);
			
		Иначе
			СтрокаТабличнойЧасти.Субконто = Неопределено;
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

// ПОДГОТОВКА ПАРАМЕТРОВ ПРОВЕДЕНИЯ ДОКУМЕНТА

Функция ПодготовитьПараметрыПроведения(ДокументСсылка, Отказ, ДоговорДляОтложенногоПроведения = Неопределено) Экспорт

	ПараметрыПроведения = Новый Структура;
	
	ЭтоОтложенноеПроведение = ЗначениеЗаполнено(ДоговорДляОтложенногоПроведения);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);

	НомераТаблиц = Новый Структура;

	Запрос.Текст = ТекстЗапросаРеквизитыДокумента(НомераТаблиц);
	Результат    = Запрос.ВыполнитьПакет();
	ТаблицаРеквизиты = Результат[НомераТаблиц["Реквизиты"]].Выгрузить();
	ПараметрыПроведения.Вставить("Реквизиты", ТаблицаРеквизиты);

	Реквизиты = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(ТаблицаРеквизиты[0]);
	Если НЕ УчетнаяПолитика.Существует(Реквизиты.Организация, Реквизиты.Период, Истина, ДокументСсылка) Тогда
		Отказ = Истина;
		Возврат ПараметрыПроведения;
	КонецЕсли;

	Реквизиты.Вставить("ВалютаРеглУчета", ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета());
	Реквизиты.Вставить("РасчетыВВалюте",  Реквизиты.ВалютаВзаиморасчетов <> Реквизиты.ВалютаРеглУчета);
	Реквизиты.Вставить("ЭтоОтложенноеПроведение", ЭтоОтложенноеПроведение);

	Если Реквизиты.РасчетыВВалюте Тогда
		ПодготовитьТаблицыДокументаРасчетыВВалюте(Запрос, Реквизиты);
	Иначе
		Запрос.Текст = ТекстЗапросаВременныеТаблицыДокумента(НомераТаблиц);
		Результат    = Запрос.ВыполнитьПакет();
	КонецЕсли;

	Реквизиты.Вставить("ЭтоДоговорСКомиссионером", 
		Реквизиты.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомиссионером);
	Реквизиты.Вставить("ПрименяетсяУСН",
		УчетнаяПолитика.ПрименяетсяУСН(Реквизиты.Организация, Реквизиты.Период));
	Реквизиты.Вставить("ПрименяетсяУСНПатент", 
		УчетнаяПолитика.ПрименяетсяУСНПатент(Реквизиты.Организация, Реквизиты.Период));
	Запрос.УстановитьПараметр("ПрименяетсяУСН",   			Реквизиты.ПрименяетсяУСН);
	Запрос.УстановитьПараметр("ПрименяетсяУСНПатент", 		Реквизиты.ПрименяетсяУСНПатент);
	
	ИспользоватьПлановуюСебестоимость = УчетнаяПолитика.ПлановаяСебестоимость(Реквизиты.Организация, Реквизиты.Период);	
	
	ИспользоватьСчет40 = (УчетнаяПолитика.СпособУчетаВыпускаГотовойПродукции(Реквизиты.Организация, Реквизиты.Период) =
		Перечисления.СпособыУчетаВыпускаГотовойПродукции.СИспользованиемСчета40);
				
	Запрос.УстановитьПараметр("РасчетыВВалюте", 		Реквизиты.РасчетыВВалюте);
	Запрос.УстановитьПараметр("ВалютаРеглУчета",        Реквизиты.ВалютаРеглУчета);
	Запрос.УстановитьПараметр("ДеятельностьНаПатенте",  Реквизиты.ДеятельностьНаПатенте);
	Запрос.УстановитьПараметр("ИспользоватьПлановуюСебестоимость", 
														ИспользоватьПлановуюСебестоимость);
	Запрос.УстановитьПараметр("ИспользоватьСчет40",     ИспользоватьСчет40);
	Запрос.УстановитьПараметр("ПустоеПодразделение",	БухгалтерскийУчетПереопределяемый.ПустоеПодразделение());
	Запрос.УстановитьПараметр("СчетВыпускПродукции", 	ПланыСчетов.Хозрасчетный.ВыпускПродукции);
	Запрос.УстановитьПараметр("МассивКодовРеализацийЗаРубеж",
		Справочники.КодыОперацийРаздела7ДекларацииПоНДС.КодыРеализацииУслугЗаРубежом());
		
	НомераТаблиц = Новый Структура;
	Запрос.Текст = ТекстЗапросаЗачетАвансов(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаРеализация(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаПлановаяСтоимостьУслуг(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаВыпускУслуг(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаРегистрацияОтложенныхРасчетовСКонтрагентами(НомераТаблиц, ПараметрыПроведения, Реквизиты);
		
	Результат = Запрос.ВыполнитьПакет();
	
	Если НЕ ПустаяСтрока(Запрос.Текст) Тогда
		Для Каждого НомерТаблицы Из НомераТаблиц Цикл
			ПараметрыПроведения.Вставить(НомерТаблицы.Ключ, Результат[НомерТаблицы.Значение].Выгрузить());
		КонецЦикла;
	КонецЕсли;
	
	Возврат ПараметрыПроведения;

КонецФункции

Функция ТекстЗапросаРеквизитыДокумента(НомераТаблиц)

	НомераТаблиц.Вставить("ВременнаяТаблицаРеквизиты", 	НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Реквизиты", 					НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Ссылка,
	|	Реквизиты.Дата КАК Дата,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	Реквизиты.ВалютаДокумента КАК ВалютаДокумента,
	|	Реквизиты.Контрагент КАК Контрагент,
	|	Реквизиты.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	Реквизиты.ДоговорКонтрагента.ВидДоговора КАК ВидДоговора,
	|	Реквизиты.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах КАК РасчетыВУсловныхЕдиницах,
	|	Реквизиты.ДоговорКонтрагента.УчетАгентскогоНДС КАК УчетАгентскогоНДС,
	|	Реквизиты.ДоговорКонтрагента.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	Реквизиты.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	Реквизиты.КурсВзаиморасчетов КАК КурсВзаиморасчетов,
	|	Реквизиты.КратностьВзаиморасчетов КАК КратностьВзаиморасчетов,
	|	Реквизиты.СпособЗачетаАвансов КАК СпособЗачетаАвансов,
	|	Реквизиты.СчетЗатрат КАК СчетЗатрат,
	|	Реквизиты.ПодразделениеЗатрат КАК ПодразделениеЗатрат,
	|	Реквизиты.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	|	Реквизиты.СчетУчетаРасчетовСКонтрагентом КАК СчетУчетаРасчетовСКонтрагентом,
	|	Реквизиты.СчетУчетаРасчетовПоАвансам КАК СчетУчетаРасчетовПоАвансам,
	|	Реквизиты.Патент КАК Патент,
	|	Реквизиты.ДеятельностьНаПатенте КАК ДеятельностьНаПатенте,
	|	Реквизиты.ДоговорКонтрагента.КодРаздел7ДекларацииНДС КАК КодОперацииПоСделке,
	|	ЛОЖЬ КАК НДСИсчисляетсяНалоговымАгентом,
	|	ЕСТЬNULL(КодыОперацийРаздела7ДекларацииПоНДС.ОперацияНеПодлежитНалогообложению, ЛОЖЬ) КАК КодОперацииПоСделкеСоответствуетСт149НКРФ
	|ПОМЕСТИТЬ Реквизиты
	|ИЗ
	|	Документ.АктОбОказанииПроизводственныхУслуг КАК Реквизиты
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КодыОперацийРаздела7ДекларацииПоНДС КАК КодыОперацийРаздела7ДекларацииПоНДС
	|		ПО Реквизиты.ДоговорКонтрагента.КодРаздел7ДекларацииНДС = КодыОперацийРаздела7ДекларацииПоНДС.Ссылка
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.ВалютаДокумента КАК ВалютаДокумента,
	|	Реквизиты.ВидДоговора КАК ВидДоговора,
	|	Реквизиты.РасчетыВУсловныхЕдиницах КАК РасчетыВУсловныхЕдиницах,
	|	Реквизиты.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	Реквизиты.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	Реквизиты.Контрагент КАК Контрагент,
	|	Реквизиты.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	Реквизиты.КурсВзаиморасчетов КАК КурсВзаиморасчетов,
	|	Реквизиты.КратностьВзаиморасчетов КАК КратностьВзаиморасчетов,
	|	Реквизиты.СпособЗачетаАвансов КАК СпособЗачетаАвансов,
	|	Реквизиты.Патент КАК Патент,
	|	Реквизиты.ДеятельностьНаПатенте КАК ДеятельностьНаПатенте,
	|	ЛОЖЬ КАК ПрямыеРасходыРаспределятьПоКоличеству,
	|	Реквизиты.КодОперацииПоСделке КАК КодОперацииПоСделке,
	|	Реквизиты.НДСИсчисляетсяНалоговымАгентом КАК НДСИсчисляетсяНалоговымАгентом
	|ИЗ
	|	Реквизиты КАК Реквизиты";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаВременныеТаблицыДокумента(НомераТаблиц)

	НомераТаблиц.Вставить("ВременнаяТаблицаУслуги", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаУслуги.Ссылка,
	|	ТаблицаУслуги.НомерСтроки,
	|	ТаблицаУслуги.Номенклатура,
	|	ТаблицаУслуги.Номенклатура.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	|	ВЫБОР
	|		КОГДА ТаблицаУслуги.Номенклатура.НаименованиеПолное ПОДОБНО """"
	|			ТОГДА ТаблицаУслуги.Номенклатура.Наименование
	|		ИНАЧЕ ТаблицаУслуги.Номенклатура.НаименованиеПолное
	|	КОНЕЦ КАК Содержание,
	|	ТаблицаУслуги.Спецификация,
	|	ТаблицаУслуги.Количество,
	|	ТаблицаУслуги.Цена,
	|	ТаблицаУслуги.ПлановаяСтоимость,
	|	ТаблицаУслуги.СуммаПлановая,
	|	ТаблицаУслуги.СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ТаблицаУслуги.Ссылка.СуммаВключаетНДС
	|			ТОГДА ТаблицаУслуги.Сумма
	|		ИНАЧЕ ТаблицаУслуги.Сумма + ТаблицаУслуги.СуммаНДС
	|	КОНЕЦ КАК СуммаВзаиморасчетов,
	|	ТаблицаУслуги.СуммаНДС КАК СуммаНДСВзаиморасчетов,
	|	ВЫБОР
	|		КОГДА ТаблицаУслуги.Ссылка.СуммаВключаетНДС
	|			ТОГДА ТаблицаУслуги.Сумма
	|		ИНАЧЕ ТаблицаУслуги.Сумма + ТаблицаУслуги.СуммаНДС
	|	КОНЕЦ КАК СуммаРуб,
	|	ТаблицаУслуги.СуммаНДС КАК СуммаНДСРуб,
	|	ТаблицаУслуги.СчетЗатрат,
	|	ТаблицаУслуги.СчетДоходов,
	|	ВЫБОР
	|		КОГДА СчетаЕНВД.Счет ЕСТЬ НЕ NULL 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ДоходЕНВД,
	|	ТаблицаУслуги.СчетРасходов,
	|	ЕСТЬNULL(ТаблицаУслуги.СчетРасходов.УчетПоПодразделениям, ЛОЖЬ) КАК СчетРасходовУчетПоПодразделениям,
	|	ТаблицаУслуги.Субконто,
	|	ТаблицаУслуги.СчетУчетаНДСПоРеализации,
	|	СправочникНоменклатура.КодРаздел7ДекларацииНДС КАК КодРаздел7ДекларацииНДС,
	|	ЕСТЬNULL(КодыОперацийРаздела7ДекларацииПоНДС.ОперацияНеПодлежитНалогообложению, ЛОЖЬ) КАК КодСоответствуетСт149НКРФ,
	|	ЕСТЬNULL(КодыОперацийРаздела7ДекларацииПоНДС.ВключаетсяВРеестрПодтверждающихДокументов, ЛОЖЬ) КАК КодВключаетсяВРеестр
	|ПОМЕСТИТЬ ТаблицаУслуги
	|ИЗ
	|	Документ.АктОбОказанииПроизводственныхУслуг.Услуги КАК ТаблицаУслуги
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СчетаДоходовИРасходовЕНВД КАК СчетаЕНВД
	|		ПО ТаблицаУслуги.СчетДоходов = СчетаЕНВД.Счет
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КодыОперацийРаздела7ДекларацииПоНДС КАК КодыОперацийРаздела7ДекларацииПоНДС
	|			ПО СправочникНоменклатура.КодРаздел7ДекларацииНДС = КодыОперацийРаздела7ДекларацииПоНДС.Ссылка
	|		ПО ТаблицаУслуги.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	ТаблицаУслуги.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Процедура ПодготовитьТаблицыДокументаРасчетыВВалюте(Запрос, Реквизиты)
	
	НомераТаблиц = Новый Структура;
	Запрос.Текст = ТекстЗапросаВременныеТаблицыДокументаРасчетыВВалюте(НомераТаблиц, Реквизиты);
	Результат    = Запрос.ВыполнитьПакет();
	
	СуммыТаблицыУслуги = Результат[НомераТаблиц["СуммыТаблицыУслуги"]].Выгрузить();
	УчетВзаиморасчетов.ПодготовитьТаблицуДокументаРасчетыВВалюте(СуммыТаблицыУслуги, Реквизиты);
	Запрос.УстановитьПараметр("СуммыТаблицыУслуги", СуммыТаблицыУслуги);
	Запрос.Текст = ТекстЗапросаРасчетыВВалютеУслуги();
	
	Результат    = Запрос.ВыполнитьПакет();
	
КонецПроцедуры

Функция ТекстЗапросаВременныеТаблицыДокументаРасчетыВВалюте(НомераТаблиц, Реквизиты);

	ТекстЗапроса = ТекстЗапросаВременныеТаблицыДокумента(НомераТаблиц);
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ ТаблицаУслуги", "ПОМЕСТИТЬ ВременнаяТаблицаУслуги");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ТаблицаУслуги.Ссылка = &Ссылка", "ТаблицаУслуги.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|НомерСтроки");
	НомераТаблиц.Вставить("СуммыТаблицыУслуги", НомераТаблиц.Количество());
	ТекстЗапроса = ТекстЗапроса +
	"ВЫБРАТЬ
	|	ВременнаяТаблицаУслуги.НомерСтроки,
	|	ВременнаяТаблицаУслуги.СтавкаНДС,
	|	ВременнаяТаблицаУслуги.СуммаВзаиморасчетов,
	|	ВременнаяТаблицаУслуги.СуммаНДСВзаиморасчетов,
	|	ВременнаяТаблицаУслуги.СуммаРуб,
	|	ВременнаяТаблицаУслуги.СуммаНДСРуб
	|ИЗ
	|	ВременнаяТаблицаУслуги КАК ВременнаяТаблицаУслуги"
	+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаРасчетыВВалютеУслуги()

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СуммыТаблицыУслуги.НомерСтроки КАК НомерСтроки,
	|	СуммыТаблицыУслуги.СуммаВзаиморасчетов,
	|	СуммыТаблицыУслуги.СуммаНДСВзаиморасчетов,
	|	СуммыТаблицыУслуги.СуммаРуб,
	|	СуммыТаблицыУслуги.СуммаНДСРуб
	|ПОМЕСТИТЬ СуммыТаблицыУслуги
	|ИЗ
	|	&СуммыТаблицыУслуги КАК СуммыТаблицыУслуги
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВременнаяТаблицаУслуги.Ссылка,
	|	ВременнаяТаблицаУслуги.НомерСтроки,
	|	ВременнаяТаблицаУслуги.Номенклатура,
	|	ВременнаяТаблицаУслуги.НоменклатурнаяГруппа,
	|	ВременнаяТаблицаУслуги.Содержание,
	|	ВременнаяТаблицаУслуги.Количество,
	|	ЕСТЬNULL(СуммыТаблицыУслуги.СуммаВзаиморасчетов, 0) КАК СуммаВзаиморасчетов,
	|	ЕСТЬNULL(СуммыТаблицыУслуги.СуммаНДСВзаиморасчетов, 0) КАК СуммаНДСВзаиморасчетов,
	|	ЕСТЬNULL(СуммыТаблицыУслуги.СуммаРуб, 0) КАК СуммаРуб,
	|	ЕСТЬNULL(СуммыТаблицыУслуги.СуммаНДСРуб, 0) КАК СуммаНДСРуб,
	|	ВременнаяТаблицаУслуги.СтавкаНДС,
	|	ВременнаяТаблицаУслуги.СчетУчетаНДСПоРеализации,
	|	ВременнаяТаблицаУслуги.СчетДоходов,
	|	ВременнаяТаблицаУслуги.СчетЗатрат,
	|	ВременнаяТаблицаУслуги.ДоходЕНВД,
	|	ВременнаяТаблицаУслуги.СчетРасходов,
	|	ВременнаяТаблицаУслуги.СчетРасходовУчетПоПодразделениям,
	|	ВременнаяТаблицаУслуги.СуммаПлановая,
	|	ВременнаяТаблицаУслуги.Субконто,
	|	СправочникНоменклатура.КодРаздел7ДекларацииНДС КАК КодРаздел7ДекларацииНДС,
	|	ЕСТЬNULL(КодыОперацийРаздела7ДекларацииПоНДС.ОперацияНеПодлежитНалогообложению, ЛОЖЬ) КАК КодСоответствуетСт149НКРФ,
	|	ЕСТЬNULL(КодыОперацийРаздела7ДекларацииПоНДС.ВключаетсяВРеестрПодтверждающихДокументов, ЛОЖЬ) КАК КодВключаетсяВРеестр
	|ПОМЕСТИТЬ ТаблицаУслуги
	|ИЗ
	|	ВременнаяТаблицаУслуги КАК ВременнаяТаблицаУслуги
	|		ЛЕВОЕ СОЕДИНЕНИЕ СуммыТаблицыУслуги КАК СуммыТаблицыУслуги
	|		ПО ВременнаяТаблицаУслуги.НомерСтроки = СуммыТаблицыУслуги.НомерСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КодыОперацийРаздела7ДекларацииПоНДС КАК КодыОперацийРаздела7ДекларацииПоНДС
	|			ПО СправочникНоменклатура.КодРаздел7ДекларацииНДС = КодыОперацийРаздела7ДекларацииПоНДС.Ссылка
	|		ПО ВременнаяТаблицаУслуги.Номенклатура = СправочникНоменклатура.Ссылка";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции 

Функция ТекстЗапросаЗачетАвансов(НомераТаблиц, ПараметрыПроведения, Реквизиты)

	Если Реквизиты.ЭтоДоговорСКомиссионером Тогда
		ПараметрыПроведения.Вставить("ЗачетАвансовРеквизиты",        Неопределено);
		ПараметрыПроведения.Вставить("ЗачетАвансовТаблицаДокумента", Неопределено);
		ПараметрыПроведения.Вставить("ЗачетАвансовТаблицаАвансов",   Неопределено);
		Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("ВременнаяТаблицаСуммВзаиморасчетов", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ЗачетАвансовРеквизиты", 				НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ЗачетАвансовТаблицаДокумента", 		НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаУслуги.Ссылка,
	|	СУММА(ТаблицаУслуги.СуммаВзаиморасчетов) КАК СуммаВзаиморасчетов,
	|	СУММА(ТаблицаУслуги.СуммаРуб) КАК СуммаРуб,
	|	СУММА(0) КАК СуммаВзаиморасчетовКомитента,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ &ДеятельностьНаПатенте
	|					И ТаблицаУслуги.ДоходЕНВД
	|				ТОГДА ТаблицаУслуги.СуммаВзаиморасчетов
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаВзаиморасчетовЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА &ДеятельностьНаПатенте
	|				ТОГДА ТаблицаУслуги.СуммаВзаиморасчетов
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаВзаиморасчетовПатент,
	|	СУММА(0) КАК СуммаВзаиморасчетовТорговыйСбор
	|ПОМЕСТИТЬ ТаблицаСуммВзаиморасчетов
	|ИЗ
	|	ТаблицаУслуги КАК ТаблицаУслуги
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаУслуги.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	""АктОбОказанииПроизводственныхУслуг"" КАК ВидОперации,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.ВалютаДокумента КАК ВалютаДокумента,
	|	Реквизиты.СпособЗачетаАвансов КАК СпособЗачетаАвансов,
	|	&ПрименяетсяУСН КАК УчитыватьЗадолженностьУСН,
	|	&ПрименяетсяУСНПатент КАК УчитыватьЗадолженностьУСНПатент,
	|	ЛОЖЬ КАК ДеятельностьНаТорговомСборе,
	|	&ДеятельностьНаПатенте КАК ДеятельностьНаПатенте,
	|	""Выбытие"" КАК НаправлениеДвижения,
	|	ЛОЖЬ КАК ЭтоВозврат
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК ДокументРасчетов,
	|	Реквизиты.СчетУчетаРасчетовСКонтрагентом КАК СчетРасчетов,
	|	Реквизиты.СчетУчетаРасчетовПоАвансам КАК СчетАвансов,
	|	Реквизиты.Контрагент,
	|	Реквизиты.ДоговорКонтрагента,
	|	Реквизиты.ВидДоговора,
	|	Реквизиты.ВалютаВзаиморасчетов,
	|	Реквизиты.РасчетыВУсловныхЕдиницах,
	|	Реквизиты.УчетАгентскогоНДС,
	|	&РасчетыВВалюте КАК РасчетыВВалюте,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	ТаблицаСуммВзаиморасчетов.СуммаВзаиморасчетов КАК СуммаВзаиморасчетов,
	|	ТаблицаСуммВзаиморасчетов.СуммаРуб КАК СуммаРуб,
	|	ТаблицаСуммВзаиморасчетов.СуммаВзаиморасчетовКомитента КАК СуммаВзаиморасчетовКомитента,
	|	ТаблицаСуммВзаиморасчетов.СуммаВзаиморасчетовПатент КАК СуммаВзаиморасчетовПатент,
	|	ТаблицаСуммВзаиморасчетов.СуммаВзаиморасчетовЕНВД КАК СуммаВзаиморасчетовЕНВД,
	|	ТаблицаСуммВзаиморасчетов.СуммаВзаиморасчетовТорговыйСбор КАК СуммаВзаиморасчетовТорговыйСбор
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаСуммВзаиморасчетов КАК ТаблицаСуммВзаиморасчетов
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ТаблицаСуммВзаиморасчетов.Ссылка ЕСТЬ НЕ NULL "
	+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
	Если Реквизиты.СпособЗачетаАвансов <> Перечисления.СпособыЗачетаАвансов.ПоДокументу Тогда
		ПараметрыПроведения.Вставить("ЗачетАвансовТаблицаАвансов", Неопределено);
	Иначе
		НомераТаблиц.Вставить("ЗачетАвансовТаблицаАвансов", НомераТаблиц.Количество());
		ТекстЗапроса = ТекстЗапроса	+ 
		"ВЫБРАТЬ
		|	ТаблицаЗачетАвансов.НомерСтроки,
		|	Реквизиты.СчетУчетаРасчетовПоАвансам КАК СчетАвансов,
		|	Реквизиты.Контрагент,
		|	Реквизиты.ДоговорКонтрагента,
		|	ТаблицаЗачетАвансов.ДокументАванса,
		|	ТаблицаЗачетАвансов.СуммаЗачета
		|ИЗ
		|	Документ.АктОбОказанииПроизводственныхУслуг.ЗачетАвансов КАК ТаблицаЗачетАвансов
		|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ТаблицаЗачетАвансов.Ссылка = Реквизиты.Ссылка
		|ГДЕ
		|	ТаблицаЗачетАвансов.Ссылка = &Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	ТаблицаЗачетАвансов.НомерСтроки"
		+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаРеализация(НомераТаблиц, ПараметрыПроведения, Реквизиты)

	НомераТаблиц.Вставить("РеализацияТаблицаДокумента", НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	""Услуги"" КАК ИмяСписка,
	|	ТаблицыДокументаРеализации.НомерСтроки КАК НомерСтроки,
	|	ТаблицыДокументаРеализации.Номенклатура КАК Номенклатура,
	|	ТаблицыДокументаРеализации.Содержание КАК Содержание,
	|	ТаблицыДокументаРеализации.Количество КАК Количество,
	|	ТаблицыДокументаРеализации.СуммаВзаиморасчетов КАК СуммаВзаиморасчетов,
	|	ТаблицыДокументаРеализации.СуммаРуб КАК СуммаРуб,
	|	ТаблицыДокументаРеализации.СуммаНДСРуб КАК СуммаНДСРуб,
	|	ТаблицыДокументаРеализации.СуммаРуб КАК СуммаБУ,
	|	ТаблицыДокументаРеализации.СуммаРуб КАК СуммаНУ,
	|	ТаблицыДокументаРеализации.СчетРасходов КАК СчетУчета,
	|	ТаблицыДокументаРеализации.СчетДоходов КАК СчетДоходов,
	|	ТаблицыДокументаРеализации.Субконто КАК Субконто,
	|	ТаблицыДокументаРеализации.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицыДокументаРеализации.СчетУчетаНДСПоРеализации КАК СчетУчетаНДСПоРеализации,
	|	Реквизиты.СчетУчетаРасчетовСКонтрагентом КАК КорСчет,
	|	Реквизиты.Контрагент КАК КорСубконто1,
	|	Реквизиты.ДоговорКонтрагента КАК КорСубконто2,
	|	Реквизиты.Ссылка КАК КорСубконто3,
	|	Реквизиты.Контрагент КАК Контрагент,
	|	Реквизиты.Контрагент КАК Покупатель,
	|	Реквизиты.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	ЛОЖЬ КАК ЭтоКомиссия,
	|	ИСТИНА КАК ЭтоУслуга,
	|	ЛОЖЬ КАК ЭтоНесырьевойТовар,
	|	НЕОПРЕДЕЛЕНО КАК Комитент,
	|	НЕОПРЕДЕЛЕНО КАК ДоговорКомиссии,
	|	НЕОПРЕДЕЛЕНО КАК ДокументРасчетовСКомитентом,
	|	НЕОПРЕДЕЛЕНО КАК ДокументРасчетов,
	|	НЕОПРЕДЕЛЕНО КАК ДатаРеализации,
	|	НЕОПРЕДЕЛЕНО КАК СчетРасчетовСКомитентом,
	|	НЕОПРЕДЕЛЕНО КАК СчетАвансовСКомитентом,
	|	НЕОПРЕДЕЛЕНО КАК ВалютаРасчетовСКомитентом,
	|	0 КАК СуммаРасчетовСКомитентом,
	|	0 КАК СуммаПоступленияОтКомитента,
	|	ВЫБОР
	|		КОГДА ТаблицыДокументаРеализации.ДоходЕНВД
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.КодыОперацийРаздела7ДекларацииПоНДС.ПустаяСсылка)
	|		ИНАЧЕ ТаблицыДокументаРеализации.КодРаздел7ДекларацииНДС
	|	КОНЕЦ КАК КодРаздел7ДекларацииНДС,
	|	ВЫБОР
	|		КОГДА ТаблицыДокументаРеализации.ДоходЕНВД
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ТаблицыДокументаРеализации.КодСоответствуетСт149НКРФ
	|	КОНЕЦ КАК КодСоответствуетСт149НКРФ,
	|	ВЫБОР
	|		КОГДА ТаблицыДокументаРеализации.ДоходЕНВД
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ТаблицыДокументаРеализации.КодВключаетсяВРеестр
	|	КОНЕЦ КАК КодВключаетсяВРеестр,
	|	ВЫБОР
	|		КОГДА ТаблицыДокументаРеализации.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
	|				И Реквизиты.Дата >= ДАТАВРЕМЯ(2019, 7, 1)
	|			ТОГДА Реквизиты.КодОперацииПоСделке В (&МассивКодовРеализацийЗаРубеж)
	|						И НЕ ТаблицыДокументаРеализации.КодСоответствуетСт149НКРФ
	|					ИЛИ ТаблицыДокументаРеализации.КодРаздел7ДекларацииНДС В (&МассивКодовРеализацийЗаРубеж)
	|						И НЕ Реквизиты.КодОперацииПоСделкеСоответствуетСт149НКРФ
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК УслугиЗаРубежом
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаУслуги КАК ТаблицыДокументаРеализации
	|		ПО (ИСТИНА)
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ИмяСписка,
	|	НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаПлановаяСтоимостьУслуг(НомераТаблиц, ПараметрыПроведения, Реквизиты)

	НомераТаблиц.Вставить("ПлановаяСтоимостьУслугРеквизиты", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ПлановаяСтоимостьУслугТаблица"  , НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	&ИспользоватьСчет40 КАК ИспользоватьСчет40
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаУслуги.НомерСтроки КАК НомерСтроки,
	|	ТаблицаУслуги.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА &ИспользоватьСчет40
	|			ТОГДА &СчетВыпускПродукции
	|		ИНАЧЕ Реквизиты.СчетЗатрат
	|	КОНЕЦ КАК СчетЗатрат,
	|	Реквизиты.ПодразделениеЗатрат КАК ПодразделениеЗатрат,
	|	Реквизиты.НоменклатурнаяГруппа КАК НоменклатурнаяГруппаЗатрат,
	|	ТаблицаУслуги.СчетРасходов КАК СчетСписания,
	|	Реквизиты.ПодразделениеОрганизации КАК ПодразделениеСписания,
	|	ТаблицаУслуги.Субконто КАК СубконтоСписания1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоСписания2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоСписания3,
	|	1 КАК ВидСубконтоСписания1,
	|	НЕОПРЕДЕЛЕНО КАК ВидСубконтоСписания2,
	|	НЕОПРЕДЕЛЕНО КАК ВидСубконтоСписания3,
	|	ТаблицаУслуги.Количество КАК Количество,
	|	ВЫБОР
	|		КОГДА &ИспользоватьПлановуюСебестоимость 
	|			ТОГДА ТаблицаУслуги.СуммаПлановая
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК СуммаПлановая,
	|	ВЫБОР
	|		КОГДА &ИспользоватьПлановуюСебестоимость 
	|			ТОГДА ТаблицаУслуги.СуммаПлановая
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК СуммаПлановаяНУ,
	|	ТаблицаУслуги.Содержание КАК Содержание
	|ИЗ
	|	ТаблицаУслуги КАК ТаблицаУслуги
	|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО (ИСТИНА)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаВыпускУслуг(НомераТаблиц, ПараметрыПроведения, Реквизиты)

	НомераТаблиц.Вставить("ВыпускУслугТаблица"  , НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаУслуги.НомерСтроки КАК НомерСтроки,
	|	ТаблицаУслуги.Номенклатура КАК Номенклатура,
	|	Реквизиты.СчетЗатрат КАК СчетЗатрат,
	|	Реквизиты.ПодразделениеЗатрат КАК ПодразделениеЗатрат,
	|	Реквизиты.НоменклатурнаяГруппа КАК НоменклатурнаяГруппаЗатрат,
	|	ТаблицаУслуги.СчетРасходов КАК СчетСписания,
	|	ВЫБОР
	|		КОГДА ТаблицаУслуги.СчетРасходовУчетПоПодразделениям
	|			ТОГДА Реквизиты.ПодразделениеОрганизации
	|		ИНАЧЕ &ПустоеПодразделение
	|	КОНЕЦ КАК ПодразделениеСписания,
	|	ТаблицаУслуги.Субконто КАК СубконтоСписания1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоСписания2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоСписания3,
	|	ТаблицаУслуги.Количество КАК Количество,
	|	ВЫБОР
	|		КОГДА &ИспользоватьПлановуюСебестоимость 
	|			ТОГДА ТаблицаУслуги.СуммаПлановая
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК ПлановаяСтоимость,
	|	ЛОЖЬ КАК ПрямыеРасходыРаспределятьПоКоличеству,
	|	ВЫБОР
	|		КОГДА ТаблицаУслуги.ДоходЕНВД
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.КодыОперацийРаздела7ДекларацииПоНДС.ПустаяСсылка)
	|		ИНАЧЕ ТаблицаУслуги.КодРаздел7ДекларацииНДС
	|	КОНЕЦ КАК КодРаздел7ДекларацииНДС,
	|	ВЫБОР
	|		КОГДА ТаблицаУслуги.ДоходЕНВД
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ТаблицаУслуги.КодСоответствуетСт149НКРФ
	|	КОНЕЦ КАК КодСоответствуетСт149НКРФ,
	|	ВЫБОР
	|		КОГДА ТаблицаУслуги.ДоходЕНВД
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ТаблицаУслуги.КодВключаетсяВРеестр
	|	КОНЕЦ КАК КодВключаетсяВРеестр
	|ИЗ
	|	ТаблицаУслуги КАК ТаблицаУслуги
	|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО (ИСТИНА)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Процедура ДобавитьКолонкуСодержание(ТаблицаЗначений) Экспорт
	
	Если ТаблицаЗначений = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТаблицаЗначений.Колонки.Найти("Содержание") = Неопределено Тогда
		ТаблицаЗначений.Колонки.Добавить("Содержание", ОбщегоНазначения.ОписаниеТипаСтрока(150));
	КонецЕсли;
	
	ТаблицаЗначений.ЗаполнитьЗначения("Реализация услуг", "Содержание");
	
КонецПроцедуры

// ОТЛОЖЕННОЕ ПРОВЕДЕНИЕ

Функция ТекстЗапросаРегистрацияОтложенныхРасчетовСКонтрагентами(НомераТаблиц, ПараметрыПроведения, Реквизиты)

	Если Реквизиты.ЭтоОтложенноеПроведение
		ИЛИ НЕ ПроведениеСервер.ИспользуетсяОтложенноеПроведение(Реквизиты.Организация, Реквизиты.Период) Тогда
		ПараметрыПроведения.Вставить("РасчетыСКонтрагентамиОтложенноеПроведение", Неопределено);
		Возврат "";
	КонецЕсли;

	НомераТаблиц.Вставить("РасчетыСКонтрагентамиОтложенноеПроведение", НомераТаблиц.Количество());

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Реквизиты.Контрагент КАК Контрагент,
	|	Реквизиты.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	Реквизиты.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	Реквизиты.ВидДоговора КАК ВидДоговора,
	|	Реквизиты.Дата КАК Дата
	|ИЗ
	|	Реквизиты КАК Реквизиты";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Процедура ОбработкаОтложенногоПроведения(Параметры, Отказ) Экспорт
	
	ПараметрыПроведения = ПодготовитьПараметрыПроведения(
		Параметры.Регистратор,
		Отказ,
		Параметры.ДоговорКонтрагента);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;	

	ТаблицаВзаиморасчеты = УчетВзаиморасчетовОтложенноеПроведение.ПодготовитьТаблицуВзаиморасчетовЗачетАвансов(
		Параметры,
		ПараметрыПроведения.ЗачетАвансовТаблицаДокумента,
		ПараметрыПроведения.ЗачетАвансовТаблицаАвансов, 
		ПараметрыПроведения.ЗачетАвансовРеквизиты,
		Отказ);

	// Структура таблиц для отражения в налоговом учете УСН
	СтруктураТаблицУСН = Новый Структура("ТаблицаРасчетов",	ТаблицаВзаиморасчеты);

	УчетВзаиморасчетовОтложенноеПроведение.СформироватьДвиженияЗачетАвансов(
		Параметры,
		ТаблицаВзаиморасчеты,
		ПараметрыПроведения.ЗачетАвансовРеквизиты,
		Отказ);
	
	УчетВзаиморасчетовОтложенноеПроведение.СформироватьДвиженияУСН(Параметры, СтруктураТаблицУСН);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ПЕЧАТИ

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Акт об оказании услуг
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Акт";
	КомандаПечати.Представление = НСтр("ru = 'Акт об оказании услуг'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	
	// Счет-фактура
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "СчетФактура";
	КомандаПечати.Представление = НСтр("ru = 'Счет-фактура'");
	КомандаПечати.Обработчик    = "УчетНДСКлиент.ВыполнитьКомандуПечатиСчетовФактур";
	
	// Справка-расчет "Рублевые суммы документа в валюте"
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьРублевыхСуммДокументовВВалюте";
	КомандаПечати.Идентификатор = "РублевыеСуммыДокументаВВалюте";
	КомандаПечати.Представление = НСтр("ru = 'Справка-расчет ""Рублевые суммы документа в валюте""'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.ФункциональныеОпции = "ИспользоватьВалютныйУчет";
	
	// Универсальный передаточный документ
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "УниверсальныйПередаточныйДокумент";
	КомандаПечати.Представление = НСтр("ru = 'Универсальный передаточный документ (УПД)'");
	КомандаПечати.Обработчик    = "УчетНДСКлиент.ВыполнитьКомандуПечатиУниверсальныхПередаточныхДокументов";
	
	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Реестр";
	КомандаПечати.Представление = НСтр("ru = 'Реестр документов'");
	КомандаПечати.ЗаголовокФормы= НСтр("ru = 'Реестр документов ""Оказание производственных услуг""'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм    = "ФормаСписка";
	КомандаПечати.Порядок       = 100;
	
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	// Проверяем, нужно ли для макета формировать табличный документ
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Акт") Тогда
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		ТаблицаСведенийАктаОбОказанииУслуг = ПолучитьТаблицуСведенийАктаОбОказанииУслуг(МассивОбъектов);
		ПараметрыПечати.Вставить("ВидДокументаПечати",  "АктОбОказанииПроизводственныхУслуг");
		ПараметрыПечати.Вставить("ИмяПараметровПечати", "ПАРАМЕТРЫ_ПЕЧАТИ_АктОбОказанииПроизводственныхУслуг_Акт");
		ПараметрыПечати.Вставить("ИмяМакетаПечати",     "Документ.АктОбОказанииПроизводственныхУслуг.ПФ_MXL_Акт");
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Акт", "Оказание производственных услуг", 
			ПечатьТорговыхДокументов.ПечатьАктаОбОказанииУслуг(ТаблицаСведенийАктаОбОказанииУслуг, ОбъектыПечати, ПараметрыПечати),, 
					"Документ.РеализацияТоваровУслуг.ПФ_MXL_Акт");
	КонецЕсли;
	
	ОбщегоНазначенияБП.ЗаполнитьДополнительныеПараметрыПечати(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);	

КонецПроцедуры

Функция ПолучитьТаблицуСведенийАктаОбОказанииУслуг(Знач МассивОбъектов) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТаблицаСведений = ПечатьТорговыхДокументов.ПолучитьОписаниеАктаОбОказанииУслуг();
	
	Запрос = Новый Запрос();
	Запрос.Текст = ПолучитьТекстЗапросаДляФормированияТаблицыСведенийАктаОбОказанииУслуг();
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("ДополнительнаяКолонкаПечатныхФормДокументов", Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить());

	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	Выборка = РезультатыЗапроса[2].Выбрать();
	СтрокиДокументов = РезультатыЗапроса[3].Выгрузить();
	СтрокиДокументов.Индексы.Добавить("Документ");
	
	ВалютаРегУчета = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	РеквизитыВалютыРегУчета = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ВалютаРегУчета, "Код, Наименование");
	
	Пока Выборка.Следующий() Цикл
		
		СведенияОДокументе = ТаблицаСведений.Добавить();
		ЗаполнитьЗначенияСвойств(СведенияОДокументе, Выборка);
		
		Если Выборка.РасчетыВУсловныхЕдиницах Тогда
			СведенияОДокументе.Валюта             = ВалютаРегУчета;
			СведенияОДокументе.ВалютаКод          = РеквизитыВалютыРегУчета.Код;
			СведенияОДокументе.ВалютаНаименование = РеквизитыВалютыРегУчета.Наименование;
		КонецЕсли;
		
		ТаблицаДокумента = ПечатьТорговыхДокументов.ПолучитьОписаниеТаблицыАктаОбОказанииУслуг();
		
		Отбор = Новый Структура("Документ", Выборка.Документ);
		СтрокиДокумента = СтрокиДокументов.НайтиСтроки(Отбор);
		
		НуженПересчетВРубли = Ложь;
		Если Выборка.Валюта <> ВалютаРегУчета
			И Выборка.РасчетыВУсловныхЕдиницах Тогда
			НуженПересчетВРубли = Истина;
		КонецЕсли;
		
		ИспользоватьПериодичностьУслуг = ПолучитьФункциональнуюОпцию("ИспользоватьПериодичностьУслуг");
		Для Каждого Строка Из СтрокиДокумента Цикл
			
			СтрокаТаблицыДокумента = ТаблицаДокумента.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТаблицыДокумента, Строка);
			
			// Установим содержание услуги
			Если ИспользоватьПериодичностьУслуг Тогда
				СтрокаТаблицыДокумента.НоменклатураНаименование = РаботаСНоменклатуройКлиентСервер.СодержаниеУслуги(
					Строка.НоменклатураНаименование, Строка.ПериодичностьУслуги, СведенияОДокументе.ДатаДокумента);
			КонецЕсли;
			
			Если НуженПересчетВРубли Тогда
				Если Строка.СуществуютЗаписиРублевыхСумм Тогда
					СтрокаТаблицыДокумента.СуммаНДС = Строка.НДСВРублях;
					СтрокаТаблицыДокумента.СуммаБезНДС = Строка.ВсегоВРублях - Строка.НДСВРублях;
				Иначе
					Кратность = ?(Выборка.Кратность = 0, 1, Выборка.Кратность);
					СтрокаТаблицыДокумента.СуммаНДС = Строка.СуммаНДС * Выборка.Курс / Кратность;;
					СтрокаТаблицыДокумента.СуммаБезНДС = (Строка.СуммаБезНДС + Строка.СуммаНДС) * Выборка.Курс / Кратность - СтрокаТаблицыДокумента.СуммаНДС;
				КонецЕсли;
				СтрокаТаблицыДокумента.Сумма = СтрокаТаблицыДокумента.СуммаБезНДС + ?(Выборка.СуммаВключаетНДС, СтрокаТаблицыДокумента.СуммаНДС, 0);
				СтрокаТаблицыДокумента.Цена  = ?(СтрокаТаблицыДокумента.Количество=0, СтрокаТаблицыДокумента.Сумма, СтрокаТаблицыДокумента.Сумма / СтрокаТаблицыДокумента.Количество);
			КонецЕсли;
			СтрокаТаблицыДокумента.СуммаСНДС = СтрокаТаблицыДокумента.СуммаБезНДС + СтрокаТаблицыДокумента.СуммаНДС;
			
		КонецЦикла;
		
		СведенияОДокументе.ТаблицаДокумента = ТаблицаДокумента;
		
		ПечатьТорговыхДокументов.ЗаполнитьДанныеОтветственныхЛиц(СведенияОДокументе, Новый Структура("ЗаполнятьРуководителя"));
		
	КонецЦикла;
	
	Возврат ТаблицаСведений;
	
КонецФункции

Функция ПолучитьТекстЗапросаДляФормированияТаблицыСведенийАктаОбОказанииУслуг()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор КАК Регистратор,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента КАК НомерСтрокиДокумента,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента КАК ТабличнаяЧастьДокумента,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего КАК Всего,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС КАК НДС,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС КАК НалоговаяБазаНДС
	|ПОМЕСТИТЬ РегистрСведенийРублевыеСуммыДокументовВВалюте
	|ИЗ
	|	РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|ГДЕ
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор В(&МассивОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	НомерСтрокиДокумента,
	|	ТабличнаяЧастьДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АктОбОказанииПроизводственныхУслуг.Ссылка КАК Ссылка,
	|	АктОбОказанииПроизводственныхУслуг.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	АктОбОказанииПроизводственныхУслуг.Дата КАК ДатаДокумента
	|ПОМЕСТИТЬ ДокументыДляПечати
	|ИЗ
	|	Документ.АктОбОказанииПроизводственныхУслуг КАК АктОбОказанииПроизводственныхУслуг
	|ГДЕ
	|	АктОбОказанииПроизводственныхУслуг.Ссылка В(&МассивОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АктОбОказанииПроизводственныхУслуг.Ссылка КАК Документ,
	|	АктОбОказанииПроизводственныхУслуг.Дата КАК ДатаДляПолученияСведений,
	|	ДанныеПервичныхДокументов.Номер КАК НомерДокумента,
	|	ДанныеПервичныхДокументов.Дата КАК ДатаДокумента,
	|	АктОбОказанииПроизводственныхУслуг.Контрагент КАК Получатель,
	|	АктОбОказанииПроизводственныхУслуг.ДоговорКонтрагента.ГосударственныйКонтракт КАК ГосударственныйКонтрактСсылка,
	|	АктОбОказанииПроизводственныхУслуг.ДоговорКонтрагента.ГосударственныйКонтракт.Код КАК ГосударственныйКонтракт,
	|	ПРЕДСТАВЛЕНИЕ(АктОбОказанииПроизводственныхУслуг.ДоговорКонтрагента) КАК ПредставлениеДоговора,
	|	АктОбОказанииПроизводственныхУслуг.Организация КАК Поставщик,
	|	АктОбОказанииПроизводственныхУслуг.Организация КАК Организация,
	|	АктОбОказанииПроизводственныхУслуг.ПодразделениеОрганизации КАК Подразделение,
	|	АктОбОказанииПроизводственныхУслуг.ВалютаДокумента КАК Валюта,
	|	АктОбОказанииПроизводственныхУслуг.КурсВзаиморасчетов КАК Курс,
	|	АктОбОказанииПроизводственныхУслуг.КратностьВзаиморасчетов КАК Кратность,
	|	ЕСТЬNULL(АктОбОказанииПроизводственныхУслуг.ВалютаДокумента.Код, """") КАК ВалютаКод,
	|	ЕСТЬNULL(АктОбОказанииПроизводственныхУслуг.ВалютаДокумента.Наименование, """") КАК ВалютаНаименование,
	|	ЕСТЬNULL(АктОбОказанииПроизводственныхУслуг.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах, ЛОЖЬ) КАК РасчетыВУсловныхЕдиницах,
	|	АктОбОказанииПроизводственныхУслуг.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	АктОбОказанииПроизводственныхУслуг.Исполнитель КАК Руководитель,
	|	АктОбОказанииПроизводственныхУслуг.ИсполнительНаОсновании КАК ЗаРуководителяНаОсновании
	|ИЗ
	|	Документ.АктОбОказанииПроизводственныхУслуг КАК АктОбОказанииПроизводственныхУслуг
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО АктОбОказанииПроизводственныхУслуг.Организация = ДанныеПервичныхДокументов.Организация
	|			И АктОбОказанииПроизводственныхУслуг.Ссылка = ДанныеПервичныхДокументов.Документ
	|ГДЕ
	|	АктОбОказанииПроизводственныхУслуг.Ссылка В
	|			(ВЫБРАТЬ
	|				ДокументыДляПечати.Ссылка
	|			ИЗ
	|				ДокументыДляПечати)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаДокумента,
	|	Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АктОбОказанииПроизводственныхУслугУслуги.Ссылка КАК Документ,
	|	ДокументыДляПечати.ДатаДокумента КАК ДатаДокумента,
	|	АктОбОказанииПроизводственныхУслугУслуги.НомерСтроки КАК НомерСтроки,
	|	АктОбОказанииПроизводственныхУслугУслуги.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА НЕ АктОбОказанииПроизводственныхУслугУслуги.Номенклатура.НаименованиеПолное ПОДОБНО """"
	|			ТОГДА АктОбОказанииПроизводственныхУслугУслуги.Номенклатура.НаименованиеПолное
	|		ИНАЧЕ АктОбОказанииПроизводственныхУслугУслуги.Номенклатура.Наименование
	|	КОНЕЦ КАК НоменклатураНаименование,
	|	ВЫБОР
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул)
	|			ТОГДА АктОбОказанииПроизводственныхУслугУслуги.Номенклатура.Артикул
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Код)
	|			ТОГДА АктОбОказанииПроизводственныхУслугУслуги.Номенклатура.Код
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.НеВыводить)
	|			ТОГДА """"
	|	КОНЕЦ КАК НоменклатураКод,
	|	ЕСТЬNULL(АктОбОказанииПроизводственныхУслугУслуги.Номенклатура.ЕдиницаИзмерения, ЗНАЧЕНИЕ(Справочник.КлассификаторЕдиницИзмерения.ПустаяСсылка)) КАК ЕдиницаИзмерения,
	|	ЕСТЬNULL(АктОбОказанииПроизводственныхУслугУслуги.Номенклатура.ЕдиницаИзмерения.Код, """") КАК ЕдиницаИзмеренияКод,
	|	ЕСТЬNULL(АктОбОказанииПроизводственныхУслугУслуги.Номенклатура.ЕдиницаИзмерения.Наименование, """") КАК ЕдиницаИзмеренияНаименование,
	|	АктОбОказанииПроизводственныхУслугУслуги.Количество КАК Количество,
	|	АктОбОказанииПроизводственныхУслугУслуги.Цена КАК Цена,
	|	АктОбОказанииПроизводственныхУслугУслуги.Сумма КАК Сумма,
	|	ВЫБОР
	|		КОГДА ДокументыДляПечати.СуммаВключаетНДС
	|			ТОГДА АктОбОказанииПроизводственныхУслугУслуги.Сумма - АктОбОказанииПроизводственныхУслугУслуги.СуммаНДС
	|		ИНАЧЕ АктОбОказанииПроизводственныхУслугУслуги.Сумма
	|	КОНЕЦ КАК СуммаБезНДС,
	|	АктОбОказанииПроизводственныхУслугУслуги.СуммаНДС КАК СуммаНДС,
	|	АктОбОказанииПроизводственныхУслугУслуги.СтавкаНДС КАК СтавкаНДС,
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего, 0) КАК ВсегоВРублях,
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС, 0) КАК НДСВРублях,
	|	ВЫБОР
	|		КОГДА РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК СуществуютЗаписиРублевыхСумм,
	|	АктОбОказанииПроизводственныхУслугУслуги.Номенклатура.ПериодичностьУслуги КАК ПериодичностьУслуги
	|ИЗ
	|	ДокументыДляПечати КАК ДокументыДляПечати
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.АктОбОказанииПроизводственныхУслуг.Услуги КАК АктОбОказанииПроизводственныхУслугУслуги
	|		ПО ДокументыДляПечати.Ссылка = АктОбОказанииПроизводственныхУслугУслуги.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|		ПО (АктОбОказанииПроизводственныхУслугУслуги.Ссылка = РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор)
	|			И (АктОбОказанииПроизводственныхУслугУслуги.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента)
	|			И (РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Услуги))
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаДокумента,
	|	Документ,
	|	НомерСтроки";
		
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ПодготовитьТекстЗапросаДляПечатиСправкиРасчетаРублевыеСуммыДокументовВВалюте(НомераТаблиц) Экспорт
	
	НомераТаблиц.Вставить("ВТ_ТаблицаПоШапкеДокумента",                                НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТаблицаРеквизитов",                                         НомераТаблиц.Количество());
	НомераТаблиц.Вставить("РегистрСведенийРублевыеСуммыДокументовВВалюте",             НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТ_ПоДокументамЗачетнныхАвансов",                           НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТаблицаПредоплат",                                          НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Уничтожение_ВТ_ПоДокументамЗачетнныхАвансов",               НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Уничтожение_ВТ_ТаблицаПоШапкеДокумента",                    НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТаблицаСумм",                                               НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Уничтожение_РегистрСведенийРублевыеСуммыДокументовВВалюте", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеОбрабатываемогоДокумента.Ссылка КАК Ссылка,
	|	ДанныеОбрабатываемогоДокумента.Дата КАК Дата,
	|	ДанныеОбрабатываемогоДокумента.Проведен КАК Проведен,
	|	ДанныеОбрабатываемогоДокумента.ВалютаДокумента КАК ВалютаДокумента,
	|	ДанныеОбрабатываемогоДокумента.Организация КАК Организация,
	|	ДанныеОбрабатываемогоДокумента.Контрагент КАК Контрагент,
	|	ДанныеОбрабатываемогоДокумента.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ДанныеОбрабатываемогоДокумента.СчетУчетаРасчетовСКонтрагентом КАК СчетУчетаРасчетовСКонтрагентом,
	|	ДанныеОбрабатываемогоДокумента.СчетУчетаРасчетовПоАвансам КАК СчетУчетаРасчетовПоАвансам,
	|	ДанныеОбрабатываемогоДокумента.КурсВзаиморасчетов КАК КурсВзаиморасчетов,
	|	ДанныеОбрабатываемогоДокумента.КратностьВзаиморасчетов КАК КратностьВзаиморасчетов,
	|	"""" КАК НомерВходящегоДокумента,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаВходящегоДокумента,
	|	ЕСТЬNULL(ДанныеОбрабатываемогоДокумента.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах, ЛОЖЬ) КАК РасчетыВУсловныхЕдиницах,
	|	ЕСТЬNULL(ДанныеОбрабатываемогоДокумента.ДоговорКонтрагента.УчетАгентскогоНДС, ЛОЖЬ) КАК УчетАгентскогоНДС,
	|	ДанныеОбрабатываемогоДокумента.СуммаВключаетНДС КАК СуммаВключаетНДС
	|ПОМЕСТИТЬ ВТ_ТаблицаПоШапкеДокумента
	|ИЗ
	|	Документ.АктОбОказанииПроизводственныхУслуг КАК ДанныеОбрабатываемогоДокумента
	|ГДЕ
	|	ДанныеОбрабатываемогоДокумента.Ссылка В(&МассивОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицаПоШапкеДокумента.Ссылка КАК Ссылка,
	|	ВТ_ТаблицаПоШапкеДокумента.Дата КАК Дата,
	|	ВТ_ТаблицаПоШапкеДокумента.Проведен КАК Проведен,
	|	ВТ_ТаблицаПоШапкеДокумента.ВалютаДокумента КАК ВалютаДокумента,
	|	ВТ_ТаблицаПоШапкеДокумента.Организация,
	|	ВТ_ТаблицаПоШапкеДокумента.Контрагент,
	|	ВТ_ТаблицаПоШапкеДокумента.ДоговорКонтрагента,
	|	ВТ_ТаблицаПоШапкеДокумента.КурсВзаиморасчетов,
	|	ВТ_ТаблицаПоШапкеДокумента.КратностьВзаиморасчетов,
	|	ВТ_ТаблицаПоШапкеДокумента.НомерВходящегоДокумента,
	|	ВТ_ТаблицаПоШапкеДокумента.ДатаВходящегоДокумента,
	|	ВТ_ТаблицаПоШапкеДокумента.РасчетыВУсловныхЕдиницах,
	|	ВТ_ТаблицаПоШапкеДокумента.УчетАгентскогоНДС,
	|	ВТ_ТаблицаПоШапкеДокумента.СуммаВключаетНДС,
	|	0 КАК ВсегоВал,
	|	0 КАК НДСВал
	|ИЗ
	|	ВТ_ТаблицаПоШапкеДокумента КАК ВТ_ТаблицаПоШапкеДокумента
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РублевыеСуммыДокументовВВалюте.Регистратор КАК Регистратор,
	|	РублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента КАК НомерСтрокиДокумента,
	|	ВТ_ТаблицаПоШапкеДокумента.СуммаВключаетНДС,
	|	РублевыеСуммыДокументовВВалюте.Всего,
	|	РублевыеСуммыДокументовВВалюте.НДС,
	|	РублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС
	|ПОМЕСТИТЬ РегистрСведенийРублевыеСуммыДокументовВВалюте
	|ИЗ
	|	РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РублевыеСуммыДокументовВВалюте
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ТаблицаПоШапкеДокумента КАК ВТ_ТаблицаПоШапкеДокумента
	|		ПО РублевыеСуммыДокументовВВалюте.Регистратор = ВТ_ТаблицаПоШапкеДокумента.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	НомерСтрокиДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Хозрасчетный.Регистратор КАК Ссылка,
	|	Хозрасчетный.Сумма КАК СуммаПредоплатыРуб,
	|	Хозрасчетный.ВалютнаяСуммаДт КАК СуммаПредоплатыВал,
	|	ХозрасчетныйСубконто.Значение КАК Документ,
	|	ПРЕДСТАВЛЕНИЕ(ХозрасчетныйСубконто.Значение) КАК ДокументПредоплатыПредставление,
	|	ВТ_ТаблицаПоШапкеДокумента.Организация КАК Организация
	|ПОМЕСТИТЬ ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный КАК Хозрасчетный
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ТаблицаПоШапкеДокумента КАК ВТ_ТаблицаПоШапкеДокумента
	|		ПО Хозрасчетный.Регистратор = ВТ_ТаблицаПоШапкеДокумента.Ссылка
	|			И Хозрасчетный.СчетДт = ВТ_ТаблицаПоШапкеДокумента.СчетУчетаРасчетовПоАвансам
	|			И Хозрасчетный.СчетКт = ВТ_ТаблицаПоШапкеДокумента.СчетУчетаРасчетовСКонтрагентом
	|			И (ВТ_ТаблицаПоШапкеДокумента.ВалютаДокумента <> &ВалютаРегламентированногоУчета)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Субконто КАК ХозрасчетныйСубконто
	|		ПО Хозрасчетный.Регистратор = ХозрасчетныйСубконто.Регистратор
	|			И Хозрасчетный.НомерСтроки = ХозрасчетныйСубконто.НомерСтроки
	|			И (ХозрасчетныйСубконто.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияБухгалтерии.Дебет))
	|			И (ХозрасчетныйСубконто.Вид = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСКонтрагентами))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Документ,
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента.Ссылка КАК Ссылка,
	|	ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента.СуммаПредоплатыРуб КАК СуммаПредоплатыРуб,
	|	ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента.СуммаПредоплатыВал КАК СуммаПредоплатыВал,
	|	ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента.Документ,
	|	ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента.ДокументПредоплатыПредставление,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, """") КАК НомерВходящегоДокумента,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаВходящегоДокумента
	|ИЗ
	|	ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента КАК ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента.Организация = ДанныеПервичныхДокументов.Организация
	|			И ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента.Документ = ДанныеПервичныхДокументов.Документ
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента.Ссылка
	|ИТОГИ
	|	СУММА(СуммаПредоплатыРуб),
	|	СУММА(СуммаПредоплатыВал)
	|ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_ТаблицаПоШапкеДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АктОбОказанииПроизводственныхУслугУслуги.Ссылка КАК Ссылка,
	|	АктОбОказанииПроизводственныхУслугУслуги.НомерСтроки КАК НомерСтроки,
	|	АктОбОказанииПроизводственныхУслугУслуги.Номенклатура КАК Товар,
	|	АктОбОказанииПроизводственныхУслугУслуги.Номенклатура.Наименование КАК ТоварНаименование,
	|	АктОбОказанииПроизводственныхУслугУслуги.Сумма КАК ВсегоВал,
	|	АктОбОказанииПроизводственныхУслугУслуги.СуммаНДС КАК НДСВал,
	|	АктОбОказанииПроизводственныхУслугУслуги.СтавкаНДС,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего КАК ВсегоРуб,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС КАК НДСРуб,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС КАК НалоговаяБазаНДСРуб
	|ИЗ
	|	Документ.АктОбОказанииПроизводственныхУслуг.Услуги КАК АктОбОказанииПроизводственныхУслугУслуги
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|		ПО АктОбОказанииПроизводственныхУслугУслуги.Ссылка = РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор
	|			И АктОбОказанииПроизводственныхУслугУслуги.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента
	|ГДЕ
	|	АктОбОказанииПроизводственныхУслугУслуги.Сумма <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ
	|	СУММА(ВсегоВал),
	|	СУММА(НДСВал),
	|	СУММА(ВсегоРуб),
	|	СУММА(НДСРуб),
	|	СУММА(НалоговаяБазаНДСРуб)
	|ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ РегистрСведенийРублевыеСуммыДокументовВВалюте";
	
	Возврат ТекстЗапроса;
	
КонецФункции	

Функция ПолучитьДополнительныеРеквизитыДляРеестра() Экспорт
	
	Результат = Новый Структура("Информация", "Контрагент");
	
	Возврат Результат;
	
КонецФункции

#КонецЕсли