#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

Процедура ПроверитьСтатусыОбъектовАренды(Отказ)

	Если НеКонтролироватьСоответствиеСодержаниюДоговора ИЛИ Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Если ВидОперации = Перечисления.АР_ВидыОперацийСчетНаАренду.ОплатаАренды Тогда
		Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
		Запрос.УстановитьПараметр("КонецПериода", ОкончаниеПериода);
		Запрос.УстановитьПараметр("Период", КонецДня(Дата));
		Запрос.УстановитьПараметр("Договор", ДоговорКонтрагента);
		Запрос.УстановитьПараметр("Состав", Состав.Выгрузить());
		Запрос.Текст =
		"ВЫБРАТЬ
		|	АР_СчетНаАрендуСостав.НомерСтроки,
		|	АР_СчетНаАрендуСостав.Номенклатура КАК Услуга,
		|	АР_СчетНаАрендуСостав.ОбъектАренды,
		|	&Договор КАК ДоговорКонтрагента,
		|	&НачалоПериода КАК НачалоПериода,
		|	&КонецПериода КАК ОкончаниеПериода
		|ПОМЕСТИТЬ ПериодыДокумента
		|ИЗ
		|	&Состав КАК АР_СчетНаАрендуСостав
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	АР_СтатусыОбъектовАрендыСрезПоследних.Услуга,
		|	АР_СтатусыОбъектовАрендыСрезПоследних.ОбъектАренды,
		|	АР_СтатусыОбъектовАрендыСрезПоследних.Договор,
		|	АР_СтатусыОбъектовАрендыСрезПоследних.ДатаНачалаАренды,
		|	АР_СтатусыОбъектовАрендыСрезПоследних.ДатаОкончанияАренды
		|ПОМЕСТИТЬ ПериодыАренды
		|ИЗ
		|	РегистрСведений.АР_СтатусыОбъектовАренды.СрезПоследних(&Период, Договор = &Договор) КАК АР_СтатусыОбъектовАрендыСрезПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПериодыДокумента.НомерСтроки,
		|	ПериодыДокумента.Услуга,
		|	ПериодыДокумента.ОбъектАренды,
		|	ПериодыДокумента.НачалоПериода,
		|	ПериодыДокумента.ОкончаниеПериода,
		|	ВЫБОР
		|		КОГДА ПериодыАренды.ОбъектАренды ЕСТЬ NULL 
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК Ошибка
		|ИЗ
		|	ПериодыДокумента КАК ПериодыДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПериодыАренды КАК ПериодыАренды
		|		ПО ПериодыДокумента.ОкончаниеПериода >= ПериодыАренды.ДатаНачалаАренды
		|			И ПериодыДокумента.НачалоПериода <= ПериодыАренды.ДатаОкончанияАренды
		|			И ПериодыДокумента.ДоговорКонтрагента = ПериодыАренды.Договор
		|			И ПериодыДокумента.ОбъектАренды = ПериодыАренды.ОбъектАренды
		|			И ПериодыДокумента.Услуга = ПериодыАренды.Услуга
		|ГДЕ
		|	ВЫБОР
		|			КОГДА ПериодыАренды.ОбъектАренды ЕСТЬ NULL 
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ
		|		КОНЕЦ";
	Иначе
		Запрос.УстановитьПараметр("Период", КонецДня(Дата));
		Запрос.УстановитьПараметр("ВАренде", Перечисления.АР_СтатусыОбъектовАренды.ВАренде);
		Запрос.УстановитьПараметр("Договор", ДоговорКонтрагента);
		Запрос.УстановитьПараметр("Состав", Состав.Выгрузить());
		Запрос.Текст =
		"ВЫБРАТЬ
		|	АР_СчетНаАрендуСостав.НомерСтроки,
		|	АР_СчетНаАрендуСостав.Номенклатура КАК Услуга,
		|	АР_СчетНаАрендуСостав.ОбъектАренды,
		|	&Договор КАК ДоговорКонтрагента
		|ПОМЕСТИТЬ ВТСостав
		|ИЗ
		|	&Состав КАК АР_СчетНаАрендуСостав
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СчетНаАрендуСостав.ОбъектАренды,
		|	СчетНаАрендуСостав.Услуга,
		|	СчетНаАрендуСостав.НомерСтроки,
		|	ЕСТЬNULL(АР_СтатусыОбъектовАрендыСрезПоследних.Статус, ""Не установлен"") КАК Статус
		|ИЗ
		|	ВТСостав КАК СчетНаАрендуСостав
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АР_СтатусыОбъектовАренды.СрезПоследних(&Период, Договор = &Договор) КАК АР_СтатусыОбъектовАрендыСрезПоследних
		|		ПО СчетНаАрендуСостав.ОбъектАренды = АР_СтатусыОбъектовАрендыСрезПоследних.ОбъектАренды
		|			И СчетНаАрендуСостав.Услуга = АР_СтатусыОбъектовАрендыСрезПоследних.Услуга
		|			И (АР_СтатусыОбъектовАрендыСрезПоследних.ДатаНачалаАренды <= &Период)
		|ГДЕ
		|	(НЕ ЕСТЬNULL(АР_СтатусыОбъектовАрендыСрезПоследних.Статус, ""Не установлен"") = &ВАренде)";
	КонецЕсли;	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл 
		Если ЗначениеЗаполнено(Выборка.Услуга) И ЗначениеЗаполнено(Выборка.ОбъектАренды) Тогда
			Префикс = "Состав[" + Формат(Выборка.НомерСтроки - 1, "ЧН=0; ЧГ=") + "].";
			ТекстСообщения = "Услуга """ + Выборка.Услуга + """ по объекту аренды """ + Выборка.ОбъектАренды + """ не предусмотрена по данному договору";
			ТекстСообщения = ОбщегоНазначенияБПКлиентСервер.ПолучитьТекстСообщения("Колонка", "КОРРЕКТНОСТЬ",
				НСтр("ru = 'Услуга'"), Выборка.НомерСтроки, НСтр("ru = 'Состав счета'"), ТекстСообщения);
			Поле = Префикс + "Номенклатура";
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле, "Объект", Отказ);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// Процедура предназначена для заполнения строк табличной части документа в случае выставления счета на оплату пени
// ПриемникСообщений -- контекст управляемой формы для вывода сообщения
Процедура ЗаполнитьСтрокиПени() Экспорт
	
	Данные = АР_ПроцедурыНачисления.НачислениеПени(ДоговорКонтрагента, Дата, ДокументБезНДС);
	
	Если ЗначениеЗаполнено(Данные) Тогда
		Состав.Загрузить(Данные);
	Иначе
		Состав.Очистить();
	КонецЕсли;
			
	Для Каждого СтрокаТЧ Из Состав Цикл
		НаименованиеПолное = СтрокаТЧ.Номенклатура.НаименованиеПолное;
		Если ПустаяСтрока(НаименованиеПолное) Тогда
			СтрокаТЧ.Содержание = СтрокаТЧ.Номенклатура.Наименование;
		Иначе
			СтрокаТЧ.Содержание = НаименованиеПолное;
		КонецЕсли;
		ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуНДСТабЧасти(СтрокаТЧ, ЭтотОбъект.СуммаВключаетНДС);
	КонецЦикла;
	
КонецПроцедуры

// Процедура предназначена для заполнения строк табличной части документа по актуальным	данным о депозите
Процедура ЗаполнитьСтрокиДепозит(Основание = Неопределено) Экспорт
	
	Если Не ЗначениеЗаполнено(ДоговорКонтрагента) Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеПоДепозиту = ПолучитьДанныеПоДепозиту(ДоговорКонтрагента, Дата);
	Если Не ЗначениеЗаполнено(ДанныеПоДепозиту.ДепозитПоДоговору) Тогда
		Возврат;
	КонецЕсли;
	
	СтрокаТЧ = Состав.Добавить();
	СтрокаТЧ.Номенклатура = Константы.АР_ОсновнаяУслугаДляНачисленияДепозита.Получить();
	СтрокаТЧ.Содержание = ?(ЗначениеЗаполнено(СтрокаТЧ.Номенклатура), СтрокаТЧ.Номенклатура.Наименование, "Страховой депозит по договору " + ДоговорКонтрагента);
	СтрокаТЧ.Количество = 1;
	Если ВалютаДокумента = ДоговорКонтрагента.ВалютаВзаиморасчетов Тогда
		СтрокаТЧ.Цена = ДанныеПоДепозиту.ДепозитПоДоговоруВал;
		СтрокаТЧ.Сумма = ДанныеПоДепозиту.ДепозитПоДоговоруВал;
	Иначе
		СтрокаТЧ.Цена = ДанныеПоДепозиту.ДепозитПоДоговору;
		СтрокаТЧ.Сумма = ДанныеПоДепозиту.ДепозитПоДоговору;
	КонецЕсли;
	СтрокаТЧ.СтавкаНДС = ДанныеПоДепозиту.Регистратор.СтавкаНДСЗалога;
	ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуНДСТабЧасти(СтрокаТЧ, ЭтотОбъект.СуммаВключаетНДС);
	
КонецПроцедуры

Функция ПолучитьДанныеПоДепозиту(Договор, Период)
	
	Результат = Новый Структура("ДепозитПоДоговору, ДепозитПоДоговоруВал, Регистратор", 0, 0, Неопределено);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	АР_СтавкиСрезПоследних.Регистратор КАК Регистратор,
	|	АР_СтавкиСрезПоследних.Регистратор.УчитыватьЗалог КАК УчитыватьЗалог,
	|	АР_СтавкиСрезПоследних.Регистратор.СуммаЗалога КАК СуммаЗалога,
	|	АР_СтавкиСрезПоследних.Регистратор.ВалютаДепозита КАК ВалютаДепозита,
	|	АР_СтавкиСрезПоследних.Договор.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов
	|ИЗ
	|	РегистрСведений.АР_Ставки.СрезПоследних(&Период, Договор = &Договор) КАК АР_СтавкиСрезПоследних
	|
	|УПОРЯДОЧИТЬ ПО
	|	АР_СтавкиСрезПоследних.Период УБЫВ";
	
	Запрос.УстановитьПараметр("Период", ?(ЗначениеЗаполнено(Период), КонецДня(Период), Период));
	Запрос.УстановитьПараметр("Договор", Договор);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		
		Результат.Регистратор = Выборка.Регистратор;
		
		ЗапросВзаиморасчеты = Новый Запрос;
		ЗапросВзаиморасчеты.Текст =
		"ВЫБРАТЬ
		|	АР_ВзаиморасчетыПоАрендеОбороты.СуммаРасход КАК Сумма,
		|	АР_ВзаиморасчетыПоАрендеОбороты.СуммаВзаиморасчетовРасход КАК СуммаВзаиморасчетов,
		|	0 КАК СуммаДепозит,
		|	АР_ВзаиморасчетыПоАрендеОбороты.Период КАК Период
		|ИЗ
		|	РегистрНакопления.АР_ВзаиморасчетыПоАренде.Обороты(
		|			,
		|			&Период,
		|			День,
		|			ДоговорКонтрагента = &Договор
		|				И Депозит) КАК АР_ВзаиморасчетыПоАрендеОбороты
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период УБЫВ";
		ЗапросВзаиморасчеты.УстановитьПараметр("Период", КонецДня(Период));
		ЗапросВзаиморасчеты.УстановитьПараметр("Договор", Договор);
		
		ВалютаРегл = Константы.ВалютаРегламентированногоУчета.Получить();
		
		ТаблицаРасчетов = ЗапросВзаиморасчеты.Выполнить().Выгрузить();
		Для каждого СтрокаТаб Из ТаблицаРасчетов Цикл
			Если Выборка.ВалютаДепозита = ВалютаРегл Тогда
				СтрокаТаб.СуммаДепозит = СтрокаТаб.Сумма;
			ИначеЕсли Выборка.ВалютаДепозита = Выборка.ВалютаВзаиморасчетов Тогда
				СтрокаТаб.СуммаДепозит = СтрокаТаб.СуммаВзаиморасчетов;
			Иначе
				КурсДепозит = АР_ПроцедурыНачисленияПереопределяемый.ПолучитьКурсВалюты(Выборка.ВалютаДепозита, СтрокаТаб.Период, Договор);
				СтрокаТаб.СуммаДепозит = СтрокаТаб.Сумма/КурсДепозит;
			КонецЕсли;
		КонецЦикла;
		СуммаДепозитИтого = ТаблицаРасчетов.Итог("СуммаДепозит");
		
		Если СуммаДепозитИтого <= Выборка.СуммаЗалога Тогда
			КурсДепозит = АР_ПроцедурыНачисленияПереопределяемый.ПолучитьКурсВалюты(Выборка.ВалютаДепозита, Период, Договор);
			КурсВал = АР_ПроцедурыНачисленияПереопределяемый.ПолучитьКурсВалюты(Выборка.ВалютаВзаиморасчетов, Период, Договор);
			Результат.ДепозитПоДоговору = (Выборка.СуммаЗалога - СуммаДепозитИтого) * КурсДепозит.Курс;
			Результат.ДепозитПоДоговоруВал = (Выборка.СуммаЗалога - СуммаДепозитИтого) * КурсДепозит.Курс/КурсВал.Курс;
		Иначе
			Возврат Результат;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Процедура предназначена для заполнения строк табличной части документа в случае выставления счета на аренду
Процедура ЗаполнитьСтроки(ПостояннаяЧастьОплаты, ЗаполнятьСпециальныйКурс = Ложь, СкрыватьСообщенияОбНДС = Ложь) Экспорт
	
	Если ПостояннаяЧастьОплаты Тогда
		АР_ПроцедурыНачисления.ПолучитьПостояннуюЧастьОплаты(ЭтотОбъект,"Состав", СкрыватьСообщенияОбНДС);
	Иначе
		АР_ПроцедурыНачисления.ПолучитьПеременнуюЧастьОплаты(ЭтотОбъект,"Состав");
	КонецЕсли;
	
	// Проверим, если валюта документа и валюта строки совпадают, 
	// то изменим при необходимости курс на специальный
	Если ЗаполнятьСпециальныйКурс Тогда
		Если Состав.Количество() > 0 Тогда
			Если ВалютаДокумента = Состав[0].СпособНачисления.Валюта Тогда
				СтруктураКурса = АР_ПроцедурыНачисления.ПолучитьКурсВалюты(ВалютаДокумента, ДатаКурса, ДоговорКонтрагента);
				Если  КурсВзаиморасчетов <> СтруктураКурса.Курс Тогда
					КурсВзаиморасчетов = СтруктураКурса.Курс;
					КратностьВзаиморасчетов = СтруктураКурса.Кратность;
				КонецЕсли;
			КонецЕсли;  
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура СкопироватьСостав(Основание)
	
	Состав.Загрузить(Основание.Состав.Выгрузить());
	
КонецПроцедуры

Процедура ПроверитьПризнакНДС(Отказ)
	
	Если НеКонтролироватьСоответствиеСодержаниюДоговора ИЛИ Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если ВидОперации <> Перечисления.АР_ВидыОперацийСчетНаАренду.ОплатаАренды
		ИЛИ Не ПолучитьФункциональнуюОпцию("АР_ИспользоватьСхемуОпределенияСтавокНДСПоАрендеНаОсновеДоговора") Тогда
		Возврат;
	КонецЕсли;
	
	ЕстьУслугиПостЧасти = Ложь;
	Для Каждого Стр Из Состав Цикл
		ЕстьУслугиПостЧасти = ЕстьУслугиПостЧасти ИЛИ Стр.Номенклатура.АР_ПостояннаяЧастьОплаты;
	КонецЦикла;
	Если НЕ ЕстьУслугиПостЧасти Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Услуги.НомерСтроки КАК НомерСтроки,
	|	Услуги.Номенклатура КАК Номенклатура,
	|	Услуги.ОбъектАренды КАК ОбъектАренды
	|ПОМЕСТИТЬ ВТДанныеДокумента
	|ИЗ
	|	&Услуги КАК Услуги
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтатусыОбъектовАренды.ОбъектАренды КАК ОбъектАренды,
	|	СтатусыОбъектовАренды.Услуга КАК Услуга,
	|	СтатусыОбъектовАренды.Регистратор.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	МИНИМУМ(ДанныеДокумента.НомерСтроки) КАК НомерСтроки,
	|	СтатусыОбъектовАренды.Регистратор.ДокументБезНДС КАК ДокументБезНДС
	|ИЗ
	|	РегистрСведений.АР_СтатусыОбъектовАренды.СрезПоследних(&Период, Договор = &Договор) КАК СтатусыОбъектовАренды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДанныеДокумента КАК ДанныеДокумента
	|		ПО СтатусыОбъектовАренды.ОбъектАренды = ДанныеДокумента.ОбъектАренды
	|			И СтатусыОбъектовАренды.Услуга = ДанныеДокумента.Номенклатура
	|ГДЕ
	|	(СтатусыОбъектовАренды.Регистратор.ДокументБезНДС <> &ДокументБезНДС
	|			ИЛИ &ДокументБезНДС = ЛОЖЬ
	|				И СтатусыОбъектовАренды.Регистратор.СуммаВключаетНДС <> &СуммаВключаетНДС)
	|	И СтатусыОбъектовАренды.ДатаНачалаАренды <= &КонецПериода
	|	И СтатусыОбъектовАренды.ДатаОкончанияАренды >= &НачалоПериода
	|	И СтатусыОбъектовАренды.Услуга.АР_ПостояннаяЧастьОплаты
	|
	|СГРУППИРОВАТЬ ПО
	|	СтатусыОбъектовАренды.Услуга,
	|	СтатусыОбъектовАренды.ОбъектАренды,
	|	СтатусыОбъектовАренды.Регистратор.СуммаВключаетНДС,
	|	СтатусыОбъектовАренды.Регистратор.ДокументБезНДС
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Запрос.УстановитьПараметр("Период", КонецДня(ОкончаниеПериода));
	Запрос.УстановитьПараметр("Договор", ДоговорКонтрагента);
	Запрос.УстановитьПараметр("СуммаВключаетНДС", СуммаВключаетНДС);
	Запрос.УстановитьПараметр("ДокументБезНДС", ДокументБезНДС);
	Запрос.УстановитьПараметр("Услуги", Состав.Выгрузить());
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", ОкончаниеПериода);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Выборка.ДокументБезНДС Тогда
			ВариантНДС = "Документ без НДС";
		ИначеЕсли Выборка.СуммаВключаетНДС Тогда
			ВариантНДС = "НДС в сумме";
		Иначе
			ВариантНДС = "НДС сверху";
		КонецЕсли;
		ТекстСообщения = "Контрагент """ + Контрагент + """, договор """ + ДоговорКонтрагента + """: для услуги """ + Выборка.Услуга + """ по объекту аренды """ + Выборка.ОбъектАренды + """ вариант учета НДС должен быть """ + ВариантНДС + """";
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект,,, Отказ);
	КонецЦикла;             	
		
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)

	АР_ОбщиеПроцедуры.ЗаполнитьПериодПоУмолчанию(ЭтотОбъект);
	
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	Если ДанныеЗаполнения <> Неопределено И ТипДанныхЗаполнения <> Тип("Структура")
		И Метаданные().ВводитсяНаОсновании.Содержит(ДанныеЗаполнения.Метаданные()) Тогда
		ЗаполнитьПоДокументуОснованию(ДанныеЗаполнения);
	Иначе
		СуммаВключаетНДС = Истина;
	КонецЕсли;
	
	ЗаполнениеДокументов.Заполнить(ЭтотОбъект, ДанныеЗаполнения);
	
	// Заполнение реквизитов, специфичных для документа:
	ДатаКурса = Дата;		
	
КонецПроцедуры

Процедура ЗаполнитьПоДокументуОснованию(Основание)

	ДокументОснование = Основание;
	
	Если ТипЗнч(Основание) = Тип("ДокументСсылка.АР_ЗаключениеДоговораАренды")
		ИЛИ ТипЗнч(Основание) = Тип("ДокументСсылка.АР_ДополнительноеСоглашение")
		ИЛИ ТипЗнч(Основание) = Тип("ДокументСсылка.АР_РасторжениеДоговораАренды") Тогда
	
		врСуммаВключаетНДС = СуммаВключаетНДС;
		врДокументБезНДС = ДокументБезНДС;
		
		// Заполним реквизиты из стандартного набора по документу основанию.
		ЗаполнениеДокументов.ЗаполнитьПоОснованию(ЭтотОбъект, Основание);
		
		Если НЕ ПолучитьФункциональнуюОпцию("АР_ИспользоватьСхемуОпределенияСтавокНДСПоАрендеНаОсновеДоговора") Тогда
			СуммаВключаетНДС = врСуммаВключаетНДС;
			ДокументБезНДС = врДокументБезНДС;
		КонецЕсли;

		Если ЗначениеЗаполнено(ДоговорКонтрагента) Тогда
			ВалютаДокумента = ДоговорКонтрагента.ВалютаВзаиморасчетов;
		КонецЕсли;
		СтруктураКурсаДокумента = АР_ПроцедурыНачисления.ПолучитьКурсВалюты(ВалютаДокумента, Дата, ДоговорКонтрагента);
		КурсВзаиморасчетов      = СтруктураКурсаДокумента.Курс;
		КратностьВзаиморасчетов = СтруктураКурсаДокумента.Кратность;
		
		НачалоПериода = НачалоМесяца(Дата);
		ОкончаниеПериода = КонецМесяца(Дата);
		ДатаКурса = Дата;
		
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.АР_НачислениеАренднойПлаты")
		ИЛИ ТипЗнч(Основание) = Тип("ДокументСсылка.АР_НачислениеПени") Тогда
		
		// Заполним реквизиты из стандартного набора по документу основанию.
		ЗаполнениеДокументов.ЗаполнитьПоОснованию(ЭтотОбъект, Основание);
		
		СкопироватьСостав(Основание);
		
		Если ТипЗнч(Основание) = Тип("ДокументСсылка.АР_НачислениеПени") Тогда
			ВидОперации = Перечисления.АР_ВидыОперацийСчетНаАренду.ОплатаПени;
		Иначе
			НеКонтролироватьСоответствиеСодержаниюДоговора = Основание.НеКонтролироватьСоответствиеСодержаниюДоговора;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	// Посчитать суммы документа и записать ее в соответствующий реквизит шапки для показа в журналах
	СуммаДокумента = УчетНДСПереопределяемый.ПолучитьСуммуДокументаСНДС(ЭтотОбъект);
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	// Исключаем из проверки реквизиты, заполнение которых стало необязательным:
	МассивНепроверяемыхРеквизитов = Новый Массив();

	Если ВидОперации <> Перечисления.АР_ВидыОперацийСчетНаАренду.ОплатаАренды Тогда
		МассивНепроверяемыхРеквизитов.Добавить("НачалоПериода");
		МассивНепроверяемыхРеквизитов.Добавить("ОкончаниеПериода");
		МассивНепроверяемыхРеквизитов.Добавить("Состав.Номенклатура");
		МассивНепроверяемыхРеквизитов.Добавить("Состав.ОбъектАренды");
	КонецЕсли;

	Если НЕ Справочники.БанковскиеСчета.ИспользуетсяНесколькоБанковскихСчетовОрганизации(Организация) Тогда
		МассивНепроверяемыхРеквизитов.Добавить("СчетОрганизации");
		ПроверкаРеквизитовОрганизации.ОбработкаПроверкиЗаполнения(Организация, СчетОрганизации, Ложь, Отказ);
	КонецЕсли;
	
	// Сделаем проверку на то, что объекты по данному договору находится в аренде
	ПроверитьСтатусыОбъектовАренды(Отказ);
	
	ПроверитьПризнакНДС(Отказ);
	
	// Удаляем из проверяемых реквизитов все, по которым автоматическая проверка не нужна:
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

#КонецЕсли
