#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов


////////////////////////////////////////////////////////////////////////////////
// Печать

// Заполняет список команд отправки по электронной почте.
// 
// Параметры:
//  КомандыОтправки - ТаблицаЗначений - состав полей см. в функции ОтправкаПочтовыхСообщений.КомандыОтправки
//
Процедура ДобавитьКомандыОтправки(КомандыОтправки) Экспорт
	
	КомандаОтправки = КомандыОтправки.Добавить();
	КомандаОтправки.МенеджерПечати  = "Обработка.ПечатьСчетаНаОплату";
	КомандаОтправки.Идентификатор = "СчетЗаказ";
	КомандаОтправки.Представление = НСтр("ru = 'Счет на оплату'");

	КомандаОтправки = КомандыОтправки.Добавить();
	КомандаОтправки.МенеджерПечати  = "Обработка.ПечатьСчетаНаОплату";
	КомандаОтправки.Идентификатор = "СчетЗаказ";
	КомандаОтправки.Представление = НСтр("ru = 'Счет на оплату (сводный по услугам)'");
	КомандаОтправки.ДополнительныеПараметры.Вставить("Сводный", Истина);
	
	КомандаОтправки = КомандыОтправки.Добавить();
	КомандаОтправки.МенеджерПечати  = "Обработка.ПечатьСчетаНаОплату";
	КомандаОтправки.Идентификатор = "СчетЗаказ";
	КомандаОтправки.Представление = НСтр("ru = 'Счет на оплату (по объектам)'");
	КомандаОтправки.ДополнительныеПараметры.Вставить("Сводный", Ложь);
	
	КомандаОтправки = КомандыОтправки.Добавить();
	КомандаОтправки.Идентификатор = "СправкаРасчетПеней";
	КомандаОтправки.Представление = НСтр("ru = 'Расчет пеней'");
	
КонецПроцедуры

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьСчетаНаОплату";
	КомандаПечати.Идентификатор = "СчетЗаказ";
	КомандаПечати.Представление = НСтр("ru = 'Счет на оплату'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаСписка,ФормаВыбора,ФормаДокумента";

	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьСчетаНаОплату";
	КомандаПечати.Идентификатор = "СчетЗаказ";
	КомандаПечати.Представление = НСтр("ru = 'Счет на оплату (сводный по услугам)'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.ДополнительныеПараметры.Вставить("Сводный", Истина);
	КомандаПечати.СписокФорм    = "ФормаСписка,ФормаВыбора,ФормаДокумента";
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьСчетаНаОплату";
	КомандаПечати.Идентификатор = "СчетЗаказ";
	КомандаПечати.Представление = НСтр("ru = 'Счет на оплату (по объектам)'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.ДополнительныеПараметры.Вставить("Сводный", Ложь);
	КомандаПечати.СписокФорм    = "ФормаСписка,ФормаВыбора,ФормаДокумента";
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "СправкаРасчетПеней";
	КомандаПечати.Представление = НСтр("ru = 'Расчет пеней'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаДокумента";
	
	Если ПравоДоступа("Использование", Метаданные.Отчеты.РеестрДокументов) Тогда
		// Реестр документов
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Идентификатор = "Реестр";
		КомандаПечати.Представление = НСтр("ru = 'Реестр документов'");
		КомандаПечати.ЗаголовокФормы= НСтр("ru = 'Реестр документов ""Счет на аренду""'");
		КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
		КомандаПечати.СписокФорм    = "ФормаСписка";
		КомандаПечати.ДополнительныеПараметры.Вставить("НеВыводитьВКомплекте",Истина);
		КомандаПечати.Порядок       = 160;
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьДополнительныеРеквизитыДляРеестра() Экспорт
	
	Результат = Новый Структура("Информация", "Контрагент");
	
	Возврат Результат;
	
КонецФункции

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СправкаРасчетПеней") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "СправкаРасчетПеней", "Расчет пеней",
			ПечатьСправкаРасчетПеней(МассивОбъектов, ОбъектыПечати),, "Документ.НачислениеПеней.ПФ_MXL_РасчетПени");
	КонецЕсли;
	
КонецПроцедуры

// Функция формирует табличный документ с печатной формой расчет пеней
//
// Возвращаемое значение:
//  Табличный документ - сформированная печатная форма
//
Функция ПечатьСправкаРасчетПеней(МассивОбъектов, ОбъектыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб         = Истина;
	ТабличныйДокумент.ОриентацияСтраницы  = ОриентацияСтраницы.Портрет;
	ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_РасчетПени_СправкаРасчет";
	
	ДанныеШапки = Новый Структура;
	ДанныеПодвал = Новый Структура;
	ДанныеСтроки = Новый Структура;
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.АР_НачислениеПени.ПФ_MXL_РасчетПени");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НачислениеПеней.Ссылка КАК Ссылка,
	|	НачислениеПеней.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	МАКСИМУМ(ПараметрыНачисленияПеней.Период) КАК Период
	|ПОМЕСТИТЬ ПараметрыПенейМаксимумПоПериоду
	|ИЗ
	|	Документ.АР_СчетНаАренду КАК НачислениеПеней
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АР_СрокиОплатыИПараметрыНачисленияПеней КАК ПараметрыНачисленияПеней
	|		ПО НачислениеПеней.ДоговорКонтрагента = ПараметрыНачисленияПеней.ДоговорКонтрагента
	|			И (НАЧАЛОПЕРИОДА(ПараметрыНачисленияПеней.Период, ДЕНЬ) <= НачислениеПеней.Дата)
	|ГДЕ
	|	НачислениеПеней.Ссылка В(&МассивОбъектов)
	|	И ПараметрыНачисленияПеней.Активность
	|
	|СГРУППИРОВАТЬ ПО
	|	НачислениеПеней.Ссылка,
	|	НачислениеПеней.ДоговорКонтрагента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПараметрыПенейМаксимумПоПериоду.Ссылка КАК Ссылка,
	|	ПараметрыПенейМаксимумПоПериоду.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	МАКСИМУМ(ПараметрыНачисленияПеней.СтавкаПени) КАК СтавкаПени,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ПараметрыНачисленияПеней.СпособНачисленияПени = ЗНАЧЕНИЕ(Перечисление.АР_СпособыНачисленияПени.Суммой)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ФиксированнаяСуммаПени
	|ПОМЕСТИТЬ ПараметрыПенейСрезПоследних
	|ИЗ
	|	ПараметрыПенейМаксимумПоПериоду КАК ПараметрыПенейМаксимумПоПериоду
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АР_СрокиОплатыИПараметрыНачисленияПеней КАК ПараметрыНачисленияПеней
	|		ПО ПараметрыПенейМаксимумПоПериоду.ДоговорКонтрагента = ПараметрыНачисленияПеней.ДоговорКонтрагента
	|			И ПараметрыПенейМаксимумПоПериоду.Период = ПараметрыНачисленияПеней.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	ПараметрыПенейМаксимумПоПериоду.Ссылка,
	|	ПараметрыПенейМаксимумПоПериоду.ДоговорКонтрагента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НачислениеПеней.Ссылка КАК Ссылка,
	|	НачислениеПеней.Организация КАК Организация,
	|	НачислениеПеней.Контрагент КАК Контрагент,
	|	ПРЕДСТАВЛЕНИЕ(НачислениеПеней.ДоговорКонтрагента) КАК Основание,
	|	ЕСТЬNULL(ПараметрыПенейСрезПоследних.СтавкаПени, 0) КАК СтавкаПени,
	|	ЕСТЬNULL(ПараметрыПенейСрезПоследних.ФиксированнаяСуммаПени, ЛОЖЬ) КАК ФиксированнаяСуммаПени,
	|	НачислениеПеней.Дата КАК Дата,
	|	СУММА(ЕСТЬNULL(НачислениеПенейЗадолженность.Сумма, 0)) КАК СуммаПени,
	|	СУММА(ЕСТЬNULL(НачислениеПенейЗадолженность.ДолгЗаПериод, 0)) КАК Задолженность,
	|	НачислениеПеней.ВалютаДокумента КАК ВалютаДокумента,
	|	ЕСТЬNULL(НачислениеПеней.ДоговорКонтрагента.АР_ВестиВзаиморасчетыПоПериодам, ЛОЖЬ)
	|		ИЛИ ЕСТЬNULL(НачислениеПеней.ДоговорКонтрагента.АР_ВестиВзаиморасчетыПоОбъектам, ЛОЖЬ)
	|		ИЛИ ЕСТЬNULL(НачислениеПеней.ДоговорКонтрагента.АР_ВестиВзаиморасчетыПоУслугам, ЛОЖЬ) КАК ВыводитьАналитику
	|ИЗ
	|	Документ.АР_СчетНаАренду КАК НачислениеПеней
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.АР_СчетНаАренду.Состав КАК НачислениеПенейЗадолженность
	|		ПО (НачислениеПенейЗадолженность.Ссылка = НачислениеПеней.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПараметрыПенейСрезПоследних КАК ПараметрыПенейСрезПоследних
	|		ПО (ПараметрыПенейСрезПоследних.Ссылка = НачислениеПеней.Ссылка)
	|ГДЕ
	|	НачислениеПеней.Ссылка В(&МассивОбъектов)
	|
	|СГРУППИРОВАТЬ ПО
	|	НачислениеПеней.Ссылка,
	|	НачислениеПеней.Организация,
	|	НачислениеПеней.Контрагент,
	|	ПараметрыПенейСрезПоследних.СтавкаПени,
	|	ПараметрыПенейСрезПоследних.ФиксированнаяСуммаПени,
	|	НачислениеПеней.Дата,
	|	НачислениеПеней.ВалютаДокумента,
	|	НачислениеПеней.ДоговорКонтрагента.АР_ВестиВзаиморасчетыПоПериодам
	|		ИЛИ НачислениеПеней.ДоговорКонтрагента.АР_ВестиВзаиморасчетыПоОбъектам
	|		ИЛИ НачислениеПеней.ДоговорКонтрагента.АР_ВестиВзаиморасчетыПоУслугам,
	|	ПРЕДСТАВЛЕНИЕ(НачислениеПеней.ДоговорКонтрагента),
	|	ЕСТЬNULL(НачислениеПеней.ДоговорКонтрагента.АР_ВестиВзаиморасчетыПоПериодам, ЛОЖЬ)
	|		ИЛИ ЕСТЬNULL(НачислениеПеней.ДоговорКонтрагента.АР_ВестиВзаиморасчетыПоОбъектам, ЛОЖЬ)
	|		ИЛИ ЕСТЬNULL(НачислениеПеней.ДоговорКонтрагента.АР_ВестиВзаиморасчетыПоУслугам, ЛОЖЬ)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НачислениеПеней.Дата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НачислениеПенейЗадолженность.Ссылка КАК Ссылка,
	|	НачислениеПенейЗадолженность.ДокументРасчетов КАК ДокументРасчетов,
	|	НачислениеПенейЗадолженность.ДолгЗаПериод КАК Задолженность,
	|	НачислениеПенейЗадолженность.СтавкаПени КАК СтавкаПени,
	|	НачислениеПенейЗадолженность.КоличествоДнейПросрочки КАК Просрочка,
	|	НачислениеПенейЗадолженность.Сумма КАК СуммаПени,
	|	НачислениеПенейЗадолженность.СрокОплаты КАК ДатаОтсчета,
	|	НачислениеПенейЗадолженность.ПериодАренды КАК ПериодАренды,
	|	НачислениеПенейЗадолженность.Номенклатура КАК Номенклатура,
	|	НачислениеПенейЗадолженность.ОбъектАренды КАК ОбъектАренды
	|ИЗ
	|	Документ.АР_СчетНаАренду.Состав КАК НачислениеПенейЗадолженность
	|ГДЕ
	|	НачислениеПенейЗадолженность.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НачислениеПенейЗадолженность.НомерСтроки";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Результат = Запрос.ВыполнитьПакет();
	
	ТаблицаДокументов = Результат[2].Выгрузить();
	ТаблицаРасчетПени = Результат[3].Выгрузить();
	
	ТаблицаРасчетПени.Индексы.Добавить("Ссылка");
	
	ОбластьШапка = Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьИтогоПоСтранице = Макет.ПолучитьОбласть("ИтогоПоСтранице");
	
	ЭтоПерваяСтраница = Истина;
	
	Для каждого СведенияОДокументе Из ТаблицаДокументов Цикл
	
		Если НЕ ЭтоПерваяСтраница Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		Если ТипЗнч(СведенияОДокументе.Ссылка) = Тип("ДокументСсылка.АР_СчетНаАренду")
			И НЕ СведенияОДокументе.Ссылка.ВидОперации = Перечисления.АР_ВидыОперацийСчетНаАренду.ОплатаПени Тогда
			ТекстСообщения = "Печатная форма ""Расчет пеней"" доступна только для счетов с видом операции ""Оплата пени""";
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			Возврат ТабличныйДокумент;
		КонецЕсли;
		
		ЭтоПерваяСтраница = Ложь;
		
		СведенияОбОрганизации    = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(СведенияОДокументе.Организация, СведенияОДокументе.Дата);
		ПредставлениеОрганизации = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОбОрганизации, "НаименованиеДляПечатныхФорм,");
		
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ТекстЗаголовка = СтрШаблон(НСтр("ru = 'Расчет пеней на %1'"), 
			Формат(СведенияОДокументе.Дата, "ДЛФ=DD"));
			
		ДанныеШапки.Вставить("ТекстЗаголовка", ТекстЗаголовка);
		ДанныеШапки.Вставить("ПредставлениеОрганизации", ПредставлениеОрганизации);
		
		СведенияОКонтрагенте    = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(СведенияОДокументе.Контрагент, СведенияОДокументе.Дата);
		ПредставлениеКонтрагента = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОКонтрагенте, "НаименованиеДляПечатныхФорм,");
		
		СтавкаПениЗаголовок = ?(СведенияОДокументе.ФиксированнаяСуммаПени, 
			"Ставка пени", "Ставка пени, %");
		
		ДанныеШапки.Вставить("Контрагент",               СведенияОДокументе.Контрагент);
		ДанныеШапки.Вставить("ПредставлениеКонтрагента", ПредставлениеКонтрагента);
		ДанныеШапки.Вставить("Основание",                СведенияОДокументе.Основание);
		ДанныеШапки.Вставить("СтавкаПениЗаголовок",      СтавкаПениЗаголовок);
		
		ОбластьШапка.Параметры.Заполнить(ДанныеШапки);
		ТабличныйДокумент.Вывести(ОбластьШапка);
		
		ОбластьШапкаТаблицы.Параметры.Заполнить(ДанныеШапки);
		ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
		
		ТаблицаРасчетПениПоДокументу = ТаблицаРасчетПени.НайтиСтроки(Новый Структура("Ссылка", СведенияОДокументе.Ссылка));
		
		НомерСтроки = 1;
		КоличествоСтрок = ТаблицаРасчетПениПоДокументу.Количество();
		
		Если СведенияОДокументе.ВыводитьАналитику Тогда
			ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаСАналитикой");
		Иначе
			ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
		КонецЕсли;
		
		Для каждого СтрокаРасчета Из ТаблицаРасчетПениПоДокументу Цикл
			
			ДанныеСтроки.Вставить("НомерСтроки", НомерСтроки);
			ДанныеСтроки.Вставить("Задолженность", ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаРасчета.Задолженность));
			ДанныеСтроки.Вставить("Просрочка",           Формат(СтрокаРасчета.Просрочка, "ЧДЦ="));
			ДанныеСтроки.Вставить("СуммаПени",           ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаРасчета.СуммаПени));
			ДанныеСтроки.Вставить("ДокументРасчетов", ОбщегоНазначенияБПВызовСервера.СформироватьЗаголовокДокумента(СтрокаРасчета.ДокументРасчетов));
			ДанныеСтроки.Вставить("ДатаОтсчета", СтрокаРасчета.ДатаОтсчета);
			ДанныеСтроки.Вставить("СтавкаПени", СтрокаРасчета.СтавкаПени);
			
			Аналитика = ?(ЗначениеЗаполнено(СтрокаРасчета.ПериодАренды), Формат(СтрокаРасчета.ПериодАренды, "ДФ='ММММ гггг'"), "");
			Аналитика = Аналитика + ?(ЗначениеЗаполнено(СтрокаРасчета.Номенклатура), ?(ЗначениеЗаполнено(Аналитика), " | ", "") + СтрокаРасчета.Номенклатура, "");
			Аналитика = Аналитика + ?(ЗначениеЗаполнено(СтрокаРасчета.ОбъектАренды), ?(ЗначениеЗаполнено(Аналитика), " | ", "") + СтрокаРасчета.ОбъектАренды, "");
			
			ДанныеСтроки.Вставить("Аналитика", Аналитика);
			Если НЕ ЗначениеЗаполнено(СтрокаРасчета.ДокументРасчетов) Тогда
				ДанныеСтроки.Вставить("ДокументРасчетов", "<Документ расчетов не указан>");
			КонецЕсли;
			
			
			ОбластьСтрока.Параметры.Заполнить(ДанныеСтроки);
			
			СтрокаСПодвалом = Новый Массив;
			СтрокаСПодвалом.Добавить(ОбластьСтрока);
			СтрокаСПодвалом.Добавить(ОбластьИтогоПоСтранице);
			Если НомерСтроки = КоличествоСтрок Тогда
				СтрокаСПодвалом.Добавить(ОбластьПодвал);
			КонецЕсли; 
			
			Если НЕ ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабличныйДокумент, СтрокаСПодвалом) Тогда
				ТабличныйДокумент.Вывести(ОбластьИтогоПоСтранице);
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
			КонецЕсли;
			
			ТабличныйДокумент.Вывести(ОбластьСтрока);
			
			НомерСтроки = НомерСтроки + 1;
		
		КонецЦикла;
		
		ТабличныйДокумент.Вывести(ОбластьИтогоПоСтранице);
		
		ДанныеПодвал.Вставить("ПредставлениеОрганизации", ПредставлениеОрганизации);
		ДанныеПодвал.Вставить("ПредставлениеКонтрагента", ПредставлениеКонтрагента);
		ДанныеПодвал.Вставить("ИтогоПени", ОбщегоНазначенияБПВызовСервера.ФорматСумм(СведенияОДокументе.СуммаПени));
		ДанныеПодвал.Вставить("СуммаПрописью", 
			РаботаСКурсамиВалют.СформироватьСуммуПрописью(СведенияОДокументе.СуммаПени, СведенияОДокументе.ВалютаДокумента));
		
		ОбластьПодвал.Параметры.Заполнить(ДанныеПодвал);
		ТабличныйДокумент.Вывести(ОбластьПодвал);
		
		// В табличном документе зададим имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, 
			НомерСтрокиНачало, ОбъектыПечати, СведенияОДокументе.Ссылка);
	
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
КонецФункции

// Формирует и возвращает текст запроса для выборки данных,
Функция ПолучитьТекстЗапросаДляФормированияПечатнойФормыСчетаНаОплатуПокупателю() // практически копия печати типового счета на оплату
	
	ЧастьЗапросаДляВыбораСодержанияУслуг = ОбщегоНазначенияБПВызовСервера.ПолучитьЧастьЗапросаДляВыбораСодержанияУслуг("ЗаказПокупателя");
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка,
	|	Реквизиты.Номер,
	|	Реквизиты.Дата,
	|	Реквизиты.ДоговорКонтрагента,
	|	Реквизиты.Организация,
	|	Реквизиты.СчетОрганизации КАК СтруктурнаяЕдиница,
	|	Реквизиты.СчетОрганизации.ТекстКорреспондента КАК ТекстКорреспондента,
	|	Реквизиты.СчетОрганизации.БанкДляРасчетов КАК БанкДляРасчетов,
	|	ВЫБОР
	|		КОГДА Реквизиты.СчетОрганизации.БанкДляРасчетов <> ЗНАЧЕНИЕ(Справочник.Банки.ПустаяСсылка)
	|			ТОГДА Реквизиты.СчетОрганизации.БанкДляРасчетов.Наименование + "" "" + Реквизиты.СчетОрганизации.БанкДляРасчетов.Город
	|		ИНАЧЕ Реквизиты.СчетОрганизации.Банк.Наименование + "" "" + Реквизиты.СчетОрганизации.Банк.Город
	|	КОНЕЦ КАК НаименованиеБанкаПолучателя,
	|	ВЫБОР
	|		КОГДА Реквизиты.СчетОрганизации.БанкДляРасчетов <> ЗНАЧЕНИЕ(Справочник.Банки.ПустаяСсылка)
	|			ТОГДА Реквизиты.СчетОрганизации.БанкДляРасчетов
	|		ИНАЧЕ Реквизиты.СчетОрганизации.Банк
	|	КОНЕЦ КАК БанкПолучателя,
	|	ВЫБОР
	|		КОГДА Реквизиты.СчетОрганизации.БанкДляРасчетов <> ЗНАЧЕНИЕ(Справочник.Банки.ПустаяСсылка)
	|			ТОГДА Реквизиты.СчетОрганизации.БанкДляРасчетов.Код
	|		ИНАЧЕ Реквизиты.СчетОрганизации.Банк.Код
	|	КОНЕЦ КАК БикБанкаПолучателя,
	|	ВЫБОР
	|		КОГДА Реквизиты.СчетОрганизации.БанкДляРасчетов <> ЗНАЧЕНИЕ(Справочник.Банки.ПустаяСсылка)
	|			ТОГДА Реквизиты.СчетОрганизации.БанкДляРасчетов.КоррСчет
	|		ИНАЧЕ Реквизиты.СчетОрганизации.Банк.КоррСчет
	|	КОНЕЦ КАК СчетБанкаПолучателя,
	|	ВЫБОР
	|		КОГДА Реквизиты.СчетОрганизации.БанкДляРасчетов <> ЗНАЧЕНИЕ(Справочник.Банки.ПустаяСсылка)
	|			ТОГДА Реквизиты.СчетОрганизации.БанкДляРасчетов.Город
	|		ИНАЧЕ Реквизиты.СчетОрганизации.Банк.Город
	|	КОНЕЦ КАК ГородБанкаПолучателя,
	|	ВЫБОР
	|		КОГДА Реквизиты.СчетОрганизации.БанкДляРасчетов <> ЗНАЧЕНИЕ(Справочник.Банки.ПустаяСсылка)
	|			ТОГДА Реквизиты.СчетОрганизации.Банк.КоррСчет
	|		ИНАЧЕ Реквизиты.СчетОрганизации.НомерСчета
	|	КОНЕЦ КАК НомерСчетаПолучателя,
	|	ВЫБОР
	|		КОГДА Реквизиты.СчетОрганизации.БанкДляРасчетов <> ЗНАЧЕНИЕ(Справочник.Банки.ПустаяСсылка)
	|			ТОГДА "" р/с "" + Реквизиты.СчетОрганизации.НомерСчета + "" в "" + Реквизиты.СчетОрганизации.Банк.Наименование + "" "" + Реквизиты.СчетОрганизации.Банк.Город
	|	КОНЕЦ КАК БанкТекстКорресподента,
	|	Реквизиты.Контрагент КАК Покупатель,
	|	Реквизиты.Организация КАК Руководители,
	|	Реквизиты.Организация КАК Поставщик,
	|	Реквизиты.Организация КАК Получатель,
	|	Реквизиты.СуммаДокумента,
	|	Реквизиты.ВалютаДокумента,
	|	Реквизиты.СуммаВключаетНДС,
    |   Реквизиты.Руководитель КАК Руководитель,
    |   Реквизиты.ГлавныйБухгалтер КАК ГлавныйБухгалтер,
    |   Реквизиты.ЗаРуководителяНаОсновании КАК ЗаРуководителяНаОсновании,
    |   Реквизиты.ЗаГлавногоБухгалтераНаОсновании КАК ЗаГлавногоБухгалтераНаОсновании,
	|	ВЫБОР
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Код)
	|			ТОГДА ЗаказПокупателя.Номенклатура.Код
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул)
	|			ТОГДА ЗаказПокупателя.Номенклатура.Артикул
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК НоменклатураАртикул,
	|	"+ ЧастьЗапросаДляВыбораСодержанияУслуг +" КАК Номенклатура,
	|	"+ ЧастьЗапросаДляВыбораСодержанияУслуг +" КАК Товар,
	|	"""" КАК Код,
	|	ЗаказПокупателя.Номенклатура.АР_ПостояннаяЧастьОплаты КАК ПостояннаяЧастьОплаты,
	|	ЗаказПокупателя.Количество КАК Количество,
	|	ЗаказПокупателя.Номенклатура.ЕдиницаИзмерения.Наименование КАК ЕдиницаИзмерения,
	|	ЗаказПокупателя.Цена КАК Цена,
	|	ЗаказПокупателя.Сумма КАК Сумма,
	|	ЗаказПокупателя.СуммаНДС КАК СуммаНДС,
	|	ЗаказПокупателя.Ссылка.ВидОперации КАК ВидОперации,
	|	ЗаказПокупателя.СпособНачисления КАК СпособНачисления,
	|	ЗаказПокупателя.СтавкаСпособаНачисления КАК СтавкаСпособаНачисления,
	|	ЗаказПокупателя.КоличествоДней КАК КоличествоДней,
	|	ЗаказПокупателя.Ссылка.НачалоПериода КАК НачалоПериода,
	|	ЗаказПокупателя.Ссылка.ОкончаниеПериода КАК ОкончаниеПериода,
	|	ЗаказПокупателя.НомерСтроки КАК НомерСтроки,
	|	1 КАК ID
	|ИЗ
	|	Документ.АР_СчетНаАренду.Состав КАК ЗаказПокупателя
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.АР_СчетНаАренду КАК Реквизиты
	|		ПО (ЗаказПокупателя.Ссылка = Реквизиты.Ссылка)
	|ГДЕ
	|	ЗаказПокупателя.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Реквизиты.Ссылка,
	|	ID,
	|	НомерСтроки";

	Возврат ТекстЗапроса;

КонецФункции

Процедура ВывестиЗаголовокПредупреждение(Организация, ТабличныйДокумент, Макет)
	
	Если Не ЗначениеЗаполнено(Макет.Области.Найти("ЗаголовокПредупреждениеСЛоготипом")) Тогда 
		Возврат;
	КонецЕсли;
	
	ДанныеКартинки = РаботаСФайламиСлужебныйВызовСервера.ДанныеФайлаИДвоичныеДанные(Организация.ФайлЛоготип);
	Если ЗначениеЗаполнено(ДанныеКартинки.ДвоичныеДанные) Тогда
		ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокПредупреждениеСЛоготипом");
		Попытка
			ОбластьМакета.Рисунки.Логотип.Картинка = Новый Картинка(ДанныеКартинки.ДвоичныеДанные);
		Исключение
		КонецПопытки;
		ТабличныйДокумент.Вывести(ОбластьМакета);
	Иначе
		ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокПредупреждение");
		ТабличныйДокумент.Вывести(ОбластьМакета);
	КонецЕсли;

КонецПроцедуры

Функция ПолучитьТекстЗапросаДляФормированияТаблицыСведенийСчетаНаОплату()
	
	ЧастьЗапросаДляВыбораСодержанияУслуг = ОбщегоНазначенияБПВызовСервера.ПолучитьЧастьЗапросаДляВыбораСодержанияУслуг("СчетНаОплату");
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СчетНаОплату.Ссылка КАК Ссылка,
	|	СчетНаОплату.Дата КАК ДатаДокумента,
	|	СчетНаОплату.СуммаВключаетНДС КАК СуммаВключаетНДС
	|ПОМЕСТИТЬ ДокументыДляПечати
	|ИЗ
	|	Документ.АР_СчетНаАренду КАК СчетНаОплату
	|ГДЕ
	|	СчетНаОплату.Ссылка В(&МассивДокументов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СчетНаОплату.Ссылка КАК Документ,
	|	СчетНаОплату.Дата КАК ДатаДляПолученияСведений,
	|	ДанныеПервичныхДокументов.Номер КАК НомерДокумента,
	|	ДанныеПервичныхДокументов.Дата КАК ДатаДокумента,
	|	СчетНаОплату.ВалютаДокумента КАК Валюта,
	|	СчетНаОплату.ВалютаДокумента.Код КАК ВалютаКод,
	|	СчетНаОплату.ВалютаДокумента.Наименование КАК ВалютаНаименование,
	|	СчетНаОплату.СуммаДокумента КАК СуммаДокумента,
	|	СчетНаОплату.КратностьВзаиморасчетов КАК КратностьВзаиморасчетов,
	|	СчетНаОплату.КурсВзаиморасчетов КАК КурсВзаиморасчетов,
	|	СчетНаОплату.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	СчетНаОплату.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК Подразделение,
	|	СчетНаОплату.Организация КАК Поставщик,
	|	СчетНаОплату.Организация КАК Руководители,
	|	СчетНаОплату.Организация КАК Получатель,
	|	СчетНаОплату.Контрагент КАК Покупатель,
	|	СчетНаОплату.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	СчетНаОплату.ДоговорКонтрагента.Номер КАК НомерДоговора,
	|	СчетНаОплату.ДоговорКонтрагента.ГосударственныйКонтракт.Код КАК ГосударственныйКонтракт,
	|	СчетНаОплату.ДоговорКонтрагента.Дата КАК ДатаДоговора,
	|	СчетНаОплату.ДоговорКонтрагента.Руководитель КАК ФИОИсполнителя,
	|	СчетНаОплату.ДоговорКонтрагента.ДолжностьРуководителя КАК ДолжностьИсполнителя,
	|	СчетНаОплату.ДоговорКонтрагента.РуководительКонтрагента КАК ФИОЗаказчика,
	|	СчетНаОплату.ДоговорКонтрагента.ДолжностьРуководителяКонтрагента КАК ДолжностьЗаказчика,
	|	СчетНаОплату.ДоговорКонтрагента.УчетАгентскогоНДСПокупателем КАК НДСИсчисляетсяНалоговымАгентом,
	|	СчетНаОплату.СчетОрганизации КАК БанковскийСчетПродавца,
	|	СчетНаОплату.СчетОрганизации.ТекстКорреспондента КАК ТекстКорреспондента,
	|	СчетНаОплату.СчетОрганизации.БанкДляРасчетов КАК БанкДляРасчетов,
	|	СчетНаОплату.Руководитель КАК Руководитель,
	|	СчетНаОплату.ГлавныйБухгалтер КАК ГлавныйБухгалтер,
	|	СчетНаОплату.ЗаРуководителяНаОсновании КАК ЗаРуководителяНаОсновании,
	|	СчетНаОплату.ЗаГлавногоБухгалтераНаОсновании КАК ЗаГлавногоБухгалтераНаОсновании,
	|	ВЫБОР
	|		КОГДА СчетНаОплату.СчетОрганизации.БанкДляРасчетов <> ЗНАЧЕНИЕ(Справочник.Банки.ПустаяСсылка)
	|			ТОГДА СчетНаОплату.СчетОрганизации.БанкДляРасчетов.Наименование + "" "" + СчетНаОплату.СчетОрганизации.БанкДляРасчетов.Город
	|		ИНАЧЕ СчетНаОплату.СчетОрганизации.Банк.Наименование + "" "" + СчетНаОплату.СчетОрганизации.Банк.Город
	|	КОНЕЦ КАК НаименованиеБанкаПолучателя,
	|	ВЫБОР
	|		КОГДА СчетНаОплату.СчетОрганизации.БанкДляРасчетов <> ЗНАЧЕНИЕ(Справочник.Банки.ПустаяСсылка)
	|			ТОГДА СчетНаОплату.СчетОрганизации.БанкДляРасчетов
	|		ИНАЧЕ СчетНаОплату.СчетОрганизации.Банк
	|	КОНЕЦ КАК БанкПолучателя,
	|	ВЫБОР
	|		КОГДА СчетНаОплату.СчетОрганизации.БанкДляРасчетов <> ЗНАЧЕНИЕ(Справочник.Банки.ПустаяСсылка)
	|			ТОГДА СчетНаОплату.СчетОрганизации.БанкДляРасчетов.Код
	|		ИНАЧЕ СчетНаОплату.СчетОрганизации.Банк.Код
	|	КОНЕЦ КАК БикБанкаПолучателя,
	|	ВЫБОР
	|		КОГДА СчетНаОплату.СчетОрганизации.БанкДляРасчетов <> ЗНАЧЕНИЕ(Справочник.Банки.ПустаяСсылка)
	|			ТОГДА СчетНаОплату.СчетОрганизации.БанкДляРасчетов.КоррСчет
	|		ИНАЧЕ СчетНаОплату.СчетОрганизации.Банк.КоррСчет
	|	КОНЕЦ КАК СчетБанкаПолучателя,
	|	ВЫБОР
	|		КОГДА СчетНаОплату.СчетОрганизации.БанкДляРасчетов <> ЗНАЧЕНИЕ(Справочник.Банки.ПустаяСсылка)
	|			ТОГДА СчетНаОплату.СчетОрганизации.БанкДляРасчетов.Город
	|		ИНАЧЕ СчетНаОплату.СчетОрганизации.Банк.Город
	|	КОНЕЦ КАК ГородБанкаПолучателя,
	|	ВЫБОР
	|		КОГДА СчетНаОплату.СчетОрганизации.БанкДляРасчетов <> ЗНАЧЕНИЕ(Справочник.Банки.ПустаяСсылка)
	|			ТОГДА СчетНаОплату.СчетОрганизации.Банк.КоррСчет
	|		ИНАЧЕ СчетНаОплату.СчетОрганизации.НомерСчета
	|	КОНЕЦ КАК НомерСчетаПолучателя,
	|	ВЫБОР
	|		КОГДА СчетНаОплату.СчетОрганизации.БанкДляРасчетов <> ЗНАЧЕНИЕ(Справочник.Банки.ПустаяСсылка)
	|			ТОГДА "" р/с "" + СчетНаОплату.СчетОрганизации.НомерСчета + "" в "" + СчетНаОплату.СчетОрганизации.Банк.Наименование + "" "" + СчетНаОплату.СчетОрганизации.Банк.Город
	|	КОНЕЦ КАК БанкТекстКорресподента,
	|	0 КАК СуммаСкидки,
	|	СчетНаОплату.СчетОрганизации.НомерСчета КАК НомерСчета,
	|	СчетНаОплату.СчетОрганизации.Банк.Наименование КАК БанкНаименование,
	|	СчетНаОплату.СчетОрганизации.Банк.Код КАК БИК,
	|	СчетНаОплату.СчетОрганизации.Банк.КоррСчет КАК КоррСчет,
	|	"""" КАК ТекстДополнительныхУсловий,
	|	ЕСТЬNULL(СрокиОплатыДокументов.СрокОплаты, ДАТАВРЕМЯ(1, 1, 1)) КАК СрокОплаты
	|ИЗ
	|	ДокументыДляПечати КАК ДокументыДляПечати
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.АР_СчетНаАренду КАК СчетНаОплату
	|		ПО ДокументыДляПечати.Ссылка = СчетНаОплату.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО СчетНаОплату.Ссылка = ДанныеПервичныхДокументов.Документ
	|			И СчетНаОплату.Организация = ДанныеПервичныхДокументов.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СрокиОплатыДокументов КАК СрокиОплатыДокументов
	|		ПО СчетНаОплату.Ссылка = СрокиОплатыДокументов.Документ
	|			И СчетНаОплату.Организация = СрокиОплатыДокументов.Организация
	|УПОРЯДОЧИТЬ ПО
	|	ДатаДокумента,
	|	Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	// 1
	|	СчетНаОплату.Ссылка КАК Документ,
	|	ДокументыДляПечати.ДатаДокумента КАК ДатаДокумента,
	|	ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Товары) КАК ТабличнаяЧасть,
	|	1 КАК ПорядокТабличнойЧасти,
	|	СчетНаОплату.НомерСтроки КАК НомерСтроки,
	|	СчетНаОплату.Номенклатура КАК Номенклатура,
	|	СчетНаОплату.Номенклатура.Услуга КАК ЭтоУслуга,
	|	ВЫБОР
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Код)
	|			ТОГДА СчетНаОплату.Номенклатура.Код
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул)
	|			ТОГДА СчетНаОплату.Номенклатура.Артикул
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК НоменклатураАртикул,
	|	&ЧастьЗапросаДляВыбораСодержанияУслуг КАК НоменклатураНаименование,
	|	&ЧастьЗапросаДляВыбораСодержанияУслуг КАК Содержание,
	|	ЕСТЬNULL(СчетНаОплату.Номенклатура.ЕдиницаИзмерения, ЗНАЧЕНИЕ(Справочник.КлассификаторЕдиницИзмерения.ПустаяСсылка)) КАК ЕдиницаИзмерения,
	|	ЕСТЬNULL(СчетНаОплату.Номенклатура.ЕдиницаИзмерения.Код, """") КАК ЕдиницаИзмеренияКод,
	|	ЕСТЬNULL(СчетНаОплату.Номенклатура.ЕдиницаИзмерения.Наименование, """") КАК ЕдиницаИзмеренияНаименование,
	|	ЕСТЬNULL(СчетНаОплату.Номенклатура.ЕдиницаИзмерения.НаименованиеПолное, """") КАК ЕдиницаИзмеренияНаименованиеПолное,
	|	СчетНаОплату.Количество КАК Количество,
	|	СчетНаОплату.Цена КАК Цена,
	|	СчетНаОплату.Сумма КАК Сумма,
	|	0 КАК СуммаСкидки,
	|	СчетНаОплату.СтавкаНДС КАК СтавкаНДС,
	|	СчетНаОплату.СуммаНДС КАК СуммаНДС,
	|	ЕСТЬNULL(СчетНаОплату.Номенклатура.АР_ПостояннаяЧастьОплаты, ЛОЖЬ) КАК ПостояннаяЧастьОплаты,
	|	СчетНаОплату.Ссылка.ВидОперации КАК ВидОперации,
	|	СчетНаОплату.СпособНачисления КАК СпособНачисления,
	|	СчетНаОплату.СтавкаСпособаНачисления КАК СтавкаСпособаНачисления,
	|	СчетНаОплату.КоличествоДней КАК КоличествоДней,
	|	СчетНаОплату.Ссылка.НачалоПериода КАК НачалоПериода,
	|	СчетНаОплату.Ссылка.ОкончаниеПериода КАК ОкончаниеПериода
	|ИЗ
	|	Документ.АР_СчетНаАренду.Состав КАК СчетНаОплату
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДокументыДляПечати КАК ДокументыДляПечати
	|		ПО СчетНаОплату.Ссылка = ДокументыДляПечати.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаДокумента,
	|	Документ,
	|	ПорядокТабличнойЧасти,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	// 2
	|	СчетНаОплату.Ссылка КАК Документ,
	|	СчетНаОплату.ДатаДокумента КАК ДатаДокумента,
	|	ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Товары) КАК ТабличнаяЧасть,
	|	1 КАК ПорядокТабличнойЧасти,
	|	СчетНаОплату.НомерСтроки КАК НомерСтроки,
	|	СчетНаОплату.Номенклатура КАК Номенклатура,
	|	СчетНаОплату.Номенклатура.Услуга КАК ЭтоУслуга,
	|	ВЫБОР
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Код)
	|			ТОГДА СчетНаОплату.Номенклатура.Код
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул)
	|			ТОГДА СчетНаОплату.Номенклатура.Артикул
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК НоменклатураАртикул,
	|	&ЧастьЗапросаДляВыбораСодержанияУслуг КАК НоменклатураНаименование,
	|	&ЧастьЗапросаДляВыбораСодержанияУслуг КАК Содержание,
	|	ВЫБОР
	|		КОГДА СчетНаОплату.ВыводитьЕдиницуИзмеренияИЦену
	|			ТОГДА ЕСТЬNULL(СчетНаОплату.Номенклатура.ЕдиницаИзмерения, ЗНАЧЕНИЕ(Справочник.КлассификаторЕдиницИзмерения.ПустаяСсылка))
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА СчетНаОплату.ВыводитьЕдиницуИзмеренияИЦену
	|			ТОГДА ЕСТЬNULL(СчетНаОплату.Номенклатура.ЕдиницаИзмерения.Код, """")
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ЕдиницаИзмеренияКод,
	|	ВЫБОР
	|		КОГДА СчетНаОплату.ВыводитьЕдиницуИзмеренияИЦену
	|			ТОГДА ЕСТЬNULL(СчетНаОплату.Номенклатура.ЕдиницаИзмерения.Наименование, """")
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ЕдиницаИзмеренияНаименование,
	|	ВЫБОР
	|		КОГДА СчетНаОплату.ВыводитьЕдиницуИзмеренияИЦену
	|			ТОГДА ЕСТЬNULL(СчетНаОплату.Номенклатура.ЕдиницаИзмерения.НаименованиеПолное, """")
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ЕдиницаИзмеренияНаименованиеПолное,
	|	ВЫБОР
	|		КОГДА СчетНаОплату.ВыводитьЕдиницуИзмеренияИЦену
	|			ТОГДА СчетНаОплату.Количество
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК Количество,
	|	ВЫБОР
	|		КОГДА СчетНаОплату.ВыводитьЕдиницуИзмеренияИЦену
	|			ТОГДА СчетНаОплату.Сумма / ВЫБОР
	|					КОГДА СчетНаОплату.Количество = 0
	|						ТОГДА 1
	|					ИНАЧЕ СчетНаОплату.Количество
	|				КОНЕЦ
	|		ИНАЧЕ СчетНаОплату.Сумма
	|	КОНЕЦ КАК Цена,
	|	СчетНаОплату.Сумма КАК Сумма,
	|	0 КАК СуммаСкидки,
	|	СчетНаОплату.СтавкаНДС КАК СтавкаНДС,
	|	СчетНаОплату.СуммаНДС КАК СуммаНДС,
	|	ЕСТЬNULL(СчетНаОплату.Номенклатура.АР_ПостояннаяЧастьОплаты, ЛОЖЬ) КАК ПостояннаяЧастьОплаты,
	|	СчетНаОплату.Ссылка.ДоговорКонтрагента.Наименование КАК ДоговорКонтрагентаНаименование,
	|	СчетНаОплату.Ссылка.ВидОперации КАК ВидОперации,
	|	СчетНаОплату.Ссылка.НачалоПериода КАК НачалоПериода,
	|	СчетНаОплату.Ссылка.ОкончаниеПериода КАК ОкончаниеПериода
	|ИЗ
	|	(ВЫБРАТЬ
	|		АР_СчетНаАрендуСостав.Ссылка.Дата КАК ДатаДокумента,
	|		ВЫБОР
	|			КОГДА АР_СчетНаАрендуСостав.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.АР_ВидыОперацийСчетНаАренду.ОплатаАренды)
	|				ТОГДА АР_СчетНаАрендуСостав.Номенклатура.АР_ПостояннаяЧастьОплаты
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ПостояннаяЧастьОплаты,
	|		ВЫБОР
	|			КОГДА АР_СчетНаАрендуСостав.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.АР_ВидыОперацийСчетНаАренду.ОплатаАренды)
	|				ТОГДА АР_СчетНаАрендуСостав.Номенклатура
	|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|		КОНЕЦ КАК Номенклатура,
	|		АР_СчетНаАрендуСостав.Номенклатура.АР_ВыводитьЕдиницуИзмеренияИЦену КАК ВыводитьЕдиницуИзмеренияИЦену,
	|		СУММА(АР_СчетНаАрендуСостав.Количество) КАК Количество,
	|		СУММА(АР_СчетНаАрендуСостав.Сумма) КАК Сумма,
	|		СУММА(АР_СчетНаАрендуСостав.СуммаНДС) КАК СуммаНДС,
	|		АР_СчетНаАрендуСостав.СтавкаНДС КАК СтавкаНДС,
	|		АР_СчетНаАрендуСостав.Ссылка КАК Ссылка,
	|		ВЫБОР
	|			КОГДА АР_СчетНаАрендуСостав.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.АР_ВидыОперацийСчетНаАренду.ОплатаАренды)
	|				ТОГДА АР_СчетНаАрендуСостав.Номенклатура.Код
	|			ИНАЧЕ """"
	|		КОНЕЦ КАК Код,
	|		ВЫБОР
	|			КОГДА АР_СчетНаАрендуСостав.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.АР_ВидыОперацийСчетНаАренду.ОплатаДепозита)
	|				ТОГДА ВЫРАЗИТЬ(АР_СчетНаАрендуСостав.Содержание КАК СТРОКА(1000))
	|			ИНАЧЕ """"
	|		КОНЕЦ КАК Содержание,
	|		МИНИМУМ(АР_СчетНаАрендуСостав.НомерСтроки) КАК НомерСтроки
	|	ИЗ
	|		Документ.АР_СчетНаАренду.Состав КАК АР_СчетНаАрендуСостав
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДокументыДляПечати КАК ДокументыДляПечати
	|			ПО АР_СчетНаАрендуСостав.Ссылка = ДокументыДляПечати.Ссылка
	|	
	|	СГРУППИРОВАТЬ ПО
	|		АР_СчетНаАрендуСостав.Ссылка,
	|		АР_СчетНаАрендуСостав.СтавкаНДС,
	|		ВЫБОР
	|			КОГДА АР_СчетНаАрендуСостав.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.АР_ВидыОперацийСчетНаАренду.ОплатаАренды)
	|				ТОГДА АР_СчетНаАрендуСостав.Номенклатура
	|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА АР_СчетНаАрендуСостав.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.АР_ВидыОперацийСчетНаАренду.ОплатаДепозита)
	|				ТОГДА ВЫРАЗИТЬ(АР_СчетНаАрендуСостав.Содержание КАК СТРОКА(1000))
	|			ИНАЧЕ """"
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА АР_СчетНаАрендуСостав.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.АР_ВидыОперацийСчетНаАренду.ОплатаАренды)
	|				ТОГДА АР_СчетНаАрендуСостав.Номенклатура.АР_ПостояннаяЧастьОплаты
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА АР_СчетНаАрендуСостав.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.АР_ВидыОперацийСчетНаАренду.ОплатаАренды)
	|				ТОГДА АР_СчетНаАрендуСостав.Номенклатура.Код
	|			ИНАЧЕ """"
	|		КОНЕЦ,
	|		АР_СчетНаАрендуСостав.Номенклатура.АР_ВыводитьЕдиницуИзмеренияИЦену) КАК СчетНаОплату
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаДокумента,
	|	Документ,
	|	ПорядокТабличнойЧасти,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	// 3
	|	СчетНаОплату.Ссылка КАК Документ,
	|	СчетНаОплату.ДатаДокумента КАК ДатаДокумента,
	|	ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Товары) КАК ТабличнаяЧасть,
	|	1 КАК ПорядокТабличнойЧасти,
	|	СчетНаОплату.НомерСтроки КАК НомерСтроки,
	|	СчетНаОплату.Номенклатура КАК Номенклатура,
	|	СчетНаОплату.Номенклатура.Услуга КАК ЭтоУслуга,
	|	ВЫБОР
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Код)
	|			ТОГДА СчетНаОплату.Номенклатура.Код
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул)
	|			ТОГДА СчетНаОплату.Номенклатура.Артикул
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК НоменклатураАртикул,
	|	&ЧастьЗапросаДляВыбораСодержанияУслуг КАК НоменклатураНаименование,
	|	&ЧастьЗапросаДляВыбораСодержанияУслуг КАК Содержание,
	|	ВЫБОР
	|		КОГДА СчетНаОплату.ВыводитьЕдиницуИзмеренияИЦену
	|			ТОГДА ЕСТЬNULL(СчетНаОплату.Номенклатура.ЕдиницаИзмерения, ЗНАЧЕНИЕ(Справочник.КлассификаторЕдиницИзмерения.ПустаяСсылка))
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА СчетНаОплату.ВыводитьЕдиницуИзмеренияИЦену
	|			ТОГДА ЕСТЬNULL(СчетНаОплату.Номенклатура.ЕдиницаИзмерения.Код, """")
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ЕдиницаИзмеренияКод,
	|	ВЫБОР
	|		КОГДА СчетНаОплату.ВыводитьЕдиницуИзмеренияИЦену
	|			ТОГДА ЕСТЬNULL(СчетНаОплату.Номенклатура.ЕдиницаИзмерения.Наименование, """")
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ЕдиницаИзмеренияНаименование,
	|	ВЫБОР
	|		КОГДА СчетНаОплату.ВыводитьЕдиницуИзмеренияИЦену
	|			ТОГДА ЕСТЬNULL(СчетНаОплату.Номенклатура.ЕдиницаИзмерения.НаименованиеПолное, """")
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ЕдиницаИзмеренияНаименованиеПолное,
	|	ВЫБОР
	|		КОГДА СчетНаОплату.ВыводитьЕдиницуИзмеренияИЦену
	|			ТОГДА СчетНаОплату.Количество
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК Количество,
	|	ВЫБОР
	|		КОГДА СчетНаОплату.ВыводитьЕдиницуИзмеренияИЦену
	|			ТОГДА СчетНаОплату.Сумма / ВЫБОР
	|					КОГДА СчетНаОплату.Количество = 0
	|						ТОГДА 1
	|					ИНАЧЕ СчетНаОплату.Количество
	|				КОНЕЦ
	|		ИНАЧЕ СчетНаОплату.Сумма
	|	КОНЕЦ КАК Цена,
	|	СчетНаОплату.Сумма КАК Сумма,
	|	0 КАК СуммаСкидки,
	|	СчетНаОплату.СтавкаНДС КАК СтавкаНДС,
	|	СчетНаОплату.СуммаНДС КАК СуммаНДС,
	|	ЕСТЬNULL(СчетНаОплату.Номенклатура.АР_ПостояннаяЧастьОплаты, ЛОЖЬ) КАК ПостояннаяЧастьОплаты,
	|	СчетНаОплату.Ссылка.ВидОперации КАК ВидОперации,
	|	СчетНаОплату.Ссылка.НачалоПериода КАК НачалоПериода,
	|	СчетНаОплату.Ссылка.ОкончаниеПериода КАК ОкончаниеПериода,
	|	СчетНаОплату.ОбъектАренды.Наименование КАК ОбъектАренды
	|ИЗ
	|	(ВЫБРАТЬ
	|		АР_СчетНаАрендуСостав.Ссылка.Дата КАК ДатаДокумента,
	|		СУММА(АР_СчетНаАрендуСостав.Количество) КАК Количество,
	|		СУММА(АР_СчетНаАрендуСостав.Сумма) КАК Сумма,
	|		СУММА(АР_СчетНаАрендуСостав.СуммаНДС) КАК СуммаНДС,
	|		АР_СчетНаАрендуСостав.СтавкаНДС,
	|		АР_СчетНаАрендуСостав.ОбъектАренды КАК ОбъектАренды,
	|		АР_СчетНаАрендуСостав.Номенклатура КАК Номенклатура,
	|		АР_СчетНаАрендуСостав.Номенклатура.АР_ВыводитьЕдиницуИзмеренияИЦену КАК ВыводитьЕдиницуИзмеренияИЦену,
	|		ВЫРАЗИТЬ(АР_СчетНаАрендуСостав.Содержание КАК СТРОКА(1000)) КАК Содержание,
	|		АР_СчетНаАрендуСостав.Ссылка КАК Ссылка,
	|		МИНИМУМ(АР_СчетНаАрендуСостав.НомерСтроки) КАК НомерСтроки
	|	ИЗ
	|		Документ.АР_СчетНаАренду.Состав КАК АР_СчетНаАрендуСостав
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДокументыДляПечати КАК ДокументыДляПечати
	|			ПО АР_СчетНаАрендуСостав.Ссылка = ДокументыДляПечати.Ссылка
	|	
	|	СГРУППИРОВАТЬ ПО
	|		АР_СчетНаАрендуСостав.Номенклатура,
	|		АР_СчетНаАрендуСостав.ОбъектАренды,
	|		ВЫРАЗИТЬ(АР_СчетНаАрендуСостав.Содержание КАК СТРОКА(1000)),
	|		АР_СчетНаАрендуСостав.СтавкаНДС,
	|		АР_СчетНаАрендуСостав.Ссылка) КАК СчетНаОплату
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаДокумента,
	|	Документ,
	|	ПорядокТабличнойЧасти,
	|	НомерСтроки";
	
	Возврат СтрЗаменить(ТекстЗапроса, "&ЧастьЗапросаДляВыбораСодержанияУслуг", ЧастьЗапросаДляВыбораСодержанияУслуг);
	
КонецФункции

Функция ПолучитьТаблицуСведенийСчетаНаОплату(Знач МассивДокументов, СоответствиеДокументовИСчетов = Неопределено, ДокументыБезСчетовНаОплату = Неопределено, Сводный = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТаблицаСведений = ПечатьТорговыхДокументов.ПолучитьОписаниеСчетаНаОплату();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	Запрос.УстановитьПараметр("ДополнительнаяКолонкаПечатныхФормДокументов", Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить());
	Запрос.Текст = ПолучитьТекстЗапросаДляФормированияТаблицыСведенийСчетаНаОплату();
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	Выборка = РезультатЗапроса[1].Выбрать();
	Если Сводный = Неопределено Тогда // Обычный счет
		НомерТаблицы = 2;
	ИначеЕсли Сводный Тогда // Сводный счет	
		НомерТаблицы = 3;
	Иначе // Счет по объектам
		НомерТаблицы = 4;
	КонецЕсли;
	СтрокиДокументов = РезультатЗапроса[НомерТаблицы].Выгрузить();
	СтрокиДокументов.Индексы.Добавить("Документ");
	
	УслугаДепозит = Константы.АР_ОсновнаяУслугаДляНачисленияДепозита.Получить();
	
	Пока Выборка.Следующий() Цикл
		
		СведенияОДокументе = ТаблицаСведений.Добавить();
		ЗаполнитьЗначенияСвойств(СведенияОДокументе, Выборка);
		
		ТаблицаДокумента = ПечатьТорговыхДокументов.ПолучитьОписаниеТаблицыСчетаНаОплату();
		
		Отбор = Новый Структура("Документ", Выборка.Документ);
		СтрокиДокумента = СтрокиДокументов.НайтиСтроки(Отбор);
		
		Для Каждого Строка Из СтрокиДокумента Цикл
			
			СтрокаТаблицыДокумента = ТаблицаДокумента.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТаблицыДокумента, Строка);
			
			
			Если Сводный = Неопределено Тогда // Обычный счет
				
				Если НЕ Строка.ВидОперации = Перечисления.АР_ВидыОперацийСчетНаАренду.ОплатаДепозита И Не Строка.ПостояннаяЧастьОплаты Тогда
					СтрокаТаблицыДокумента.Цена = Строка.Цена;
				ИначеЕсли АР_ПроцедурыНачисления.ЦенаДолжнаБытьРавнаСтавке(Строка.Документ, Строка.СпособНачисления, Строка.КоличествоДней) Тогда
					СтрокаТаблицыДокумента.Цена = Строка.СтавкаСпособаНачисления;
				Иначе
					СтрокаТаблицыДокумента.Цена  = Строка.Сумма / ?(Строка.Количество = 0, 1, Строка.Количество);
				КонецЕсли;
	
			ИначеЕсли Сводный Тогда // Сводный счет
				
				Если Строка.ВидОперации = Перечисления.АР_ВидыОперацийСчетНаАренду.ОплатаАренды Тогда
					НаименованиеУслуги = Строка.Номенклатура.НаименованиеПолное;
					НаименованиеУслуги = ?(НЕ ЗначениеЗаполнено(Строка.Номенклатура.НаименованиеПолное), Строка.Номенклатура.Наименование, Строка.Номенклатура.НаименованиеПолное);
				ИначеЕсли Строка.ВидОперации = Перечисления.АР_ВидыОперацийСчетНаАренду.ОплатаДепозита Тогда
					НаименованиеУслуги = Строка.Содержание;
				Иначе
					НаименованиеУслуги = "Оплата пени";
				КонецЕсли;
				
				Если Строка.ВидОперации = Перечисления.АР_ВидыОперацийСчетНаАренду.ОплатаПени 
					ИЛИ (Строка.ВидОперации = Перечисления.АР_ВидыОперацийСчетНаАренду.ОплатаДепозита И ЗначениеЗаполнено(УслугаДепозит)) Тогда
					НаименованиеУслуги = СокрЛП(НаименованиеУслуги) + " по договору " + Строка.ДоговорКонтрагентаНаименование;
				ИначеЕсли Строка.ВидОперации = Перечисления.АР_ВидыОперацийСчетНаАренду.ОплатаАренды Тогда
					НаименованиеУслуги = СокрЛП(НаименованиеУслуги) + " по договору " + Строка.ДоговорКонтрагентаНаименование + " за " + ПредставлениеПериода(Строка.НачалоПериода, КонецДня(Строка.ОкончаниеПериода));
				КонецЕсли;
				
			    СтрокаТаблицыДокумента.НоменклатураНаименование = НаименованиеУслуги;
				     
			Иначе // Счет по объектам
				
				СтрокаТаблицыДокумента.НоменклатураНаименование = СокрЛП(Строка.ОбъектАренды)+", "+СокрЛП(Строка.Номенклатура);
				
			КонецЕсли;
			
		КонецЦикла;
		
		СведенияОДокументе.ТаблицаДокумента = ТаблицаДокумента;
		
		
		ПорядокЗаполнения = Новый Структура("ЗаполнятьРуководителя, ЗаполнятьГлавногоБухгалтера");
		ПечатьТорговыхДокументов.ЗаполнитьДанныеОтветственныхЛиц(СведенияОДокументе, ПорядокЗаполнения);
		
		Если НЕ ЗначениеЗаполнено(СведенияОДокументе.РуководительДолжностьНаименование) Тогда
			Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СведенияОДокументе.Получатель, "ЮридическоеФизическоеЛицо")
				= Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо Тогда
				СведенияОДокументе.РуководительДолжностьНаименование = "Индивидуальный предприниматель";
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ТаблицаСведений;
	
КонецФункции

#КонецЕсли
