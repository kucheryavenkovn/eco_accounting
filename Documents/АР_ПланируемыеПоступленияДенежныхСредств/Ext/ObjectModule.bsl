#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Выбираются все действующие договоры контрагентов на аренду и рассчитываются начисления
// за каждый период детализации
// Алгоритм: выбираем все действующие договоры и методами счета на аренду рассчитываем начисления
Процедура ЗаполнитьПоДействующимДоговорам() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	АР_СтатусыОбъектовАрендыСрезПоследних.Договор КАК ДоговорКонтрагента,
	|	АР_СтатусыОбъектовАрендыСрезПоследних.Договор.Организация КАК Организация,
	|	АР_СтатусыОбъектовАрендыСрезПоследних.Договор.Владелец КАК Контрагент,
	|	АР_СтатусыОбъектовАрендыСрезПоследних.Договор.ВалютаВзаиморасчетов КАК ВалютаДокумента
	|ИЗ
	|	РегистрСведений.АР_СтатусыОбъектовАренды.СрезПоследних(
	|			&МоментВремени,
	|			Услуга.АР_ПостояннаяЧастьОплаты
	|				И Договор.Организация = &Организация) КАК АР_СтатусыОбъектовАрендыСрезПоследних
	|ГДЕ
	|	АР_СтатусыОбъектовАрендыСрезПоследних.Статус = &ВАренде
	|	И (АР_СтатусыОбъектовАрендыСрезПоследних.ДатаНачалаАренды МЕЖДУ &НачалоПериода И &КонецПериода
	|			ИЛИ АР_СтатусыОбъектовАрендыСрезПоследних.ДатаОкончанияАренды МЕЖДУ &НачалоПериода И &КонецПериода
	|			ИЛИ АР_СтатусыОбъектовАрендыСрезПоследних.ДатаНачалаАренды <= &НачалоПериода
	|				И АР_СтатусыОбъектовАрендыСрезПоследних.ДатаОкончанияАренды >= &КонецПериода)";
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", ОкончаниеПериода);
	Запрос.УстановитьПараметр("ВАренде", Перечисления.АР_СтатусыОбъектовАренды.ВАренде);
	Запрос.УстановитьПараметр("МоментВремени", МоментВремени());
	Запрос.УстановитьПараметр("Организация", Организация);
	
	ТаблицаДат = РазбитьПериод(НачалоПериода,ОкончаниеПериода,СценарийПланирования.Периодичность);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		//теперь необходимо для каждого периода по сценарию сделать начисление
		ДокСчет = Документы.АР_СчетНаАренду.СоздатьДокумент();
		ЗаполнитьЗначенияСвойств(ДокСчет, Выборка);
		
		СтруктураКурса = АР_ПроцедурыНачисления.ПолучитьКурсВалюты(ДокСчет.ВалютаДокумента, Дата, Выборка.ДоговорКонтрагента);
        ДокСчет.КурсВзаиморасчетов = СтруктураКурса.Курс;
		ДокСчет.КратностьВзаиморасчетов = СтруктураКурса.Кратность;
		
		Для Каждого Стр Из ТаблицаДат Цикл
			
			ДокСчет.Дата = ТекущаяДата();
			ДокСчет.ДатаКурса = Стр.ОкончаниеПериода;
			
			ДокСчет.Состав.Очистить();
			
			ДокСчет.НачалоПериода = Стр.НачалоПериода;
			ДокСчет.ОкончаниеПериода = Стр.ОкончаниеПериода;
			ДокСчет.СуммаВключаетНДС = Истина;
			
			ДокСчет.ЗаполнитьСтроки(Истина, Ложь, Истина);
			
			СуммаДокумента = УчетНДСПереопределяемый.ПолучитьСуммуДокументаСНДС(ДокСчет);
			
			Если СуммаДокумента <> 0 Тогда
				СтрТЧ = ПланПоступленияДенежныхСредств.Добавить();
				СтрТЧ.Контрагент = Выборка.Контрагент;
				СтрТЧ.ДоговорКонтрагента = Выборка.ДоговорКонтрагента;
				СтрТЧ.Сумма = РаботаСКурсамиВалютБПКлиентСервер.ПересчитатьИзВалютыВВалюту(СуммаДокумента, Выборка.ВалютаДокумента, Константы.ВалютаРегламентированногоУчета.Получить(),
														 ДокСчет.КурсВзаиморасчетов,      1, 
														 ДокСчет.КратностьВзаиморасчетов, 1);
				СтрТЧ.ПериодПланирования = Стр.НачалоПериода;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

//Выбираются обороты по начислениям в выбранном периоде и распределяются равномерно на указанный период
Процедура ЗаполнитьПоДаннымПрошлыхПериодов(мНастройка) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СУММА(АР_ВзаиморасчетыПоАрендеОбороты.СуммаРасход) КАК СуммаРасход,
	|	АР_ВзаиморасчетыПоАрендеОбороты.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	АР_ВзаиморасчетыПоАрендеОбороты.ДоговорКонтрагента.Владелец КАК Контрагент
	|ИЗ
	|	РегистрНакопления.АР_ВзаиморасчетыПоАренде.Обороты(&НачалоПериода, &ОкончаниеПериода, , ДоговорКонтрагента.Организация = &Организация) КАК АР_ВзаиморасчетыПоАрендеОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	АР_ВзаиморасчетыПоАрендеОбороты.ДоговорКонтрагента.Владелец,
	|	АР_ВзаиморасчетыПоАрендеОбороты.ДоговорКонтрагента";
	
	Запрос.УстановитьПараметр("НачалоПериода", мНастройка.НачалоПериода);
	Запрос.УстановитьПараметр("ОкончаниеПериода", мНастройка.КонецПериода);
	Запрос.УстановитьПараметр("Организация", Организация);
	
	ТаблицаПериодов = РазбитьПериод(НачалоПериода, ОкончаниеПериода, СценарийПланирования.Периодичность);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СуммаНаПериод = мНастройка.Коэффициент * Выборка.СуммаРасход / ТаблицаПериодов.Количество();
		
		Для Каждого Стр Из ТаблицаПериодов Цикл
			СтрТЧ = ПланПоступленияДенежныхСредств.Добавить();
			СтрТЧ.Контрагент = Выборка.Контрагент;
			СтрТЧ.ДоговорКонтрагента = Выборка.ДоговорКонтрагента;
			СтрТЧ.ПериодПланирования = Стр.НачалоПериода;
			СтрТЧ.Сумма = СуммаНаПериод;
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Функция РазбитьПериод(НачалоПериода, ОкончаниеПериода, Периодичность)
	
	ТаблицаДат = Новый ТаблицаЗначений;
	ТаблицаДат.Колонки.Добавить("НачалоПериода");
	ТаблицаДат.Колонки.Добавить("ОкончаниеПериода");
	
	День = 60*60*24;
	
	Если Периодичность = Перечисления.Периодичность.Год Тогда
		
		ОчереднаяДата = НачалоГода(НачалоПериода);
	
		Пока ОчереднаяДата<=ОкончаниеПериода Цикл
			
			Стр = ТаблицаДат.Добавить();
			Стр.НачалоПериода = ОчереднаяДата;
			Стр.ОкончаниеПериода = КонецГода(ОчереднаяДата);
			
			ОчереднаяДата = ДобавитьМесяц(ОчереднаяДата,12);
		КонецЦикла;
		
	ИначеЕсли Периодичность = Перечисления.Периодичность.Квартал Тогда
		
		ОчереднаяДата = НачалоКвартала(НачалоПериода);
	
		Пока ОчереднаяДата<=ОкончаниеПериода Цикл
			Стр = ТаблицаДат.Добавить();
			Стр.НачалоПериода = ОчереднаяДата;
			Стр.ОкончаниеПериода = КонецКвартала(ОчереднаяДата);

			ОчереднаяДата = ДобавитьМесяц(ОчереднаяДата,3);
		КонецЦикла;
		
	ИначеЕсли Периодичность = Перечисления.Периодичность.Месяц Тогда
		
		ОчереднаяДата = НачалоМесяца(НачалоПериода);
	
		Пока ОчереднаяДата<=ОкончаниеПериода Цикл
			Стр = ТаблицаДат.Добавить();
			Стр.НачалоПериода = ОчереднаяДата;
			Стр.ОкончаниеПериода = КонецМесяца(ОчереднаяДата);
			ОчереднаяДата = ДобавитьМесяц(ОчереднаяДата,1);
		КонецЦикла;
		
	ИначеЕсли Периодичность = Перечисления.Периодичность.День Тогда
		
		ОчереднаяДата = НачалоДня(НачалоПериода);
	
		Пока ОчереднаяДата<=ОкончаниеПериода Цикл
			Стр = ТаблицаДат.Добавить();
			Стр.НачалоПериода = ОчереднаяДата;
			Стр.ОкончаниеПериода = КонецДня(ОчереднаяДата);
			
			ОчереднаяДата = ОчереднаяДата + День;
		КонецЦикла;
		
	ИначеЕсли Периодичность = Перечисления.Периодичность.Полугодие Тогда
		
		Если Месяц(НачалоПериода)<7 Тогда
			ОчереднаяДата = НачалоГода(НачалоПериода);
		Иначе
			ОчереднаяДата = ДобавитьМесяц(НачалоГода(НачалоПериода),6);
		КонецЕсли;
		
		Пока ОчереднаяДата<=ОкончаниеПериода Цикл
			Стр = ТаблицаДат.Добавить();
			Стр.НачалоПериода = ОчереднаяДата;
			Стр.ОкончаниеПериода = КонецМесяца(ДобавитьМесяц(ОчереднаяДата,5));
			
			ОчереднаяДата = ДобавитьМесяц(ОчереднаяДата,6);
		КонецЦикла;
		
	ИначеЕсли Периодичность= Перечисления.Периодичность.Неделя Тогда
		
		ОчереднаяДата = НачалоНедели(НачалоПериода);
	
		Пока ОчереднаяДата<=ОкончаниеПериода Цикл
			Стр = ТаблицаДат.Добавить();
			Стр.НачалоПериода = ОчереднаяДата;
			Стр.ОкончаниеПериода = КонецНедели(ОчереднаяДата);
			
			ОчереднаяДата = ОчереднаяДата + 7*День;
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат ТаблицаДат;
	
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ЗаполнениеДокументов.Заполнить(ЭтотОбъект, ДанныеЗаполнения);

КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)

	Дата = НачалоДня(ОбщегоНазначения.ТекущаяДатаПользователя());

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
		
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка  Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	// Исключаем из проверки реквизиты, заполнение которых стало необязательным:
	МассивНепроверяемыхРеквизитов = Новый Массив();
	
	Если НачалоПериода > ОкончаниеПериода Тогда
		ТекстСообщения = НСтр("ru = 'Начало периода превышает окончание периода планирования'");
		ТекстСообщения = ОбщегоНазначенияБПКлиентСервер.ПолучитьТекстСообщения(, "Корректность",
				НСтр("ru = 'Окончание периода'"),,, ТекстСообщения);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект,
			"ОкончаниеПериода", "Объект", Отказ);
	КонецЕсли;
	
	// Удаляем из проверяемых реквизитов все, по которым автоматическая проверка не нужна:
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)

	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ДОКУМЕНТА

	ПроведениеСервер.ПодготовитьНаборыЗаписейКПроведению(ЭтотОбъект);
	Если РучнаяКорректировка Тогда
		Возврат;
	КонецЕсли;

	ПараметрыПроведения = Документы.АР_ПланируемыеПоступленияДенежныхСредств.ПодготовитьПараметрыПроведения(Ссылка, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;

	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ИНФОРМАЦИОННОЙ БАЗЫ

	// ФОРМИРОВАНИЕ ДВИЖЕНИЙ
	
	АР_ОбщиеПроцедуры.СформироватьДвиженияПоРегистру(ПараметрыПроведения.ПланируемыеПоступления, Движения, "АР_ПланируемыеПоступленияДенежныхСредств", Отказ);
			
	ПроведениеСервер.УстановитьЗаписьОчищаемыхНаборовЗаписей(ЭтотОбъект);
		
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)

	ПроведениеСервер.ПодготовитьНаборыЗаписейКОтменеПроведения(ЭтотОбъект);
	Движения.Записать();

КонецПроцедуры

#КонецЕсли
