#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция ВремяДокументаПоУмолчанию() Экспорт
	
	Возврат Новый Структура("Часы, Минуты", 9, 0);
	
КонецФункции

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

Функция РеквизитыНеРедактируемыеВГрупповойОбработке() Экспорт
	МассивРеквизитов = Новый Массив();
	МассивРеквизитов.Добавить("ВидОперации");
	
	Возврат МассивРеквизитов;
КонецФункции

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Реестр";
	КомандаПечати.Представление = НСтр("ru = 'Реестр документов'");
	КомандаПечати.ЗаголовокФормы= НСтр("ru = 'Реестр документов ""Акт о расхождениях (полученный)""'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм    = "ФормаСписка";
	КомандаПечати.Порядок       = 100;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ТекстЗапросаДанныеДляОбновленияЦенДокументов() Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВЫРАЗИТЬ(АктОРасхожденияхПолученныйТовары.Номенклатура КАК Справочник.Номенклатура) КАК Номенклатура,
	|	АктОРасхожденияхПолученныйТовары.Цена КАК Цена,
	|	&Валюта КАК Валюта,
	|	&СпособЗаполненияЦены КАК СпособЗаполненияЦены,
	|	&ЦенаВключаетНДС КАК ЦенаВключаетНДС
	|ПОМЕСТИТЬ ТаблицаНоменклатуры
	|ИЗ
	|	Документ.АктОРасхожденияхПолученный.Товары КАК АктОРасхожденияхПолученныйТовары
	|ГДЕ
	|	АктОРасхожденияхПолученныйТовары.Ссылка = &Ссылка
	|	И АктОРасхожденияхПолученныйТовары.Номенклатура ССЫЛКА Справочник.Номенклатура
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	АктОРасхожденияхПолученныйУслуги.Номенклатура,
	|	АктОРасхожденияхПолученныйУслуги.Цена,
	|	&Валюта,
	|	&СпособЗаполненияЦены,
	|	&ЦенаВключаетНДС
	|ИЗ
	|	Документ.АктОРасхожденияхПолученный.Услуги КАК АктОРасхожденияхПолученныйУслуги
	|ГДЕ
	|	АктОРасхожденияхПолученныйУслуги.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	АктОРасхожденияхПолученныйАгентскиеУслуги.Номенклатура,
	|	АктОРасхожденияхПолученныйАгентскиеУслуги.Цена,
	|	&Валюта,
	|	&СпособЗаполненияЦены,
	|	&ЦенаВключаетНДС
	|ИЗ
	|	Документ.АктОРасхожденияхПолученный.АгентскиеУслуги КАК АктОРасхожденияхПолученныйАгентскиеУслуги
	|ГДЕ
	|	АктОРасхожденияхПолученныйАгентскиеУслуги.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Цена,
	|	Валюта";
	
	ТекстЗапроса = ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
	Возврат ТекстЗапроса;
КонецФункции

Процедура ЗаполнитьПоРеализации(Объект) Экспорт
	Если НЕ ЗначениеЗаполнено(Объект.ДокументРеализации) Тогда
		Возврат;
	КонецЕсли;
	
	Объект.Товары.Очистить();
	Объект.Услуги.Очистить();
	Объект.АгентскиеУслуги.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Объект.ДокументРеализации);
	Текст =
	"ВЫБРАТЬ
	|	РеализацияТоваровУслугТовары.Номенклатура КАК Номенклатура,
	|	РеализацияТоваровУслугТовары.Количество КАК Количество,
	|	РеализацияТоваровУслугТовары.Количество КАК КоличествоПоДокументу,
	|	РеализацияТоваровУслугТовары.Цена КАК Цена,
	|	РеализацияТоваровУслугТовары.Цена КАК ЦенаПоДокументу,
	|	РеализацияТоваровУслугТовары.Сумма КАК Сумма,
	|	РеализацияТоваровУслугТовары.Сумма КАК СуммаПоДокументу,
	|	РеализацияТоваровУслугТовары.СтавкаНДС КАК СтавкаНДС,
	|	РеализацияТоваровУслугТовары.СуммаНДС КАК СуммаНДС,
	|	РеализацияТоваровУслугТовары.СуммаНДС КАК СуммаНДСПоДокументу,
	|	РеализацияТоваровУслугТовары.НомерГТД КАК НомерГТД,
	|	РеализацияТоваровУслугТовары.НомерГТД КАК НомерГТДПоДокументу,
	|	РеализацияТоваровУслугТовары.СтранаПроисхождения КАК СтранаПроисхождения,
	|	РеализацияТоваровУслугТовары.СтранаПроисхождения КАК СтранаПроисхожденияПоДокументу,
	|	ИСТИНА КАК ЕстьВДокументеПоступления,
	|	""Товары"" КАК ТЧ,
	|	НЕОПРЕДЕЛЕНО КАК Содержание,
	|	НЕОПРЕДЕЛЕНО КАК Контрагент,
	|	НЕОПРЕДЕЛЕНО КАК ДоговорКонтрагента,
	|	НЕОПРЕДЕЛЕНО КАК СчетРасчетов,
	|	Истина КАК ЕстьВДокументеРеализации
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	|ГДЕ
	|	РеализацияТоваровУслугТовары.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РеализацияТоваровУслугУслуги.Номенклатура,
	|	РеализацияТоваровУслугУслуги.Количество,
	|	РеализацияТоваровУслугУслуги.Количество,
	|	РеализацияТоваровУслугУслуги.Цена,
	|	РеализацияТоваровУслугУслуги.Цена,
	|	РеализацияТоваровУслугУслуги.Сумма,
	|	РеализацияТоваровУслугУслуги.Сумма,
	|	РеализацияТоваровУслугУслуги.СтавкаНДС,
	|	РеализацияТоваровУслугУслуги.СуммаНДС,
	|	РеализацияТоваровУслугУслуги.СуммаНДС,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	ИСТИНА,
	|	""Услуги"",
	|	РеализацияТоваровУслугУслуги.Содержание,
	|	NULL,
	|	NULL,
	|	NULL,
	|	Истина
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Услуги КАК РеализацияТоваровУслугУслуги
	|ГДЕ
	|	РеализацияТоваровУслугУслуги.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РеализацияТоваровУслугАгентскиеУслуги.Номенклатура,
	|	РеализацияТоваровУслугАгентскиеУслуги.Количество,
	|	РеализацияТоваровУслугАгентскиеУслуги.Количество,
	|	РеализацияТоваровУслугАгентскиеУслуги.Цена,
	|	РеализацияТоваровУслугАгентскиеУслуги.Цена,
	|	РеализацияТоваровУслугАгентскиеУслуги.Сумма,
	|	РеализацияТоваровУслугАгентскиеУслуги.Сумма,
	|	РеализацияТоваровУслугАгентскиеУслуги.СтавкаНДС,
	|	РеализацияТоваровУслугАгентскиеУслуги.СуммаНДС,
	|	РеализацияТоваровУслугАгентскиеУслуги.СуммаНДС,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	ИСТИНА,
	|	""АгентскиеУслуги"",
	|	РеализацияТоваровУслугАгентскиеУслуги.Содержание,
	|	РеализацияТоваровУслугАгентскиеУслуги.Контрагент,
	|	РеализацияТоваровУслугАгентскиеУслуги.ДоговорКонтрагента,
	|	РеализацияТоваровУслугАгентскиеУслуги.СчетРасчетов,
	|	Истина
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.АгентскиеУслуги КАК РеализацияТоваровУслугАгентскиеУслуги
	|ГДЕ
	|	РеализацияТоваровУслугАгентскиеУслуги.Ссылка = &Ссылка";
	
	Запрос.Текст = Текст;
	Результат = Запрос.Выполнить().Выбрать();
	
	Пока Результат.Следующий() Цикл
		Если Результат.ТЧ = "Товары" Тогда
			СтрокаТоваров = Объект.Товары.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТоваров, Результат);
		ИначеЕсли Результат.ТЧ = "Услуги" Тогда
			СтрокаУслуг = Объект.Услуги.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаУслуг, Результат);
		ИначеЕсли Результат.ТЧ = "АгентскиеУслуги" Тогда
			СтрокаУслуг = Объект.АгентскиеУслуги.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаУслуг, Результат);
		КонецЕсли;
	КонецЦикла;
		
КонецПроцедуры

Процедура ЗаполнитьПоДокументу(Объект) Экспорт
	
	Если ТипЗнч(Объект.ДокументРеализации) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
		ЗаполнитьПоРеализации(Объект);
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьПредставлениеДокумента(ДокументСсылка) Экспорт
	ТекстПредставлениеКраткое	= "";
	ТекстПредставление 			= "";
	ТекстОсновноеПредставление	= "Акт о расхождениях (полученный)";
			
	Если ЗначениеЗаполнено(ДокументСсылка) Тогда
		
		РеквизитыДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументСсылка, "ПредставлениеНомера, Дата");
			
		ТекстПредставлениеКраткое = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='%1 от %2'"),
			РеквизитыДокумента.ПредставлениеНомера, Формат(РеквизитыДокумента.Дата, "ДЛФ=Д"));
		ТекстПредставление = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='%1 %2'"), ТекстОсновноеПредставление, ТекстПредставлениеКраткое);
					
	Иначе
		ТекстПредставление = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='%1 (создание)'"), ТекстОсновноеПредставление);
	КонецЕсли;
	
	СтруктураПредставления = Новый Структура;
	СтруктураПредставления.Вставить("ПредставлениеДокументаКраткое", ТекстПредставлениеКраткое);
	СтруктураПредставления.Вставить("ПредставлениеДокумента", 		 ТекстПредставление);
	
	Возврат СтруктураПредставления;
КонецФункции

#КонецОбласти 

#КонецЕсли
