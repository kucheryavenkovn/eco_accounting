#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура предназначена для автоматического заполнения списка работ по данным технологических карт
Процедура ЗаполнитьРаботы() Экспорт
	Запрос = Новый Запрос;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	АР_ПараметрыЭксплуатацииОбъектовСрезПоследних.Организация,
	|	АР_ПараметрыЭксплуатацииОбъектовСрезПоследних.ОбъектАренды,
	|	АР_ПараметрыЭксплуатацииОбъектовСрезПоследних.ЭлементОбъекта,
	|	АР_ПараметрыЭксплуатацииОбъектовСрезПоследних.КомплексРабот,
	|	АР_ПараметрыЭксплуатацииОбъектовСрезПоследних.Спецификация,
	|	АР_ПараметрыЭксплуатацииОбъектовСрезПоследних.ТипОбслуживания,
	|	АР_ПараметрыЭксплуатацииОбъектовСрезПоследних.ГрафикОбслуживания,
	|	АР_ПараметрыЭксплуатацииОбъектовСрезПоследних.ПоказательВыработки,
	|	АР_ПараметрыЭксплуатацииОбъектовСрезПоследних.ПороговоеЗначениеВыработки,
	|	АР_ПараметрыЭксплуатацииОбъектовСрезПоследних.ТехнологическаяКарта,
	|	АР_ТехнологическиеКартыТехОбслуживанияМаршрут.Операция,
	|	АР_ТехнологическиеКартыТехОбслуживанияМаршрут.Количество,
	|	АР_ТехнологическиеКартыТехОбслуживанияМаршрут.Работа,
	|	АР_ТехнологическиеКартыТехОбслуживанияМаршрут.ВнутренняяРабота
	|ИЗ
	|	РегистрСведений.АР_ПараметрыЭксплуатацииОбъектов.СрезПоследних(&МоментВремени, Организация = &Организация И ОбъектАренды = &ОбъектАренды И ЭлементОбъекта = &ЭлементОбъекта) КАК АР_ПараметрыЭксплуатацииОбъектовСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.АР_ТехнологическиеКартыТехОбслуживания.Маршрут КАК АР_ТехнологическиеКартыТехОбслуживанияМаршрут
	|		ПО АР_ПараметрыЭксплуатацииОбъектовСрезПоследних.ТехнологическаяКарта = АР_ТехнологическиеКартыТехОбслуживанияМаршрут.Ссылка";
	
	Запрос.УстановитьПараметр("МоментВремени",МоментВремени());
	Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.УстановитьПараметр("ОбъектАренды",ОбъектАренды);
	Запрос.УстановитьПараметр("ЭлементОбъекта",ЭлементОбъекта);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	//заполняем в однократном размере по каждому комплексу работ	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		//добавляем работу в табличную часть
		СтрокаТЧ = Работы.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТЧ,Выборка);
	КонецЦикла;
	
КонецПроцедуры

// Процедура предназначена для автоматического заполнения списка работ по данным технологических карт
Процедура ЗаполнитьМатериалы() Экспорт
	
	 Запрос = Новый Запрос;
	 Запрос.Текст = 
	 "ВЫБРАТЬ РАЗЛИЧНЫЕ
	 |	Материалы.Номенклатура,
	 |	Материалы.Количество,
	 |	Материалы.КомплексРабот,
	 |	Материалы.ГрафикОбслуживания,
	 |	Материалы.ОбъектАренды,
	 |	Материалы.ЭлементОбъекта
	 |ИЗ
	 |	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	 |		СпецификацииНоменклатурыИсходныеКомплектующие.Номенклатура КАК Номенклатура,
	 |		СУММА(СпецификацииНоменклатурыИсходныеКомплектующие.Количество) КАК Количество,
	 |		ВложенныйЗапрос.КомплексРабот КАК КомплексРабот,
	 |		АР_ПараметрыЭксплуатацииОбъектовСрезПоследних.ГрафикОбслуживания КАК ГрафикОбслуживания,
	 |		ВложенныйЗапрос.ОбъектАренды КАК ОбъектАренды,
	 |		ВложенныйЗапрос.ЭлементОбъекта КАК ЭлементОбъекта
	 |	ИЗ
	 |		(ВЫБРАТЬ РАЗЛИЧНЫЕ
	 |			АР_ЗаявкаНаОбслуживаниеРаботы.Ссылка.ОбъектАренды КАК ОбъектАренды,
	 |			АР_ЗаявкаНаОбслуживаниеРаботы.Ссылка.ЭлементОбъекта КАК ЭлементОбъекта,
	 |			АР_ЗаявкаНаОбслуживаниеРаботы.КомплексРабот КАК КомплексРабот
	 |		ИЗ
	 |			Документ.АР_ЗаявкаНаОбслуживание.Работы КАК АР_ЗаявкаНаОбслуживаниеРаботы
	 |		ГДЕ
	 |			АР_ЗаявкаНаОбслуживаниеРаботы.Ссылка = &Ссылка) КАК ВложенныйЗапрос
	 |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АР_ПараметрыЭксплуатацииОбъектов.СрезПоследних(&МоментВремени, Организация = &Организация) КАК АР_ПараметрыЭксплуатацииОбъектовСрезПоследних
	 |				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СпецификацииНоменклатуры.ИсходныеКомплектующие КАК СпецификацииНоменклатурыИсходныеКомплектующие
	 |				ПО АР_ПараметрыЭксплуатацииОбъектовСрезПоследних.Спецификация = СпецификацииНоменклатурыИсходныеКомплектующие.Ссылка
	 |			ПО ВложенныйЗапрос.ОбъектАренды = АР_ПараметрыЭксплуатацииОбъектовСрезПоследних.ОбъектАренды
	 |				И ВложенныйЗапрос.ЭлементОбъекта = АР_ПараметрыЭксплуатацииОбъектовСрезПоследних.ЭлементОбъекта
	 |				И ВложенныйЗапрос.КомплексРабот = АР_ПараметрыЭксплуатацииОбъектовСрезПоследних.КомплексРабот
	 |	
	 |	СГРУППИРОВАТЬ ПО
	 |		ВложенныйЗапрос.КомплексРабот,
	 |		СпецификацииНоменклатурыИсходныеКомплектующие.Номенклатура,
	 |		АР_ПараметрыЭксплуатацииОбъектовСрезПоследних.ГрафикОбслуживания,
	 |		ВложенныйЗапрос.ОбъектАренды,
	 |		ВложенныйЗапрос.ЭлементОбъекта) КАК Материалы";
	 
 	Запрос.УстановитьПараметр("МоментВремени",МоментВремени());
	Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	Запрос.УстановитьПараметр("ПлановыеЦены",Справочники.ТипыЦенНоменклатуры.НайтиПоНаименованию("Основной"));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	//теперь пройдемся по всем объектам и их элементам	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		//добавляем работу в табличную часть
		СтрокаТЧ = Материалы.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТЧ,Выборка);
	КонецЦикла;
  	
КонецПроцедуры

Процедура ПроверитьПринадлежностьЭлементаОбъекту(Отказ)
	
	// Проверим принадлежит ли элемент данному объекту
	Если ЗначениеЗаполнено(ОбъектАренды) И ЗначениеЗаполнено(ЭлементОбъекта) Тогда
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Ссылка", ОбъектАренды);
		Запрос.УстановитьПараметр("Элемент", ЭлементОбъекта);
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	АР_ОбъектыАрендыЭлементы.Ссылка
		|ИЗ
		|	Справочник.АР_ОбъектыАренды.Элементы КАК АР_ОбъектыАрендыЭлементы
		|ГДЕ
		|	АР_ОбъектыАрендыЭлементы.Ссылка = &Ссылка
		|	И АР_ОбъектыАрендыЭлементы.Элемент = &Элемент";
		Если Запрос.Выполнить().Пустой() Тогда
			ТекстСообщения = НСтр("ru = 'Элемент """ + ЭлементОбъекта + """ не принадлежит объетку аренды """ + ОбъектАренды + """. Проведение не возможно'");
			ТекстСообщения = ОбщегоНазначенияБПКлиентСервер.ПолучитьТекстСообщения(, "Корректность",
			НСтр("ru = 'Элемент объекта'"),,, ТекстСообщения);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект,
			"ЭлементОбъекта", "Объект", Отказ);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ЗаполнениеДокументов.Заполнить(ЭтотОбъект, ДанныеЗаполнения);

КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)

	Дата = НачалоДня(ОбщегоНазначения.ТекущаяДатаПользователя());
	Ответственный = Пользователи.ТекущийПользователь();

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
		
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка  Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	// Исключаем из проверки реквизиты, заполнение которых стало необязательным:
	МассивНепроверяемыхРеквизитов = Новый Массив();
	
	ПроверитьПринадлежностьЭлементаОбъекту(Отказ);
	
	// Удаляем из проверяемых реквизитов все, по которым автоматическая проверка не нужна:
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)

	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ДОКУМЕНТА

	ПроведениеСервер.ПодготовитьНаборыЗаписейКПроведению(ЭтотОбъект);
	Если РучнаяКорректировка Тогда
		Возврат;
	КонецЕсли;

	ПараметрыПроведения = Документы.АР_ЗаявкаНаОбслуживание.ПодготовитьПараметрыПроведения(Ссылка, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;

	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ИНФОРМАЦИОННОЙ БАЗЫ

	// ФОРМИРОВАНИЕ ДВИЖЕНИЙ
	
	АР_ОбщиеПроцедуры.СформироватьДвиженияПоРегистру(ПараметрыПроведения.Работы, Движения, "АР_ЗаявкиНаОбслуживание", Отказ);
	АР_ОбщиеПроцедуры.СформироватьДвиженияПоРегистру(ПараметрыПроведения.Материалы, Движения, "АР_ЗаявкиНаОбслуживание", Отказ);
			
	ПроведениеСервер.УстановитьЗаписьОчищаемыхНаборовЗаписей(ЭтотОбъект);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)

	ПроведениеСервер.ПодготовитьНаборыЗаписейКОтменеПроведения(ЭтотОбъект);
	Движения.Записать();

КонецПроцедуры

#КонецЕсли
