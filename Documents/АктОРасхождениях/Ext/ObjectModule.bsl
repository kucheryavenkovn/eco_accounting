#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Процедура УстановитьПредставлениеНомера() Экспорт
	
	Если НЕ ЗначениеЗаполнено(Номер) Тогда
		ЭтотОбъект.УстановитьНовыйНомер();	
	КонецЕсли;
	
	Если НЕ (ДополнительныеСвойства.Свойство("ПропуститьОбновлениеРеквизитовВСвязанныхДокументах") 
		И ДополнительныеСвойства.ПропуститьОбновлениеРеквизитовВСвязанныхДокументах = Истина) Тогда
		
		ПредставлениеНомера = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Номер, Истина, Ложь);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти 

#Область СлужебныйПрограммныйИнтерфейс

Процедура ЗаполнитьСвойстваШапки() Экспорт

	Если НЕ ЗначениеЗаполнено(ДокументПоступления) Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнениеДокументов.ЗаполнитьПоОснованию(ЭтотОбъект, ДокументПоступления);

КонецПроцедуры

Процедура ЗаполнитьПоДокументуОснованию(Основание) Экспорт
	
	ДокументПоступления = Основание;
	
	Если ТипЗнч(Основание) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
		
		ЗаполнитьСвойстваШапки();
		Документы.АктОРасхождениях.ЗаполнитьПоПоступлению(ЭтотОбъект);
		
	Иначе
		
		ЗаполнитьСвойстваШапки();
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиСобытий

Процедура ПриКопировании(ОбъектКопирования)

	Дата = НачалоДня(ОбщегоНазначения.ТекущаяДатаПользователя());
	Ответственный = Пользователи.ТекущийПользователь();
	
	Если ОбъектКопирования.ВидОперации = Перечисления.ВидыОперацийАктОРасхождениях.РасхожденияПриПриемке Тогда
		ВидОперации = Перечисления.ВидыОперацийАктОРасхождениях.РасхожденияПослеПриемки;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)

	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	Если ДанныеЗаполнения <> Неопределено 
		И ТипДанныхЗаполнения <> Тип("Структура")
		И Метаданные().ВводитсяНаОсновании.Содержит(ДанныеЗаполнения.Метаданные()) Тогда
		ЗаполнитьПоДокументуОснованию(ДанныеЗаполнения);
	ИначеЕсли ТипДанныхЗаполнения = Тип("Структура") 
		И ДанныеЗаполнения.Свойство("ДокументОснование") Тогда
		ЗаполнитьПоДокументуОснованию(ДанныеЗаполнения.ДокументОснование);
	ИначеЕсли ТипДанныхЗаполнения = Тип("Структура") 
		И ДанныеЗаполнения.Свойство("Ссылка") Тогда
		ЗаполнитьПоФормеПоступления(ДанныеЗаполнения);
	Иначе
		СуммаВключаетНДС = Истина;
	КонецЕсли;
	ЗаполнениеДокументов.Заполнить(ЭтотОбъект, ДанныеЗаполнения);
		
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ДополнительныеСвойства.Свойство("НеПроверятьВозможностьУдаления") 
		И ВидОперации = Перечисления.ВидыОперацийАктОРасхождениях.РасхожденияПриПриемке
		И ПометкаУдаления <> ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "ПометкаУдаления") Тогда
		
		РеквизитыДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументПоступления, "Номер, Дата");
		
		ТекстСобщения = СтрШаблон(
			НСтр("ru = 'Для изменения сведений о расхождениях - перейдите в форму документа ""Поступление товаров"" № %1 от %2'"), 
			ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(РеквизитыДокумента.Номер, Истина, Ложь),
			Формат(РеквизитыДокумента.Дата, "ДФ=dd.MM.yyyy"));
	
		ОбщегоНазначения.СообщитьПользователю(ТекстСобщения,ДокументПоступления,,,Отказ);
		
		Возврат;
	
	КонецЕсли; 
	
	УстановитьПредставлениеНомера();
	
	ЗаполнитьСвойстваШапки();

	// Посчитать суммы документа и записать ее в соответствующий реквизит шапки для показа в журналах
	СуммаДокумента = УчетНДСПереопределяемый.ПолучитьСуммуДокументаСНДС(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьДанныеТабличнойЧасти(ИмяТабличнойЧасти, ДанныеЗаполнения)
	СтрокиКУдалению = ЭтотОбъект[ИмяТабличнойЧасти].НайтиСтроки(Новый Структура("ЕстьВДокументеПоступления", Истина));
	
	КоличествоСтрокКУдалению = СтрокиКУдалению.Количество();
	Для ИндексСтроки = 0 По (КоличествоСтрокКУдалению - 1) Цикл
		ЭтотОбъект[ИмяТабличнойЧасти].Удалить(СтрокиКУдалению[ИндексСтроки]);
	КонецЦикла;
	
	Для Каждого СтрокаТабличнойЧасти Из ДанныеЗаполнения Цикл
		НоваяСтрока = ЭтотОбъект[ИмяТабличнойЧасти].Добавить();
		НоваяСтрока.ЕстьВДокументеПоступления = Истина;
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТабличнойЧасти);
	КонецЦикла;

КонецПроцедуры

// Заполняем по форме поступления - только для случая создания акта с типом "Расхождение при приемке"
Процедура ЗаполнитьПоФормеПоступления(ДанныеЗаполнения)
	ДокументПоступления  = ДанныеЗаполнения.Ссылка;
	
	Если ТипЗнч(ДокументПоступления) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
		ЗаполнитьСвойстваШапки();
		
		Если ДанныеЗаполнения.Товары <> Неопределено Тогда
			ЗаполнитьДанныеТабличнойЧасти("Товары",          ДанныеЗаполнения.Товары);
		КонецЕсли; 
		
		Если ДанныеЗаполнения.Услуги <> Неопределено Тогда
			ЗаполнитьДанныеТабличнойЧасти("Услуги",          ДанныеЗаполнения.Услуги);
		КонецЕсли; 
		
		Если ДанныеЗаполнения.АгентскиеУслуги <> Неопределено Тогда
			ЗаполнитьДанныеТабличнойЧасти("АгентскиеУслуги", ДанныеЗаполнения.АгентскиеУслуги);
		КонецЕсли; 
		
	Иначе
		ЗаполнитьСвойстваШапки();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти 

#КонецЕсли