#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

	
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура заполняет данные шапки по данным документа основания
Процедура ЗаполнитьСвойстваШапки() Экспорт
	
	Если НЕ ЗначениеЗаполнено(ДокументОснование) Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДокументОснование) Тогда
		ЗаполнениеДокументов.ЗаполнитьПоОснованию(ЭтотОбъект, ДокументОснование);
		ДатаОкончанияДоговора = ДокументОснование.ДатаОкончанияДоговора;
	КонецЕсли;
	
КонецПроцедуры

// Процедура заполняет данные табличных частей по данным документа основания
Процедура ЗаполнитьТабличныеЧасти() Экспорт
	
	Если Не ЗначениеЗаполнено(ДокументОснование) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаОкончания", Дата);
	Запрос.УстановитьПараметр("ЗаключениеДоговора", ДокументОснование);
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(МоментВремени(), ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("ДатаДокумента", Дата);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	АР_ГрафикиИзмененияСтавокНаУслугиГрафикСтавок.Ссылка КАК Ссылка,
	|	МАКСИМУМ(АР_ГрафикиИзмененияСтавокНаУслугиГрафикСтавок.Дата) КАК Дата
	|ПОМЕСТИТЬ втПоследняяДата
	|ИЗ
	|	Справочник.АР_ГрафикиИзмененияСтавокНаУслуги.ГрафикСтавок КАК АР_ГрафикиИзмененияСтавокНаУслугиГрафикСтавок
	|ГДЕ
	|	АР_ГрафикиИзмененияСтавокНаУслугиГрафикСтавок.Дата < &ДатаДокумента
	|
	|СГРУППИРОВАТЬ ПО
	|	АР_ГрафикиИзмененияСтавокНаУслугиГрафикСтавок.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АР_ГрафикиИзмененияСтавокНаУслугиГрафикСтавок.Ставка КАК Ставка,
	|	АР_ГрафикиИзмененияСтавокНаУслугиГрафикСтавок.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ втГрафикСтавокСрезПоследних
	|ИЗ
	|	Справочник.АР_ГрафикиИзмененияСтавокНаУслуги.ГрафикСтавок КАК АР_ГрафикиИзмененияСтавокНаУслугиГрафикСтавок
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втПоследняяДата КАК втПоследняяДата
	|		ПО АР_ГрафикиИзмененияСтавокНаУслугиГрафикСтавок.Ссылка = втПоследняяДата.Ссылка
	|			И АР_ГрафикиИзмененияСтавокНаУслугиГрафикСтавок.Дата = втПоследняяДата.Дата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АР_СтатусыОбъектовАрендыСрезПоследних.Услуга КАК Услуга,
	|	АР_СтатусыОбъектовАрендыСрезПоследних.ОбъектАренды КАК ОбъектАренды,
	|	АР_СтатусыОбъектовАрендыСрезПоследних.ДатаНачалаАренды КАК ДатаНачалаСрокаАренды,
	|	АР_СтатусыОбъектовАрендыСрезПоследних.ДатаОкончанияАренды КАК ДатаОкончанияСрокаАренды,
	|	ВЫБОР
	|		КОГДА втГрафикСтавокСрезПоследних.Ставка ЕСТЬ NULL
	|			ТОГДА АР_СтавкиСрезПоследних.Ставка
	|		ИНАЧЕ втГрафикСтавокСрезПоследних.Ставка
	|	КОНЕЦ КАК Ставка,
	|	АР_СтавкиСрезПоследних.СтавкаНДС КАК СтавкаНДС,
	|	АР_СтавкиСрезПоследних.СпособНачисления КАК СпособНачисления,
	|	ВЫБОР
	|		КОГДА АР_СтавкиСрезПоследних.СпособНачисления.ВариантРасчета = ЗНАЧЕНИЕ(Перечисление.АР_ВариантыРасчета.ПоСтавкеЗаОбъектВЦелом)
	|			ТОГДА 1
	|		ИНАЧЕ АР_СтавкиСрезПоследних.Площадь
	|	КОНЕЦ КАК Количество,
	|	АР_СтатусыОбъектовАрендыСрезПоследних.Услуга.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	АР_СтатусыОбъектовАрендыСрезПоследних.Счетчик КАК Счетчик,
	|	АР_СтатусыОбъектовАрендыСрезПоследних.КоэффициентОтнесенияСчетчика КАК КоэффициентОтнесенияСчетчика
	|ИЗ
	|	РегистрСведений.АР_СтатусыОбъектовАренды.СрезПоследних(
	|			&МоментВремени,
	|			ЗаключениеДоговора = &ЗаключениеДоговора
	|				И Услуга.АР_ПостояннаяЧастьОплаты = &ПостояннаяЧасть) КАК АР_СтатусыОбъектовАрендыСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АР_Ставки.СрезПоследних(
	|				&МоментВремени,
	|				СрокДействия >= &ДатаДокумента
	|					ИЛИ СрокДействия = ДАТАВРЕМЯ(1, 1, 1)) КАК АР_СтавкиСрезПоследних
	|			ЛЕВОЕ СОЕДИНЕНИЕ втГрафикСтавокСрезПоследних КАК втГрафикСтавокСрезПоследних
	|			ПО АР_СтавкиСрезПоследних.Ставка.Ссылка = втГрафикСтавокСрезПоследних.Ссылка
	|		ПО АР_СтатусыОбъектовАрендыСрезПоследних.Договор = АР_СтавкиСрезПоследних.Договор
	|			И АР_СтатусыОбъектовАрендыСрезПоследних.ОбъектАренды = АР_СтавкиСрезПоследних.ОбъектАренды
	|			И АР_СтатусыОбъектовАрендыСрезПоследних.Услуга = АР_СтавкиСрезПоследних.Услуга
	|ГДЕ
	|	АР_СтатусыОбъектовАрендыСрезПоследних.ДатаНачалаАренды < &ДатаОкончания";
	
	Запрос.УстановитьПараметр("ПостояннаяЧасть", Истина);
	ПостояннаяЧастьАренднойПлаты.Загрузить(Запрос.Выполнить().Выгрузить());
	
	Запрос.УстановитьПараметр("ПостояннаяЧасть", Ложь);
	ПеременнаяЧастьАренднойПлаты.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

// Процедура предназначена для проверки статуса объекта аренды (объект должен быть свободным в течение
// всего срока аренды)
Процедура ПроверитьСтатусыОбъектовАренды(ИмяТабличнойЧасти, Отказ)
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;

	ИмяСписка = ЭтотОбъект.Метаданные().ТабличныеЧасти[ИмяТабличнойЧасти].Представление();
	
	// Проверим что нет услуг которые не заключали
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ЗаключениеДоговора", ДокументОснование);
	Запрос.УстановитьПараметр("ВАренде", Перечисления.АР_СтатусыОбъектовАренды.ВАренде);
	Запрос.УстановитьПараметр("МоментВремени", МоментВремени());
	Запрос.УстановитьПараметр("ПостояннаяЧасть", ИмяТабличнойЧасти = "ПостояннаяЧастьАренднойПлаты");
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	АР_СтатусыОбъектовАрендыСрезПоследних.Услуга,
	|	АР_СтатусыОбъектовАрендыСрезПоследних.ОбъектАренды
	|ИЗ
	|	РегистрСведений.АР_СтатусыОбъектовАренды.СрезПоследних(&МоментВремени, ЗаключениеДоговора = &ЗаключениеДоговора) КАК АР_СтатусыОбъектовАрендыСрезПоследних
	|ГДЕ
	|	АР_СтатусыОбъектовАрендыСрезПоследних.Статус = &ВАренде
	|	И АР_СтатусыОбъектовАрендыСрезПоследних.Услуга.АР_ПостояннаяЧастьОплаты = &ПостояннаяЧасть";

	Выборка = Запрос.Выполнить().Выбрать();
	
	Отбор = Новый Структура("ОбъектАренды, Услуга");
	Для Каждого СтрокаТЧ Из ЭтотОбъект[ИмяТабличнойЧасти] Цикл
		Выборка.Сбросить();
		ЗаполнитьЗначенияСвойств(Отбор, СтрокаТЧ);
		Если Не Выборка.НайтиСледующий(Отбор) Тогда
			Префикс = ИмяТабличнойЧасти + "[" + Формат(СтрокаТЧ.НомерСтроки - 1, "ЧН=0; ЧГ=") + "].";
			ТекстСообщения = НСтр("ru = 'Услуга """ + СтрокаТЧ.Услуга + """ по объекту аренды """ + СтрокаТЧ.ОбъектАренды + """ не была заключена договором'");
			ТекстСообщения = ОбщегоНазначенияБПКлиентСервер.ПолучитьТекстСообщения("Колонка", "Корректность", НСтр("ru = 'Услуга'"),
			СтрокаТЧ.НомерСтроки, ИмяСписка, ТекстСообщения);
			Поле = Префикс + "Услуга";
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле, "Объект", Отказ);
		КонецЕсли;
	КонецЦикла;    
		
КонецПроцедуры

// Проверим, возможно договор уже расторгнут
Процедура ПроверитьРасторжениеДоговора(Отказ)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ЗаключениеДоговора", ДокументОснование);
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(Дата, ВидГраницы.Исключая));
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	АР_СтатусыОбъектовАрендыСрезПоследних.Регистратор
	|ИЗ
	|	РегистрСведений.АР_СтатусыОбъектовАренды.СрезПоследних(&МоментВремени, ЗаключениеДоговора = &ЗаключениеДоговора) КАК АР_СтатусыОбъектовАрендыСрезПоследних
	|ГДЕ
	|	АР_СтатусыОбъектовАрендыСрезПоследних.Регистратор ССЫЛКА Документ.АР_РасторжениеДоговораАренды";
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ТекстСообщения = НСтр("ru = 'Данное заключение договора уже расторгнуто документом """ + Выборка.Регистратор + """'");
		ТекстСообщения = ОбщегоНазначенияБПКлиентСервер.ПолучитьТекстСообщения(, "Корректность",
				НСтр("ru = 'Заключение договора'"),,, ТекстСообщения);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект,
			"ДокументОснование", "Объект", Отказ);
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	Если ДанныеЗаполнения <> Неопределено И ТипДанныхЗаполнения <> Тип("Структура")
		И Метаданные().ВводитсяНаОсновании.Содержит(ДанныеЗаполнения.Метаданные()) Тогда
		ДокументОснование = ДанныеЗаполнения;
		ДоговорКонтрагента = ДокументОснование.ДоговорКонтрагента;
		Дата = ТекущаяДата();
		
		ДокументУсловий = АР_ОбщиеПроцедуры.ПолучитьАктуальныйДокументУсловий(ДоговорКонтрагента, Дата);
		Если ДокументУсловий = Неопределено Тогда
			ДокументУсловий = ДокументОснование;
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДокументУсловий, "Организация,Контрагент,ДоговорКонтрагента,ДатаОкончанияДоговора,ДокументБезНДС,СуммаВключаетНДС");
		
		ДатаОкончанияДоговора = АР_ОбщиеПроцедуры.ПолучитьДатуОкончанияДоговора(ДоговорКонтрагента);
		Если ЗначениеЗаполнено(ДатаОкончанияДоговора) Тогда
			ЗаполнитьТабличныеЧасти();
		КонецЕсли;
	Иначе
		СуммаВключаетНДС = Истина;		
	КонецЕсли;

	ЗаполнениеДокументов.Заполнить(ЭтотОбъект, ДанныеЗаполнения);

КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)

	Дата = НачалоДня(ОбщегоНазначения.ТекущаяДатаПользователя());
	Ответственный = Пользователи.ТекущийПользователь();

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
		
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка  Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	// Исключаем из проверки реквизиты, заполнение которых стало необязательным:
	МассивНепроверяемыхРеквизитов = Новый Массив();
	
	ПроверитьРасторжениеДоговора(Отказ);
	
	// Проверим, что доп.соглашение введено позднее Заключения договора
	Если ЗначениеЗаполнено(ДокументОснование) И МоментВремени().Сравнить(ДокументОснование.МоментВремени()) = -1 Тогда
		ТекстСообщения = НСтр("ru = 'Дополнительное соглашение должно быть введено позднее заключения договора'");
		ТекстСообщения = ОбщегоНазначенияБПКлиентСервер.ПолучитьТекстСообщения(, "Корректность",
				НСтр("ru = 'Дата'"),,, ТекстСообщения);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект,
			"Дата", "Объект", Отказ);
	КонецЕсли;
	
	Если ДокументОснование.ДатаЗаключенияДоговора > ДатаОкончанияДоговора Тогда
		ТекстСообщения = НСтр("ru = 'Дата заключения договора превышает дату окончания действия договора'");
		ТекстСообщения = ОбщегоНазначенияБПКлиентСервер.ПолучитьТекстСообщения(, "Корректность",
				НСтр("ru = 'Дата окончания договора'"),,, ТекстСообщения);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект,
			"ДатаОкончанияДоговора", "Объект", Отказ);
	КонецЕсли;
	
	// Проверяем табличную часть "Постоянная часть арендной платы":
	ИмяСписка = НСтр("ru = 'Постоянная часть арендной платы'");
	Для каждого СтрокаТЧ Из ПостояннаяЧастьАренднойПлаты Цикл
		Префикс = "ПостояннаяЧастьАренднойПлаты[" + Формат(СтрокаТЧ.НомерСтроки - 1, "ЧН=0; ЧГ=") + "].";
		
		Если ЗначениеЗаполнено(СтрокаТЧ.ДатаНачалаСрокаАренды) И ЗначениеЗаполнено(СтрокаТЧ.ДатаОкончанияСрокаАренды) Тогда
			
			Если СтрокаТЧ.ДатаНачалаСрокаАренды < ДокументОснование.ДатаЗаключенияДоговора Тогда
				ТекстСообщения = НСтр("ru = 'Дата начала аренды объекта меньше даты заключения договора'");
				ТекстСообщения = ОбщегоНазначенияБПКлиентСервер.ПолучитьТекстСообщения("Колонка", "Корректность", НСтр("ru = 'Дата начала срока аренды'"),
				СтрокаТЧ.НомерСтроки, ИмяСписка, ТекстСообщения);
				Поле = Префикс + "ДатаНачалаСрокаАренды";
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле, "Объект", Отказ);
			КонецЕсли;
			
			Если СтрокаТЧ.ДатаОкончанияСрокаАренды > ДатаОкончанияДоговора Тогда
				ТекстСообщения = НСтр("ru = 'Дата окончания аренды объекта больше даты окончания действия договора'");
				ТекстСообщения = ОбщегоНазначенияБПКлиентСервер.ПолучитьТекстСообщения("Колонка", "Корректность", НСтр("ru = 'Дата окончания срока аренды'"),
				СтрокаТЧ.НомерСтроки, ИмяСписка, ТекстСообщения);
				Поле = Префикс + "ДатаОкончанияСрокаАренды";
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле, "Объект", Отказ);
			КонецЕсли;
			
			// Проверим заполнение сроков аренды
			Если СтрокаТЧ.ДатаНачалаСрокаАренды > СтрокаТЧ.ДатаОкончанияСрокаАренды Тогда
				ТекстСообщения = НСтр("ru = 'Дата начала аренды не может превышать дату окончания'");
				ТекстСообщения = ОбщегоНазначенияБПКлиентСервер.ПолучитьТекстСообщения("Колонка", "Корректность", НСтр("ru = 'Дата начала срока аренды'"),
				СтрокаТЧ.НомерСтроки, ИмяСписка, ТекстСообщения);
				Поле = Префикс + "ДатаНачалаСрокаАренды";
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле, "Объект", Отказ);
			КонецЕсли;	
						
		КонецЕсли;
		
		// Проверим корректность заполнения услуг
		Если Не СтрокаТЧ.Услуга.АР_ПостояннаяЧастьОплаты Тогда
			ТекстСообщения = НСтр("ru = 'Указанная услуга не соответствует назначению табличной части'");
			ТекстСообщения = ОбщегоНазначенияБПКлиентСервер.ПолучитьТекстСообщения("Колонка", "Корректность", НСтр("ru = 'Услуга'"),
					СтрокаТЧ.НомерСтроки, ИмяСписка, ТекстСообщения);
			Поле = Префикс + "Услуга";
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле, "Объект", Отказ);
		КонецЕсли;
				
	КонецЦикла;
	
	ПроверитьСтатусыОбъектовАренды("ПостояннаяЧастьАренднойПлаты", Отказ);

	// Проверяем табличную часть "Переменную часть арендной платы":
	ИмяСписка = НСтр("ru = 'Переменная часть арендной платы'");
	Для каждого СтрокаТЧ Из ПеременнаяЧастьАренднойПлаты Цикл
		Префикс = "ПеременнаяЧастьАренднойПлаты[" + Формат(СтрокаТЧ.НомерСтроки - 1, "ЧН=0; ЧГ=") + "].";
		
		Если ЗначениеЗаполнено(СтрокаТЧ.ДатаНачалаСрокаАренды) И ЗначениеЗаполнено(СтрокаТЧ.ДатаОкончанияСрокаАренды) Тогда
			
			Если СтрокаТЧ.ДатаНачалаСрокаАренды < ДокументОснование.ДатаЗаключенияДоговора Тогда
				ТекстСообщения = НСтр("ru = 'Дата начала аренды объекта меньше даты заключения договора'");
				ТекстСообщения = ОбщегоНазначенияБПКлиентСервер.ПолучитьТекстСообщения("Колонка", "Корректность", НСтр("ru = 'Дата начала срока аренды'"),
				СтрокаТЧ.НомерСтроки, ИмяСписка, ТекстСообщения);
				Поле = Префикс + "ДатаНачалаСрокаАренды";
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле, "Объект", Отказ);
			КонецЕсли;
			
			Если СтрокаТЧ.ДатаОкончанияСрокаАренды > ДатаОкончанияДоговора Тогда
				ТекстСообщения = НСтр("ru = 'Дата окончания аренды объекта больше даты окончания действия договора'");
				ТекстСообщения = ОбщегоНазначенияБПКлиентСервер.ПолучитьТекстСообщения("Колонка", "Корректность", НСтр("ru = 'Дата окончания срока аренды'"),
				СтрокаТЧ.НомерСтроки, ИмяСписка, ТекстСообщения);
				Поле = Префикс + "ДатаОкончанияСрокаАренды";
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле, "Объект", Отказ);
			КонецЕсли;
			
			// Проверим заполнение сроков аренды
			Если СтрокаТЧ.ДатаНачалаСрокаАренды > СтрокаТЧ.ДатаОкончанияСрокаАренды Тогда
				ТекстСообщения = НСтр("ru = 'Дата начала аренды не может превышать дату окончания'");
				ТекстСообщения = ОбщегоНазначенияБПКлиентСервер.ПолучитьТекстСообщения("Колонка", "Корректность", НСтр("ru = 'Дата начала срока аренды'"),
				СтрокаТЧ.НомерСтроки, ИмяСписка, ТекстСообщения);
				Поле = Префикс + "ДатаНачалаСрокаАренды";
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле, "Объект", Отказ);
			КонецЕсли;	
			
		КонецЕсли;
		
		// Проверим корректность заполнения услуг
		Если СтрокаТЧ.Услуга.АР_ПостояннаяЧастьОплаты Тогда
			ТекстСообщения = НСтр("ru = 'Указанная услуга не соответствует назначению табличной части'");
			ТекстСообщения = ОбщегоНазначенияБПКлиентСервер.ПолучитьТекстСообщения("Колонка", "Корректность", НСтр("ru = 'Услуга'"),
					СтрокаТЧ.НомерСтроки, ИмяСписка, ТекстСообщения);
			Поле = Префикс + "Услуга";
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле, "Объект", Отказ);
		КонецЕсли;
				
	КонецЦикла;
	
	ПроверитьСтатусыОбъектовАренды("ПеременнаяЧастьАренднойПлаты", Отказ);
	
	// Удаляем из проверяемых реквизитов все, по которым автоматическая проверка не нужна:
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)

	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ДОКУМЕНТА

	ПроведениеСервер.ПодготовитьНаборыЗаписейКПроведению(ЭтотОбъект);
	Если РучнаяКорректировка Тогда
		Возврат;
	КонецЕсли;

	ПараметрыПроведения = Документы.АР_РасторжениеДоговораАренды.ПодготовитьПараметрыПроведения(Ссылка, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;

	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ИНФОРМАЦИОННОЙ БАЗЫ

	// ФОРМИРОВАНИЕ ДВИЖЕНИЙ
	
	АР_ОбщиеПроцедуры.СформироватьДвиженияПоРегистру(ПараметрыПроведения.СтатусыОбъектовАренды, Движения, "АР_СтатусыОбъектовАренды", Отказ);
			
	ПроведениеСервер.УстановитьЗаписьОчищаемыхНаборовЗаписей(ЭтотОбъект);
		
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)

	ПроведениеСервер.ПодготовитьНаборыЗаписейКОтменеПроведения(ЭтотОбъект);
	Движения.Записать();

КонецПроцедуры

#КонецЕсли
