////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

&НаСервере
Процедура КонтрагентПриИзмененииНаСервере()
	
	КонтрагентОбработатьИзменение();

КонецПроцедуры

&НаСервере
Процедура КонтрагентОбработатьИзменение()

	СписокВидовДоговоров = Новый Массив;
	СписокВидовДоговоров.Добавить(ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.СПокупателем"));
	
	СтруктураОтбора = Новый Структура("ЗначениеОтбора", Истина); 
	СтруктураПараметров = Новый Структура("АР_АрендныйДоговор", СтруктураОтбора);
	
	РаботаСДоговорамиКонтрагентовБП.УстановитьДоговорКонтрагента(
		Объект.ДоговорКонтрагента, Объект.Контрагент, Объект.Организация, 
		СписокВидовДоговоров, СтруктураПараметров);

КонецПроцедуры

&НаКлиенте
Процедура ПриВыбореОбъектаАренды(ТекСтрока, ВыбранноеЗначение)
	
	ТекСтрока.Количество = АР_ОбщиеПроцедуры.ЗначениеРеквизитаОбъекта(ВыбранноеЗначение, "ЗначениеХарактеристики");
	Если Не ЗначениеЗаполнено(ТекСтрока.Ставка) Тогда
		ОбновитьСтавку(ТекСтрока);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСтавкуНаСервере(СтруктураСвойств)
	
	Если (ТипЗнч(СтруктураСвойств.Ставка) = Тип("Число") ИЛИ СтруктураСвойств.Ставка = Неопределено) И ЗначениеЗаполнено(СтруктураСвойств.ОбъектАренды.КатегорияЦен) И ЗначениеЗаполнено(СтруктураСвойств.Услуга) Тогда
		ПараметрыОтбора = Новый Структура("КатегорияЦен, Услуга", СтруктураСвойств.ОбъектАренды.КатегорияЦен, СтруктураСвойств.Услуга);
		СтруктураЗаписи = РегистрыСведений.АР_ЦеныНаАренду.ПолучитьПоследнее(КонецДня(Объект.Дата), ПараметрыОтбора);
		СтруктураСвойств.ПривестиКЧислу = НЕ СтруктураСвойств.Ставка = Неопределено;
		Если ЗначениеЗаполнено(СтруктураЗаписи.Ставка) Тогда
			СтруктураСвойств.Ставка = СтруктураЗаписи.Ставка;
			СтруктураСвойств.СпособНачисления = СтруктураЗаписи.СпособНачисления;
			СтруктураСвойств.ПривестиКЧислу = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСтавку(ТекущиеДанные)
	
	СтруктураСвойств = Новый Структура("Ставка, СпособНачисления, ОбъектАренды, Услуга, ПривестиКЧислу");
	ЗаполнитьЗначенияСвойств(СтруктураСвойств, ТекущиеДанные);
	Если НЕ СтруктураСвойств.ПривестиКЧислу = Неопределено И СтруктураСвойств.ПривестиКЧислу Тогда
		ЗаполнитьЗначенияСвойств(ТекущиеДанные, СтруктураСвойств);
	КонецЕсли;
	ЗаполнитьЗначенияСвойств(ТекущиеДанные, СтруктураСвойств);
	
КонецПроцедуры

 &НаКлиенте
//Процедура предназначена для выравнивания сроков аренды объектов на границы действия договора
Процедура ОбновитьСрокиАренды(ТипИзмененияСроков = 1) // 1 - изменены и даты начала и дата окончания; 2 - только дата начала; 3 - только дата окончания
	
	Для Каждого СтрокаТЧ Из Объект.ПостояннаяЧастьАренднойПлаты Цикл
		Если ТипИзмененияСроков = 1 Тогда
			СтрокаТЧ.ДатаНачалаСрокаАренды = АР_ОбщиеПроцедуры.ЗначениеРеквизитаОбъекта(Объект.ДокументОснование, "ДатаЗаключенияДоговора");
			СтрокаТЧ.ДатаОкончанияСрокаАренды = Объект.ДатаОкончанияДоговора;
		ИначеЕсли ТипИзмененияСроков = 2 Тогда
			СтрокаТЧ.ДатаНачалаСрокаАренды = АР_ОбщиеПроцедуры.ЗначениеРеквизитаОбъекта(Объект.ДокументОснование, "ДатаЗаключенияДоговора");
		Иначе
			СтрокаТЧ.ДатаОкончанияСрокаАренды = Объект.ДатаОкончанияДоговора;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого СтрокаТЧ Из Объект.ПеременнаяЧастьАренднойПлаты Цикл
		Если ТипИзмененияСроков = 1 Тогда
			СтрокаТЧ.ДатаНачалаСрокаАренды = АР_ОбщиеПроцедуры.ЗначениеРеквизитаОбъекта(Объект.ДокументОснование, "ДатаЗаключенияДоговора");
			СтрокаТЧ.ДатаОкончанияСрокаАренды = Объект.ДатаОкончанияДоговора;
		ИначеЕсли ТипИзмененияСроков = 2 Тогда
			СтрокаТЧ.ДатаНачалаСрокаАренды = АР_ОбщиеПроцедуры.ЗначениеРеквизитаОбъекта(Объект.ДокументОснование, "ДатаЗаключенияДоговора");
		Иначе
			СтрокаТЧ.ДатаОкончанияСрокаАренды = Объект.ДатаОкончанияДоговора;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СпроситьОбИзменении(ТекстВопроса, ВариантДействия)
	
	ДополнительныеПараметры = Новый Структура("ВариантДействия", ВариантДействия);
	Оповещение = Новый ОписаниеОповещения("СпроситьОбИзмененииЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет, 0, КодВозвратаДиалога.Нет, "Вопрос");	
	
КонецПроцедуры

&НаКлиенте
Процедура СпроситьОбИзмененииЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ОбновитьСрокиАренды(ДополнительныеПараметры.ВариантДействия);		
	КонецЕсли;                                                       	
		
КонецПроцедуры

&НаКлиенте
Процедура СопоставитьСоСрокамиДоговора(Значение)
	
	ДатаЗаключенияДоговора = АР_ОбщиеПроцедуры.ЗначениеРеквизитаОбъекта(Объект.ДокументОснование, "ДатаЗаключенияДоговора");
	Если Значение < ДатаЗаключенияДоговора Тогда
		Значение = ДатаЗаключенияДоговора;
	ИначеЕсли Значение > Объект.ДатаОкончанияДоговора Тогда
		Значение = Объект.ДатаОкончанияДоговора;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииУслуги(ТекущиеДанные)
	
	ОбновитьСтавку(ТекущиеДанные);
	Если ПолучитьФункциональнуюОпциюФормы("АР_ИспользоватьСхемуОпределенияСтавокНДСПоАрендеНаОсновеДоговора") Тогда
		Если Объект.ДокументБезНДС Тогда
			ТекущиеДанные.СтавкаНДС = ПредопределенноеЗначение("Перечисление.СтавкиНДС.БезНДС");
		Иначе
			ТекущиеДанные.СтавкаНДС = АР_ОбщиеПроцедуры.ПолучитьСтавкуНДСНоменклатуры(ТекущиеДанные.Услуга, Объект.Дата);
		КонецЕсли;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(ТекущиеДанные.Количество) Тогда
		ТекущиеДанные.Количество = 1;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьУслугуАренда()
	
	Возврат Константы.АР_ОсновнаяУслугаПоАренде.Получить();
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьОсновнойСпособНачисления()
	
	Возврат Константы.АР_ОсновнойСпособНачисленияАрендойПлаты.Получить();
	
КонецФункции

&НаСервере
Функция ДокументОснованиеПриИзмененииСервер()

	ОбъектЗначение = РеквизитФормыВЗначение("Объект");
	ОбъектЗначение.ЗаполнитьСвойстваШапки();
	ЗначениеВРеквизитФормы(ОбъектЗначение,"Объект");

КонецФункции

&НаСервере
Процедура ЗаполнитьТекущимиДаннымиНаСервере()
	
	ОбъектЗначение = РеквизитФормыВЗначение("Объект");
	ОбъектЗначение.ЗаполнитьТабличныеЧасти();
	ЗначениеВРеквизитФормы(ОбъектЗначение,"Объект");
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьДокументОснование()
	
	Если Не ЗначениеЗаполнено(Объект.ДокументОснование) Тогда
		Возврат;
	КонецЕсли;
	
	РеквизитыОснования = АР_ОбщиеПроцедуры.ЗначенияРеквизитовОбъекта(Объект.ДокументОснование, "Организация, Контрагент, ДоговорКонтрагента");
	Если (ЗначениеЗаполнено(Объект.Организация) И РеквизитыОснования.Организация <> Объект.Организация)
		ИЛИ (ЗначениеЗаполнено(Объект.Контрагент) И РеквизитыОснования.Контрагент <> Объект.Контрагент)
		ИЛИ (ЗначениеЗаполнено(Объект.ДоговорКонтрагента) И РеквизитыОснования.ДоговорКонтрагента <> Объект.ДоговорКонтрагента) Тогда
		Объект.ДокументОснование = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьДокументОснованиеПриПроведении(Отказ)
	
	Если Не ЗначениеЗаполнено(Объект.ДокументОснование) Тогда
		Возврат;
	КонецЕсли;
	
	РеквизитыОснования = АР_ОбщиеПроцедуры.ЗначенияРеквизитовОбъекта(Объект.ДокументОснование, "Организация, Контрагент, ДоговорКонтрагента");
	Если РеквизитыОснования.Организация <> Объект.Организация Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Организация не соответствует документу-основанию",, "Объект.Организация",, Отказ);
	КонецЕсли;
	Если РеквизитыОснования.Контрагент <> Объект.Контрагент Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Контрагент не соответствует документу-основанию",, "Объект.Контрагент",, Отказ);
	КонецЕсли;
	Если РеквизитыОснования.ДоговорКонтрагента <> Объект.ДоговорКонтрагента Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Договор не соответствует документу-основанию",, "Объект.ДоговорКонтрагента",, Отказ);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьПризнакУчитыватьЗалог(Договор, Период)
	
	ДокументПоСтатусам = АР_ОбщиеПроцедуры.ПолучитьАктуальныйДокументПоСтатусам(Договор, Период);
	Возврат ДокументПоСтатусам.УчитыватьЗалог;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ УПРАВЛЕНИЯ ВНЕШНИМ ВИДОМ ФОРМЫ

&НаКлиенте
Процедура УстановитьВидимость()
	
	//Видимость элементов формы на закладке "Депозит"
	УчитыватьЗалог = ПолучитьПризнакУчитыватьЗалог(Объект.ДоговорКонтрагента, Объект.Дата);
	Элементы.РассчитатьДепозит.Видимость = УчитыватьЗалог;
	Элементы.СуммаЗалога.Видимость = УчитыватьЗалог;
	
	// Видимость элементов НДС
	Элементы.ПостояннаяЧастьАренднойПлатыСтавкаНДС.Видимость = НЕ Объект.ДокументБезНДС;
	Элементы.ПостояннаяЧастьАренднойПлатыСуммаНДС.Видимость = НЕ Объект.ДокументБезНДС;
	Элементы.ПостояннаяЧастьАренднойПлатыВсего.Видимость = НЕ Объект.ДокументБезНДС;
	Элементы.ПеременнаяЧастьАренднойПлатыСтавкаНДС.Видимость = НЕ Объект.ДокументБезНДС;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

&НаКлиенте
Процедура ПоказатьКонтекстныеНовости(Команда)

	ОбработкаНовостейКлиент.КонтекстныеНовости_ОбработкаКомандыНовости(
		ЭтаФорма,
		Команда
	);

КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, НавигационнаяСсылка = Неопределено, СтандартнаяОбработка = Неопределено)
	УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьДепозит(Команда)
	
	Если Модифицированность ИЛИ Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		Оповещение = новый ОписаниеОповещения("СпроситьОЗаписиДокумента", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, "Автоматически рассчитать размер депозита можно только после записи документа. Записать?", РежимДиалогаВопрос.ДаНет);
		
	Иначе
		
		РассчитатьДепозитЗавершение();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СпроситьОЗаписиДокумента(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		Если Записать() Тогда
			РассчитатьДепозитЗавершение();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьДепозитЗавершение()
	
	СуммаЗалога = АР_ОбщиеПроцедуры.РассчитатьЗалог(Объект.Ссылка, Неопределено, Неопределено);
	Если ЗначениеЗаполнено(СуммаЗалога) Тогда
		Объект.СуммаЗалога = СуммаЗалога;
		Модифицированность = Истина;
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТекущимиДанными(Команда)
	
	Если Объект.ПеременнаяЧастьАренднойПлаты.Количество() + Объект.ПостояннаяЧастьАренднойПлаты.Количество() > 0 Тогда
		Оповещение = Новый ОписаниеОповещения("СпроситьОбОчисткеТабЧасти", ЭтотОбъект, Ложь);
		ПоказатьВопрос(Оповещение, "Табличные части будут очищены. Продолжить?", РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет);
	Иначе
		ЗаполнитьТекущимиДаннымиНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СпроситьОбОчисткеТабЧасти(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ЗаполнитьТекущимиДаннымиНаСервере();
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ШАПКИ

&НаКлиенте
Процедура ДокументОснованиеПриИзменении(Элемент)
	
	Если НЕ ЗначениеЗаполнено(Объект.ДокументОснование) Тогда
		Возврат;
	КонецЕсли;	
	
	ДокументОснованиеПриИзмененииСервер();
	
	ОрганизацияПриИзменении(Неопределено);
	КонтрагентПриИзменении(Неопределено);
	ДоговорКонтрагентаПриИзменении(Неопределено);
	
	УстановитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура ДокументОснованиеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Отбор = Новый Структура();
	Если ЗначениеЗаполнено(Объект.Организация) Тогда
		Отбор.Вставить("Организация", Объект.Организация);
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.Контрагент) Тогда
		Отбор.Вставить("Контрагент", Объект.Контрагент);
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.ДоговорКонтрагента) Тогда
		Отбор.Вставить("ДоговорКонтрагента", Объект.ДоговорКонтрагента);
	КонецЕсли;
	
	ОткрытьФорму("Документ.АР_ЗаключениеДоговораАренды.ФормаВыбора", Новый Структура("Отбор", Отбор), Элемент);

КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.Организация) Тогда
		ПроверитьДокументОснование();
	КонецЕсли;
	
	УстановитьФункциональныеОпцииФормы();
	
	Если ПлательщикНДС Тогда
		Объект.ДокументБезНДС = Ложь;
	КонецЕсли;
	СформироватьНадписьЦеныИВалюта(ЭтаФорма);
	УстановитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	
	КонтрагентПриИзмененииНаСервере();
	Если ЗначениеЗаполнено(Объект.Контрагент) Тогда
		ПроверитьДокументОснование();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДоговорКонтрагентаПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.ДоговорКонтрагента) Тогда
		ПроверитьДокументОснование();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаОкончанияДоговораПриИзменении(Элемент)
	
	Если Не ЗначениеЗаполнено(Объект.ДатаОкончанияДоговора) Тогда
		Возврат;
	КонецЕсли;
	
	Если Объект.ДатаОкончанияДоговора < АР_ОбщиеПроцедуры.ЗначениеРеквизитаОбъекта(Объект.ДокументОснование, "ДатаЗаключенияДоговора") Тогда
		ТекстСообщения = "Дата окончания договора не может быть меньше даты заключения договора";
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект.Ссылка, "ДатаОкончанияДоговора");
		Возврат;
	КонецЕсли;		
	
	Если (Объект.ПостояннаяЧастьАренднойПлаты.Количество()>0 ИЛИ
		Объект.ПеременнаяЧастьАренднойПлаты.Количество()>0) Тогда
		СпроситьОбИзменении("Выровнять сроки в табличной части на дату окончания срока действия?", 3);
	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНЫХ ЧАСТЕЙ

//////////////////////////////////////////////////////
// Постоянная часть

&НаКлиенте
Процедура ПостояннаяЧастьАренднойПлатыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		ТекущиеДанные = Элементы.ПостояннаяЧастьАренднойПлаты.ТекущиеДанные;
		ТекущиеДанные.Услуга = ПолучитьУслугуАренда();
		ТекущиеДанные.СпособНачисления = ПолучитьОсновнойСпособНачисления();
		ТекущиеДанные.ДатаНачалаСрокаАренды = АР_ОбщиеПроцедуры.ЗначениеРеквизитаОбъекта(Объект.ДокументОснование, "ДатаЗаключенияДоговора");
		ТекущиеДанные.ДатаОкончанияСрокаАренды = Объект.ДатаОкончанияДоговора;
		ПриИзмененииУслуги(ТекущиеДанные);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПостояннаяЧастьАренднойПлатыУслугаПриИзменении(Элемент)
		
	ТекущиеДанные = Элементы.ПостояннаяЧастьАренднойПлаты.ТекущиеДанные;
	ПриИзмененииУслуги(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ПостояннаяЧастьАренднойПлатыДатаОкончанияСрокаАрендыПриИзменении(Элемент)
	
	СопоставитьСоСрокамиДоговора(Элементы.ПостояннаяЧастьАренднойПлаты.ТекущиеДанные.ДатаОкончанияСрокаАренды);
	
КонецПроцедуры

&НаКлиенте
Процедура ПостояннаяЧастьАренднойПлатыОбъектАрендыОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.ПостояннаяЧастьАренднойПлаты.ТекущиеДанные;
	ПриВыбореОбъектаАренды(ТекущиеДанные, ВыбранноеЗначение);
	
КонецПроцедуры

//////////////////////////////////////////////////////
// Переменная часть

&НаКлиенте
Процедура ПеременнаяЧастьАренднойПлатыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		ТекущиеДанные = Элементы.ПеременнаяЧастьАренднойПлаты.ТекущиеДанные;
		ТекущиеДанные.СпособНачисления = ПолучитьОсновнойСпособНачисления();
		ТекущиеДанные.ДатаНачалаСрокаАренды = АР_ОбщиеПроцедуры.ЗначениеРеквизитаОбъекта(Объект.ДокументОснование, "ДатаЗаключенияДоговора");
		ТекущиеДанные.ДатаОкончанияСрокаАренды = Объект.ДатаОкончанияДоговора;
		ТекущиеДанные.КоэффициентОтнесенияСчетчика = 1;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПеременнаяЧастьАренднойПлатыУслугаПриИзменении(Элемент)
		
	ТекущиеДанные = Элементы.ПеременнаяЧастьАренднойПлаты.ТекущиеДанные;
	ПриИзмененииУслуги(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ПеременнаяЧастьАренднойПлатыДатаОкончанияСрокаАрендыПриИзменении(Элемент)
	
	СопоставитьСоСрокамиДоговора(Элементы.ПеременнаяЧастьАренднойПлаты.ТекущиеДанные.ДатаОкончанияСрокаАренды);
	
КонецПроцедуры

&НаКлиенте
Процедура ПеременнаяЧастьАренднойПлатыОбъектАрендыОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.ПеременнаяЧастьАренднойПлаты.ТекущиеДанные;
	ПриВыбореОбъектаАренды(ТекущиеДанные, ВыбранноеЗначение);
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// Обработчик подсистемы "Свойства"
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Объект", Объект);
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтаФорма, ДополнительныеПараметры);
	
	ЗаполнитьСуммыПостояннойЧасти();
	
	СформироватьНадписьЦеныИВалюта(ЭтаФорма);
	НастроитьТекстИнформацииОНовойСхемеНДС();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	УстановитьФункциональныеОпцииФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьВидимость();
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// Обработчик подсистемы "Свойства"
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтаФорма, ТекущийОбъект);
	
	ТекущийОбъект.ДополнительныеСвойства.Вставить("ЗаписьИзФормы", Истина);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ЗаполнитьСуммыПостояннойЧасти();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзмененаСхемаОпределенияСтавокНДС" Тогда
		НастроитьТекстИнформацииОНовойСхемеНДС();
	КонецЕсли;
	
	// Подсистема "Свойства"
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтаФорма, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
	ПроверитьДокументОснованиеПриПроведении(Отказ);

КонецПроцедуры

&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтаФорма, РеквизитФормыВЗначение("Объект"));

КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры

// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	УстановитьФункциональныеОпцииФормы();
	
	Если ПлательщикНДС Тогда
		Объект.ДокументБезНДС = Ложь;
	КонецЕсли;
	УстановитьВидимость();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСуммыПостояннойЧасти()
	
	ИтогоСумма = 0;
	ИтогоСуммаНДС = 0;
	ИтогоВсего = 0;
	Для Каждого СтрокаТЧ Из Объект.ПостояннаяЧастьАренднойПлаты Цикл
		Если Объект.ДокументБезНДС Тогда
			СтрокаТЧ.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС;
		КонецЕсли;
		СтрокаТЧ.Сумма = Окр(АР_ОбщиеПроцедуры.ПолучитьСтавку(СтрокаТЧ.Ставка) * 
			?(СтрокаТЧ.СпособНачисления.ВариантРасчета = Перечисления.АР_ВариантыРасчета.ПоСтавкеЗаОбъектВЦелом, 1, СтрокаТЧ.Количество), 2);
		ИтогоСумма = ИтогоСумма + СтрокаТЧ.Сумма;
		ПересчитатьСуммуНДС(СтрокаТЧ, Объект.СуммаВключаетНДС);
		ИтогоСуммаНДС = ИтогоСуммаНДС + СтрокаТЧ.СуммаНДС;
		ИтогоВсего = ИтогоВсего + СтрокаТЧ.Всего;
	КонецЦикла;
	ОбщаяСуммаПостояннойЧасти = ИтогоСумма;
	
	Если Объект.ДокументБезНДС Тогда
		Для Каждого СтрокаТЧ Из Объект.ПеременнаяЧастьАренднойПлаты Цикл
			СтрокаТЧ.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура НастроитьТекстИнформацииОНовойСхемеНДС()
	
	Если ПолучитьФункциональнуюОпцию("АР_ИспользоватьСхемуОпределенияСтавокНДСПоАрендеНаОсновеДоговора") Тогда
		Элементы.ИнформацияОНовойСхемеНДС.Видимость = Ложь;
	Иначе
		Элементы.ИнформацияОНовойСхемеНДС.Видимость = Истина;
		
		Элементы.ТекстИнформацияОНовойСхемеНДС.Заголовок = "Добавлена возможность явного указания ставок НДС по услугам в договоре аренды. 
			|Рекомендуется выполнить переход на новую схему определения ставок НДС.
			|";
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьИзмененияПоКнопкеЦеныИВалюты(ПересчитатьЦены = Ложь, ПерезаполнитьЦены = Ложь)

	// 1. Формируем структуру параметров для заполнения формы "Цены и Валюта".
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ВалютаДокумента",      Неопределено);
	СтруктураПараметров.Вставить("Курс",                 1);
	СтруктураПараметров.Вставить("Кратность",            1);
	СтруктураПараметров.Вставить("СуммаВключаетНДС",     Объект.СуммаВключаетНДС);
	СтруктураПараметров.Вставить("ДокументБезНДС",       Объект.ДокументБезНДС);
	СтруктураПараметров.Вставить("Контрагент",           Объект.Контрагент);
	СтруктураПараметров.Вставить("Договор",              Объект.ДоговорКонтрагента);
	СтруктураПараметров.Вставить("Организация",          Объект.Организация);
	СтруктураПараметров.Вставить("ДатаДокумента",        Объект.Дата);
	СтруктураПараметров.Вставить("ПерезаполнитьЦены",    ПерезаполнитьЦены);
	СтруктураПараметров.Вставить("ПересчитатьЦены",      ПересчитатьЦены);
	СтруктураПараметров.Вставить("БылиВнесеныИзменения", Ложь);

	// 2. Открываем форму "Цены и Валюта".
	ДополнительныеПараметры = Новый Структура;
	
	ОткрыватьИзМеню = Истина;
	ДополнительныеПараметры.Вставить("СтруктураПараметровКоманды", СтруктураПараметров);
	
	ОповещениеОЗакрытии = Новый ОписаниеОповещения("ОбработатьИзмененияПоКнопкеЦеныИВалютыЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	
	Если ОткрыватьИзМеню Тогда
		
		СписокКоманд = Новый СписокЗначений;
		
		Если Не ПлательщикНДС Тогда
			СписокКоманд.Добавить(ПредопределенноеЗначение("Перечисление.ВариантыРасчетаНДС.ДокументБезНДС"));
		КонецЕсли;
		СписокКоманд.Добавить(ПредопределенноеЗначение("Перечисление.ВариантыРасчетаНДС.НДССверху"));
		СписокКоманд.Добавить(ПредопределенноеЗначение("Перечисление.ВариантыРасчетаНДС.НДСВСумме"));
		
		ПоказатьВыборИзМеню(ОповещениеОЗакрытии, СписокКоманд, Элементы.ЦеныИВалюта);		
	Иначе
		ОткрытьФорму("ОбщаяФорма.ФормаЦеныИВалюта", СтруктураПараметров,,,,, ОповещениеОЗакрытии);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбработатьИзмененияПоКнопкеЦеныИВалютыЗавершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	Если ДополнительныеПараметры.Свойство("СтруктураПараметровКоманды") Тогда
		
		СтруктураЦеныИВалюта = ДополнительныеПараметры.СтруктураПараметровКоманды;
		
		СуммаВключаетНДСДоИзменения = СтруктураЦеныИВалюта.СуммаВключаетНДС;
		Если РезультатЗакрытия = Неопределено Тогда 
			Возврат;
		ИначеЕсли РезультатЗакрытия.Значение = ПредопределенноеЗначение("Перечисление.ВариантыРасчетаНДС.ДокументБезНДС") Тогда
			СтруктураЦеныИВалюта.ДокументБезНДС 	= Истина;
		ИначеЕсли РезультатЗакрытия.Значение = ПредопределенноеЗначение("Перечисление.ВариантыРасчетаНДС.НДСВСумме") Тогда
			СтруктураЦеныИВалюта.ДокументБезНДС 	= Ложь;
			СтруктураЦеныИВалюта.СуммаВключаетНДС 	= Истина;
		Иначе
			СтруктураЦеныИВалюта.ДокументБезНДС 	= Ложь;
			СтруктураЦеныИВалюта.СуммаВключаетНДС 	= Ложь;
		КонецЕсли;
		
		СтруктураЦеныИВалюта.Вставить("ПерезаполнитьЦены",    Ложь);
		СтруктураЦеныИВалюта.Вставить("ПересчитатьЦены",      Ложь);
		СтруктураЦеныИВалюта.Вставить("ПересчитатьНДС",       СуммаВключаетНДСДоИзменения <> СтруктураЦеныИВалюта.СуммаВключаетНДС
			ИЛИ Объект.ДокументБезНДС <> СтруктураЦеныИВалюта.ДокументБезНДС);
		СтруктураЦеныИВалюта.Вставить("БылиВнесеныИзменения", СуммаВключаетНДСДоИзменения <> СтруктураЦеныИВалюта.СуммаВключаетНДС
			ИЛИ Объект.ДокументБезНДС <> СтруктураЦеныИВалюта.ДокументБезНДС);
			
	Иначе
		СтруктураЦеныИВалюта = РезультатЗакрытия;
	КонецЕсли;
	
	Если ТипЗнч(СтруктураЦеныИВалюта) = Тип("Структура") Тогда

		Объект.СуммаВключаетНДС        = СтруктураЦеныИВалюта.СуммаВключаетНДС;
		Объект.ДокументБезНДС		   = СтруктураЦеныИВалюта.ДокументБезНДС;
		
		Модифицированность = Истина;

		ЗаполнитьСуммыПостояннойЧасти();
		СформироватьНадписьЦеныИВалюта(ЭтаФорма);
				
	КонецЕсли;
	УстановитьВидимость();
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура СформироватьНадписьЦеныИВалюта(Форма)
	
	Объект = Форма.Объект;
	СтруктураНадписи = Новый Структура(
		"ВалютаДокумента, Курс, Кратность, СуммаВключаетНДС, ДокументБезНДС",
		Неопределено,
		1,
		1,
		Объект.СуммаВключаетНДС,
		Объект.ДокументБезНДС);
	Форма.ЦеныИВалюта = ОбщегоНазначенияБПКлиентСервер.СформироватьНадписьЦеныИВалюта(СтруктураНадписи);

КонецПроцедуры 

&НаКлиентеНаСервереБезКонтекста
Процедура ПересчитатьВсего(ТекущиеДанные, СуммаВключаетНДС)

	Если СуммаВключаетНДС Тогда
		ТекущиеДанные.Всего = ТекущиеДанные.Сумма;
	Иначе
		ТекущиеДанные.Всего = ТекущиеДанные.Сумма + ТекущиеДанные.СуммаНДС;
	КонецЕсли;

КонецПроцедуры // ПересчитатьВсего()

&НаКлиентеНаСервереБезКонтекста
Процедура ПересчитатьСуммуНДС(ТекущиеДанные, СуммаВключаетНДС)

	СтавкаНДС = УчетНДСВызовСервераПовтИсп.ПолучитьСтавкуНДС(ТекущиеДанные.СтавкаНДС);	
	ТекущиеДанные.СуммаНДС = Окр(ТекущиеДанные.Сумма / (100 + ?(СуммаВключаетНДС, СтавкаНДС, 0)) * СтавкаНДС, 2);
	ПересчитатьВсего(ТекущиеДанные, СуммаВключаетНДС);

КонецПроцедуры // ПересчитатьСуммуНДС()

&НаСервере
Процедура УстановитьФункциональныеОпцииФормы()
	
	ОбщегоНазначенияБПКлиентСервер.УстановитьПараметрыФункциональныхОпцийФормыДокумента(ЭтаФорма);
	
	ПлательщикНДС			= УчетнаяПолитика.ПлательщикНДС(Объект.Организация, Объект.Дата);	
	
КонецПроцедуры

&НаКлиенте
Процедура ЦеныИВалютаНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОбработатьИзмененияПоКнопкеЦеныИВалюты();
	
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиНаНовуюСхемуНДС(Команда)
	ОткрытьФорму("Обработка.АР_ПереходНаНовуюСхемуОпределенияСтавокНДС.Форма");
КонецПроцедуры

&НаКлиенте
Процедура ПостояннаяЧастьАренднойПлатыПриИзменении(Элемент)
	
	ЗаполнитьСуммыПостояннойЧасти();	
	
КонецПроцедуры

