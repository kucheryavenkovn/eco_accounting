
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

&НаСервере
Процедура ЗаполнитьРаботыНаСервере()
	
	ОбъектЗначение = РеквизитФормыВЗначение("Объект");
	ОбъектЗначение.ЗаполнитьРаботы();
	ЗначениеВРеквизитФормы(ОбъектЗначение,"Объект");

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьМатериалыНаСервере()
	
	ОбъектЗначение = РеквизитФормыВЗначение("Объект");
	ОбъектЗначение.ЗаполнитьМатериалы();
	ЗначениеВРеквизитФормы(ОбъектЗначение,"Объект");

КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСумму(ТекущиеДанные)
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборПериодаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		Объект.НачалоПериода = Результат.ДатаНачала;
		Объект.ОкончаниеПериода = Результат.ДатаОкончания;	
	КонецЕсли;
		
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

&НаКлиенте
Процедура ВыборПериода(Команда)

	Оповещение = Новый ОписаниеОповещения("ВыборПериодаЗавершение", ЭтотОбъект);
	АР_ОбщиеПроцедурыКлиент.ВыборПериодаПоДоговору(Объект.НачалоПериода, Объект.ОкончаниеПериода, Неопределено, Оповещение);

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьРаботы(Команда)
	
	Отказ = Ложь;
	
	Если Не Отказ Тогда
		Если Объект.Работы.Количество() > 0 Тогда
			Оповещение = Новый ОписаниеОповещения("СпроситьОбОчисткеТабЧасти", ЭтотОбъект, Истина);
			ПоказатьВопрос(Оповещение, "Перед заполнением табличная часть будет очищена. Продолжить?", РежимДиалогаВопрос.ДаНет, 0, КодВозвратаДиалога.Нет, "Предупреждение");
		Иначе
			ЗаполнитьРаботыНаСервере();
		КонецЕсли;
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьМатериалы(Команда)
	
	Если Объект.Материалы.Количество()>0 Тогда
		Оповещение = Новый ОписаниеОповещения("СпроситьОбОчисткеТабЧасти", ЭтотОбъект, Ложь);
		ПоказатьВопрос(Оповещение, "Перед заполнением табличная часть будет очищена. Продолжить?", РежимДиалогаВопрос.ДаНет, 0, КодВозвратаДиалога.Нет, "Предупреждение");
	Иначе
		ЗаполнитьМатериалыНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьКонтекстныеНовости(Команда)

	ОбработкаНовостейКлиент.КонтекстныеНовости_ОбработкаКомандыНовости(
		ЭтаФорма,
		Команда
	);

КонецПроцедуры

&НаКлиенте
Процедура СпроситьОбОчисткеТабЧасти(РезультатВопроса, ЗаполнитьРаботы) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		Если ЗаполнитьРаботы Тогда
			Объект.Работы.Очистить();
			ЗаполнитьРаботыНаСервере();
		Иначе
			Объект.Материалы.Очистить();
			ЗаполнитьМатериалыНаСервере();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ШАПКИ


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНЫХ ЧАСТЕЙ
 
&НаКлиенте
Процедура МатериалыЦенаПриИзменении(Элемент)
	
	РассчитатьСумму(Элементы.Материалы.ТекущиеДанные);
	 
КонецПроцедуры

&НаКлиенте
Процедура МатериалыКоличествоПриИзменении(Элемент)
	
	РассчитатьСумму(Элементы.Материалы.ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура РаботыЦенаПриИзменении(Элемент)
	
	РассчитатьСумму(Элементы.Работы.ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура РаботыКоличествоПриИзменении(Элемент)
	
	РассчитатьСумму(Элементы.Работы.ТекущиеДанные);
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
КонецПроцедуры


&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
