#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Перед открытием формы должны быть подготовлены данные для подбора с помощью
	// УчетКассовыхЧековПодотчетныхЛиц.ПрочитатьКассовыеЧекиПодотчетныхЛиц.
	// Данные помещаются во временное хранилище, адрес которого передается в параметре АдресКассовыеЧеки
	НастроитьДаннымиПодбора();
	
	Элементы.КассовыеЧекиДата.Формат = Документы.КассовыйЧекПодотчетногоЛица.ФорматнаяСтрокаДатаПокупки();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВариантОтбораПриИзменении(Элемент)
	
	ВыбратьВариантОтбора(ЭтотОбъект);
	
	Если Элементы.КассовыеЧеки.ТекущаяСтрока = Неопределено
		Или Не Элементы.КассовыеЧеки.ПроверитьСтроку(Элементы.КассовыеЧеки.ТекущаяСтрока) Тогда
		ОтобразитьПредварительныйПросмотр(Неопределено);
	Иначе
		ОтобразитьПредварительныйПросмотр(Элементы.КассовыеЧеки.ТекущиеДанные);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыКассовыеЧеки

&НаКлиенте
Процедура КассовыеЧекиПриАктивизацииСтроки(Элемент)
	
	ОтобразитьПредварительныйПросмотр(Элементы.КассовыеЧеки.ТекущиеДанные);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаЗагрузить(Команда)
	
	Загрузить(Элементы.КассовыеЧеки.ВыделенныеСтроки);
	
КонецПроцедуры

&НаКлиенте
Процедура КассовыеЧекиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбраннаяСтрока) = Тип("Массив") Тогда
		ВыделенныеСтроки = ВыбраннаяСтрока;
	Иначе
		ВыделенныеСтроки = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ВыбраннаяСтрока);
	КонецЕсли;
	
	Загрузить(ВыделенныеСтроки);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ДанныеЧеков

&НаСервере
Процедура НастроитьДаннымиПодбора()
	
	Если Не ЗначениеЗаполнено(Параметры.АдресКассовыеЧеки) Тогда
		ВызватьИсключение НСтр("ru = 'Не переданы данные для подбора'");
	КонецЕсли;
	
	ДанныеКассовыхЧеков = ПолучитьИзВременногоХранилища(Параметры.АдресКассовыеЧеки); // См. УчетКассовыхЧековПодотчетныхЛиц.НовыйДанныеФормыКассовыеЧекиПодотчетныхЛиц
	
	Если ДанныеКассовыхЧеков.КешПодбора <> Неопределено
		И ДанныеКассовыхЧеков.КешПодбора.ПодотчетноеЛицо = Параметры.ПодотчетноеЛицо Тогда
		
		ДанныеКассовыхЧеков.КешПодбора.КоличествоКассовыхЧеков = ИтогиКассовыхЧеков(ДанныеКассовыхЧеков.КЗагрузке);
		
	Иначе
		
		ДанныеКассовыхЧеков.КешПодбора = Новый Структура;
		ДанныеКассовыхЧеков.КешПодбора.Вставить("ПодотчетноеЛицо",                 Параметры.ПодотчетноеЛицо);
		ДанныеКассовыхЧеков.КешПодбора.Вставить("ВыводитьПодотчетноеЛицо",         Ложь);
		ДанныеКассовыхЧеков.КешПодбора.Вставить("ПодотчетноеЛицоПредставление",    Строка(Параметры.ПодотчетноеЛицо));
		ДанныеКассовыхЧеков.КешПодбора.Вставить("КоличествоКассовыхЧеков");         // Структура, определяется ниже
		ДанныеКассовыхЧеков.КешПодбора.Вставить("ПодключенныеМобильныеПриложения"); // Структура, определяется ниже
		// По КоличествоКассовыхЧеков и ПодключенныеМобильныеПриложения см. также комментарий в НастроитьВариантыОтбора
		
		// Пользователями мобильного приложения могут быть как пользователи программы,
		// так и физические лица, не являющиеся пользователями программы.
		ЗаписиТекущегоПользователя = Новый Массив;
		ТекущийПользователь = Пользователи.ТекущийПользователь();
		ЗаписиТекущегоПользователя.Добавить(ТекущийПользователь);
		ФизическоеЛицоТекущегоПользователя = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущийПользователь, "ФизическоеЛицо");
		Если ЗначениеЗаполнено(ФизическоеЛицоТекущегоПользователя) Тогда
			ЗаписиТекущегоПользователя.Добавить(ФизическоеЛицоТекущегоПользователя);
		КонецЕсли;
		
		ЗаписиПодотчетногоЛица = Новый Массив;
		Если ЗначениеЗаполнено(ДанныеКассовыхЧеков.КешПодбора.ПодотчетноеЛицо) Тогда
			
			ЗаписиПодотчетногоЛица = ПользователиПодотчетноеЛицо(ДанныеКассовыхЧеков.КешПодбора.ПодотчетноеЛицо);
			ЗаписиПодотчетногоЛица.Добавить(ДанныеКассовыхЧеков.КешПодбора.ПодотчетноеЛицо);
			
			Если ДанныеКассовыхЧеков.КешПодбора.ПодотчетноеЛицо <> ФизическоеЛицоТекущегоПользователя Тогда
				ДанныеКассовыхЧеков.КешПодбора.ВыводитьПодотчетноеЛицо = Истина;
			КонецЕсли;
		
		КонецЕсли;
		
		ОбновитьКоличествоПользователей(
			ДанныеКассовыхЧеков.КЗагрузке,
			ЗаписиТекущегоПользователя,
			ЗаписиПодотчетногоЛица);
			
		ДанныеКассовыхЧеков.КешПодбора.КоличествоКассовыхЧеков = ИтогиКассовыхЧеков(ДанныеКассовыхЧеков.КЗагрузке);
			
		ДанныеКассовыхЧеков.КешПодбора.ПодключенныеМобильныеПриложения = ПодключенныеМобильныеПриложения(
			ЗаписиТекущегоПользователя,
			ЗаписиПодотчетногоЛица,
			ДанныеКассовыхЧеков.КешПодбора.КоличествоКассовыхЧеков);
			
		ПоместитьВоВременноеХранилище(ДанныеКассовыхЧеков, Параметры.АдресКассовыеЧеки);
			
	КонецЕсли;
	
	КассовыеЧеки.Загрузить(ДанныеКассовыхЧеков.КЗагрузке);
	
	ЗаполнитьПредварительныйПросмотр(КассовыеЧеки);
	
	Если ДанныеКассовыхЧеков.КешПодбора.ВыводитьПодотчетноеЛицо Тогда
		ПодотчетноеЛицо = ДанныеКассовыхЧеков.КешПодбора.ПодотчетноеЛицо;
	Иначе
		ПодотчетноеЛицо = Неопределено;
	КонецЕсли;
	
	НастроитьВариантыОтбора(
		Элементы.ВариантОтбора,
		ВариантОтбора,
		ДанныеКассовыхЧеков.КешПодбора.КоличествоКассовыхЧеков,
		ДанныеКассовыхЧеков.КешПодбора.ПодключенныеМобильныеПриложения,
		ПодотчетноеЛицо);
	
	ВыбратьВариантОтбора(ЭтотОбъект);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция НовыйИтогиКассовыхЧеков()
	
	ИтогиКассовыхЧеков = Новый Структура;
	ИтогиКассовыхЧеков.Вставить("ТекущийПользователь", 0);
	ИтогиКассовыхЧеков.Вставить("ПодотчетноеЛицо",     0);
	ИтогиКассовыхЧеков.Вставить("ИныеПользователи",    0);
	ИтогиКассовыхЧеков.Вставить("Все",                 0);
	
	Возврат ИтогиКассовыхЧеков;
	
КонецФункции

&НаСервереБезКонтекста
Функция ИтогиКассовыхЧеков(ДанныеКассовыхЧеков)
	
	ИтогиКассовыхЧеков = НовыйИтогиКассовыхЧеков();
	
	Для Каждого ОписаниеИтога Из ИтогиКассовыхЧеков Цикл
		
		ОтборСтрок = ОтборСтрокВариантаОтбора(ОписаниеИтога.Ключ);
		
		Если Не ЗначениеЗаполнено(ОтборСтрок) Тогда
			ОтобранныеСтроки = ДанныеКассовыхЧеков;
		Иначе
			ОтобранныеСтроки = ДанныеКассовыхЧеков.НайтиСтроки(ОтборСтрок);
		КонецЕсли;
		
		ИтогиКассовыхЧеков[ОписаниеИтога.Ключ] = ОтобранныеСтроки.Количество();
		
	КонецЦикла;
	
	Возврат ИтогиКассовыхЧеков;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ОтборСтрокВариантаОтбора(ВариантОтбора)
	
	ОтборСтрок = Новый Структура;
	
	Если ВариантОтбора = "ТекущийПользователь" Тогда
		ОтборСтрок.Вставить("ОтсканировалТекущийПользователь", Истина);
	ИначеЕсли ВариантОтбора = "ПодотчетноеЛицо" Тогда
		ОтборСтрок.Вставить("ОтсканировалПодотчетноеЛицо", Истина);
	ИначеЕсли ВариантОтбора = "ИныеПользователи" Тогда
		ОтборСтрок.Вставить("ОтсканировалИныеПользователи", Истина);
	Иначе
		// Отбор не требуется
	КонецЕсли;
	
	Возврат ОтборСтрок;
	
КонецФункции

&НаСервереБезКонтекста
Процедура ОбновитьКоличествоПользователей(КЗагрузке, ЗаписиТекущийПользователь, ЗаписиПодотчетноеЛицо)
	
	УстановитьИндекс(КЗагрузке, "Ссылка");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылки",              КЗагрузке.ВыгрузитьКолонку("Ссылка"));
	Запрос.УстановитьПараметр("ТекущийПользователь", ЗаписиТекущийПользователь);
	Запрос.УстановитьПараметр("ПодотчетноеЛицо",     ЗаписиПодотчетноеЛицо);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Сканирование.КассовыйЧек КАК Ссылка,
	|	МАКСИМУМ(Сканирование.Пользователь В (&ТекущийПользователь)) КАК ОтсканировалТекущийПользователь,
	|	МАКСИМУМ(Сканирование.Пользователь В (&ПодотчетноеЛицо)) КАК ОтсканировалПодотчетноеЛицо,
	|	МАКСИМУМ(НЕ Сканирование.Пользователь В (&ПодотчетноеЛицо, &ТекущийПользователь)) КАК ОтсканировалИныеПользователи
	|ИЗ
	|	РегистрСведений.СканированиеКассовыхЧековПодотчетныхЛиц КАК Сканирование
	|ГДЕ
	|	Сканирование.КассовыйЧек В(&Ссылки)
	|
	|СГРУППИРОВАТЬ ПО
	|	Сканирование.КассовыйЧек";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Запись = КЗагрузке.Найти(Выборка.Ссылка, "Ссылка");
		ЗаполнитьЗначенияСвойств(Запись, Выборка);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура УстановитьИндекс(ТаблицаЗначений, ПолеИндекса)
	
	Для Каждого Индекс Из ТаблицаЗначений.Индексы Цикл
		Если Индекс = ПолеИндекса Тогда
			Возврат;
		КонецЕсли;
	КонецЦикла;
	
	ТаблицаЗначений.Индексы.Добавить(ПолеИндекса);
	
КонецПроцедуры

#КонецОбласти

#Область ДанныеПользователей

&НаСервереБезКонтекста
Функция ПользователиПодотчетноеЛицо(ПодотчетноеЛицо)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ФизическоеЛицо", ПодотчетноеЛицо);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Пользователи.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Пользователи КАК Пользователи
	|ГДЕ
	|	Пользователи.ФизическоеЛицо = &ФизическоеЛицо";
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
КонецФункции

&НаСервереБезКонтекста
Функция ПодключенныеМобильныеПриложения(ЗаписиТекущийПользователь, ЗаписиПодотчетноеЛицо, ИтогиКассовыхЧеков)
	
	ПодключенныеПриложения = Новый Структура;
	
	ПодключенныеПриложения.Вставить("ТекущийПользователь", Ложь);
	ПодключенныеПриложения.Вставить("ПодотчетноеЛицо",     Ложь);
	ПодключенныеПриложения.Вставить("ИныеПользователи",    Ложь);
	
	ПроверитьПодключение = Ложь;
	Для Каждого ВариантОтбора Из ИтогиКассовыхЧеков Цикл
		Если Не ПодключенныеПриложения.Свойство(ВариантОтбора.Ключ) Тогда
			Продолжить;
		КонецЕсли;
		Если ВариантОтбора.Значение > 0 Тогда
			ПодключенныеПриложения[ВариантОтбора.Ключ] = Истина;
		Иначе
			ПроверитьПодключение = Истина;
		КонецЕсли;
	КонецЦикла;
	
	Если ПроверитьПодключение Тогда
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ТекущийПользователь", ЗаписиТекущийПользователь);
		Запрос.УстановитьПараметр("ПодотчетноеЛицо",     ЗаписиПодотчетноеЛицо);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ЕСТЬNULL(МАКСИМУМ(МобильноеПриложение.Пользователь В (&ТекущийПользователь)), ЛОЖЬ) КАК ТекущийПользователь,
		|	ЕСТЬNULL(МАКСИМУМ(МобильноеПриложение.Пользователь В (&ПодотчетноеЛицо)), ЛОЖЬ) КАК ПодотчетноеЛицо,
		|	ЕСТЬNULL(МАКСИМУМ(НЕ МобильноеПриложение.Пользователь В (&ПодотчетноеЛицо, &ТекущийПользователь)), ЛОЖЬ) КАК ИныеПользователи
		|ИЗ
		|	РегистрСведений.МобильноеПриложениеСканированиеЧеков КАК МобильноеПриложение";
		Выборка = Запрос.Выполнить().Выбрать();
		Выборка.Следующий();
		Для Каждого ВариантПодключения Из ПодключенныеПриложения Цикл
			
			Если ВариантПодключения.Значение Тогда
				Продолжить;
			КонецЕсли;
			
			ПодключенныеПриложения[ВариантПодключения.Ключ] = Выборка[ВариантПодключения.Ключ];
			
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат ПодключенныеПриложения;
	
КонецФункции

#КонецОбласти

#Область ВариантыОтбора

&НаСервереБезКонтекста
Процедура НастроитьВариантыОтбора(ЭлементВариантыОтбора, ВыбранныйВариантОтбора,
	                              ИтогиКассовыхЧеков, ПодключенныеМобильныеПриложения, ПодотчетноеЛицо)
	
	// Состав вариантов отбора определяется как данными о наличии чеков в разрезе пользователей (ИтогиКассовыхЧеков),
	// так и данными о подключенных ими мобильных приложениях (ПодключенныеМобильныеПриложения).
	// Это нужно, чтобы тумблер с вариантами отбора отображался и в тех случаях, когда фактического выбора у пользователя нет,
	// если из содержимого тумблера становится понятен контекст, какие чеки отображаются в форме.
	// Например, если мобильное приложение есть у текущего пользователя и у выбранного подотчетного лица,
	// то тумблер будет отображаться, даже если все чеки отсканированы подотчетным лицом.
	// Это позволит понять, что за чеки сейчас показаны.
	// Тумблер не будет отображаться, например, если мобильное приложение есть только у текущего пользователя.
	
	СписокВыбора = ЭлементВариантыОтбора.СписокВыбора;
	
	СписокВыбора.Очистить();
	ВыбранныйВариантОтбора = "Все";
	
	Если ПодключенныеМобильныеПриложения.ТекущийПользователь Тогда
		Представление = СтрШаблон(НСтр("ru = 'Я (%1)'"), ИтогиКассовыхЧеков.ТекущийПользователь);
		СписокВыбора.Добавить("ТекущийПользователь", Представление);
	КонецЕсли;
	
	ДлинаПодотчетноеЛицо = 0;
	Если ПодключенныеМобильныеПриложения.ПодотчетноеЛицо И ЗначениеЗаполнено(ПодотчетноеЛицо) Тогда
		
		ФИО = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПодотчетноеЛицо, "ФИО");
		ФамилияИнициалы = ФизическиеЛицаКлиентСервер.ФамилияИнициалы(ФИО);
		Представление = СтрШаблон(НСтр("ru = '%1 (%2)'"), ФамилияИнициалы, ИтогиКассовыхЧеков.ПодотчетноеЛицо);
		СписокВыбора.Добавить("ПодотчетноеЛицо", Представление);
		
		ДлинаПодотчетноеЛицо = СтрДлина(Представление);
		
	КонецЕсли;
	
	Если СписокВыбора.Количество() > 1 Или ПодключенныеМобильныеПриложения.ИныеПользователи Тогда
		
		Представление = СтрШаблон(НСтр("ru = 'Все (%1)'"), ИтогиКассовыхЧеков.Все);
		СписокВыбора.Добавить("Все", Представление);
		
	КонецЕсли;
	
	Для Каждого ЭлементСписка Из СписокВыбора Цикл
		Если ИтогиКассовыхЧеков[ЭлементСписка.Значение] > 0 Тогда
			ВыбранныйВариантОтбора = ЭлементСписка.Значение;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если СписокВыбора.Количество() = 1 Тогда
		// Тривиальный выбор не показываем
		СписокВыбора.Очистить();
	КонецЕсли;
	
	// Длина тумблера определяется длиной представления колонки с фамилией
	// Если фамилия короткая, то красивее, когда все колонки одинаковой ширины
	// Но если длинная, то при одинаковой ширине колонок общая длина тумблера
	// могла получиться бы нерационально большой
	УсловнаяДлинаПереключателя = ДлинаПодотчетноеЛицо * СписокВыбора.Количество();
	ПределДлиныПереключателя   = 40;
	ЭлементВариантыОтбора.ОдинаковаяШиринаКолонок = (УсловнаяДлинаПереключателя < ПределДлиныПереключателя);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ВыбратьВариантОтбора(Форма)
	
	ОтборСтрок = ОтборСтрокВариантаОтбора(Форма.ВариантОтбора);
	Форма.Элементы.КассовыеЧеки.ОтборСтрок = Новый ФиксированнаяСтруктура(ОтборСтрок);
	Форма.Элементы.КассовыеЧекиПользователи.Видимость = (Форма.ВариантОтбора = "Все");
	
КонецПроцедуры

#КонецОбласти

#Область ПредварительныйПросмотр

&НаСервереБезКонтекста
Процедура ЗаполнитьПредварительныйПросмотр(КассовыеЧеки)
	
	// При создании формы заполняем ограниченное количество записей,
	// чтобы с одной стороны, открытие формы не занимало время,
	// а с другой форма была отзывчивой сразу после открытия.
	
	// Для остальных записей предварительный просмотр определяется
	// по мере перехода пользователя к этим записям
	
	РесурсПредварительныйПросмотр = 3;
	Для Каждого Запись Из КассовыеЧеки Цикл
		
		Если РесурсПредварительныйПросмотр < 0 Тогда
			Прервать;
		КонецЕсли;
		
		РесурсПредварительныйПросмотр = РесурсПредварительныйПросмотр - 1;
		
		Если Не ПустаяСтрока(Запись.ПредварительныйПросмотр) Тогда
			Продолжить;
		КонецЕсли;
		
		УстановитьПредварительныйПросмотр(Запись);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтобразитьПредварительныйПросмотр(ДанныеСтроки)
	
	Если ДанныеСтроки = Неопределено Тогда
		ПредварительныйПросмотр = "";
		Возврат;
	КонецЕсли;
	
	Если ПустаяСтрока(ДанныеСтроки.ПредварительныйПросмотр) Тогда
		ПодключитьОбработчикОжидания("Подключаемый_ПредварительныйПросмотр", 0.1, Истина);
	Иначе
		ПредварительныйПросмотр = ДанныеСтроки.ПредварительныйПросмотр;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПредварительныйПросмотр()
	
	ДанныеСтроки = Элементы.КассовыеЧеки.ТекущиеДанные;
	
	Если ДанныеСтроки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ПустаяСтрока(ДанныеСтроки.ПредварительныйПросмотр) Тогда
		УстановитьПредварительныйПросмотр(ДанныеСтроки);
	КонецЕсли;
	
	ПредварительныйПросмотр = ДанныеСтроки.ПредварительныйПросмотр;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьПредварительныйПросмотр(Запись)
	
	Запись.ПредварительныйПросмотр = ПредварительныйПросмотрЧека(Запись.Ссылка);
	Запись.ПредварительныйПросмотрДополнен = Истина;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПредварительныйПросмотрЧека(Запись)
	
	Возврат Документы.КассовыйЧекПодотчетногоЛица.ПредварительныйПросмотрЧека(Запись.Ссылка);
	
КонецФункции

#КонецОбласти

#Область РезультатРаботы

&НаКлиенте
Процедура Загрузить(ВыделенныеСтроки)
	
	ВыбранныеЧеки = Новый Массив;
	Для Каждого ИдентификаторСтроки Из ВыделенныеСтроки Цикл
		
		Если ИдентификаторСтроки = Неопределено Тогда
			// В версии платформы 8.3.15.1830 в веб-клиенте ВыделенныеСтроки может содержать значение Неопределено
			Продолжить;
		КонецЕсли;
		
		ВыбранныеЧеки.Добавить(КассовыеЧеки.НайтиПоИдентификатору(ИдентификаторСтроки).Ссылка);
		
	КонецЦикла;
	
	Закрыть(ВыбранныеЧеки);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
