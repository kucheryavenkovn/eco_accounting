#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов


////////////////////////////////////////////////////////////////////////////////
// Проведение

// подготавливаем параметры проведения
Функция ПодготовитьПараметрыПроведения(ДокументСсылка, Отказ) Экспорт

	ПараметрыПроведения = Новый Структура;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	НомераТаблиц = Новый Структура;
	Запрос.УстановитьПараметр("СчетВыручка", ПланыСчетов.Хозрасчетный.Выручка);
	
	Запрос.Текст = ТекстЗапросаРеквизитыДокумента(НомераТаблиц);
	Результат    = Запрос.ВыполнитьПакет();
	ТаблицаРеквизиты = Результат[НомераТаблиц["Реквизиты"]].Выгрузить();
	ПараметрыПроведения.Вставить("Реквизиты", ТаблицаРеквизиты);
	
	Реквизиты = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(ТаблицаРеквизиты[0]);
	Если НЕ УчетнаяПолитика.Существует(Реквизиты.Организация, Реквизиты.Период, Истина, ДокументСсылка) Тогда
		Отказ = Истина;
		Возврат ПараметрыПроведения;
	КонецЕсли;
	
	НомераТаблиц = Новый Структура;
	
	Реквизиты.Вставить("ВалютаРеглУчета", ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета());
	Реквизиты.Вставить("РасчетыВВалюте",  Реквизиты.ВалютаВзаиморасчетов <> Реквизиты.ВалютаРеглУчета);
	
	Запрос.УстановитьПараметр("НачалоПериода", АР_ОбщиеПроцедуры.ОпределитьНачалоПериодаОплатыПоДоговору(Реквизиты.НачалоПериода, Реквизиты.ДоговорКонтрагента));
	
	Если Реквизиты.РасчетыВВалюте Тогда
		ПодготовитьТаблицыДокументаРасчетыВВалюте(Запрос, Реквизиты);
	Иначе
		Запрос.Текст = ТекстЗапросаВременныеТаблицыДокумента(НомераТаблиц, Реквизиты);
		Результат    = Запрос.ВыполнитьПакет();
	КонецЕсли;
	
	Запрос.УстановитьПараметр("РасчетыВВалюте", Реквизиты.РасчетыВВалюте);
	
	Реквизиты.Вставить("ПрименяетсяУСН",
		УчетнаяПолитика.ПрименяетсяУСН(Реквизиты.Организация, Реквизиты.Период));
	Реквизиты.Вставить("ПрименяетсяУСНПатент", 
		УчетнаяПолитика.ПрименяетсяУСНПатент(Реквизиты.Организация, Реквизиты.Период));
	Запрос.УстановитьПараметр("ПрименяетсяУСН",        Реквизиты.ПрименяетсяУСН);
	Запрос.УстановитьПараметр("ПрименяетсяУСНПатент",  Реквизиты.ПрименяетсяУСНПатент);
	Запрос.УстановитьПараметр("ДеятельностьНаПатенте", Реквизиты.ДеятельностьНаПатенте);
	Запрос.УстановитьПараметр("ЗаполнятьДокументРасчетов", 
		РегистрыНакопления.РеализованныеТоварыКомитентов.ЗаполнятьДокументРасчетов(Реквизиты.Период));
	
	Запрос.УстановитьПараметр("Субсчета91",            БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.ПрочиеРасходы));
	Запрос.УстановитьПараметр("Дата", Реквизиты.Период);
	Запрос.УстановитьПараметр("ОбособленныйУчетПени", АР_ПроцедурыНачисления.ПоДоговорамЕстьОбособленныйУчетПени(ДокументСсылка,, Реквизиты.ДоговорКонтрагента));
		
	НомераТаблиц = Новый Структура;
	Запрос.Текст = ТекстЗапросаЗачетАвансов(НомераТаблиц)
		+ ТекстЗапросаРеализация(НомераТаблиц)
		+ ТекстЗапросаЗачетАвансовКомитентов(НомераТаблиц)
		+ ТекстЗапросаРеализацияУслуг(НомераТаблиц)
		+ ТекстЗапросаПродажиПоАренде(НомераТаблиц)
		+ ТекстЗапросаОтгрузкаПоСчету(НомераТаблиц, ПараметрыПроведения, Реквизиты);
		
	Если НЕ ПустаяСтрока(Запрос.Текст) Тогда
		Результат = Запрос.ВыполнитьПакет();
		Для Каждого НомерТаблицы Из НомераТаблиц Цикл
			ПараметрыПроведения.Вставить(НомерТаблицы.Ключ, Результат[НомерТаблицы.Значение].Выгрузить());
		КонецЦикла;
	КонецЕсли;
	
	Возврат ПараметрыПроведения;
	
КонецФункции 

Функция ПодготовитьПараметрыСтруктурыТаблицыВзаиморасчетыИП(ТаблицаВзаиморасчетов)
	
	// Подготовка таблицы Параметры.ВзаиморасчетыИП
	
	СписокОбязательныхКолонок = ""
	+"Контрагент,"				// <СправочникСсылка.Контрагенты>
	+"ДокументРасчетов,"			//<ДокументСсылка>
	+"ДатаДокументаРасчетов,"	// <Дата> - период движений - дата документа
	+"СуммаРуб";					//<Число 15, 2>
	
	Возврат ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
		ТаблицаВзаиморасчетов, СписокОбязательныхКолонок);
	
КонецФункции

Функция ПодготовитьПараметрыСтруктурыТаблицИП(ТаблицаРеквизитов, ТаблицаВзаиморасчетов)
	
	Параметры = Новый Структура;
	
	// Подготовка таблицы Параметры.Реквизиты
	
	СписокОбязательныхКолонок = ""
	+ "Период,"						// <Дата> - период движений - дата документа
	+ "Регистратор,"				// <ДокументСсылка>
	+ "Организация,"				// <СправочникСсылка.Организации>
	+ "Контрагент";					// <СправочникСсылка.Контрагенты>
	
	Параметры.Вставить("Реквизиты", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
		ТаблицаРеквизитов, СписокОбязательныхКолонок));
		
	// Подготовка таблицы Параметры.Взаиморасчеты
	
	СписокОбязательныхКолонок = ""
	+"Контрагент,"				// <СправочникСсылка.Контрагенты>
	+"ДокументРасчетов,"			//<ДокументСсылка>
	+"ДатаДокументаРасчетов,"	// <Дата> - период движений - дата документа
	+"СуммаРуб";					//<Число 15, 2>
	
	Параметры.Вставить("Взаиморасчеты", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
		ТаблицаВзаиморасчетов, СписокОбязательныхКолонок));
		
	Параметры.Вставить("ТаблицаВзаиморасчетыИП", ПодготовитьПараметрыСтруктурыТаблицыВзаиморасчетыИП(ТаблицаВзаиморасчетов));
		
	Возврат Параметры;
	
КонецФункции	

Функция ПодготовитьСтруктуруТаблицИП(ТаблицаРеквизиты, ТаблицаВзаиморасчеты) Экспорт
	
	Параметры = ПодготовитьПараметрыСтруктурыТаблицИП(ТаблицаРеквизиты, 
															ТаблицаВзаиморасчеты);
															
	Взаиморасчеты = Параметры.Взаиморасчеты;
	
	СтруктураВозврата = Новый Структура("ТаблицаВзаиморасчетыИП", Взаиморасчеты);

	Возврат СтруктураВозврата;
	
КонецФункции

Функция ТекстЗапросаРеквизитыДокумента(НомераТаблиц)
	
	НомераТаблиц.Вставить("ВременнаяТаблицаСоставДокумента", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВременнаяТаблицаРеквизиты", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Реквизиты", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	МАКСИМУМ(СоставДокумента.ЕстьСчетНаОплатуПокупателю) КАК ЕстьСчетНаОплатуПокупателю
	|ПОМЕСТИТЬ СоставДокумента
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаДокумента.СчетНаАренду <> ЗНАЧЕНИЕ(Документ.АР_СчетНаАренду.ПустаяСсылка) КАК ЕстьСчетНаОплатуПокупателю
	|	ИЗ
	|		Документ.АР_НачислениеАренднойПлаты.Состав КАК ТаблицаДокумента
	|	ГДЕ
	|		ТаблицаДокумента.Ссылка = &Ссылка) КАК СоставДокумента";
	
	ТекстЗапроса = ТекстЗапроса + ОбщегоНазначения.РазделительПакетаЗапросов() + 
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка,
	|	Реквизиты.Дата,
	|	Реквизиты.ДокументОснование КАК СчетНаОплатуПокупателю,
	|	Реквизиты.Организация,
	|	Реквизиты.Контрагент,
	|	Реквизиты.ДоговорКонтрагента,
	|	ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО КАК ВидОперации,
	|	Реквизиты.ВалютаДокумента КАК ВалютаДокумента,
	|	ИСТИНА КАК ЭтоАренда,
	|	ЛОЖЬ КАК ЭтоПени,
	|	Реквизиты.ДоговорКонтрагента.ВидДоговора КАК ВидДоговора,
	|	Реквизиты.ДоговорКонтрагента.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	Реквизиты.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах КАК РасчетыВУсловныхЕдиницах,
	|	Реквизиты.ДоговорКонтрагента.УчетАгентскогоНДС КАК УчетАгентскогоНДС,
	|	Реквизиты.ДоговорКонтрагента.АР_ВестиВзаиморасчетыПоПериодам КАК ВестиВзаиморасчетыПоПериодам,
	|	Реквизиты.ДоговорКонтрагента.АР_ВестиВзаиморасчетыПоОбъектам КАК ВестиВзаиморасчетыПоОбъектам,
	|	Реквизиты.ДоговорКонтрагента.АР_ВестиВзаиморасчетыПоСчетамПост КАК ВестиВзаиморасчетыПоСчетамПост,
	|	Реквизиты.ДоговорКонтрагента.АР_ВестиВзаиморасчетыПоСчетамПерем КАК ВестиВзаиморасчетыПоСчетамПерем,
	|	Реквизиты.ДоговорКонтрагента.АР_ВестиВзаиморасчетыПоУслугам КАК ВестиВзаиморасчетыПоУслугам,
	|	Реквизиты.НачалоПериода,
	|	Реквизиты.КурсВзаиморасчетов,
	|	Реквизиты.КратностьВзаиморасчетов,
	|	Реквизиты.СпособЗачетаАвансов,
	|	Реквизиты.ВалютаДокумента,
	|	Реквизиты.СуммаВключаетНДС,
	|	Реквизиты.ДеятельностьНаПатенте,
	|	Реквизиты.Патент,
	|	Реквизиты.СчетУчетаРасчетовСКонтрагентом,
	|	Реквизиты.СчетУчетаРасчетовПоАвансам,
	|	Реквизиты.ДоговорКонтрагента.КодРаздел7ДекларацииНДС КАК КодОперацииПоСделке,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(Реквизиты.ДоговорКонтрагента.УчетАгентскогоНДСПокупателем, ЛОЖЬ)
	|				И Реквизиты.Дата >= ДАТАВРЕМЯ(2018, 1, 1)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НДСИсчисляетсяНалоговымАгентом,
	|	ЕСТЬNULL(КодыОперацийРаздела7ДекларацииПоНДС.ОперацияНеПодлежитНалогообложению, ЛОЖЬ) КАК КодОперацииПоСделкеСоответствуетСт149НКРФ
	|ПОМЕСТИТЬ Реквизиты
	|ИЗ
	|	Документ.АР_НачислениеАренднойПлаты КАК Реквизиты
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КодыОперацийРаздела7ДекларацииПоНДС КАК КодыОперацийРаздела7ДекларацииПоНДС
	|		ПО Реквизиты.ДоговорКонтрагента.КодРаздел7ДекларацииНДС = КодыОперацийРаздела7ДекларацииПоНДС.Ссылка
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация,
	|	Реквизиты.Контрагент,
	|	Реквизиты.Подразделение,
	|	Реквизиты.ВидОперации,
	|	Реквизиты.ВалютаДокумента,
	|	Реквизиты.ЭтоАренда,
	|	Реквизиты.ЭтоПени,
	|	Реквизиты.ДоговорКонтрагента,
	|	Реквизиты.ВидДоговора,
	|	Реквизиты.ВалютаВзаиморасчетов,
	|	Реквизиты.РасчетыВУсловныхЕдиницах,
	|	Реквизиты.УчетАгентскогоНДС,
	|	Реквизиты.ВестиВзаиморасчетыПоПериодам,
	|	Реквизиты.ВестиВзаиморасчетыПоОбъектам,
	|	Реквизиты.ВестиВзаиморасчетыПоСчетамПост,
	|	Реквизиты.ВестиВзаиморасчетыПоСчетамПерем,
	|	Реквизиты.ВестиВзаиморасчетыПоУслугам,
	|	Реквизиты.НачалоПериода,
	|	Реквизиты.КурсВзаиморасчетов,
	|	Реквизиты.КратностьВзаиморасчетов,
	|	Реквизиты.СпособЗачетаАвансов,
	|	Реквизиты.СуммаВключаетНДС,
	|	Реквизиты.ДеятельностьНаПатенте,
	|	Реквизиты.Патент,
	|	Реквизиты.СчетНаОплатуПокупателю КАК СчетНаОплатуПокупателю,
	|	Реквизиты.СчетНаОплатуПокупателю <> ЗНАЧЕНИЕ(Документ.АР_СчетНаАренду.ПустаяСсылка)
	|		ИЛИ ЕСТЬNULL(СоставДокумента.ЕстьСчетНаОплатуПокупателю, ЛОЖЬ) КАК ЕстьСчетНаОплатуПокупателю,
	|	""Реализация"" КАК ТипСписания,
	|	Реквизиты.Ссылка КАК ДокументРеализации,
	|	Реквизиты.КодОперацииПоСделке,
	|	Реквизиты.НДСИсчисляетсяНалоговымАгентом
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|		ЛЕВОЕ СОЕДИНЕНИЕ СоставДокумента КАК СоставДокумента
	|		ПО (ИСТИНА)";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаВременныеТаблицыДокумента(НомераТаблиц, Реквизиты)

	ТекстЗапроса = "";
	
	НомераТаблиц.Вставить("ВременнаяТаблицаСчетаЕНВД", НомераТаблиц.Количество());
	ТекстЗапроса = ТекстЗапроса +
	"ВЫБРАТЬ
	|	СчетаДоходовИРасходовЕНВД.Счет
	|ПОМЕСТИТЬ СчетаЕНВД
	|ИЗ
	|	РегистрСведений.СчетаДоходовИРасходовЕНВД КАК СчетаДоходовИРасходовЕНВД
	|ГДЕ
	|	СчетаДоходовИРасходовЕНВД.Счет В ИЕРАРХИИ(&СчетВыручка)
	|	И НЕ СчетаДоходовИРасходовЕНВД.Счет.ЗапретитьИспользоватьВПроводках"
	+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
	НомераТаблиц.Вставить("ВременнаяТаблицаУслуги"              , НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВременнаяТаблицаАгентскиеУслуги"     , НомераТаблиц.Количество());
	
	ТекстЗапроса = ТекстЗапроса +
	"ВЫБРАТЬ
	|	ТаблицаУслуги.Ссылка,
	|	ТаблицаУслуги.НомерСтроки,
	|	ТаблицаУслуги.Номенклатура,
	|	ТаблицаУслуги.Содержание,
	|	ТаблицаУслуги.Количество,
	|	ВЫБОР
	|		КОГДА ТаблицаУслуги.Ссылка.СуммаВключаетНДС
	|			ТОГДА ТаблицаУслуги.Сумма
	|		ИНАЧЕ ТаблицаУслуги.Сумма + ТаблицаУслуги.СуммаНДС
	|	КОНЕЦ КАК СуммаРуб,
	|	ТаблицаУслуги.СуммаНДС КАК СуммаНДСРуб,
	|	ТаблицаУслуги.СуммаНДС КАК СуммаНДСВзаиморасчетов,
	|	ВЫБОР
	|		КОГДА ТаблицаУслуги.Ссылка.СуммаВключаетНДС
	|			ТОГДА ТаблицаУслуги.Сумма
	|		ИНАЧЕ ТаблицаУслуги.Сумма + ТаблицаУслуги.СуммаНДС
	|	КОНЕЦ КАК СуммаВзаиморасчетов,
	|	ТаблицаУслуги.СтавкаНДС,
	|	ТаблицаУслуги.СчетРасходов,
	|	ТаблицаУслуги.СчетДоходов,
	|	ТаблицаУслуги.Субконто,
	|	ТаблицаУслуги.СчетУчетаНДСПоРеализации,
	|	ВЫБОР
	|		КОГДА СчетаЕНВД.Счет ЕСТЬ НЕ NULL 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ДоходЕНВД,
	|	СправочникНоменклатура.КодРаздел7ДекларацииНДС КАК КодРаздел7ДекларацииНДС,
	|	ЕСТЬNULL(КодыОперацийРаздела7ДекларацииПоНДС.ОперацияНеПодлежитНалогообложению, ЛОЖЬ) КАК КодСоответствуетСт149НКРФ,
	|	ЕСТЬNULL(КодыОперацийРаздела7ДекларацииПоНДС.ВключаетсяВРеестрПодтверждающихДокументов, ЛОЖЬ) КАК КодВключаетсяВРеестр,
	|	ЛОЖЬ КАК УслугиЗаРубежом,
	|	ВЫБОР
	|		КОГДА Реквизиты.ВестиВзаиморасчетыПоОбъектам
	|			ТОГДА ТаблицаУслуги.ОбъектАренды
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.АР_ОбъектыАренды.ПустаяСсылка)
	|	КОНЕЦ КАК ОбъектАренды,
	|	ТаблицаУслуги.ОбъектАренды КАК ОбъектАрендыДляРегистраПродаж,
	|	ВЫБОР
	|		КОГДА Реквизиты.ВестиВзаиморасчетыПоУслугам
	|			ТОГДА ТаблицаУслуги.Номенклатура
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	КОНЕЦ КАК УслугаАренды,
	|	ВЫБОР
	|		КОГДА Реквизиты.ВестиВзаиморасчетыПоУслугам
	|				И ТаблицаУслуги.Номенклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|			ТОГДА ВЫБОР
	|					КОГДА ТаблицаУслуги.Номенклатура.АР_ПостояннаяЧастьОплаты
	|								И Реквизиты.ВестиВзаиморасчетыПоСчетамПост
	|							ИЛИ НЕ ТаблицаУслуги.Номенклатура.АР_ПостояннаяЧастьОплаты
	|								И Реквизиты.ВестиВзаиморасчетыПоСчетамПерем
	|						ТОГДА ТаблицаУслуги.СчетНаАренду
	|					ИНАЧЕ ЗНАЧЕНИЕ(Документ.АР_СчетНаАренду.ПустаяСсылка)
	|				КОНЕЦ
	|		КОГДА Реквизиты.ВестиВзаиморасчетыПоСчетамПост И Реквизиты.ВестиВзаиморасчетыПоСчетамПерем
	|			ТОГДА ТаблицаУслуги.СчетНаАренду
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.АР_СчетНаАренду.ПустаяСсылка)
	|	КОНЕЦ КАК СчетНаАренду,
	|	ВЫБОР
	|		КОГДА Реквизиты.ВестиВзаиморасчетыПоПериодам
	|				И ТаблицаУслуги.ПериодАренды <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ТаблицаУслуги.ПериодАренды
	|		КОГДА Реквизиты.ВестиВзаиморасчетыПоПериодам
	|				И ТаблицаУслуги.ПериодАренды = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА &НачалоПериода
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|	КОНЕЦ КАК ПериодАренды
	|ПОМЕСТИТЬ ТаблицаУслуги
	|ИЗ
	|	Документ.АР_НачислениеАренднойПлаты.Состав КАК ТаблицаУслуги
	|		ЛЕВОЕ СОЕДИНЕНИЕ СчетаЕНВД КАК СчетаЕНВД
	|		ПО ТаблицаУслуги.СчетДоходов = СчетаЕНВД.Счет
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КодыОперацийРаздела7ДекларацииПоНДС КАК КодыОперацийРаздела7ДекларацииПоНДС
	|			ПО СправочникНоменклатура.КодРаздел7ДекларацииНДС = КодыОперацийРаздела7ДекларацииПоНДС.Ссылка
	|		ПО ТаблицаУслуги.Номенклатура = СправочникНоменклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ТаблицаУслуги.Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|	И ТаблицаУслуги.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаАгентскиеУслуги.Ссылка,
	|	ТаблицаАгентскиеУслуги.НомерСтроки,
	|	ТаблицаАгентскиеУслуги.Номенклатура,
	|	ТаблицаАгентскиеУслуги.Количество,
	|	ВЫБОР
	|		КОГДА ТаблицаАгентскиеУслуги.Ссылка.СуммаВключаетНДС
	|			ТОГДА ТаблицаАгентскиеУслуги.Сумма
	|		ИНАЧЕ ТаблицаАгентскиеУслуги.Сумма + ТаблицаАгентскиеУслуги.СуммаНДС
	|	КОНЕЦ КАК СуммаРуб,
	|	ТаблицаАгентскиеУслуги.СуммаНДС КАК СуммаНДСРуб,
	|	ВЫБОР
	|		КОГДА ТаблицаАгентскиеУслуги.Ссылка.СуммаВключаетНДС
	|			ТОГДА ТаблицаАгентскиеУслуги.Сумма
	|		ИНАЧЕ ТаблицаАгентскиеУслуги.Сумма + ТаблицаАгентскиеУслуги.СуммаНДС
	|	КОНЕЦ КАК СуммаВзаиморасчетов,
	|	ТаблицаАгентскиеУслуги.СуммаНДС КАК СуммаНДСВзаиморасчетов,
	|	ТаблицаАгентскиеУслуги.СтавкаНДС,
	|	ТаблицаАгентскиеУслуги.ДоговорКонтрагента.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ТаблицаАгентскиеУслуги.Контрагент,
	|	ТаблицаАгентскиеУслуги.ДоговорКонтрагента,
	|	ТаблицаАгентскиеУслуги.СчетРасчетов,
	|	ВЫБОР
	|		КОГДА СчетаЕНВД.Счет ЕСТЬ НЕ NULL 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ДоходЕНВД,
	|	ЗНАЧЕНИЕ(Справочник.КодыОперацийРаздела7ДекларацииПоНДС.ПустаяСсылка) КАК КодРаздел7ДекларацииНДС,
	|	ЛОЖЬ КАК КодСоответствуетСт149НКРФ,
	|	ЛОЖЬ КАК КодВключаетсяВРеестр,
	|	ЛОЖЬ КАК УслугиЗаРубежом,
	|	ВЫБОР
	|		КОГДА Реквизиты.ВестиВзаиморасчетыПоОбъектам
	|			ТОГДА ТаблицаАгентскиеУслуги.ОбъектАренды
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.АР_ОбъектыАренды.ПустаяСсылка)
	|	КОНЕЦ КАК ОбъектАренды,
	|	ВЫБОР
	|		КОГДА Реквизиты.ВестиВзаиморасчетыПоУслугам
	|			ТОГДА ТаблицаАгентскиеУслуги.Номенклатура
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	КОНЕЦ КАК УслугаАренды,
	|	ВЫБОР
	|		КОГДА Реквизиты.ВестиВзаиморасчетыПоУслугам
	|				И ТаблицаАгентскиеУслуги.Номенклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|			ТОГДА ВЫБОР
	|					КОГДА ТаблицаАгентскиеУслуги.Номенклатура.АР_ПостояннаяЧастьОплаты
	|								И Реквизиты.ВестиВзаиморасчетыПоСчетамПост
	|							ИЛИ НЕ ТаблицаАгентскиеУслуги.Номенклатура.АР_ПостояннаяЧастьОплаты
	|								И Реквизиты.ВестиВзаиморасчетыПоСчетамПерем
	|						ТОГДА ТаблицаАгентскиеУслуги.СчетНаАренду
	|					ИНАЧЕ ЗНАЧЕНИЕ(Документ.АР_СчетНаАренду.ПустаяСсылка)
	|				КОНЕЦ
	|		КОГДА Реквизиты.ВестиВзаиморасчетыПоСчетамПост И Реквизиты.ВестиВзаиморасчетыПоСчетамПерем
	|			ТОГДА ТаблицаАгентскиеУслуги.СчетНаАренду
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.АР_СчетНаАренду.ПустаяСсылка)
	|	КОНЕЦ КАК СчетНаАренду,
	|	ВЫБОР
	|		КОГДА Реквизиты.ВестиВзаиморасчетыПоПериодам
	|				И ТаблицаАгентскиеУслуги.ПериодАренды <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ТаблицаАгентскиеУслуги.ПериодАренды
	|		КОГДА Реквизиты.ВестиВзаиморасчетыПоПериодам
	|				И ТаблицаАгентскиеУслуги.ПериодАренды = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА &НачалоПериода
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|	КОНЕЦ КАК ПериодАренды
	|ПОМЕСТИТЬ ТаблицаАгентскиеУслуги
	|ИЗ
	|	Документ.АР_НачислениеАренднойПлаты.Состав КАК ТаблицаАгентскиеУслуги
	|		ЛЕВОЕ СОЕДИНЕНИЕ СчетаЕНВД КАК СчетаЕНВД
	|		ПО ТаблицаАгентскиеУслуги.СчетДоходов = СчетаЕНВД.Счет
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КодыОперацийРаздела7ДекларацииПоНДС КАК КодыОперацийРаздела7ДекларацииПоНДС
	|			ПО СправочникНоменклатура.КодРаздел7ДекларацииНДС = КодыОперацийРаздела7ДекларацииПоНДС.Ссылка
	|		ПО ТаблицаАгентскиеУслуги.Номенклатура = СправочникНоменклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ТаблицаАгентскиеУслуги.Контрагент <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|	И ТаблицаАгентскиеУслуги.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Процедура ПодготовитьТаблицыДокументаРасчетыВВалюте(Запрос, Реквизиты)
	
	НомераТаблиц = Новый Структура;
	Запрос.Текст = ТекстЗапросаВременныеТаблицыДокументаРасчетыВВалюте(НомераТаблиц, Реквизиты);
	Результат    = Запрос.ВыполнитьПакет();
	
	ТекстЗапроса = "";
	
	СуммыТаблицыУслуги = Результат[НомераТаблиц["СуммыТаблицыУслуги"]].Выгрузить();
	УчетВзаиморасчетов.ПодготовитьТаблицуДокументаРасчетыВВалюте(СуммыТаблицыУслуги, Реквизиты);
	Запрос.УстановитьПараметр("СуммыТаблицыУслуги", СуммыТаблицыУслуги);
	ТекстЗапроса = ТекстЗапроса + ТекстЗапросаРасчетыВВалютеУслуги();
	
	СуммыТаблицыАгентскиеУслуги = Результат[НомераТаблиц["СуммыТаблицыАгентскиеУслуги"]].Выгрузить();
	УчетВзаиморасчетов.ПодготовитьТаблицуДокументаРасчетыВВалюте(СуммыТаблицыАгентскиеУслуги, Реквизиты);
	Запрос.УстановитьПараметр("СуммыТаблицыАгентскиеУслуги", СуммыТаблицыАгентскиеУслуги);
	ТекстЗапроса = ТекстЗапроса + ТекстЗапросаРасчетыВВалютеАгентскиеУслуги();
	
	Запрос.Текст = ТекстЗапроса;
	Результат    = Запрос.ВыполнитьПакет();
	
КонецПроцедуры

Функция ТекстЗапросаВременныеТаблицыДокументаРасчетыВВалюте(НомераТаблиц, Реквизиты)

	ТекстЗапроса = ТекстЗапросаВременныеТаблицыДокумента(НомераТаблиц, Реквизиты);
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ ТаблицаУслуги", "ПОМЕСТИТЬ ВременнаяТаблицаУслуги");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ТаблицаУслуги.Ссылка = &Ссылка", "ТаблицаУслуги.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|НомерСтроки");
	НомераТаблиц.Вставить("СуммыТаблицыУслуги", НомераТаблиц.Количество());
	ТекстЗапроса = ТекстЗапроса +
	"ВЫБРАТЬ
	|	ВременнаяТаблицаУслуги.НомерСтроки,
	|	ВременнаяТаблицаУслуги.СтавкаНДС,
	|	ВременнаяТаблицаУслуги.СуммаВзаиморасчетов,
	|	ВременнаяТаблицаУслуги.СуммаНДСВзаиморасчетов,
	|	ВременнаяТаблицаУслуги.СуммаРуб,
	|	ВременнаяТаблицаУслуги.СуммаНДСРуб,
	|	ВременнаяТаблицаУслуги.КодРаздел7ДекларацииНДС,
	|	ВременнаяТаблицаУслуги.КодСоответствуетСт149НКРФ,
	|	ВременнаяТаблицаУслуги.КодВключаетсяВРеестр
	|ИЗ
	|	ВременнаяТаблицаУслуги КАК ВременнаяТаблицаУслуги"
	+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ ТаблицаАгентскиеУслуги", "ПОМЕСТИТЬ ВременнаяТаблицаАгентскиеУслуги");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ТаблицаАгентскиеУслуги.Ссылка = &Ссылка", "ТаблицаАгентскиеУслуги.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|НомерСтроки");
	НомераТаблиц.Вставить("СуммыТаблицыАгентскиеУслуги", НомераТаблиц.Количество());
	ТекстЗапроса = ТекстЗапроса +
	"ВЫБРАТЬ
	|	ВременнаяТаблицаАгентскиеУслуги.НомерСтроки,
	|	ВременнаяТаблицаАгентскиеУслуги.СтавкаНДС,
	|	ВременнаяТаблицаАгентскиеУслуги.СуммаВзаиморасчетов,
	|	ВременнаяТаблицаАгентскиеУслуги.СуммаНДСВзаиморасчетов,
	|	ВременнаяТаблицаАгентскиеУслуги.СуммаРуб,
	|	ВременнаяТаблицаАгентскиеУслуги.СуммаНДСРуб,
	|	ВременнаяТаблицаАгентскиеУслуги.КодРаздел7ДекларацииНДС,
	|	ВременнаяТаблицаАгентскиеУслуги.КодСоответствуетСт149НКРФ,
	|	ВременнаяТаблицаАгентскиеУслуги.КодВключаетсяВРеестр
	|ИЗ
	|	ВременнаяТаблицаАгентскиеУслуги КАК ВременнаяТаблицаАгентскиеУслуги"
	+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
	Возврат ТекстЗапроса;
КонецФункции

Функция ТекстЗапросаРасчетыВВалютеУслуги()

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СуммыТаблицыУслуги.НомерСтроки КАК НомерСтроки,
	|	СуммыТаблицыУслуги.СуммаВзаиморасчетов,
	|	СуммыТаблицыУслуги.СуммаНДСВзаиморасчетов,
	|	СуммыТаблицыУслуги.СуммаРуб,
	|	СуммыТаблицыУслуги.СуммаНДСРуб
	|ПОМЕСТИТЬ СуммыТаблицыУслуги
	|ИЗ
	|	&СуммыТаблицыУслуги КАК СуммыТаблицыУслуги
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВременнаяТаблицаУслуги.Ссылка,
	|	ВременнаяТаблицаУслуги.НомерСтроки,
	|	ВременнаяТаблицаУслуги.Номенклатура,
	|	ВременнаяТаблицаУслуги.Количество,
	|	ВременнаяТаблицаУслуги.Содержание,
	|	СуммыТаблицыУслуги.СуммаВзаиморасчетов,
	|	СуммыТаблицыУслуги.СуммаНДСВзаиморасчетов,
	|	СуммыТаблицыУслуги.СуммаРуб,
	|	СуммыТаблицыУслуги.СуммаНДСРуб,
	|	ВременнаяТаблицаУслуги.СтавкаНДС,
	|	ВременнаяТаблицаУслуги.СчетУчетаНДСПоРеализации,
	|	ВременнаяТаблицаУслуги.СчетДоходов,
	|	ВременнаяТаблицаУслуги.ДоходЕНВД,
	|	ВременнаяТаблицаУслуги.СчетРасходов,
	|	ВременнаяТаблицаУслуги.Субконто,
	|	ВременнаяТаблицаУслуги.КодРаздел7ДекларацииНДС,
	|	ВременнаяТаблицаУслуги.КодСоответствуетСт149НКРФ,
	|	ВременнаяТаблицаУслуги.КодВключаетсяВРеестр,
	|	ВременнаяТаблицаУслуги.ОбъектАренды,
	|	ВременнаяТаблицаУслуги.ОбъектАрендыДляРегистраПродаж,
	|	ВременнаяТаблицаУслуги.УслугаАренды,
	|	ВременнаяТаблицаУслуги.СчетНаАренду,
	|	ВременнаяТаблицаУслуги.ПериодАренды
	|ПОМЕСТИТЬ ТаблицаУслуги
	|ИЗ
	|	ВременнаяТаблицаУслуги КАК ВременнаяТаблицаУслуги
	|		ЛЕВОЕ СОЕДИНЕНИЕ СуммыТаблицыУслуги КАК СуммыТаблицыУслуги
	|		ПО ВременнаяТаблицаУслуги.НомерСтроки = СуммыТаблицыУслуги.НомерСтроки";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции 

Функция ТекстЗапросаРасчетыВВалютеАгентскиеУслуги()

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СуммыТаблицыАгентскиеУслуги.НомерСтроки КАК НомерСтроки,
	|	СуммыТаблицыАгентскиеУслуги.СуммаВзаиморасчетов,
	|	СуммыТаблицыАгентскиеУслуги.СуммаНДСВзаиморасчетов,
	|	СуммыТаблицыАгентскиеУслуги.СуммаРуб,
	|	СуммыТаблицыАгентскиеУслуги.СуммаНДСРуб
	|ПОМЕСТИТЬ СуммыТаблицыАгентскиеУслуги
	|ИЗ
	|	&СуммыТаблицыАгентскиеУслуги КАК СуммыТаблицыАгентскиеУслуги
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВременнаяТаблицаАгентскиеУслуги.Ссылка,
	|	ВременнаяТаблицаАгентскиеУслуги.НомерСтроки,
	|	ВременнаяТаблицаАгентскиеУслуги.Номенклатура,
	|	ВременнаяТаблицаАгентскиеУслуги.Количество,
	|	СуммыТаблицыАгентскиеУслуги.СуммаВзаиморасчетов,
	|	СуммыТаблицыАгентскиеУслуги.СуммаНДСВзаиморасчетов,
	|	СуммыТаблицыАгентскиеУслуги.СуммаРуб,
	|	СуммыТаблицыАгентскиеУслуги.СуммаНДСРуб,
	|	ВременнаяТаблицаАгентскиеУслуги.СтавкаНДС,
	|	ВременнаяТаблицаАгентскиеУслуги.Контрагент,
	|	ВременнаяТаблицаАгентскиеУслуги.ДоговорКонтрагента,
	|	ВременнаяТаблицаАгентскиеУслуги.ВалютаВзаиморасчетов,
	|	ВременнаяТаблицаАгентскиеУслуги.СчетРасчетов,
	|	ВременнаяТаблицаАгентскиеУслуги.КодРаздел7ДекларацииНДС,
	|	ВременнаяТаблицаАгентскиеУслуги.КодСоответствуетСт149НКРФ,
	|	ВременнаяТаблицаАгентскиеУслуги.КодВключаетсяВРеестр,
	|	ВременнаяТаблицаАгентскиеУслуги.ОбъектАренды,
	|	ВременнаяТаблицаАгентскиеУслуги.УслугаАренды,
	|	ВременнаяТаблицаАгентскиеУслуги.СчетНаАренду,
	|	ВременнаяТаблицаАгентскиеУслуги.ПериодАренды
	|ПОМЕСТИТЬ ТаблицаАгентскиеУслуги
	|ИЗ
	|	ВременнаяТаблицаАгентскиеУслуги КАК ВременнаяТаблицаАгентскиеУслуги
	|		ЛЕВОЕ СОЕДИНЕНИЕ СуммыТаблицыАгентскиеУслуги КАК СуммыТаблицыАгентскиеУслуги
	|		ПО ВременнаяТаблицаАгентскиеУслуги.НомерСтроки = СуммыТаблицыАгентскиеУслуги.НомерСтроки";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции 

Функция ТекстЗапросаЗачетАвансов(НомераТаблиц)

	НомераТаблиц.Вставить("ВТ_ТаблицыДокументаЗачетАванса", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ЗачетАвансовРеквизиты", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ЗачетАвансовТаблицаДокумента", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ЗачетАвансовТаблицаАвансов", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаУслуги.Ссылка КАК Ссылка,
	|	ТаблицаУслуги.ОбъектАренды,
	|	ТаблицаУслуги.УслугаАренды,
	|	ТаблицаУслуги.СчетНаАренду,
	|	ТаблицаУслуги.ПериодАренды,
	|	ТаблицаУслуги.СуммаВзаиморасчетов КАК СуммаВзаиморасчетов,
	|	ТаблицаУслуги.СуммаРуб КАК СуммаРуб,
	|	0 КАК СуммаВзаиморасчетовКомитента,
	|	ВЫБОР
	|		КОГДА &ДеятельностьНаПатенте
	|			ТОГДА ТаблицаУслуги.СуммаВзаиморасчетов
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаВзаиморасчетовПатент,
	|	0 КАК СуммаВзаиморасчетовТорговыйСбор,
	|	ВЫБОР
	|		КОГДА ТаблицаУслуги.ДоходЕНВД
	|			И НЕ &ДеятельностьНаПатенте
	|			ТОГДА ТаблицаУслуги.СуммаВзаиморасчетов
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаВзаиморасчетовЕНВД
	|ПОМЕСТИТЬ ВТ_ТаблицыДокументаЗачетАванса
	|ИЗ
	|	ТаблицаУслуги КАК ТаблицаУслуги
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаАгентскиеУслуги.Ссылка,
	|	ТаблицаАгентскиеУслуги.ОбъектАренды,
	|	ТаблицаАгентскиеУслуги.УслугаАренды,
	|	ТаблицаАгентскиеУслуги.СчетНаАренду,
	|	ТаблицаАгентскиеУслуги.ПериодАренды,
	|	ТаблицаАгентскиеУслуги.СуммаВзаиморасчетов,
	|	ТаблицаАгентскиеУслуги.СуммаРуб,
	|	ТаблицаАгентскиеУслуги.СуммаВзаиморасчетов,
	|	0,
	|	0,
	|	0
	|ИЗ
	|	ТаблицаАгентскиеУслуги КАК ТаблицаАгентскиеУслуги
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.ВалютаДокумента КАК ВалютаДокумента,
	|	Реквизиты.СпособЗачетаАвансов КАК СпособЗачетаАвансов,
	|	Реквизиты.УчитыватьДепозит КАК Депозит,
	|	&ПрименяетсяУСН КАК УчитыватьЗадолженностьУСН,
	|	&ПрименяетсяУСНПатент КАК УчитыватьЗадолженностьУСНПатент,
	|	""Выбытие"" КАК НаправлениеДвижения,
	|	ЛОЖЬ КАК ЭтоВозврат,
	|	ИСТИНА КАК ЭтоАренда,
	|	ЛОЖЬ КАК ЭтоПени,
	|	ВЫБОР
	|		КОГДА Реквизиты.СчетУчетаДепозита = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|			ТОГДА Реквизиты.СчетУчетаРасчетовПоАвансам
	|		ИНАЧЕ Реквизиты.СчетУчетаДепозита
	|	КОНЕЦ КАК СчетДепозита,
	|	&ОбособленныйУчетПени КАК ОбособленныйУчетПени,
	|	Реквизиты.ДоговорКонтрагента.УчетАгентскогоНДС КАК УчетАгентскогоНДС,
	|	Реквизиты.ДоговорКонтрагента.АР_ВестиВзаиморасчетыПоПериодам КАК ВестиВзаиморасчетыПоПериодам,
	|	Реквизиты.ДоговорКонтрагента.АР_ВестиВзаиморасчетыПоОбъектам КАК ВестиВзаиморасчетыПоОбъектам,
	|	Реквизиты.ДоговорКонтрагента.АР_ВестиВзаиморасчетыПоСчетамПост КАК ВестиВзаиморасчетыПоСчетамПост,
	|	Реквизиты.ДоговорКонтрагента.АР_ВестиВзаиморасчетыПоСчетамПерем КАК ВестиВзаиморасчетыПоСчетамПерем,
	|	Реквизиты.ДоговорКонтрагента.АР_ВестиВзаиморасчетыПоУслугам КАК ВестиВзаиморасчетыПоУслугам
	|ИЗ
	|	Документ.АР_НачислениеАренднойПлаты КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК ДокументРасчетов,
	|	Реквизиты.СчетУчетаРасчетовСКонтрагентом КАК СчетРасчетов,
	|	Реквизиты.СчетУчетаРасчетовПоАвансам КАК СчетАвансов,
	|	Реквизиты.Контрагент,
	|	Реквизиты.ДоговорКонтрагента,
	|	Реквизиты.ДоговорКонтрагента.УчетАгентскогоНДС КАК УчетАгентскогоНДС,
	|	ДоговорыКонтрагентов.ВидДоговора,
	|	ДоговорыКонтрагентов.ВалютаВзаиморасчетов,
	|	ДоговорыКонтрагентов.РасчетыВУсловныхЕдиницах,
	|	&РасчетыВВалюте КАК РасчетыВВалюте,
	|	ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КАК Подразделение,
	|	СУММА(ТаблицыДокументаЗачетАванса.СуммаВзаиморасчетов) КАК СуммаВзаиморасчетов,
	|	СУММА(ТаблицыДокументаЗачетАванса.СуммаРуб) КАК СуммаРуб,
	|	СУММА(ТаблицыДокументаЗачетАванса.СуммаВзаиморасчетовКомитента) КАК СуммаВзаиморасчетовКомитента,
	|	СУММА(ТаблицыДокументаЗачетАванса.СуммаВзаиморасчетовЕНВД) КАК СуммаВзаиморасчетовЕНВД,
	|	СУММА(ТаблицыДокументаЗачетАванса.СуммаВзаиморасчетовТорговыйСбор) КАК СуммаВзаиморасчетовТорговыйСбор,
	|	СУММА(ТаблицыДокументаЗачетАванса.СуммаВзаиморасчетовПатент) КАК СуммаВзаиморасчетовПатент,
	|	ТаблицыДокументаЗачетАванса.ОбъектАренды,
	|	ТаблицыДокументаЗачетАванса.УслугаАренды,
	|	ТаблицыДокументаЗачетАванса.СчетНаАренду,
	|	ТаблицыДокументаЗачетАванса.ПериодАренды
	|ИЗ
	|	Документ.АР_НачислениеАренднойПлаты КАК Реквизиты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ТаблицыДокументаЗачетАванса КАК ТаблицыДокументаЗачетАванса
	|		ПО Реквизиты.Ссылка = ТаблицыДокументаЗачетАванса.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|		ПО Реквизиты.ДоговорКонтрагента = ДоговорыКонтрагентов.Ссылка
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|	И ДоговорыКонтрагентов.ВидДоговора <> ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СКомиссионером)
	|
	|СГРУППИРОВАТЬ ПО
	|	Реквизиты.Ссылка,
	|	Реквизиты.СчетУчетаРасчетовСКонтрагентом,
	|	Реквизиты.СчетУчетаРасчетовПоАвансам,
	|	Реквизиты.Контрагент,
	|	Реквизиты.ДоговорКонтрагента,
	|	Реквизиты.ДоговорКонтрагента.УчетАгентскогоНДС,
	|	ДоговорыКонтрагентов.ВидДоговора,
	|	ДоговорыКонтрагентов.ВалютаВзаиморасчетов,
	|	ДоговорыКонтрагентов.РасчетыВУсловныхЕдиницах,
	|	ТаблицыДокументаЗачетАванса.ОбъектАренды,
	|	ТаблицыДокументаЗачетАванса.УслугаАренды,
	|	ТаблицыДокументаЗачетАванса.СчетНаАренду,
	|	ТаблицыДокументаЗачетАванса.ПериодАренды
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаЗачетАвансов.НомерСтроки,
	|	Реквизиты.СчетУчетаРасчетовПоАвансам КАК СчетАвансов,
	|	Реквизиты.Контрагент,
	|	Реквизиты.ДоговорКонтрагента,
	|	Реквизиты.ДоговорКонтрагента.УчетАгентскогоНДС КАК УчетАгентскогоНДС,
	|	ТаблицаЗачетАвансов.ДокументАванса,
	|	ТаблицаЗачетАвансов.СуммаЗачета
	|ИЗ
	|	Документ.АР_НачислениеАренднойПлаты.ЗачетАвансов КАК ТаблицаЗачетАвансов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.АР_НачислениеАренднойПлаты КАК Реквизиты
	|		ПО ТаблицаЗачетАвансов.Ссылка = Реквизиты.Ссылка
	|ГДЕ
	|	ТаблицаЗачетАвансов.Ссылка = &Ссылка
	|	И Реквизиты.СпособЗачетаАвансов = ЗНАЧЕНИЕ(Перечисление.СпособыЗачетаАвансов.ПоДокументу)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаЗачетАвансов.НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции 

Функция ТекстЗапросаРеализация(НомераТаблиц)

	НомераТаблиц.Вставить("ВТ_ТаблицыДокументаРеализации", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("РеализацияТаблицаДокумента", НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	""Услуги"" КАК ИмяСписка,
	|	ТаблицаУслуги.НомерСтроки КАК НомерСтроки,
	|	ТаблицаУслуги.Номенклатура КАК Номенклатура,
	|	ТаблицаУслуги.Количество КАК Количество,
	|	ТаблицаУслуги.СуммаВзаиморасчетов КАК СуммаВзаиморасчетов,
	|	ТаблицаУслуги.СуммаРуб КАК СуммаРуб,
	|	ТаблицаУслуги.СуммаНДСРуб КАК СуммаНДСРуб,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетУчета,
	|	ТаблицаУслуги.СчетДоходов КАК СчетДоходов,
	|	ТаблицаУслуги.ДоходЕНВД,
	|	ТаблицаУслуги.Субконто КАК Субконто,
	|	ВЫБОР
	|		КОГДА ТаблицаУслуги.ДоходЕНВД
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.КодыОперацийРаздела7ДекларацииПоНДС.ПустаяСсылка)
	|		ИНАЧЕ ТаблицаУслуги.КодРаздел7ДекларацииНДС
	|	КОНЕЦ КАК КодРаздел7ДекларацииНДС,
	|	ВЫБОР
	|		КОГДА ТаблицаУслуги.ДоходЕНВД
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ТаблицаУслуги.КодСоответствуетСт149НКРФ
	|	КОНЕЦ КАК КодСоответствуетСт149НКРФ,
	|	ВЫБОР
	|		КОГДА ТаблицаУслуги.ДоходЕНВД
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ТаблицаУслуги.КодВключаетсяВРеестр
	|	КОНЕЦ КАК КодВключаетсяВРеестр,
	|	ЛОЖЬ КАК УслугиЗаРубежом,
	|	ТаблицаУслуги.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаУслуги.СчетУчетаНДСПоРеализации КАК СчетУчетаНДСПоРеализации,
	|	ТаблицаУслуги.Ссылка КАК Ссылка,
	|	ЛОЖЬ КАК ЭтоКомиссия,
	|	ИСТИНА КАК ЭтоУслуга,
	|	НЕОПРЕДЕЛЕНО КАК Комитент,
	|	НЕОПРЕДЕЛЕНО КАК ДоговорКомиссии,
	|	НЕОПРЕДЕЛЕНО КАК СчетРасчетовСКомитентом,
	|	НЕОПРЕДЕЛЕНО КАК СчетАвансовСКомитентом,
	|	НЕОПРЕДЕЛЕНО КАК ВалютаРасчетовСКомитентом,
	|	ТаблицаУслуги.ОбъектАренды,
	|	ТаблицаУслуги.УслугаАренды,
	|	ТаблицаУслуги.СчетНаАренду,
	|	ТаблицаУслуги.ПериодАренды
	|ПОМЕСТИТЬ ВТ_ТаблицыДокументаРеализации
	|ИЗ
	|	ТаблицаУслуги КАК ТаблицаУслуги
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""АгентскиеУслуги"",
	|	ТаблицаАгентскиеУслуги.НомерСтроки,
	|	ТаблицаАгентскиеУслуги.Номенклатура,
	|	ТаблицаАгентскиеУслуги.Количество,
	|	ТаблицаАгентскиеУслуги.СуммаВзаиморасчетов,
	|	ТаблицаАгентскиеУслуги.СуммаРуб,
	|	ТаблицаАгентскиеУслуги.СуммаНДСРуб,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка),
	|	ТаблицаАгентскиеУслуги.СчетРасчетов,
	|	ЛОЖЬ,
	|	ТаблицаАгентскиеУслуги.Контрагент,
	|	ТаблицаАгентскиеУслуги.КодРаздел7ДекларацииНДС КАК КодРаздел7ДекларацииНДС,
	|	ТаблицаАгентскиеУслуги.КодСоответствуетСт149НКРФ КАК КодСоответствуетСт149НКРФ,
	|	ТаблицаАгентскиеУслуги.КодВключаетсяВРеестр КАК КодВключаетсяВРеестр,
	|	ЛОЖЬ КАК УслугиЗаРубежом,
	|	ТаблицаАгентскиеУслуги.СтавкаНДС,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка),
	|	ТаблицаАгентскиеУслуги.Ссылка,
	|	ИСТИНА,
	|	ИСТИНА,
	|	ТаблицаАгентскиеУслуги.Контрагент,
	|	ТаблицаАгентскиеУслуги.ДоговорКонтрагента,
	|	ТаблицаАгентскиеУслуги.СчетРасчетов,
	|	ТаблицаАгентскиеУслуги.СчетРасчетов,
	|	ТаблицаАгентскиеУслуги.ВалютаВзаиморасчетов,
	|	ТаблицаАгентскиеУслуги.ОбъектАренды,
	|	ТаблицаАгентскиеУслуги.УслугаАренды,
	|	ТаблицаАгентскиеУслуги.СчетНаАренду,
	|	ТаблицаАгентскиеУслуги.ПериодАренды
	|ИЗ
	|	ТаблицаАгентскиеУслуги КАК ТаблицаАгентскиеУслуги
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицыДокументаРеализации.ИмяСписка КАК ИмяСписка,
	|	ТаблицыДокументаРеализации.НомерСтроки КАК НомерСтроки,
	|	ТаблицыДокументаРеализации.Номенклатура КАК Номенклатура,
	|	ТаблицыДокументаРеализации.Количество КАК Количество,
	|	ТаблицыДокументаРеализации.СуммаВзаиморасчетов КАК СуммаВзаиморасчетов,
	|	ТаблицыДокументаРеализации.СуммаРуб КАК СуммаРуб,
	|	ТаблицыДокументаРеализации.СуммаНДСРуб КАК СуммаНДСРуб,
	|	ТаблицыДокументаРеализации.СуммаРуб КАК СуммаБУ,
	|	ТаблицыДокументаРеализации.СуммаРуб КАК СуммаНУ,
	|	ТаблицыДокументаРеализации.СчетУчета КАК СчетУчета,
	|	ТаблицыДокументаРеализации.СчетДоходов КАК СчетДоходов,
	|	ТаблицыДокументаРеализации.ДоходЕНВД КАК ДоходЕНВД,
	|	ТаблицыДокументаРеализации.Субконто КАК Субконто,
	|	ТаблицыДокументаРеализации.КодРаздел7ДекларацииНДС КАК КодРаздел7ДекларацииНДС,
	|	ТаблицыДокументаРеализации.КодСоответствуетСт149НКРФ КАК КодСоответствуетСт149НКРФ,
	|	ТаблицыДокументаРеализации.КодВключаетсяВРеестр КАК КодВключаетсяВРеестр,
	|	ЛОЖЬ КАК УслугиЗаРубежом,
	|	ТаблицыДокументаРеализации.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицыДокументаРеализации.СчетУчетаНДСПоРеализации,
	|	Реквизиты.СчетУчетаРасчетовСКонтрагентом КАК КорСчет,
	|	Реквизиты.Контрагент КАК КорСубконто1,
	|	Реквизиты.ДоговорКонтрагента КАК КорСубконто2,
	|	Реквизиты.Ссылка КАК КорСубконто3,
	|	Реквизиты.Контрагент КАК Контрагент,
	|	Реквизиты.Контрагент КАК Покупатель,
	|	Реквизиты.ДоговорКонтрагента.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КАК Подразделение,
	|	ТаблицыДокументаРеализации.ЭтоКомиссия КАК ЭтоКомиссия,
	|	ТаблицыДокументаРеализации.ЭтоУслуга КАК ЭтоУслуга,
	|	ЛОЖЬ КАК ЭтоНесырьевойТовар,
	|	ТаблицыДокументаРеализации.Комитент КАК Комитент,
	|	ТаблицыДокументаРеализации.ДоговорКомиссии КАК ДоговорКомиссии,
	|	Реквизиты.Ссылка КАК ДокументРасчетовСКомитентом,
	|	ВЫБОР
	|		КОГДА &ЗаполнятьДокументРасчетов
	|			ТОГДА Реквизиты.Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ДокументРасчетов,
	|	Реквизиты.Дата КАК ДатаРеализации,
	|	ТаблицыДокументаРеализации.СчетРасчетовСКомитентом КАК СчетРасчетовСКомитентом,
	|	ТаблицыДокументаРеализации.СчетАвансовСКомитентом КАК СчетАвансовСКомитентом,
	|	ТаблицыДокументаРеализации.ВалютаРасчетовСКомитентом КАК ВалютаРасчетовСКомитентом,
	|	0 КАК СуммаРасчетовСКомитентом,
	|	0 КАК СуммаПоступленияОтКомитента,
	|	ТаблицыДокументаРеализации.ОбъектАренды,
	|	ТаблицыДокументаРеализации.УслугаАренды,
	|	ТаблицыДокументаРеализации.СчетНаАренду,
	|	ТаблицыДокументаРеализации.ПериодАренды
	|ИЗ
	|	Документ.АР_НачислениеАренднойПлаты КАК Реквизиты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТаблицыДокументаРеализации КАК ТаблицыДокументаРеализации
	|		ПО Реквизиты.Ссылка = ТаблицыДокументаРеализации.Ссылка
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|	И Реквизиты.ДоговорКонтрагента.ВидДоговора <> ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СКомиссионером)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ИмяСписка,
	|	НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции 

Функция ТекстЗапросаЗачетАвансовКомитентов(НомераТаблиц)

	НомераТаблиц.Вставить("ЗачетАвансовКомитентовРеквизиты", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.ВалютаДокумента КАК ВалютаДокумента,
	|	ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КАК Подразделение,
	|	ЗНАЧЕНИЕ(Перечисление.СпособыЗачетаАвансов.Автоматически) КАК СпособЗачетаАвансов,
	|	ЛОЖЬ КАК УчитыватьЗадолженностьУСН,
	|	ЛОЖЬ КАК УчитыватьЗадолженностьУСНПатент,
	|	""Поступление"" КАК НаправлениеДвижения,
	|	ЛОЖЬ КАК ЭтоВозврат
	|ИЗ
	|	Документ.АР_НачислениеАренднойПлаты КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции 

Функция ТекстЗапросаРеализацияУслуг(НомераТаблиц)

	НомераТаблиц.Вставить("ТаблицаРеализацияУслуг", НомераТаблиц.Количество());
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	""Услуги"" КАК ИмяСписка,
	|	ТаблицаУслуги.НомерСтроки КАК НомерСтроки,
	|	ТаблицаУслуги.СчетРасходов,
	|	ТаблицаУслуги.Субконто КАК НоменклатурнаяГруппа,
	|	ТаблицаУслуги.СуммаРуб - ТаблицаУслуги.СуммаНДСРуб КАК Сумма
	|ИЗ
	|	ТаблицаУслуги КАК ТаблицаУслуги
	|ГДЕ
	|	НЕ ТаблицаУслуги.СчетРасходов В (&Субсчета91)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ИмяСписка,
	|	НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции	

Функция ТекстЗапросаПродажиПоАренде(НомераТаблиц)

	НомераТаблиц.Вставить("ПродажиПоАренде", НомераТаблиц.Количество());
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Реквизиты.Дата КАК Период,
	|	ТаблицаДокумента.НомерСтроки,
	|	Реквизиты.Ссылка,
	|	Реквизиты.Организация,
	|	Реквизиты.Контрагент,
	|	Реквизиты.ДоговорКонтрагента,
	|	Реквизиты.ВалютаДокумента КАК Валюта,
	|	ТаблицаДокумента.Номенклатура КАК УслугаАренды,
	|	ТаблицаДокумента.ОбъектАрендыДляРегистраПродаж КАК ОбъектАренды,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ПериодАренды = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА &НачалоПериода
	|		ИНАЧЕ ТаблицаДокумента.ПериодАренды
	|	КОНЕЦ КАК ПериодАренды,
	|	ТаблицаДокумента.СуммаРуб КАК Сумма
	|ИЗ
	|	ТаблицаУслуги КАК ТаблицаДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.АР_НачислениеАренднойПлаты КАК Реквизиты
	|		ПО ТаблицаДокумента.Ссылка = Реквизиты.Ссылка
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции 

Функция РеализацииПоСчетам(СчетаНаОплату) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&СчетНаОплату КАК СчетНаОплату,
	|	СвязанныеДокументы.Ссылка КАК Реализация
	|ИЗ
	|	КритерийОтбора.СвязанныеДокументы(&СчетНаОплату) КАК СвязанныеДокументы
	|ГДЕ
	|	СвязанныеДокументы.Ссылка ССЫЛКА Документ.АР_НачислениеАренднойПлаты
	|	И ВЫРАЗИТЬ(СвязанныеДокументы.Ссылка КАК Документ.АР_НачислениеАренднойПлаты).Проведен";
	
	Запрос = Новый Запрос;
	
	ЧастиЗапроса = Новый Массив;
	Для Позиция = 0 По СчетаНаОплату.Количество()-1 Цикл
		ЧастиЗапроса.Добавить(СтрЗаменить(ТекстЗапроса, "&СчетНаОплату", "&СчетНаОплату_"+Позиция));
		Запрос.Параметры.Вставить("СчетНаОплату_"+Позиция, СчетаНаОплату[Позиция]);
	КонецЦикла; 
	
	Запрос.Текст = СтрСоединить(ЧастиЗапроса, Символы.ПС+"ОБЪЕДИНИТЬ ВСЕ"+Символы.ПС);
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Возврат Результат;
	
КонецФункции

Функция ТоварыУслугиКРеализацииПоСчету(СчетНаОплату, РеализацииПоСчету) Экспорт
	
	ТоварыУслуги = Новый ТаблицаЗначений;
	ТоварыУслуги.Колонки.Добавить("ЭтоУслуга", Новый ОписаниеТипов("Булево"));
	ТоварыУслуги.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ТоварыУслуги.Колонки.Добавить("Содержание", ОбщегоНазначения.ОписаниеТипаСтрока(1000));
	ТоварыУслуги.Колонки.Добавить("ЕдиницаИзмерения", Новый ОписаниеТипов("СправочникСсылка.КлассификаторЕдиницИзмерения"));
	ТоварыУслуги.Колонки.Добавить("Коэффициент", ОбщегоНазначения.ОписаниеТипаЧисло(10, 3));
	ТоварыУслуги.Колонки.Добавить("Количество", ОбщегоНазначения.ОписаниеТипаЧисло(10, 3));
	ТоварыУслуги.Колонки.Добавить("Цена", ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
	ТоварыУслуги.Колонки.Добавить("Сумма", ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
	ТоварыУслуги.Колонки.Добавить("СуммаСкидки", ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
	ТоварыУслуги.Колонки.Добавить("СтавкаНДС", Новый ОписаниеТипов("ПеречислениеСсылка.СтавкиНДС"));
	ТоварыУслуги.Колонки.Добавить("СуммаНДС", ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
	ТоварыУслуги.Колонки.Добавить("КодТНВЭД", Новый ОписаниеТипов("СправочникСсылка.КлассификаторТНВЭД"));
	ТоварыУслуги.Колонки.Добавить("НомерГТД", Новый ОписаниеТипов("СправочникСсылка.НомераГТД"));
	ТоварыУслуги.Колонки.Добавить("СтранаПроисхождения", Новый ОписаниеТипов("СправочникСсылка.СтраныМира"));
	
	ТоварыУслуги.Колонки.Добавить("ОбъектАренды", Новый ОписаниеТипов("СправочникСсылка.АР_ОбъектыАренды"));
	ТоварыУслуги.Колонки.Добавить("ПериодАренды", Новый ОписаниеТипов("Дата"));
	
	ТоварыУслуги.Колонки.Добавить("СпособНачисления", Новый ОписаниеТипов("СправочникСсылка.АР_СпособыНачисленияАренднойПлаты"));
	ТоварыУслуги.Колонки.Добавить("КоличествоДней", ОбщегоНазначения.ОписаниеТипаЧисло(10, 0));
	ТоварыУслуги.Колонки.Добавить("СтавкаСпособаНачисления", ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СчетНаОплату", СчетНаОплату);
	Запрос.УстановитьПараметр("РеализацииПоСчету", РеализацииПоСчету);
	
	НомераТаблиц = Новый Структура;
	
	Запрос.Текст = ТекстЗапросаРеквизитыСчета(НомераТаблиц) 
		+ ТекстЗапросаРеализованнаяНоменклатура(НомераТаблиц)
		+ ТекстЗапросаТоварыУслугиКРеализацииПоСчету(НомераТаблиц);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	Результат = Новый Структура;
	Для каждого НомерТаблицы Из НомераТаблиц Цикл
		Результат.Вставить(НомерТаблицы.Ключ, РезультатЗапроса[НомерТаблицы.Значение].Выгрузить());
	КонецЦикла;
	
	РеализованнаяНоменклатура = Результат.РеализованнаяНоменклатура;
	
	ПоляОтбора = "ЭтоУслуга, Номенклатура, ОбъектАренды, ПериодАренды, СпособНачисления, СтавкаСпособаНачисления, Цена, КоличествоДней, Содержание";
	РеализованнаяНоменклатура.Индексы.Добавить(ПоляОтбора);
	Отбор = Новый Структура(ПоляОтбора);
	
	РеквизитыСчета = Новый Структура("СуммаВключаетНДС, СуммаСкидки", Истина, 0);
	Если Результат.РеквизитыСчета.Количество() > 0 Тогда
		ЗаполнитьЗначенияСвойств(РеквизитыСчета, Результат.РеквизитыСчета[0]);
	КонецЕсли;
	
	ТоварыУслуги = Результат.ТоварыУслуги;
	Если РеквизитыСчета.СуммаСкидки <> 0 Или ТоварыУслуги.Итог("СуммаСкидки") <> 0 Тогда
		ОбработкаТабличныхЧастей.РаспределитьСкидкуПоСтрокамТабЧасти(ТоварыУслуги, РеквизитыСчета);
	КонецЕсли;
	
	ОтгруженныеПолностью = Новый Массив;
	
	Для Каждого СтрокаСчета Из ТоварыУслуги Цикл
		
		// Если количество не указано, считаем, что услуга оказывается один раз
		КоличествоВСчете = ?(СтрокаСчета.ЭтоУслуга И СтрокаСчета.Количество = 0, 1, СтрокаСчета.Количество);
		
		ЗаполнитьЗначенияСвойств(Отбор, СтрокаСчета);
		НайденныеСтроки = РеализованнаяНоменклатура.НайтиСтроки(Отбор);
		
		Если НайденныеСтроки.Количество() <> 0 Тогда
			
			РеализованоРанее = НайденныеСтроки[0].Количество;
			
			Если РеализованоРанее < КоличествоВСчете Тогда
				// Товар реализован частично
				Количество = Макс(КоличествоВСчете - РеализованоРанее, 0);
				СтрокаСчета.Количество = Количество;
				ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуТабЧасти(СтрокаСчета, РеквизитыСчета.СуммаВключаетНДС);
				ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуНДСТабЧасти(СтрокаСчета, РеквизитыСчета.СуммаВключаетНДС);
			Иначе
				ОтгруженныеПолностью.Добавить(СтрокаСчета);
			КонецЕсли;
			
			НайденныеСтроки[0].Количество = Макс(РеализованоРанее - КоличествоВСчете, 0);
			
		КонецЕсли;
		
	КонецЦикла;
	
	ВГраница = ОтгруженныеПолностью.Количество() - 1;
	Для Индекс = 0 По ВГраница Цикл
		ТоварыУслуги.Удалить(ОтгруженныеПолностью[ВГраница - Индекс]);
	КонецЦикла;
	
	Возврат ТоварыУслуги;
КонецФункции

Функция ВозвратнаяТараКРеализацииПоСчету(СчетНаОплату, РеализацииПоСчету) Экспорт
	
	Возврат Документы.РеализацияТоваровУслуг.ВозвратнаяТараКРеализацииПоСчету(СчетНаОплату, РеализацииПоСчету);
	
КонецФункции

Функция ТекстЗапросаОтгрузкаПоСчету(НомераТаблиц, ПараметрыПроведения, Реквизиты)
	
	Если Не Реквизиты.ЕстьСчетНаОплатуПокупателю Тогда
		ПараметрыПроведения.Вставить("ТаблицаСчетовНаОплату",               Неопределено);
		ПараметрыПроведения.Вставить("ОтгрузкаТоваровОказаниеУслугПоСчету", Неопределено);
		ПараметрыПроведения.Вставить("ОтгрузкаВозвратнойТарыПоСчету",       Неопределено);
		Возврат "";
	КонецЕсли;
	
	ЧастиЗапроса = Новый Массив;
	
	ЧастиЗапроса.Добавить(
	"ВЫБРАТЬ
	|	ТаблицаРеквизиты.СчетНаОплатуПокупателю КАК СчетНаОплатуПокупателю
	|ИЗ
	|	Реквизиты КАК ТаблицаРеквизиты
	|ГДЕ
	|	ТаблицаРеквизиты.СчетНаОплатуПокупателю <> ЗНАЧЕНИЕ(Документ.АР_СчетНаАренду.ПустаяСсылка)");
	
	ЧастиЗапроса.Добавить(
	"ВЫБРАТЬ
	|	ТаблицаУслуги.СчетНаАренду
	|ИЗ
	|	ТаблицаУслуги КАК ТаблицаУслуги
	|ГДЕ
	|	ТаблицаУслуги.СчетНаАренду <> ЗНАЧЕНИЕ(Документ.АР_СчетНаАренду.ПустаяСсылка)");
	
	ТекстЗапроса = СтрСоединить(ЧастиЗапроса, Символы.ПС+"ОБЪЕДИНИТЬ"+Символы.ПС) + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();;
	НомераТаблиц.Вставить("ТаблицаСчетовНаОплату", НомераТаблиц.Количество());
	
	НомераТаблиц.Вставить("ОтгрузкаТоваровОказаниеУслугПоСчету", НомераТаблиц.Количество());
	ТекстЗапроса = ТекстЗапроса +
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.ЭтоУслуга КАК ЭтоУслуга,
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВложенныйЗапрос.Содержание КАК Содержание,
	|	СУММА(ВложенныйЗапрос.Количество) КАК Количество
	|ИЗ
	|	(ВЫБРАТЬ
	|		ИСТИНА КАК ЭтоУслуга,
	|		ТаблицаУслуги.Номенклатура КАК Номенклатура,
	|		ТаблицаУслуги.Содержание КАК Содержание,
	|		ВЫБОР
	|			КОГДА ТаблицаУслуги.Количество = 0
	|				ТОГДА 1
	|			ИНАЧЕ ТаблицаУслуги.Количество
	|		КОНЕЦ КАК Количество
	|	ИЗ
	|		ТаблицаУслуги КАК ТаблицаУслуги) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.ЭтоУслуга,
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.Содержание" + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
	ПараметрыПроведения.Вставить("ОтгрузкаВозвратнойТарыПоСчету", Неопределено);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаРеквизитыСчета(НомераТаблиц)
	НомераТаблиц.Вставить("ВТ_РеализацииПоСчету", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("РеквизитыСчета", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТоварыУслуги", НомераТаблиц.Количество());
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Ссылка КАК РеализацияТоваров,
	|	РеализацияТоваровУслуг.ДокументОснование КАК СчетНаОплату
	|ПОМЕСТИТЬ ВТ_РеализацииПоСчету
	|ИЗ
	|	Документ.АР_НачислениеАренднойПлаты КАК РеализацияТоваровУслуг
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка В(&РеализацииПоСчету)
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеквизитыСчета.СуммаВключаетНДС,
	|	0 КАК СуммаСкидки
	|ИЗ
	|	Документ.АР_СчетНаАренду КАК РеквизитыСчета
	|ГДЕ
	|	РеквизитыСчета.Ссылка = &СчетНаОплату
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыУслуги.НомерСтроки КАК НомерСтроки,
	|	ЕСТЬNULL(ТоварыУслуги.Номенклатура.Услуга, ИСТИНА) КАК ЭтоУслуга,
	|	ТоварыУслуги.ОбъектАренды,
	|	ТоварыУслуги.ПериодАренды,
	|	ТоварыУслуги.СпособНачисления,
	|	ТоварыУслуги.СтавкаСпособаНачисления,
	|	ТоварыУслуги.КоличествоДней,
	|	ТоварыУслуги.Номенклатура,
	|	ТоварыУслуги.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ТоварыУслуги.Номенклатура.НомерГТД КАК НомерГТД,
	|	ТоварыУслуги.Номенклатура.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ТоварыУслуги.Номенклатура.КодТНВЭД КАК КодТНВЭД,
	|	ТоварыУслуги.Содержание,
	|	1 КАК Коэффициент,
	|	ВЫРАЗИТЬ(ТоварыУслуги.Количество КАК ЧИСЛО(15,3)) КАК Количество,
	|	ТоварыУслуги.Цена,
	|	ТоварыУслуги.Сумма,
	|	0 КАК СуммаСкидки,
	|	ТоварыУслуги.СтавкаНДС,
	|	ТоварыУслуги.СуммаНДС
	|ИЗ
	|	Документ.АР_СчетНаАренду.Состав КАК ТоварыУслуги
	|ГДЕ
	|	ТоварыУслуги.Ссылка = &СчетНаОплату
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТоварыУслуги.НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
КонецФункции

Функция ТекстЗапросаРеализованнаяНоменклатура(НомераТаблиц) Экспорт
	НомераТаблиц.Вставить("ВТ_РеализованнаяНоменклатура", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.ЭтоУслуга КАК ЭтоУслуга,
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВложенныйЗапрос.ОбъектАренды КАК ОбъектАренды,
	|	ВложенныйЗапрос.ПериодАренды КАК ПериодАренды,
	|	ВложенныйЗапрос.СпособНачисления КАК СпособНачисления,
	|	ВложенныйЗапрос.СтавкаСпособаНачисления КАК СтавкаСпособаНачисления,
	|	ВложенныйЗапрос.КоличествоДней КАК КоличествоДней,
	|	ВложенныйЗапрос.Цена КАК Цена,
	|	ВложенныйЗапрос.Содержание КАК Содержание,
	|	СУММА(ВложенныйЗапрос.Количество) КАК Количество
	|ПОМЕСТИТЬ ВТ_РеализованнаяНоменклатура
	|ИЗ
	|	(ВЫБРАТЬ
	|		ИСТИНА КАК ЭтоУслуга,
	|		РеализованныеУслуги.Номенклатура КАК Номенклатура,
	|		РеализованныеУслуги.ОбъектАренды КАК ОбъектАренды,
	|		РеализованныеУслуги.ПериодАренды КАК ПериодАренды,
	|		РеализованныеУслуги.Содержание КАК Содержание,
	|		ВЫБОР
	|			КОГДА РеализованныеУслуги.Количество = 0
	|				ТОГДА 1
	|			ИНАЧЕ ВЫРАЗИТЬ(РеализованныеУслуги.Количество КАК ЧИСЛО(15,3))
	|		КОНЕЦ КАК Количество,
	|		РеализованныеУслуги.СпособНачисления КАК СпособНачисления,
	|		РеализованныеУслуги.СтавкаСпособаНачисления КАК СтавкаСпособаНачисления,
	|		РеализованныеУслуги.Цена КАК Цена,
	|		РеализованныеУслуги.КоличествоДней КАК КоличествоДней
	|	ИЗ
	|		ВТ_РеализацииПоСчету КАК ВТ_РеализацииПоСчету
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.АР_НачислениеАренднойПлаты.Состав КАК РеализованныеУслуги
	|			ПО ВТ_РеализацииПоСчету.РеализацияТоваров = РеализованныеУслуги.Ссылка
	|	ГДЕ
	|		(РеализованныеУслуги.СчетНаАренду = &СчетНаОплату
	|				ИЛИ ВТ_РеализацииПоСчету.СчетНаОплату = &СчетНаОплату)) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.ЭтоУслуга,
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.ОбъектАренды,
	|	ВложенныйЗапрос.ПериодАренды,
	|	ВложенныйЗапрос.Содержание,
	|	ВложенныйЗапрос.СпособНачисления,
	|	ВложенныйЗапрос.СтавкаСпособаНачисления,
	|	ВложенныйЗапрос.Цена,
	|	ВложенныйЗапрос.КоличествоДней";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
КонецФункции

Функция ТекстЗапросаТоварыУслугиКРеализацииПоСчету(НомераТаблиц)
	НомераТаблиц.Вставить("РеализованнаяНоменклатура", НомераТаблиц.Количество());
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВТ_РеализованнаяНоменклатура.ЭтоУслуга КАК ЭтоУслуга,
	|	ВТ_РеализованнаяНоменклатура.Номенклатура КАК Номенклатура,
	|	ВТ_РеализованнаяНоменклатура.ОбъектАренды КАК ОбъектАренды,
	|	ВТ_РеализованнаяНоменклатура.ПериодАренды КАК ПериодАренды,
	|	ВТ_РеализованнаяНоменклатура.СпособНачисления КАК СпособНачисления,
	|	ВТ_РеализованнаяНоменклатура.СтавкаСпособаНачисления КАК СтавкаСпособаНачисления,
	|	ВТ_РеализованнаяНоменклатура.КоличествоДней КАК КоличествоДней,
	|	ВТ_РеализованнаяНоменклатура.Цена КАК Цена,
	|	ВТ_РеализованнаяНоменклатура.Содержание КАК Содержание,
	|	СУММА(ВТ_РеализованнаяНоменклатура.Количество) КАК Количество
	|ИЗ
	|	ВТ_РеализованнаяНоменклатура КАК ВТ_РеализованнаяНоменклатура
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_РеализованнаяНоменклатура.ЭтоУслуга,
	|	ВТ_РеализованнаяНоменклатура.Содержание,
	|	ВТ_РеализованнаяНоменклатура.Цена,
	|	ВТ_РеализованнаяНоменклатура.КоличествоДней,
	|	ВТ_РеализованнаяНоменклатура.СтавкаСпособаНачисления,
	|	ВТ_РеализованнаяНоменклатура.СпособНачисления,
	|	ВТ_РеализованнаяНоменклатура.ПериодАренды,
	|	ВТ_РеализованнаяНоменклатура.ОбъектАренды,
	|	ВТ_РеализованнаяНоменклатура.Номенклатура";
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
КонецФункции

// Добавляется колонка "Содержание" в таблицу значений
Процедура ДобавитьКолонкуСодержание(ТаблицаЗначений) Экспорт
	
	Если ТаблицаЗначений.Колонки.Найти("Содержание") = Неопределено Тогда
		ТаблицаЗначений.Колонки.Добавить("Содержание", ОбщегоНазначенияБПКлиентСервер.ПолучитьОписаниеТиповСтроки(150));
	КонецЕсли;
	
	Для каждого СтрокаТаблицы Из ТаблицаЗначений Цикл
		СтрокаТаблицы.Содержание = "Реализация услуг";
	КонецЦикла;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Заполнение счетов учета

// Эта процедура предназначена для заполнения счетов учета в строке табличной части
Процедура ЗаполнитьСчетаУчетаРасчетов(Объект, СчетаУчета = неопределено) Экспорт
	
	Если СчетаУчета = Неопределено Тогда
		СчетаУчета = БухгалтерскийУчетПереопределяемый.ПолучитьСчетаРасчетовСКонтрагентом(
			Объект.Организация, Объект.Контрагент, Объект.ДоговорКонтрагента);
	КонецЕсли;
	
	Если (ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
			Объект.ДоговорКонтрагента, "ВидДоговора") = Перечисления.ВидыДоговоровКонтрагентов.СКомиссионером) Тогда
		Объект.СчетУчетаРасчетовСКонтрагентом = ПланыСчетов.Хозрасчетный.ПустаяСсылка();
		Объект.СчетУчетаРасчетовПоАвансам     = ПланыСчетов.Хозрасчетный.ПустаяСсылка();
		Объект.СчетУчетаДепозита     = ПланыСчетов.Хозрасчетный.ПустаяСсылка();
	Иначе
		Объект.СчетУчетаРасчетовСКонтрагентом = СчетаУчета.СчетРасчетовПокупателя;
		Если (Объект.СпособЗачетаАвансов = Перечисления.СпособыЗачетаАвансов.Автоматически)
			ИЛИ (Объект.СпособЗачетаАвансов = Перечисления.СпособыЗачетаАвансов.ПоДокументу) Тогда
			Объект.СчетУчетаРасчетовПоАвансам = СчетаУчета.СчетАвансовПокупателя;
		Иначе
			Объект.СчетУчетаРасчетовПоАвансам = ПланыСчетов.Хозрасчетный.ПустаяСсылка();
		КонецЕсли;
		Объект.СчетУчетаДепозита = СчетаУчета.СчетАвансовПокупателя;
	КонецЕсли;

КонецПроцедуры // ЗаполнитьСчетаУчетаРасчетов()

// Заполнение счетов учета
Процедура ЗаполнитьСчетаУчетаВСтрокеТабЧасти(Объект, СтрокаТаблицы) Экспорт

	УстановитьПривилегированныйРежим(Истина);
	
	СчетаУчета  = БухгалтерскийУчетПереопределяемый.ПолучитьСчетаУчетаНоменклатуры(Объект.Организация, СтрокаТаблицы.Номенклатура,,,, СтрокаТаблицы.ОбъектАренды);

	Если СчетаУчета.СчетДоходов <> Неопределено Тогда
		СтрокаТаблицы.СчетДоходов  = СчетаУчета.СчетДоходов;
	КонецЕсли;
	Если СчетаУчета.СчетРасходов <> Неопределено Тогда
		СтрокаТаблицы.СчетРасходов = СчетаУчета.СчетРасходов;
	КонецЕсли;
	Если СчетаУчета.СчетУчетаНДСПродажи <> Неопределено Тогда
		СтрокаТаблицы.СчетУчетаНДСПоРеализации = СчетаУчета.СчетУчетаНДСПродажи;
	КонецЕсли;

	СвойстваСчетаДоходов = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(СтрокаТаблицы.СчетДоходов);

	Если ЗначениеЗаполнено(СтрокаТаблицы.СчетДоходов) И СвойстваСчетаДоходов.КоличествоСубконто > 0 Тогда
		СтрокаТаблицы.Субконто = СвойстваСчетаДоходов.ВидСубконто1ТипЗначения.ПривестиЗначение(СтрокаТаблицы.Субконто);
		Если ТипЗнч(СтрокаТаблицы.Субконто) = Тип("СправочникСсылка.НоменклатурныеГруппы") Тогда
			НоменклатурнаяГруппа = ?(ЗначениеЗаполнено(СтрокаТаблицы.ОбъектАренды.ТипОбъекта.НоменклатурнаяГруппа), 
														СтрокаТаблицы.ОбъектАренды.ТипОбъекта.НоменклатурнаяГруппа,
														СтрокаТаблицы.Номенклатура.НоменклатурнаяГруппа);
			СтрокаТаблицы.Субконто = НоменклатурнаяГруппа;
		КонецЕсли;
	Иначе
		СтрокаТаблицы.Субконто = Неопределено;
	КонецЕсли;


КонецПроцедуры

// Заполнение счетов учета
Процедура ЗаполнитьСчетаУчетаВТабЧасти(Объект) Экспорт

	Для каждого СтрокаТабЧасти Из Объект.Состав Цикл
		ЗаполнитьСчетаУчетаВСтрокеТабЧасти(Объект, СтрокаТабЧасти );
	КонецЦикла;

КонецПроцедуры

// Заполнение счетов учета
Процедура ЗаполнитьДанныеПоАгентскимУслугам(Объект) Экспорт

	Для каждого СтрокаТабЧасти Из Объект.Состав Цикл
		ЗаполнитьДанныеПоАгентскимУслугамВСтрокеТабЧасти(Объект, СтрокаТабЧасти);
	КонецЦикла;

КонецПроцедуры

// Заполнение счетов учета
Процедура ЗаполнитьДанныеПоАгентскимУслугамВСтрокеТабЧасти(Объект, СтрокаТабЧасти) Экспорт

	АР_ПроцедурыНачисления.ЗаполнитьДанныеПоАгентскимУслугам(СтрокаТабЧасти, Объект.Организация, Объект.ОкончаниеПериода);

КонецПроцедуры

// Возвращаяет массив документов, для которых выписка счетов-фактур не требуется
//
Функция ПолучитьДокументыСчетФактураНеТребуются(МассивДокументов) Экспорт
	
	ДокументыСчетФактураНеТребуются = Новый Массив;
	
	Если НЕ ЗначениеЗаполнено(МассивДокументов) Тогда
		Возврат ДокументыСчетФактураНеТребуются
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РеализацияТоваровУслуг.Ссылка КАК Ссылка,
	|	ИСТИНА КАК ЕстьНДС
	|ПОМЕСТИТЬ ВТ_ДокументыСНДС
	|ИЗ
	|	Документ.АР_НачислениеАренднойПлаты.Состав КАК РеализацияТоваровУслуг
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка В(&МассивДокументов)
	|	И РеализацияТоваровУслуг.СуммаНДС > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Ссылка,
	|	РеализацияТоваровУслуг.Дата,
	|	РеализацияТоваровУслуг.Организация,
	|	ЕСТЬNULL(ВТ_ДокументыСНДС.ЕстьНДС, ЛОЖЬ) КАК ЕстьНДС
	|ИЗ
	|	Документ.АР_НачислениеАренднойПлаты КАК РеализацияТоваровУслуг
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДокументыСНДС КАК ВТ_ДокументыСНДС
	|		ПО (ВТ_ДокументыСНДС.Ссылка = РеализацияТоваровУслуг.Ссылка)
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка В(&МассивДокументов)
	|	И РеализацияТоваровУслуг.ДоговорКонтрагента.ВидДоговора <> ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СКомиссионером)";
	
	Результат = Запрос.ВыполнитьПакет();
	
	// Прочие реализации
	ВыборкаРеализация = Результат[1].Выбрать();
	Пока ВыборкаРеализация.Следующий() Цикл
		
		Если НЕ ВыборкаРеализация.ЕстьНДС
			И (НЕ УчетнаяПолитика.ПлательщикНДС(ВыборкаРеализация.Организация, ВыборкаРеализация.Дата) 
			ИЛИ УчетНДСПереопределяемый.ВерсияПостановленияНДС1137(ВыборкаРеализация.Дата) >= 3 
			И НЕ УчетнаяПолитика.ПрименяетсяОсвобождениеОтУплатыНДС(ВыборкаРеализация.Организация, ВыборкаРеализация.Дата)) Тогда
			ДокументыСчетФактураНеТребуются.Добавить(ВыборкаРеализация.Ссылка);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ДокументыСчетФактураНеТребуются;
	
КонецФункции
	
////////////////////////////////////////////////////////////////////////////////
// Печать

// Заполняет список команд отправки по электронной почте.
// 
// Параметры:
//  КомандыОтправки - ТаблицаЗначений - состав полей см. в функции ОтправкаПочтовыхСообщений.КомандыОтправки
//
Процедура ДобавитьКомандыОтправки(КомандыОтправки) Экспорт
	
	КомандаОтправки = КомандыОтправки.Добавить();
	КомандаОтправки.Идентификатор = "Акт";
	КомандаОтправки.Представление = НСтр("ru = 'Акт сдачи-премки услуг'");
	КомандаОтправки.Порядок       = 10;

	КомандаОтправки = КомандыОтправки.Добавить();
	КомандаОтправки.Идентификатор = "АктРуб";
	КомандаОтправки.Представление = НСтр("ru = 'Акт сдачи-приемки услуг (руб.)'");
	КомандаОтправки.Порядок       = 15;
	КомандаОтправки.СписокФорм    = "ФормаДокумента";
	
	КомандаОтправки = КомандыОтправки.Добавить();
	КомандаОтправки.Идентификатор = "АктСводный";
	КомандаОтправки.Представление = НСтр("ru = 'Акт сдачи-приемки услуг (сводный по услугам)'");
	КомандаОтправки.Порядок       = 20;
	
	КомандаОтправки = КомандыОтправки.Добавить();
	КомандаОтправки.Идентификатор = "АктСводныйРуб";
	КомандаОтправки.Представление = НСтр("ru = 'Акт сдачи-приемки услуг (сводный по услугам) (руб.)'");
	КомандаОтправки.Порядок       = 25;
	КомандаОтправки.СписокФорм    = "ФормаДокумента";
	
	КомандаОтправки = КомандыОтправки.Добавить();
	КомандаОтправки.Идентификатор = "СчетФактура";
	КомандаОтправки.Представление = НСтр("ru = 'Счет-фактура'");
	КомандаОтправки.Обработчик    = "ОтправкаПочтовыхСообщений.ОтправитьСчетФактураВыданный";
	КомандаОтправки.Порядок       = 30;
	
	КомандаОтправки = КомандыОтправки.Добавить();
	КомандаОтправки.Идентификатор = "СчетФактураСводный";
	КомандаОтправки.Представление = НСтр("ru = 'Счет-фактура (сводный по услугам)'");
	КомандаОтправки.Обработчик    = "ОтправкаПочтовыхСообщений.ОтправитьСчетФактураВыданный";
	КомандаОтправки.ДополнительныеПараметры.Вставить("СчетФактураСводный");
	КомандаОтправки.Порядок       = 40;
	
	// Универсальный передаточный документ
	КомандаОтправки = КомандыОтправки.Добавить();
	КомандаОтправки.Идентификатор = "УниверсальныйПередаточныйДокумент";
	КомандаОтправки.Представление = НСтр("ru = 'Универсальный передаточный документ (УПД)'");
	КомандаОтправки.Обработчик    = "ОтправкаПочтовыхСообщений.ОтправитьУПД";
	КомандаОтправки.Порядок       = 50;
	
	КомандаОтправки = КомандыОтправки.Добавить();
	КомандаОтправки.Идентификатор = "УниверсальныйПередаточныйДокументСводный";
	КомандаОтправки.Представление = НСтр("ru = 'Универсальный передаточный документ (УПД) (сводный по услугам)'");
	КомандаОтправки.Обработчик    = "ОтправкаПочтовыхСообщений.ОтправитьУПД";
	КомандаОтправки.ДополнительныеПараметры.Вставить("СчетФактураСводный");
	КомандаОтправки.Порядок       = 60;
	
	Если ПравоДоступа("Чтение", Метаданные.Документы.АР_СчетНаАренду) Тогда
		
		КомандаОтправки = КомандыОтправки.Добавить();
		КомандаОтправки.Идентификатор  = "СчетЗаказ";
		КомандаОтправки.МенеджерПечати = "Обработка.ПечатьСчетаНаОплату";
		КомандаОтправки.Представление  = НСтр("ru='Счет на оплату'");
		КомандаОтправки.Обработчик     = "ОтправкаПочтовыхСообщений.ОтправитьСчетНаОплатуПокупателю";
		КомандаОтправки.Порядок        = 70;
		
		КомандаОтправки = КомандыОтправки.Добавить();
		КомандаОтправки.Идентификатор  = "СчетЗаказ";
		КомандаОтправки.МенеджерПечати = "Обработка.ПечатьСчетаНаОплату";
		КомандаОтправки.Представление  = НСтр("ru='Счет на оплату (сводный по услугам)'");
		КомандаОтправки.Обработчик     = "ОтправкаПочтовыхСообщений.ОтправитьСчетНаОплатуПокупателю";
		КомандаОтправки.ДополнительныеПараметры.Вставить("Сводный", Истина);
		КомандаОтправки.Порядок        = 80;
		
	КонецЕсли;
КонецПроцедуры

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Акт";
	КомандаПечати.Представление = НСтр("ru = 'Акт сдачи-приемки услуг'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаСписка,ФормаВыбора,ФормаДокумента";

	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "АктРуб";
	КомандаПечати.Представление = НСтр("ru = 'Акт сдачи-приемки услуг (руб.)'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаДокумента";
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "АктСводный";
	КомандаПечати.Представление = НСтр("ru = 'Акт сдачи-приемки услуг (сводный по услугам)'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаСписка,ФормаВыбора,ФормаДокумента";
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "АктСводныйРуб";
	КомандаПечати.Представление = НСтр("ru = 'Акт сдачи-приемки услуг (сводный по услугам) (руб.)'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаДокумента";
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "СчетФактура";
	КомандаПечати.Представление = НСтр("ru = 'Счет-фактура'");
	КомандаПечати.Обработчик    = "УчетНДСКлиент.ВыполнитьКомандуПечатиСчетовФактур";
	КомандаПечати.ДополнительныеПараметры.Вставить("ИдентификаторВКомплекте","СчетФактураКомплект");
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "СчетФактураСводный";
	КомандаПечати.Представление = НСтр("ru = 'Счет-фактура (сводный по услугам)'");
	КомандаПечати.ДополнительныеПараметры.Вставить("СчетФактураСводный", Истина);
	КомандаПечати.Обработчик    = "УчетНДСКлиент.ВыполнитьКомандуПечатиСчетовФактурСводных";
	КомандаПечати.ДополнительныеПараметры.Вставить("ИдентификаторВКомплекте","СчетФактураСводныйКомплект");
	
	// Универсальный передаточный документ
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "УниверсальныйПередаточныйДокумент";
	КомандаПечати.Представление = НСтр("ru = 'Универсальный передаточный документ (УПД)'");
	КомандаПечати.Обработчик    = "УчетНДСКлиент.ВыполнитьКомандуПечатиУниверсальныхПередаточныхДокументов";
	КомандаПечати.ДополнительныеПараметры.Вставить("ИдентификаторВКомплекте","УниверсальныйПередаточныйДокументКомплект");
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "УниверсальныйПередаточныйДокументСводный";
	КомандаПечати.Представление = НСтр("ru = 'Универсальный передаточный документ (УПД) (сводный по услугам)'");
	КомандаПечати.ДополнительныеПараметры.Вставить("СчетФактураСводный", Истина);
	КомандаПечати.Обработчик    = "УчетНДСКлиент.ВыполнитьКомандуПечатиУниверсальныхПередаточныхДокументовСводных";
	КомандаПечати.ДополнительныеПараметры.Вставить("ИдентификаторВКомплекте","УниверсальныйПередаточныйДокументСводныйКомплект");
	
	Если ПравоДоступа("Чтение", Метаданные.Документы.АР_СчетНаАренду) Тогда
		
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Идентификатор  = "СчетЗаказ";
		КомандаПечати.МенеджерПечати = "Обработка.ПечатьСчетаНаОплату";
		КомандаПечати.Представление  = НСтр("ru = 'Счет на оплату'");
		КомандаПечати.СписокФорм     = "ФормаСписка,ФормаВыбора,ФормаДокумента";
		КомандаПечати.ДополнительныеПараметры.Вставить("ИдентификаторВКомплекте","СчетЗаказКомплект");
		КомандаПечати.Порядок = 120;
		
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Идентификатор  = "СчетЗаказ";
		КомандаПечати.МенеджерПечати = "Обработка.ПечатьСчетаНаОплату";
		КомандаПечати.Представление = НСтр("ru = 'Счет на оплату (сводный по услугам)'");
		КомандаПечати.СписокФорм     = "ФормаСписка,ФормаВыбора,ФормаДокумента";
		КомандаПечати.ДополнительныеПараметры.Вставить("ИдентификаторВКомплекте","СчетЗаказСводныйКомплект");
		КомандаПечати.ДополнительныеПараметры.Вставить("Сводный", Истина);
		КомандаПечати.Порядок = 125;
		
	КонецЕсли;
	
	Если ПравоДоступа("Использование", Метаданные.Обработки.ПечатьРублевыхСуммДокументовВВалюте) Тогда
		// Справка-расчет "Рублевые суммы документа в валюте"
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.МенеджерПечати = "Обработка.ПечатьРублевыхСуммДокументовВВалюте";
		КомандаПечати.Идентификатор = "РублевыеСуммыДокументаВВалюте";
		КомандаПечати.Представление = НСтр("ru = 'Справка-расчет ""Рублевые суммы документа в валюте""'");
		КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
		КомандаПечати.ФункциональныеОпции = "ИспользоватьВалютныйУчет";
		КомандаПечати.ДополнительныеПараметры.Вставить("НеВыводитьВКомплекте",Истина);
		КомандаПечати.Порядок = 130;
	КонецЕсли;
	
	// Комплект документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Обработчик = "УправлениеПечатьюБПКлиент.ПечатьКомплектаДокументов";
	КомандаПечати.Идентификатор = "КомплектДокументов";
	КомандаПечати.Представление = НСтр("ru = 'Комплект документов'");
	КомандаПечати.СписокФорм    = "ФормаСписка,ФормаВыбора,ФормаДокумента";
	КомандаПечати.ДополнительныеПараметры.Вставить("НеВыводитьВКомплекте",Истина);
	КомандаПечати.Порядок = 150;
	
	Если ПравоДоступа("Использование", Метаданные.Отчеты.РеестрДокументов) Тогда
		// Реестр документов
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Идентификатор = "Реестр";
		КомандаПечати.Представление = НСтр("ru = 'Реестр документов'");
		КомандаПечати.ЗаголовокФормы= НСтр("ru = 'Реестр документов ""Начисление арендной платы""'");
		КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
		КомандаПечати.СписокФорм    = "ФормаСписка";
		КомандаПечати.ДополнительныеПараметры.Вставить("НеВыводитьВКомплекте",Истина);
		КомандаПечати.Порядок       = 160;
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьДополнительныеРеквизитыДляРеестра() Экспорт
	
	Результат = Новый Структура("Информация", "Контрагент");
	
	Возврат Результат;
	
КонецФункции

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Акт") Тогда
		ТаблицаСведенийАктаОбОказанииУслуг = ПолучитьТаблицуСведенийАктаОбОказанииУслуг(МассивОбъектов,, Ложь);
		ПараметрыПечати.Вставить("ВидДокументаПечати",  "РеализацияТоваровУслуг");
		ПараметрыПечати.Вставить("ИмяПараметровПечати", "ПАРАМЕТРЫ_ПЕЧАТИ_РеализацияТоваровУслуг_Акт");
		ПараметрыПечати.Вставить("ИмяМакетаПечати",     "Документ.РеализацияТоваровУслуг.ПФ_MXL_Акт");
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Акт", "Акт сдачи-премки услуг", 
			ПечатьТорговыхДокументов.ПечатьАктаОбОказанииУслуг(ТаблицаСведенийАктаОбОказанииУслуг, ОбъектыПечати, ПараметрыПечати),, 
					"Документ.РеализацияТоваровУслуг.ПФ_MXL_Акт");
		ПараметрыВывода.Вставить("ФормироватьЭД", Истина);
	КонецЕсли;
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АктСводный") Тогда
		ТаблицаСведенийАктаОбОказанииУслуг = ПолучитьТаблицуСведенийАктаОбОказанииУслуг(МассивОбъектов, Истина, Ложь);
		ПараметрыПечати.Вставить("ВидДокументаПечати",  "РеализацияТоваровУслуг");
		ПараметрыПечати.Вставить("ИмяПараметровПечати", "ПАРАМЕТРЫ_ПЕЧАТИ_РеализацияТоваровУслуг_Акт");
		ПараметрыПечати.Вставить("ИмяМакетаПечати",     "Документ.РеализацияТоваровУслуг.ПФ_MXL_Акт");
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "АктСводный", "Акт сдачи-премки услуг (сводный по услугам)", 
			ПечатьТорговыхДокументов.ПечатьАктаОбОказанииУслуг(ТаблицаСведенийАктаОбОказанииУслуг, ОбъектыПечати, ПараметрыПечати),, 
					"Документ.РеализацияТоваровУслуг.ПФ_MXL_Акт");
		ПараметрыВывода.Вставить("ФормироватьЭД", Истина);
	КонецЕсли;
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АктРуб") Тогда
		ТаблицаСведенийАктаОбОказанииУслуг = ПолучитьТаблицуСведенийАктаОбОказанииУслуг(МассивОбъектов);
		ПараметрыПечати.Вставить("ВидДокументаПечати",  "РеализацияТоваровУслуг");
		ПараметрыПечати.Вставить("ИмяПараметровПечати", "ПАРАМЕТРЫ_ПЕЧАТИ_РеализацияТоваровУслуг_Акт");
		ПараметрыПечати.Вставить("ИмяМакетаПечати",     "Документ.РеализацияТоваровУслуг.ПФ_MXL_Акт");
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "АктРуб", "Акт сдачи-премки услуг (руб.)", 
			ПечатьТорговыхДокументов.ПечатьАктаОбОказанииУслуг(ТаблицаСведенийАктаОбОказанииУслуг, ОбъектыПечати, ПараметрыПечати),, 
					"Документ.РеализацияТоваровУслуг.ПФ_MXL_Акт");
		ПараметрыВывода.Вставить("ФормироватьЭД", Истина);
	КонецЕсли;
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АктСводныйРуб") Тогда
		ТаблицаСведенийАктаОбОказанииУслуг = ПолучитьТаблицуСведенийАктаОбОказанииУслуг(МассивОбъектов, Истина);
		ПараметрыПечати.Вставить("ВидДокументаПечати",  "РеализацияТоваровУслуг");
		ПараметрыПечати.Вставить("ИмяПараметровПечати", "ПАРАМЕТРЫ_ПЕЧАТИ_РеализацияТоваровУслуг_Акт");
		ПараметрыПечати.Вставить("ИмяМакетаПечати",     "Документ.РеализацияТоваровУслуг.ПФ_MXL_Акт");
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "АктСводныйРуб", "Акт сдачи-премки услуг (сводный по услугам) (руб.)", 
			ПечатьТорговыхДокументов.ПечатьАктаОбОказанииУслуг(ТаблицаСведенийАктаОбОказанииУслуг, ОбъектыПечати, ПараметрыПечати),, 
					"Документ.РеализацияТоваровУслуг.ПФ_MXL_Акт");
		ПараметрыВывода.Вставить("ФормироватьЭД", Истина);
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СчетФактураКомплект") Тогда
		УчетНДС.ПечатьКомплектаСчетовФактур(КоллекцияПечатныхФорм, МассивОбъектов, ОбъектыПечати, ПараметрыПечати, ПараметрыВывода);
	КонецЕсли;
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "УниверсальныйПередаточныйДокументКомплект") Тогда
		ИменаФайлов = Неопределено;
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "УниверсальныйПередаточныйДокумент", "УПД",
			УчетНДС.ПечатьКомплектаУПД(КоллекцияПечатныхФорм, МассивОбъектов, ОбъектыПечати, ИменаФайлов, ПараметрыПечати, ПараметрыВывода),,, ИменаФайлов);
	КонецЕсли;
	
	ОбщегоНазначенияБП.ЗаполнитьДополнительныеПараметрыПечати(МассивОбъектов,
		КоллекцияПечатныхФорм,
		ОбъектыПечати,
		ПараметрыВывода);
	
КонецПроцедуры

Функция ТекстЗапросаДанныеДляПечатиСчетовФактур(НомераТаблиц) Экспорт

	НомераТаблиц.Вставить("Реквизиты",     НомераТаблиц.Количество());
	НомераТаблиц.Вставить("СуммыПроводок", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТ_РублевыеСуммыДокументовВВалюте", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВременнаяТаблицаДокумента", НомераТаблиц.Количество());
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Реквизиты.Дата КАК ДатаОснования,
	|	Реквизиты.Организация КАК Организация,
	|	"""" КАК ЦифровойИндексОбособленногоПодразделения,
	|	ВЫБОР
	|		КОГДА Реквизиты.Организация.ОбособленноеПодразделение
	|			ТОГДА Реквизиты.Организация.ГоловнаяОрганизация
	|		ИНАЧЕ Реквизиты.Организация
	|	КОНЕЦ КАК Поставщик,
	|	ВЫБОР
	|		КОГДА Реквизиты.Организация.ОбособленноеПодразделение
	|			ТОГДА Реквизиты.Организация.ГоловнаяОрганизация.ИНН
	|		ИНАЧЕ Реквизиты.Организация.ИНН
	|	КОНЕЦ КАК ИННпоставщика,
	|	Реквизиты.Организация КАК ОбособленноеПодразделениеПоставщика,
	|	""он же"" КАК Грузоотправитель,
	|	ВЫБОР
	|		КОГДА Реквизиты.Контрагент.ОбособленноеПодразделение
	|				И Реквизиты.Контрагент.ГоловнойКонтрагент.СтранаРегистрации = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|			ТОГДА Реквизиты.Контрагент.ГоловнойКонтрагент
	|		ИНАЧЕ Реквизиты.Контрагент
	|	КОНЕЦ КАК Покупатель,
	|	Реквизиты.Контрагент.ИНН КАК ИННпокупателя,
	|	Реквизиты.Контрагент КАК ОбособленноеПодразделениеПокупателя,
	|	ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КАК Подразделение,
	|	Реквизиты.Контрагент КАК Грузополучатель,
	|	Реквизиты.ВалютаДокумента КАК Валюта,
	|	Реквизиты.ДоговорКонтрагента.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	Реквизиты.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах КАК РасчетыВУсловныхЕдиницах,
	|	Реквизиты.ДоговорКонтрагента.ВидДоговора КАК ВидДоговора,
	|	Реквизиты.ДоговорКонтрагента.Представление КАК Основание,
	|	Реквизиты.ДоговорКонтрагента.Дата КАК ОснованиеДата,
	|	Реквизиты.ДоговорКонтрагента.Номер КАК ОснованиеНомер,
	|	Реквизиты.ДоговорКонтрагента.УчетАгентскогоНДСПокупателем КАК НДСИсчисляетсяНалоговымАгентом,
	|	Реквизиты.Руководитель КАК Исполнитель,
	|	Реквизиты.ЗаРуководителяНаОсновании КАК ИсполнительНаОсновании,
	|	Реквизиты.ДоверенностьНомер КАК ДоверенностьНомер,
	|	Реквизиты.ДоверенностьДата КАК ДоверенностьДата,
	|	Реквизиты.ДоверенностьВыдана КАК ДоверенностьВыдана,
	|	Реквизиты.ДоверенностьЧерезКого КАК ДоверенностьЧерезКого,
	|	Реквизиты.ЗаЗаказчикаНаОсновании КАК ЗаЗаказчикаНаОсновании,
	|	Реквизиты.ОтветственныйЗаОформление КАК ОтветственныйЗаОформление,
	|	"""" КАК СведенияОТранспортировкеИГрузе,
	|	"""" КАК СопроводительныеДокументы,
	|	ЛОЖЬ КАК ПеревозкаАвтотранспортом,
	|	НЕОПРЕДЕЛЕНО КАК Перевозчик,
	|	Реквизиты.СчетОрганизации КАК БанковскийСчетПродавца,
	|	ЛОЖЬ КАК ЕстьТовары,
	|	"""" КАК АдресДоставки
	|ИЗ
	|	Документ.АР_НачислениеАренднойПлаты КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СуммыПроводок.ДокументОснование КАК ДокументОснование,
	|	СУММА(СуммыПроводок.Всего) КАК Всего,
	|	СУММА(СуммыПроводок.ВсегоНДС) КАК ВсегоНДС
	|ИЗ
	|	(ВЫБРАТЬ
	|		Хозрасчетный.Регистратор КАК ДокументОснование,
	|		СУММА(Хозрасчетный.Сумма) КАК Всего,
	|		0 КАК ВсегоНДС
	|	ИЗ
	|		РегистрБухгалтерии.Хозрасчетный КАК Хозрасчетный
	|	ГДЕ
	|		Хозрасчетный.Регистратор = &ДокументОснование
	|		И ВЫРАЗИТЬ(Хозрасчетный.Регистратор КАК Документ.АР_НачислениеАренднойПлаты).ДоговорКонтрагента.РасчетыВУсловныхЕдиницах = ИСТИНА
	|		И ВЫРАЗИТЬ(Хозрасчетный.Регистратор КАК Документ.АР_НачислениеАренднойПлаты).ВалютаДокумента <> &ВалютаРеглУчета
	|		И Хозрасчетный.СчетДт = ВЫРАЗИТЬ(Хозрасчетный.Регистратор КАК Документ.АР_НачислениеАренднойПлаты).СчетУчетаРасчетовСКонтрагентом
	|		И Хозрасчетный.СчетКт <> ВЫРАЗИТЬ(Хозрасчетный.Регистратор КАК Документ.АР_НачислениеАренднойПлаты).СчетУчетаРасчетовСКонтрагентом
	|		И Хозрасчетный.ВалютнаяСуммаДт <> 0
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Хозрасчетный.Регистратор
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Хозрасчетный.Регистратор,
	|		0,
	|		СУММА(Хозрасчетный.Сумма)
	|	ИЗ
	|		РегистрБухгалтерии.Хозрасчетный КАК Хозрасчетный
	|	ГДЕ
	|		Хозрасчетный.Регистратор = &ДокументОснование
	|		И ВЫРАЗИТЬ(Хозрасчетный.Регистратор КАК Документ.АР_НачислениеАренднойПлаты).ДоговорКонтрагента.РасчетыВУсловныхЕдиницах = ИСТИНА
	|		И ВЫРАЗИТЬ(Хозрасчетный.Регистратор КАК Документ.АР_НачислениеАренднойПлаты).ВалютаДокумента <> &ВалютаРеглУчета
	|		И Хозрасчетный.СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДС)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Хозрасчетный.Регистратор) КАК СуммыПроводок
	|
	|СГРУППИРОВАТЬ ПО
	|	СуммыПроводок.ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РублевыеСуммыДокументовВВалютеСрезПоследних.НомерСтрокиДокумента КАК НомерСтрокиДокумента,
	|	РублевыеСуммыДокументовВВалютеСрезПоследних.ТабличнаяЧастьДокумента КАК ТабличнаяЧастьДокумента,
	|	РублевыеСуммыДокументовВВалютеСрезПоследних.Всего КАК Всего,
	|	РублевыеСуммыДокументовВВалютеСрезПоследних.НДС КАК НДС,
	|	РублевыеСуммыДокументовВВалютеСрезПоследних.НалоговаяБазаНДС КАК НалоговаяБазаНДС
	|ПОМЕСТИТЬ РублевыеСуммыДокументовВВалютеСрезПоследних
	|ИЗ
	|	РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РублевыеСуммыДокументовВВалютеСрезПоследних
	|ГДЕ
	|	РублевыеСуммыДокументовВВалютеСрезПоследних.Регистратор = &ДокументОснование
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерСтрокиДокумента,
	|	ТабличнаяЧастьДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	1 КАК НомерТабЧасти,
	|	ТаблицаУслуги.НомерСтроки КАК НомерСтроки,
	|	ТаблицаУслуги.Номенклатура КАК Товар,
	|	ТаблицаУслуги.Номенклатура.Код КАК ТоварКод,
	|	ТаблицаУслуги.Номенклатура.КодОКВЭД2 КАК ТоварАртикул,
	|	ТаблицаУслуги.Содержание КАК ТоварНаименование,
	|	"""" КАК СтранаПроисхождения,
	|	"""" КАК ПредставлениеСтраны,
	|	"""" КАК НомерГТД,
	|	"""" КАК ПредставлениеГТД,
	|	"""" КАК РегистрационныйНомерТД,
	|	ТаблицаУслуги.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ТаблицаУслуги.Количество КАК Количество,
	|	ТаблицаУслуги.Цена КАК Цена,
	|	ТаблицаУслуги.Сумма КАК Сумма,
	|	ТаблицаУслуги.СуммаНДС КАК СуммаНДС,
	|	ТаблицаУслуги.СтавкаНДС КАК СтавкаНДС,
	|	ИСТИНА КАК ЭтоУслуга,
	|	ТаблицаУслуги.Ссылка.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	ТаблицаУслуги.Ссылка КАК Ссылка,
	|	ЛОЖЬ КАК ЭтоКомиссия,
	|	ЕСТЬNULL(РублевыеСуммыДокументовВВалютеСрезПоследних.Всего, 0) КАК ВсегоРуб,
	|	ЕСТЬNULL(РублевыеСуммыДокументовВВалютеСрезПоследних.НДС, 0) КАК НДСРуб,
	|	ЕСТЬNULL(РублевыеСуммыДокументовВВалютеСрезПоследних.НалоговаяБазаНДС, 0) КАК СуммаБезНДСРуб,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК КонтрагентСводныйСФ,
	|	НЕОПРЕДЕЛЕНО КАК ПериодичностьУслуги,
	|	ЗНАЧЕНИЕ(Справочник.КлассификаторТНВЭД.ПустаяСсылка) КАК ТоварКодТНВЭД
	|ПОМЕСТИТЬ ТаблицаДокумента
	|ИЗ
	|	Документ.АР_НачислениеАренднойПлаты.Состав КАК ТаблицаУслуги
	|		ЛЕВОЕ СОЕДИНЕНИЕ РублевыеСуммыДокументовВВалютеСрезПоследних КАК РублевыеСуммыДокументовВВалютеСрезПоследних
	|		ПО ТаблицаУслуги.НомерСтроки = РублевыеСуммыДокументовВВалютеСрезПоследних.НомерСтрокиДокумента
	|			И (РублевыеСуммыДокументовВВалютеСрезПоследних.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Услуги))
	|ГДЕ
	|	ТаблицаУслуги.Ссылка = &ДокументОснование
	|	И НЕ &СчетФактураСводный
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	1,
	|	МИНИМУМ(ТаблицаУслуги.НомерСтроки),
	|	ТаблицаУслуги.Номенклатура,
	|	ТаблицаУслуги.Номенклатура.Код,
	|	ТаблицаУслуги.Номенклатура.КодОКВЭД2,
	|	ВЫРАЗИТЬ(ТаблицаУслуги.Номенклатура.НаименованиеПолное + "" по договору "" + ТаблицаУслуги.Ссылка.ДоговорКонтрагента.Наименование + "" за "" + &ПредставлениеПериода КАК СТРОКА(1000)),
	|	"""",
	|	"""",
	|	"""",
	|	"""",
	|	"""",
	|	ВЫБОР
	|		КОГДА ТаблицаУслуги.Номенклатура.АР_ВыводитьЕдиницуИзмеренияИЦену
	|			ТОГДА ТаблицаУслуги.Номенклатура.ЕдиницаИзмерения
	|		ИНАЧЕ """"
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаУслуги.Номенклатура.АР_ВыводитьЕдиницуИзмеренияИЦену
	|			ТОГДА СУММА(ТаблицаУслуги.Количество)
	|		ИНАЧЕ МАКСИМУМ(1)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаУслуги.Номенклатура.АР_ВыводитьЕдиницуИзмеренияИЦену
	|			ТОГДА СУММА(ТаблицаУслуги.Сумма) / ВЫБОР
	|					КОГДА СУММА(ТаблицаУслуги.Количество) = 0
	|						ТОГДА 1
	|					ИНАЧЕ СУММА(ТаблицаУслуги.Количество)
	|				КОНЕЦ
	|		ИНАЧЕ СУММА(ТаблицаУслуги.Сумма)
	|	КОНЕЦ,
	|	СУММА(ТаблицаУслуги.Сумма),
	|	СУММА(ТаблицаУслуги.СуммаНДС),
	|	ТаблицаУслуги.СтавкаНДС,
	|	ИСТИНА,
	|	ТаблицаУслуги.Ссылка.СуммаВключаетНДС,
	|	ТаблицаУслуги.Ссылка,
	|	ЛОЖЬ,
	|	СУММА(ЕСТЬNULL(РублевыеСуммыДокументовВВалютеСрезПоследних.Всего, 0)),
	|	СУММА(ЕСТЬNULL(РублевыеСуммыДокументовВВалютеСрезПоследних.НДС, 0)),
	|	СУММА(ЕСТЬNULL(РублевыеСуммыДокументовВВалютеСрезПоследних.НалоговаяБазаНДС, 0)),
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка),
	|	НЕОПРЕДЕЛЕНО,
	|	ЗНАЧЕНИЕ(Справочник.КлассификаторТНВЭД.ПустаяСсылка)
	|ИЗ
	|	Документ.АР_НачислениеАренднойПлаты.Состав КАК ТаблицаУслуги
	|		ЛЕВОЕ СОЕДИНЕНИЕ РублевыеСуммыДокументовВВалютеСрезПоследних КАК РублевыеСуммыДокументовВВалютеСрезПоследних
	|		ПО ТаблицаУслуги.НомерСтроки = РублевыеСуммыДокументовВВалютеСрезПоследних.НомерСтрокиДокумента
	|			И (РублевыеСуммыДокументовВВалютеСрезПоследних.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Услуги))
	|ГДЕ
	|	ТаблицаУслуги.Ссылка = &ДокументОснование
	|	И &СчетФактураСводный
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаУслуги.Номенклатура,
	|	ТаблицаУслуги.СтавкаНДС,
	|	ТаблицаУслуги.Ссылка.СуммаВключаетНДС,
	|	ТаблицаУслуги.Ссылка,
	|	ВЫБОР
	|		КОГДА ТаблицаУслуги.Номенклатура.АР_ВыводитьЕдиницуИзмеренияИЦену
	|			ТОГДА ТаблицаУслуги.Номенклатура.ЕдиницаИзмерения
	|		ИНАЧЕ ЕСТЬNULL(&ЕдиницаИзмеренияШтука, ТаблицаУслуги.Номенклатура.ЕдиницаИзмерения)
	|	КОНЕЦ,
	|	ВЫРАЗИТЬ(ТаблицаУслуги.Номенклатура.НаименованиеПолное + "" по договору "" + ТаблицаУслуги.Ссылка.ДоговорКонтрагента.Наименование + "" за "" + &ПредставлениеПериода КАК СТРОКА(1000)),
	|	ТаблицаУслуги.Номенклатура.Код,
	|	ТаблицаУслуги.Номенклатура.КодОКВЭД2,
	|	ВЫБОР
	|		КОГДА ТаблицаУслуги.Номенклатура.АР_ВыводитьЕдиницуИзмеренияИЦену
	|			ТОГДА ТаблицаУслуги.Номенклатура.ЕдиницаИзмерения
	|		ИНАЧЕ """"
	|	КОНЕЦ,
	|	ТаблицаУслуги.Номенклатура.АР_ВыводитьЕдиницуИзмеренияИЦену";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаПечатьУниверсальныхПередаточныхДокументов(ИспользуетсяПостановлениеНДС981 = Неопределено) Экспорт

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Документ.СчетФактураВыданный.ПустаяСсылка) КАК СчетФактура,
	|	РеализацияТоваровУслуг.Дата КАК Дата,
	|	РеализацияТоваровУслуг.Номер КАК Номер,
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаФактуры,
	|	РеализацияТоваровУслуг.Руководитель,
	|	РеализацияТоваровУслуг.ГлавныйБухгалтер,
	|	ИСТИНА КАК СчетФактураБезНДС,
	|	ЛОЖЬ КАК Исправление,
	|	НЕОПРЕДЕЛЕНО КАК НомерИсправления,
	|	НЕОПРЕДЕЛЕНО КАК ДатаИсправления,
	|	ИСТИНА КАК УдалитьПрефиксыИзНомера,
	|	ИСТИНА КАК ЭтоСчетФактураВыданный,
	|	ИСТИНА КАК ВыводитьСуммуБезНДС,
	|	РеализацияТоваровУслуг.Ссылка КАК ДокументОснование,
	|	1 КАК НомерСтроки,
	|	РеализацияТоваровУслуг.Контрагент,
	|	РеализацияТоваровУслуг.ДоговорКонтрагента,
	|	"""" КАК ИдентификаторГосКонтракта,
	|	"""" КАК КППСчетаФактуры,
	|	"""" КАК КПППродавца,
	|	РеализацияТоваровУслуг.Дата КАК ДатаСведений
	|ИЗ
	|	Документ.АР_НачислениеАренднойПлаты КАК РеализацияТоваровУслуг
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка В(&МассивОбъектов)
	|	И &УсловиеПоДате";
	
	Если ИспользуетсяПостановлениеНДС981 = Неопределено Тогда 
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеПоДате", "ИСТИНА");
	ИначеЕсли ИспользуетсяПостановлениеНДС981 Тогда 
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеПоДате",
			"РеализацияТоваровУслуг.Дата >= ДАТАВРЕМЯ(2017,10,1)");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеПоДате",
			"РеализацияТоваровУслуг.Дата < ДАТАВРЕМЯ(2017,10,1)");
	КонецЕсли;
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ПолучитьТаблицуСведенийАктаОбОказанииУслуг(Знач МассивОбъектов, Сводный = Ложь, СуммыВРублях = Истина) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТаблицаСведений = ПечатьТорговыхДокументов.ПолучитьОписаниеАктаОбОказанииУслуг();
	
	Запрос = Новый Запрос();
	Запрос.Текст = ПолучитьТекстЗапросаДляФормированияТаблицыСведенийАктаОбОказанииУслуг();
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("ДополнительнаяКолонкаПечатныхФормДокументов", Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить());

	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	Выборка = РезультатыЗапроса[2].Выбрать();
	Если Сводный Тогда
		СтрокиДокументов = РезультатыЗапроса[4].Выгрузить();
	Иначе
		СтрокиДокументов = РезультатыЗапроса[3].Выгрузить();
	КонецЕсли;
	СтрокиДокументов.Индексы.Добавить("Документ");
	
	ВалютаРегУчета = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	РеквизитыВалютыРегУчета = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ВалютаРегУчета, "Код, Наименование");
	
	Пока Выборка.Следующий() Цикл
		
		СведенияОДокументе = ТаблицаСведений.Добавить();
		ЗаполнитьЗначенияСвойств(СведенияОДокументе, Выборка);
		
		Если СуммыВРублях И Выборка.РасчетыВУсловныхЕдиницах Тогда
			СведенияОДокументе.Валюта             = ВалютаРегУчета;
			СведенияОДокументе.ВалютаКод          = РеквизитыВалютыРегУчета.Код;
			СведенияОДокументе.ВалютаНаименование = РеквизитыВалютыРегУчета.Наименование;
		КонецЕсли;
		
		ТаблицаДокумента = ПечатьТорговыхДокументов.ПолучитьОписаниеТаблицыАктаОбОказанииУслуг();
		
		Отбор = Новый Структура("Документ", Выборка.Документ);
		СтрокиДокумента = СтрокиДокументов.НайтиСтроки(Отбор);
		
		НуженПересчетВРубли = Ложь;
		Если Выборка.Валюта <> ВалютаРегУчета
			И Выборка.РасчетыВУсловныхЕдиницах Тогда
			НуженПересчетВРубли = Истина;
		КонецЕсли;
		
		Если НуженПересчетВРубли И НЕ СуммыВРублях Тогда
			НуженПересчетВРубли = Ложь;
		ИначеЕсли СуммыВРублях Тогда
			НуженПересчетВРубли = Истина;
		КонецЕсли;
		
		Для Каждого Строка Из СтрокиДокумента Цикл
			
			СтрокаТаблицыДокумента = ТаблицаДокумента.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТаблицыДокумента, Строка);
			
			ТоварНаименованиеПолное = ?(ЗначениеЗаполнено(СтрокаТаблицыДокумента.Номенклатура), СтрокаТаблицыДокумента.Номенклатура.НаименованиеПолное, "");
			ТоварНаименование = ?(ЗначениеЗаполнено(СтрокаТаблицыДокумента.Номенклатура), СтрокаТаблицыДокумента.Номенклатура.Наименование, "");
			
			Если Сводный Тогда
				НаименованиеУслуги = ?(НЕ ЗначениеЗаполнено(ТоварНаименованиеПолное), ТоварНаименование, ТоварНаименованиеПолное);
				НаименованиеУслуги = СокрЛП(НаименованиеУслуги) + " по договору " + СведенияОДокументе.ПредставлениеДоговора + " за " + ПредставлениеПериода(СведенияОДокументе.НачалоПериода, КонецДня(СведенияОДокументе.ОкончаниеПериода));
			Иначе
				НаименованиеУслуги = ?(ЗначениеЗаполнено(СтрокаТаблицыДокумента.НоменклатураНаименование), СтрокаТаблицыДокумента.НоменклатураНаименование, ТоварНаименованиеПолное);			
			КонецЕсли;
			СтрокаТаблицыДокумента.НоменклатураНаименование = СокрЛП(НаименованиеУслуги);
			
			Если НуженПересчетВРубли Тогда
				Если Строка.СуществуютЗаписиРублевыхСумм Тогда
					СтрокаТаблицыДокумента.СуммаНДС = Строка.НДСВРублях;
					СтрокаТаблицыДокумента.СуммаБезНДС = Строка.ВсегоВРублях - Строка.НДСВРублях;
				Иначе
					Кратность = ?(Выборка.Кратность = 0, 1, Выборка.Кратность);
					СтрокаТаблицыДокумента.СуммаНДС = Строка.СуммаНДС * Выборка.Курс / Кратность;;
					СтрокаТаблицыДокумента.СуммаБезНДС = (Строка.СуммаБезНДС + Строка.СуммаНДС) * Выборка.Курс / Кратность - СтрокаТаблицыДокумента.СуммаНДС;
				КонецЕсли;
				СтрокаТаблицыДокумента.Сумма = СтрокаТаблицыДокумента.СуммаБезНДС + ?(Выборка.СуммаВключаетНДС, СтрокаТаблицыДокумента.СуммаНДС, 0);
				СтрокаТаблицыДокумента.Цена  = ?(СтрокаТаблицыДокумента.Количество=0, СтрокаТаблицыДокумента.Сумма, СтрокаТаблицыДокумента.Сумма / СтрокаТаблицыДокумента.Количество);
			КонецЕсли;
			
			Если Не Сводный И Не СтрокаТаблицыДокумента.Номенклатура.АР_ПостояннаяЧастьОплаты Тогда
				СтрокаТаблицыДокумента.Цена = СтрокаТаблицыДокумента.Цена;
			ИначеЕсли НЕ НуженПересчетВРубли И АР_ПроцедурыНачисления.ЦенаДолжнаБытьРавнаСтавке(СведенияОДокументе.Документ, СтрокаТаблицыДокумента.СпособНачисления, СтрокаТаблицыДокумента.КоличествоДней) Тогда
				СтрокаТаблицыДокумента.Цена = СтрокаТаблицыДокумента.СтавкаСпособаНачисления;
			Иначе
				СтрокаТаблицыДокумента.Цена  = СтрокаТаблицыДокумента.Сумма / ?(СтрокаТаблицыДокумента.Количество = 0, 1, СтрокаТаблицыДокумента.Количество);
			КонецЕсли;
			
			СтрокаТаблицыДокумента.СуммаСНДС = СтрокаТаблицыДокумента.СуммаБезНДС + СтрокаТаблицыДокумента.СуммаНДС;
			
		КонецЦикла;
		
		СведенияОДокументе.ТаблицаДокумента = ТаблицаДокумента;
		
		ПечатьТорговыхДокументов.ЗаполнитьДанныеОтветственныхЛиц(СведенияОДокументе, Новый Структура("ЗаполнятьРуководителя"));
		
	КонецЦикла;
	
	Возврат ТаблицаСведений;
	
КонецФункции

Функция ПолучитьТекстЗапросаДляФормированияТаблицыСведенийАктаОбОказанииУслуг()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор КАК Регистратор,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента КАК НомерСтрокиДокумента,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента КАК ТабличнаяЧастьДокумента,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего КАК Всего,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС КАК НДС,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС КАК НалоговаяБазаНДС
	|ПОМЕСТИТЬ РегистрСведенийРублевыеСуммыДокументовВВалюте
	|ИЗ
	|	РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|ГДЕ
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор В(&МассивОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	НомерСтрокиДокумента,
	|	ТабличнаяЧастьДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Ссылка КАК Ссылка,
	|	РеализацияТоваровУслуг.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	РеализацияТоваровУслуг.Дата КАК ДатаДокумента
	|ПОМЕСТИТЬ ДокументыДляПечати
	|ИЗ
	|	Документ.АР_НачислениеАренднойПлаты КАК РеализацияТоваровУслуг
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка В(&МассивОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Ссылка КАК Документ,
	|	РеализацияТоваровУслуг.Дата КАК ДатаДляПолученияСведений,
	|	РеализацияТоваровУслуг.НачалоПериода КАК НачалоПериода,
	|	РеализацияТоваровУслуг.ОкончаниеПериода КАК ОкончаниеПериода,
	|	ДанныеПервичныхДокументов.Номер КАК НомерДокумента,
	|	ДанныеПервичныхДокументов.Дата КАК ДатаДокумента,
	|	РеализацияТоваровУслуг.Контрагент КАК Получатель,
	|	РеализацияТоваровУслуг.ДоговорКонтрагента.ГосударственныйКонтракт.Код КАК ГосударственныйКонтракт,
	|	ПРЕДСТАВЛЕНИЕ(РеализацияТоваровУслуг.ДоговорКонтрагента) КАК ПредставлениеДоговора,
	|	РеализацияТоваровУслуг.Организация КАК Поставщик,
	|	РеализацияТоваровУслуг.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК Подразделение,
	|	РеализацияТоваровУслуг.СчетОрганизации КАК БанковскийСчетПродавца,
	|	РеализацияТоваровУслуг.ВалютаДокумента КАК Валюта,
	|	РеализацияТоваровУслуг.КурсВзаиморасчетов КАК Курс,
	|	РеализацияТоваровУслуг.КратностьВзаиморасчетов КАК Кратность,
	|	ЕСТЬNULL(РеализацияТоваровУслуг.ВалютаДокумента.Код, """") КАК ВалютаКод,
	|	ЕСТЬNULL(РеализацияТоваровУслуг.ВалютаДокумента.Наименование, """") КАК ВалютаНаименование,
	|	ЕСТЬNULL(РеализацияТоваровУслуг.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах, ЛОЖЬ) КАК РасчетыВУсловныхЕдиницах,
	|	РеализацияТоваровУслуг.ДокументОснование КАК ДокументОснование,
	|	РеализацияТоваровУслуг.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	РеализацияТоваровУслуг.Руководитель КАК Руководитель,
	|	РеализацияТоваровУслуг.ЗаРуководителяНаОсновании КАК ЗаРуководителяНаОсновании,
	|	РеализацияТоваровУслуг.ДоверенностьЧерезКого КАК ПредставительЗаказчика,
	|	РеализацияТоваровУслуг.ЗаЗаказчикаНаОсновании КАК ЗаЗаказчикаНаОсновании
	|ИЗ
	|	Документ.АР_НачислениеАренднойПлаты КАК РеализацияТоваровУслуг
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО РеализацияТоваровУслуг.Организация = ДанныеПервичныхДокументов.Организация
	|			И РеализацияТоваровУслуг.Ссылка = ДанныеПервичныхДокументов.Документ
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка В
	|			(ВЫБРАТЬ
	|				ДокументыДляПечати.Ссылка
	|			ИЗ
	|				ДокументыДляПечати)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаДокумента,
	|	Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Ссылка КАК Документ,
	|	РеализацияТоваровУслуг.СпособНачисления,
	|	РеализацияТоваровУслуг.СтавкаСпособаНачисления,
	|	РеализацияТоваровУслуг.КоличествоДней,
	|	ДокументыДляПечати.ДатаДокумента КАК ДатаДокумента,
	|	ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Услуги) КАК ТабличнаяЧасть,
	|	1 КАК ПорядокТабличнойЧасти,
	|	РеализацияТоваровУслуг.НомерСтроки КАК НомерСтроки,
	|	РеализацияТоваровУслуг.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА НЕ РеализацияТоваровУслуг.Содержание ПОДОБНО """"
	|			ТОГДА РеализацияТоваровУслуг.Содержание
	|		КОГДА НЕ РеализацияТоваровУслуг.Номенклатура.НаименованиеПолное ПОДОБНО """"
	|			ТОГДА РеализацияТоваровУслуг.Номенклатура.НаименованиеПолное
	|		ИНАЧЕ РеализацияТоваровУслуг.Номенклатура.Наименование
	|	КОНЕЦ КАК НоменклатураНаименование,
	|	ВЫБОР
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул)
	|			ТОГДА РеализацияТоваровУслуг.Номенклатура.Артикул
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Код)
	|			ТОГДА РеализацияТоваровУслуг.Номенклатура.Код
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.НеВыводить)
	|			ТОГДА """"
	|	КОНЕЦ КАК НоменклатураКод,
	|	ЕСТЬNULL(РеализацияТоваровУслуг.Номенклатура.ЕдиницаИзмерения, ЗНАЧЕНИЕ(Справочник.КлассификаторЕдиницИзмерения.ПустаяСсылка)) КАК ЕдиницаИзмерения,
	|	ЕСТЬNULL(РеализацияТоваровУслуг.Номенклатура.ЕдиницаИзмерения.Код, """") КАК ЕдиницаИзмеренияКод,
	|	ЕСТЬNULL(РеализацияТоваровУслуг.Номенклатура.ЕдиницаИзмерения.Наименование, """") КАК ЕдиницаИзмеренияНаименование,
	|	РеализацияТоваровУслуг.Количество КАК Количество,
	|	РеализацияТоваровУслуг.Цена КАК Цена,
	|	РеализацияТоваровУслуг.Сумма КАК Сумма,
	|	ВЫБОР
	|		КОГДА ДокументыДляПечати.СуммаВключаетНДС
	|			ТОГДА РеализацияТоваровУслуг.Сумма - РеализацияТоваровУслуг.СуммаНДС
	|		ИНАЧЕ РеализацияТоваровУслуг.Сумма
	|	КОНЕЦ КАК СуммаБезНДС,
	|	РеализацияТоваровУслуг.СуммаНДС КАК СуммаНДС,
	|	РеализацияТоваровУслуг.СтавкаНДС КАК СтавкаНДС,
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего, 0) КАК ВсегоВРублях,
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС, 0) КАК НДСВРублях,
	|	ВЫБОР
	|		КОГДА РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК СуществуютЗаписиРублевыхСумм
	|ИЗ
	|	ДокументыДляПечати КАК ДокументыДляПечати
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.АР_НачислениеАренднойПлаты.Состав КАК РеализацияТоваровУслуг
	|		ПО ДокументыДляПечати.Ссылка = РеализацияТоваровУслуг.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|		ПО (РеализацияТоваровУслуг.Ссылка = РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор)
	|			И (РеализацияТоваровУслуг.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента)
	|			И (РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Услуги))
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаДокумента,
	|	Документ,
	|	ПорядокТабличнойЧасти,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Ссылка КАК Документ,
	|	ДокументыДляПечати.ДатаДокумента КАК ДатаДокумента,
	|	ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Услуги) КАК ТабличнаяЧасть,
	|	1 КАК ПорядокТабличнойЧасти,
	|	МИНИМУМ(РеализацияТоваровУслуг.НомерСтроки) КАК НомерСтроки,
	|	РеализацияТоваровУслуг.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА НЕ РеализацияТоваровУслуг.Номенклатура.НаименованиеПолное ПОДОБНО """"
	|			ТОГДА РеализацияТоваровУслуг.Номенклатура.НаименованиеПолное
	|		ИНАЧЕ РеализацияТоваровУслуг.Номенклатура.Наименование
	|	КОНЕЦ КАК НоменклатураНаименование,
	|	ВЫБОР
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул)
	|			ТОГДА РеализацияТоваровУслуг.Номенклатура.Артикул
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Код)
	|			ТОГДА РеализацияТоваровУслуг.Номенклатура.Код
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.НеВыводить)
	|			ТОГДА """"
	|	КОНЕЦ КАК НоменклатураКод,
	|	ВЫБОР
	|		КОГДА РеализацияТоваровУслуг.Номенклатура.АР_ВыводитьЕдиницуИзмеренияИЦену
	|			ТОГДА ЕСТЬNULL(РеализацияТоваровУслуг.Номенклатура.ЕдиницаИзмерения, ЗНАЧЕНИЕ(Справочник.КлассификаторЕдиницИзмерения.ПустаяСсылка))
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА РеализацияТоваровУслуг.Номенклатура.АР_ВыводитьЕдиницуИзмеренияИЦену
	|			ТОГДА ЕСТЬNULL(РеализацияТоваровУслуг.Номенклатура.ЕдиницаИзмерения.Код, """")
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ЕдиницаИзмеренияКод,
	|	ВЫБОР
	|		КОГДА РеализацияТоваровУслуг.Номенклатура.АР_ВыводитьЕдиницуИзмеренияИЦену
	|			ТОГДА ЕСТЬNULL(РеализацияТоваровУслуг.Номенклатура.ЕдиницаИзмерения.Наименование, """")
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ЕдиницаИзмеренияНаименование,
	|	ВЫБОР
	|		КОГДА РеализацияТоваровУслуг.Номенклатура.АР_ВыводитьЕдиницуИзмеренияИЦену
	|			ТОГДА СУММА(РеализацияТоваровУслуг.Количество)
	|		ИНАЧЕ МАКСИМУМ(1)
	|	КОНЕЦ КАК Количество,
	|	СУММА(ВЫБОР
	|			КОГДА РеализацияТоваровУслуг.Номенклатура.АР_ВыводитьЕдиницуИзмеренияИЦену
	|				ТОГДА РеализацияТоваровУслуг.Сумма / ВЫБОР
	|						КОГДА РеализацияТоваровУслуг.Количество = 0
	|							ТОГДА 1
	|						ИНАЧЕ РеализацияТоваровУслуг.Количество
	|					КОНЕЦ
	|			ИНАЧЕ РеализацияТоваровУслуг.Сумма
	|		КОНЕЦ) КАК Цена,
	|	СУММА(РеализацияТоваровУслуг.Сумма) КАК Сумма,
	|	СУММА(ВЫБОР
	|			КОГДА ДокументыДляПечати.СуммаВключаетНДС
	|				ТОГДА РеализацияТоваровУслуг.Сумма - РеализацияТоваровУслуг.СуммаНДС
	|			ИНАЧЕ РеализацияТоваровУслуг.Сумма
	|		КОНЕЦ) КАК СуммаБезНДС,
	|	СУММА(РеализацияТоваровУслуг.СуммаНДС) КАК СуммаНДС,
	|	СУММА(ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего, 0)) КАК ВсегоВРублях,
	|	СУММА(ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС, 0)) КАК НДСВРублях,
	|	ВЫБОР
	|		КОГДА РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК СуществуютЗаписиРублевыхСумм
	|ИЗ
	|	ДокументыДляПечати КАК ДокументыДляПечати
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.АР_НачислениеАренднойПлаты.Состав КАК РеализацияТоваровУслуг
	|		ПО ДокументыДляПечати.Ссылка = РеализацияТоваровУслуг.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|		ПО (РеализацияТоваровУслуг.Ссылка = РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор)
	|			И (РеализацияТоваровУслуг.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента)
	|			И (РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Услуги))
	|
	|СГРУППИРОВАТЬ ПО
	|	ДокументыДляПечати.ДатаДокумента,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор,
	|	РеализацияТоваровУслуг.Ссылка,
	|	РеализацияТоваровУслуг.Номенклатура,
	|	ВЫБОР
	|		КОГДА РеализацияТоваровУслуг.Номенклатура.АР_ВыводитьЕдиницуИзмеренияИЦену
	|			ТОГДА ЕСТЬNULL(РеализацияТоваровУслуг.Номенклатура.ЕдиницаИзмерения, ЗНАЧЕНИЕ(Справочник.КлассификаторЕдиницИзмерения.ПустаяСсылка))
	|		ИНАЧЕ """"
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА РеализацияТоваровУслуг.Номенклатура.АР_ВыводитьЕдиницуИзмеренияИЦену
	|			ТОГДА ЕСТЬNULL(РеализацияТоваровУслуг.Номенклатура.ЕдиницаИзмерения.Код, """")
	|		ИНАЧЕ """"
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА РеализацияТоваровУслуг.Номенклатура.АР_ВыводитьЕдиницуИзмеренияИЦену
	|			ТОГДА ЕСТЬNULL(РеализацияТоваровУслуг.Номенклатура.ЕдиницаИзмерения.Наименование, """")
	|		ИНАЧЕ """"
	|	КОНЕЦ,
	|	РеализацияТоваровУслуг.СтавкаНДС,
	|	ВЫБОР
	|		КОГДА НЕ РеализацияТоваровУслуг.Номенклатура.НаименованиеПолное ПОДОБНО """"
	|			ТОГДА РеализацияТоваровУслуг.Номенклатура.НаименованиеПолное
	|		ИНАЧЕ РеализацияТоваровУслуг.Номенклатура.Наименование
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул)
	|			ТОГДА РеализацияТоваровУслуг.Номенклатура.Артикул
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Код)
	|			ТОГДА РеализацияТоваровУслуг.Номенклатура.Код
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.НеВыводить)
	|			ТОГДА """"
	|	КОНЕЦ,
	|	РеализацияТоваровУслуг.Номенклатура.АР_ВыводитьЕдиницуИзмеренияИЦену
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаДокумента,
	|	Документ,
	|	ПорядокТабличнойЧасти,
	|	НомерСтроки";
		
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ПодготовитьТекстЗапросаДляПечатиСправкиРасчетаРублевыеСуммыДокументовВВалюте(НомераТаблиц) Экспорт
	
	НомераТаблиц.Вставить("ВТ_ТаблицаПоШапкеДокумента",                                НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТаблицаРеквизитов",                                         НомераТаблиц.Количество());
	НомераТаблиц.Вставить("РегистрСведенийРублевыеСуммыДокументовВВалюте",             НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТ_ПоДокументамЗачетнныхАвансов",                           НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТаблицаПредоплат",                                          НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Уничтожение_ВТ_ПоДокументамЗачетнныхАвансов",               НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Уничтожение_ВТ_ТаблицаПоШапкеДокумента",                    НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТаблицаСумм",                                               НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Уничтожение_РегистрСведенийРублевыеСуммыДокументовВВалюте", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеОбрабатываемогоДокумента.Ссылка КАК Ссылка,
	|	ДанныеОбрабатываемогоДокумента.Дата КАК Дата,
	|	ДанныеОбрабатываемогоДокумента.Проведен КАК Проведен,
	|	ДанныеОбрабатываемогоДокумента.ВалютаДокумента КАК ВалютаДокумента,
	|	ДанныеОбрабатываемогоДокумента.Организация КАК Организация,
	|	ДанныеОбрабатываемогоДокумента.Контрагент КАК Контрагент,
	|	ДанныеОбрабатываемогоДокумента.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ДанныеОбрабатываемогоДокумента.СчетУчетаРасчетовСКонтрагентом КАК СчетУчетаРасчетовСКонтрагентом,
	|	ДанныеОбрабатываемогоДокумента.СчетУчетаРасчетовПоАвансам КАК СчетУчетаРасчетовПоАвансам,
	|	ДанныеОбрабатываемогоДокумента.КурсВзаиморасчетов КАК КурсВзаиморасчетов,
	|	ДанныеОбрабатываемогоДокумента.КратностьВзаиморасчетов КАК КратностьВзаиморасчетов,
	|	"""" КАК НомерВходящегоДокумента,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаВходящегоДокумента,
	|	ЕСТЬNULL(ДанныеОбрабатываемогоДокумента.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах, ЛОЖЬ) КАК РасчетыВУсловныхЕдиницах,
	|	ЕСТЬNULL(ДанныеОбрабатываемогоДокумента.ДоговорКонтрагента.УчетАгентскогоНДС, ЛОЖЬ) КАК УчетАгентскогоНДС,
	|	ДанныеОбрабатываемогоДокумента.СуммаВключаетНДС КАК СуммаВключаетНДС
	|ПОМЕСТИТЬ ВТ_ТаблицаПоШапкеДокумента
	|ИЗ
	|	Документ.АР_НачислениеАренднойПлаты КАК ДанныеОбрабатываемогоДокумента
	|ГДЕ
	|	ДанныеОбрабатываемогоДокумента.Ссылка В(&МассивОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицаПоШапкеДокумента.Ссылка КАК Ссылка,
	|	ВТ_ТаблицаПоШапкеДокумента.Дата КАК Дата,
	|	ВТ_ТаблицаПоШапкеДокумента.Проведен КАК Проведен,
	|	ВТ_ТаблицаПоШапкеДокумента.ВалютаДокумента КАК ВалютаДокумента,
	|	ВТ_ТаблицаПоШапкеДокумента.Организация,
	|	ВТ_ТаблицаПоШапкеДокумента.Контрагент,
	|	ВТ_ТаблицаПоШапкеДокумента.ДоговорКонтрагента,
	|	ВТ_ТаблицаПоШапкеДокумента.КурсВзаиморасчетов,
	|	ВТ_ТаблицаПоШапкеДокумента.КратностьВзаиморасчетов,
	|	ВТ_ТаблицаПоШапкеДокумента.НомерВходящегоДокумента,
	|	ВТ_ТаблицаПоШапкеДокумента.ДатаВходящегоДокумента,
	|	ВТ_ТаблицаПоШапкеДокумента.РасчетыВУсловныхЕдиницах,
	|	ВТ_ТаблицаПоШапкеДокумента.УчетАгентскогоНДС,
	|	ВТ_ТаблицаПоШапкеДокумента.СуммаВключаетНДС,
	|	0 КАК ВсегоВал,
	|	0 КАК НДСВал
	|ИЗ
	|	ВТ_ТаблицаПоШапкеДокумента КАК ВТ_ТаблицаПоШапкеДокумента
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РублевыеСуммыДокументовВВалюте.Регистратор КАК Регистратор,
	|	РублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента КАК ТабличнаяЧастьДокумента,
	|	РублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента КАК НомерСтрокиДокумента,
	|	РублевыеСуммыДокументовВВалюте.Всего,
	|	РублевыеСуммыДокументовВВалюте.НДС,
	|	РублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС
	|ПОМЕСТИТЬ РегистрСведенийРублевыеСуммыДокументовВВалюте
	|ИЗ
	|	РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РублевыеСуммыДокументовВВалюте
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ТаблицаПоШапкеДокумента КАК ВТ_ТаблицаПоШапкеДокумента
	|		ПО РублевыеСуммыДокументовВВалюте.Регистратор = ВТ_ТаблицаПоШапкеДокумента.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	ТабличнаяЧастьДокумента,
	|	НомерСтрокиДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Хозрасчетный.Регистратор КАК Ссылка,
	|	Хозрасчетный.Сумма КАК СуммаПредоплатыРуб,
	|	Хозрасчетный.ВалютнаяСуммаДт КАК СуммаПредоплатыВал,
	|	ХозрасчетныйСубконто.Значение КАК Документ,
	|	ПРЕДСТАВЛЕНИЕ(ХозрасчетныйСубконто.Значение) КАК ДокументПредоплатыПредставление,
	|	ВТ_ТаблицаПоШапкеДокумента.Организация КАК Организация
	|ПОМЕСТИТЬ ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный КАК Хозрасчетный
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ТаблицаПоШапкеДокумента КАК ВТ_ТаблицаПоШапкеДокумента
	|		ПО Хозрасчетный.Регистратор = ВТ_ТаблицаПоШапкеДокумента.Ссылка
	|			И Хозрасчетный.СчетДт = ВТ_ТаблицаПоШапкеДокумента.СчетУчетаРасчетовПоАвансам
	|			И Хозрасчетный.СчетКт = ВТ_ТаблицаПоШапкеДокумента.СчетУчетаРасчетовСКонтрагентом
	|			И (ВТ_ТаблицаПоШапкеДокумента.ВалютаДокумента <> &ВалютаРегламентированногоУчета)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Субконто КАК ХозрасчетныйСубконто
	|		ПО Хозрасчетный.Регистратор = ХозрасчетныйСубконто.Регистратор
	|			И Хозрасчетный.НомерСтроки = ХозрасчетныйСубконто.НомерСтроки
	|			И (ХозрасчетныйСубконто.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияБухгалтерии.Дебет))
	|			И (ХозрасчетныйСубконто.Вид = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСКонтрагентами))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Документ,
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента.Ссылка КАК Ссылка,
	|	ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента.СуммаПредоплатыРуб КАК СуммаПредоплатыРуб,
	|	ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента.СуммаПредоплатыВал КАК СуммаПредоплатыВал,
	|	ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента.Документ,
	|	ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента.ДокументПредоплатыПредставление,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, """") КАК НомерВходящегоДокумента,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаВходящегоДокумента
	|ИЗ
	|	ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента КАК ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента.Организация = ДанныеПервичныхДокументов.Организация
	|			И ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента.Документ = ДанныеПервичныхДокументов.Документ
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента.Ссылка
	|ИТОГИ
	|	СУММА(СуммаПредоплатыРуб),
	|	СУММА(СуммаПредоплатыВал)
	|ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_ТаблицаПоШапкеДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОбрабатываемаяТаблица.Ссылка КАК Ссылка,
	|	2 КАК ПорядокТабличныхЧастей,
	|	ОбрабатываемаяТаблица.НомерСтроки КАК НомерСтроки,
	|	ОбрабатываемаяТаблица.Номенклатура КАК Товар,
	|	ОбрабатываемаяТаблица.Номенклатура.Наименование КАК ТоварНаименование,
	|	ОбрабатываемаяТаблица.Сумма КАК ВсегоВал,
	|	ОбрабатываемаяТаблица.СуммаНДС КАК НДСВал,
	|	ОбрабатываемаяТаблица.СтавкаНДС,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего КАК ВсегоРуб,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС КАК НДСРуб,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС КАК НалоговаяБазаНДСРуб
	|ИЗ
	|	Документ.АР_НачислениеАренднойПлаты.Состав КАК ОбрабатываемаяТаблица
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|		ПО ОбрабатываемаяТаблица.Ссылка = РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор
	|			И ОбрабатываемаяТаблица.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента
	|			И (РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Услуги))
	|ГДЕ
	|	ОбрабатываемаяТаблица.Сумма <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	ПорядокТабличныхЧастей,
	|	НомерСтроки
	|ИТОГИ
	|	СУММА(ВсегоВал),
	|	СУММА(НДСВал),
	|	СУММА(ВсегоРуб),
	|	СУММА(НДСРуб),
	|	СУММА(НалоговаяБазаНДСРуб)
	|ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ РегистрСведенийРублевыеСуммыДокументовВВалюте";
	
	Возврат ТекстЗапроса;
	
КонецФункции	

Функция ПолучитьТаблицуСведенийСчетаНаОплату(МассивОбъектов, СоответствиеДокументовИСчетов = Неопределено, ДокументыБезСчетовНаОплату = Неопределено, Сводный = Неопределено) Экспорт
	
	МассивСчетов = Новый Массив;
	ДокументыБезСчетовНаОплату = Новый Массив;
	
	СоответствиеДокументовИСчетов = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(МассивОбъектов, "ДокументОснование");
	Для каждого СтрокаСоответствия Из СоответствиеДокументовИСчетов Цикл
		Если ЗначениеЗаполнено(СтрокаСоответствия.Значение) Тогда
			МассивСчетов.Добавить(СтрокаСоответствия.Значение);
		КонецЕсли;
	КонецЦикла;
	
	Возврат Документы.АР_СчетНаАренду.ПолучитьТаблицуСведенийСчетаНаОплату(МассивСчетов, СоответствиеДокументовИСчетов, ДокументыБезСчетовНаОплату, Сводный);
	
КонецФункции

#Область ПечатьЧека

Функция ТекстЗапросаДанныеДляПечатиЧека(ИменаТаблиц) Экспорт
	Возврат Документы.РеализацияТоваровУслуг.ТекстЗапросаДанныеДляПечатиЧека(ИменаТаблиц);
КонецФункции

Функция ТекстЗапросаРеализацииПоСчету(ИменаТаблиц) Экспорт
	Возврат Документы.РеализацияТоваровУслуг.ТекстЗапросаРеализацииПоСчету(ИменаТаблиц);
КонецФункции

Функция НаименованиеВСтрокеЧека(СтруктураШапки) Экспорт
	Возврат "";
КонецФункции

Функция ТекстЗапросаПараметрыПечатиЧека(ДокументСсылка, НомераТаблиц, СообщениеОбОшибке) Экспорт
	Возврат Документы.РеализацияТоваровУслуг.ТекстЗапросаПараметрыПечатиЧека(ДокументСсылка, НомераТаблиц, СообщениеОбОшибке);
КонецФункции

#КонецОбласти 

#КонецЕсли
