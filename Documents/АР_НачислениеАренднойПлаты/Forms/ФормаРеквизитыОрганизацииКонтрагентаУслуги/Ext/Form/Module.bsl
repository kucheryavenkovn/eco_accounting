#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Заполним реквизиты формы из параметров.
	ЗаполнитьЗначенияСвойств(ЭтаФорма, Параметры,
		"Организация, Контрагент,
		|СчетОрганизации,
		|ДатаДокумента,
		|Руководитель, ЗаРуководителяНаОсновании, ОтветственныйЗаОформление,
		|ГлавныйБухгалтер, ЗаГлавногоБухгалтераНаОсновании,
		|ДоверенностьЧерезКого, ЗаЗаказчикаНаОсновании
		|");

	ПолноеНаименованиеКонтрагента = "";

	Если ЗначениеЗаполнено(Контрагент) Тогда
		РеквизитыКонтрагента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
			Контрагент, "Наименование, НаименованиеПолное");
	
		Если ЗначениеЗаполнено(РеквизитыКонтрагента.НаименованиеПолное) Тогда
			ПолноеНаименованиеКонтрагента = РеквизитыКонтрагента.НаименованиеПолное;
		Иначе
			НаименованиеКонтрагента = РеквизитыКонтрагента.Наименование;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)

	Если Модифицированность И НЕ ПеренестиВДокумент Тогда
		Отказ = Истина;
		ТекстВопроса = НСтр("ru = 'Данные были изменены. Сохранить изменения?'");
		
		Оповещение = Новый ОписаниеОповещения("ВопросПередЗакрытиемФормыЗавершение", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена, , КодВозвратаДиалога.Да);
	КонецЕсли;

	Если Отказ Тогда
		ПеренестиВДокумент = Ложь;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()

	Если ПеренестиВДокумент И Модифицированность Тогда
		СтруктураРезультат = Новый Структура("
			|СчетОрганизации, ОтветственныйЗаОформление,
			|Руководитель, ЗаРуководителяНаОсновании,
			|ГлавныйБухгалтер, ЗаГлавногоБухгалтераНаОсновании,
			|ДоверенностьЧерезКого, ЗаЗаказчикаНаОсновании");
		 
		ЗаполнитьЗначенияСвойств(СтруктураРезультат, ЭтаФорма);
		
		ОповеститьОВыборе(СтруктураРезультат);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаОК(Команда)
	
	ПеренестиВДокумент = Истина;
	Закрыть();

КонецПроцедуры

&НаКлиенте
Процедура КомандаОтмена(Команда)
	Модифицированность = Ложь;
	ПеренестиВДокумент = Ложь;
	Закрыть();
КонецПроцедуры

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ВопросПередЗакрытиемФормыЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ПеренестиВДокумент = Истина;
		Закрыть();
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
		ПеренестиВДокумент = Ложь;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СписокКонтактныхЛицКонтрагента(Знач Контрагент)
	
	Возврат Справочники.КонтактныеЛица.СписокКонтактныхЛиц(Контрагент);
	
КонецФункции

&НаКлиенте
Процедура ДоверенностьЧерезКогоНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Список = СписокКонтактныхЛицКонтрагента(Контрагент);
	
	ОповещениеВыбора = Новый ОписаниеОповещения("ВыборИзСпискаДоверенностьЧерезКогоЗавершение", ЭтотОбъект);
	ПоказатьВыборИзСписка(ОповещениеВыбора, Список, Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ВыборИзСпискаДоверенностьЧерезКогоЗавершение(РезультатВыбора, ДополнительныеПараметры) Экспорт
	
	Если РезультатВыбора <> Неопределено Тогда
		ДоверенностьЧерезКого = РезультатВыбора.Представление;
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РуководительПриИзменении(Элемент)
	ЗаРуководителяНаОсновании = ПолучитьОснованиеПраваПодписиФизЛица(Руководитель,Организация,ДатаДокумента);
КонецПроцедуры

&НаКлиенте
Процедура ГлавныйБухгалтерПриИзменении(Элемент)
	ЗаГлавногоБухгалтераНаОсновании = ПолучитьОснованиеПраваПодписиФизЛица(ГлавныйБухгалтер,Организация,ДатаДокумента);
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьОснованиеПраваПодписиФизЛица(ФизическоеЛицо,Организация,ДатаОтбор)
	
	Возврат Справочники.ОснованияПраваПодписи.ОснованиеПраваПодписиФизЛица(ФизическоеЛицо,Организация,ДатаОтбор);
	
КонецФункции

#КонецОбласти 
