
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("РежимОткрытияОкна") 
		И ЗначениеЗаполнено(Параметры.РежимОткрытияОкна) Тогда
		РежимОткрытияОкна = Параметры.РежимОткрытияОкна;
	КонецЕсли; 
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства
	
	// ЗарплатаКадрыПодсистемы.ПодписиДокументов
	ПодписиДокументов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец ЗарплатаКадрыПодсистемы.ПодписиДокументов
	
	Если Параметры.Ключ.Пустая() Тогда
		
		Объект.СпособОплаты = Перечисления.СпособыОплатыПоДоговоруГПХ.ОднократноВКонцеСрока;
		
		ЗначенияДляЗаполнения = Новый Структура("Организация, Ответственный, Подразделение", "Объект.Организация", "Объект.Ответственный", "Объект.Подразделение");
		ЗарплатаКадры.ЗаполнитьПервоначальныеЗначенияВФорме(ЭтаФорма, ЗначенияДляЗаполнения);
		ЗаполнитьДанныеФормыПоОрганизации();
		СотрудникПриИзмененииНаСервере();
		УстановитьФункциональныеОпцииФормы();
		
	КонецЕсли;
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	Распределяется  = Объект.ОтношениеКЕНВД = Перечисления.ОтношениеКЕНВДЗатратНаЗарплату.ОпределяетсяЕжемесячноПроцентом;
	ПолностьюНаЕНВД = Объект.ОтношениеКЕНВД = Перечисления.ОтношениеКЕНВДЗатратНаЗарплату.ЕНВД;
	
	ПользовательУправляетСчетамиУчета =
		СчетаУчетаВДокументахВызовСервераПовтИсп.ПользовательУправляетСчетамиУчета();
	Элементы.БухучетЗарплатыСотрудниковПредставление.Видимость = ПользовательУправляетСчетамиУчета;
	ОбновитьПредставлениеУчетаРасходов(ЭтотОбъект);
	
	УстановитьДоступностьПоляСуммаЕНВД(ЭтотОбъект);
	
	УстановитьСостояниеДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	УстановитьДоступностьЭлементаРазмерПлатежа();
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	// СтандартныеПодсистемы.Свойства
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	УстановитьФункциональныеОпцииФормы();
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	// ЗарплатаКадрыПодсистемы.ПодписиДокументов
	ПодписиДокументов.ПослеЗаписиНаСервере(ЭтотОбъект);
	// Конец ЗарплатаКадрыПодсистемы.ПодписиДокументов
	
	УстановитьСостояниеДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("Запись_ДоговорРаботыУслуги", ПараметрыЗаписи, Объект.Ссылка);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	ОбработатьИзменениеОрганизацииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	ОбработатьИзменениеДатыДокументаНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура СотрудникПриИзменении(Элемент)
	
	Если СотрудникПрежний <> Объект.Сотрудник Тогда
		СотрудникПриИзмененииНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВариантОплатыПриИзменении(Элемент)
	
	УстановитьДоступностьЭлементаРазмерПлатежа();
	РассчитатьСуммуПлатежа();
	
КонецПроцедуры

&НаКлиенте
Процедура СуммаПриИзменении(Элемент)
	ПроверитьСуммуЕНВД();
КонецПроцедуры

&НаКлиенте
Процедура РазмерПлатежаПриИзменении(Элемент)
	
	РассчитатьСуммуДоговора();
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаНачалаПриИзменении(Элемент)
	
	РассчитатьСуммуДоговора();
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаОкончанияПриИзменении(Элемент)
	
	РассчитатьСуммуДоговора();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

// СтандартныеПодсистемы.Свойства
&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, НавигационнаяСсылка = Неопределено, СтандартнаяОбработка = Неопределено)
	УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

// ЗарплатаКадрыПодсистемы.ПодписиДокументов
&НаКлиенте
Процедура Подключаемый_ПодписиДокументовЭлементПриИзменении(Элемент)
	ПодписиДокументовКлиент.ПриИзмененииПодписывающегоЛица(ЭтотОбъект, Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПодписиДокументовЭлементНажатие(Элемент)
	ПодписиДокументовКлиент.РасширеннаяПодсказкаНажатие(ЭтотОбъект, Элемент.Имя);
КонецПроцедуры
// Конец ЗарплатаКадрыПодсистемы.ПодписиДокументов

&НаСервере
Процедура ОбработатьИзменениеОрганизацииНаСервере()
	ЗаполнитьДанныеФормыПоОрганизации();
	УстановитьФункциональныеОпцииФормы();
КонецПроцедуры

&НаСервере
Процедура ОбработатьИзменениеДатыДокументаНаСервере()
	УстановитьФункциональныеОпцииФормы();
КонецПроцедуры

&НаСервере
Процедура СотрудникПриИзмененииНаСервере()
	
	ЗаполнитьЗначенияСвойств(Объект,
		УчетЗарплаты.НастройкаБухучетаЗарплатыСотрудника(Объект.Сотрудник, ТекущаяДатаСеанса()));
	ОбновитьПредставлениеУчетаРасходов(ЭтотОбъект);
	ОбработатьИзменениеОтношениеКЕНВД(ЭтотОбъект);
	СотрудникПрежний = Объект.Сотрудник;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьФункциональныеОпцииФормы()
	ПараметрыФО = Новый Структура("Организация, Период", Объект.Организация, НачалоДня(Объект.Дата));
	УстановитьПараметрыФункциональныхОпцийФормы(ПараметрыФО);
	ПолучитьФункциональнуюОпциюФормы("ПлательщикЕНВДЗарплатаКадры");
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеФормыПоОрганизации()
	// ЗарплатаКадрыПодсистемы.ПодписиДокументов
	ПодписиДокументов.ЗаполнитьПодписиПоОрганизации(ЭтотОбъект);
	// Конец ЗарплатаКадрыПодсистемы.ПодписиДокументов
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьЭлементаРазмерПлатежа()
	
	Элементы.РазмерПлатежа.Видимость = Объект.СпособОплаты = ПредопределенноеЗначение("Перечисление.СпособыОплатыПоДоговоруГПХ.ВКонцеСрокаСАвансовымиПлатежами");
	Элементы.Сумма.ТолькоПросмотр    = Элементы.РазмерПлатежа.Видимость;
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуДоговора()
	
	Если Объект.СпособОплаты <> ПредопределенноеЗначение("Перечисление.СпособыОплатыПоДоговоруГПХ.ВКонцеСрокаСАвансовымиПлатежами") Тогда
		Возврат;
	КонецЕсли;
	
	КоличествоМесяцев = 1;
	Если ЗначениеЗаполнено(Объект.ДатаНачала)
		И ЗначениеЗаполнено(Объект.ДатаОкончания)
		И Объект.ДатаОкончания > Объект.ДатаНачала Тогда
		КоличествоМесяцев = (Год(Объект.ДатаОкончания) - Год(Объект.ДатаНачала)) * 12 + Месяц(Объект.ДатаОкончания) - Месяц(Объект.ДатаНачала) + 1;
	КонецЕсли;
	
	Объект.Сумма = Объект.РазмерПлатежа * КоличествоМесяцев;
	ОбработатьИзменениеОтношениеКЕНВД(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуПлатежа()
	
	Если Объект.СпособОплаты = ПредопределенноеЗначение("Перечисление.СпособыОплатыПоДоговоруГПХ.ОднократноВКонцеСрока") Тогда
		Возврат;
	КонецЕсли;
	
	КоличествоМесяцев = 1;
	Если ЗначениеЗаполнено(Объект.ДатаНачала)
		И ЗначениеЗаполнено(Объект.ДатаОкончания)
		И Объект.ДатаОкончания > Объект.ДатаНачала Тогда
		КоличествоМесяцев = (Год(Объект.ДатаОкончания) - Год(Объект.ДатаНачала)) * 12 + Месяц(Объект.ДатаОкончания) - Месяц(Объект.ДатаНачала) + 1;
	КонецЕсли;
	
	Объект.РазмерПлатежа = Объект.Сумма / КоличествоМесяцев;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбработатьИзменениеОтношениеКЕНВД(Форма)
	
	Объект = Форма.Объект;
	Если НЕ Форма.ПлательщикЕНВДЗарплатаКадры Тогда
		Возврат;
	КонецЕсли;
	
	Форма.Распределяется  = Объект.ОтношениеКЕНВД = ПредопределенноеЗначение("Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.ОпределяетсяЕжемесячноПроцентом");
	Форма.ПолностьюНаЕНВД = Объект.ОтношениеКЕНВД = ПредопределенноеЗначение("Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.ЕНВД");
	
	Если Форма.ПолностьюНаЕНВД Тогда
		Объект.СуммаЕНВД = Объект.Сумма;
	ИначеЕсли Не Форма.Распределяется Тогда
		Объект.СуммаЕНВД = 0;
	КонецЕсли;
	
	УстановитьДоступностьПоляСуммаЕНВД(Форма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьСуммуЕНВД()
	Если Объект.СуммаЕНВД > Объект.Сумма Тогда
		ТекстПредупреждения = НСтр("ru = 'Сумма ЕНВД не может превышать общей суммы вознаграждения по договору.'");
		ПоказатьПредупреждение(, ТекстПредупреждения);
		Объект.СуммаЕНВД = 0;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура БухучетЗарплатыСотрудниковПредставлениеНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Оповещение = Новый ОписаниеОповещения("УчетРасходовРедактированиеЗавершение", ЭтотОбъект);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Сотрудник",                        Объект.Сотрудник);
	ПараметрыФормы.Вставить("СпособОтраженияЗарплатыВБухучете", Объект.СпособОтраженияЗарплатыВБухучете);
	ПараметрыФормы.Вставить("ОтношениеКЕНВД",                   Объект.ОтношениеКЕНВД);
	ПараметрыФормы.Вставить("ТолькоПросмотр",                   ТолькоПросмотр);
	
	ОткрытьФорму(
		"Документ.ДоговорРаботыУслуги.Форма.ФормаБухучетЗарплаты",
		ПараметрыФормы,
		ЭтотОбъект,
		УникальныйИдентификатор,
		,
		,
		Оповещение,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца)
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьПредставлениеУчетаРасходов(Форма)
	
	Если НЕ Форма.ПользовательУправляетСчетамиУчета Тогда
		Возврат;
	КонецЕсли;
	
	Объект = Форма.Объект;
	
	Если НЕ ЗначениеЗаполнено(Объект.СпособОтраженияЗарплатыВБухучете)
		И НЕ ЗначениеЗаполнено(Объект.ОтношениеКЕНВД) Тогда
		Форма.БухучетЗарплатыСотрудниковПредставление = НСтр("ru = '<Авто>'");
	Иначе
		Если ЗначениеЗаполнено(Объект.СпособОтраженияЗарплатыВБухучете) Тогда
			Форма.БухучетЗарплатыСотрудниковПредставление = Строка(Объект.СпособОтраженияЗарплатыВБухучете);
		Иначе
			Форма.БухучетЗарплатыСотрудниковПредставление = "";
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Объект.ОтношениеКЕНВД) Тогда
			ШаблонЕНВД = ?(ЗначениеЗаполнено(Форма.БухучетЗарплатыСотрудниковПредставление), НСтр("ru = ' ;%1'"),НСтр("ru = '%1'"));
			ОтношениеКЕНВД = СтрШаблон(ШаблонЕНВД ,Объект.ОтношениеКЕНВД);
		Иначе
			ОтношениеКЕНВД = "";
		КонецЕсли;
		Форма.БухучетЗарплатыСотрудниковПредставление = СтрШаблон(НСтр("ru = '%1%2'"), Форма.БухучетЗарплатыСотрудниковПредставление, ОтношениеКЕНВД);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьДоступностьПоляСуммаЕНВД(Форма)
	
	Элементы = Форма.Элементы;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"СуммаЕНВД",
		"Видимость",
		Форма.Распределяется);
		
КонецПроцедуры

&НаКлиенте
Процедура УчетРасходовРедактированиеЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		ЗаполнитьЗначенияСвойств(Объект, Результат);
		ОбновитьПредставлениеУчетаРасходов(ЭтотОбъект);
		ОбработатьИзменениеОтношениеКЕНВД(ЭтотОбъект);
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСостояниеДокумента()
	
	СостояниеДокумента = 0;
	ЗарплатаКадрыПереопределяемый.СостояниеДокумента(Объект, СостояниеДокумента);
	
КонецПроцедуры

#КонецОбласти
