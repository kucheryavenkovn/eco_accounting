
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	ОбщегоНазначенияБП.УстановитьВидимостьКолонокДополнительнойИнформации(ЭтотОбъект);
	
	ОтправкаПочтовыхСообщений.ПриСозданииНаСервере(ЭтотОбъект);
	
	Если Параметры.Отбор.Свойство("ДоговорКонтрагента") Тогда
		
		ВидыСчетовФактурНаАванс = Новый СписокЗначений;
		ВидыСчетовФактурНаАванс.Добавить(Перечисления.ВидСчетаФактурыВыставленного.НаАванс);
		ВидыСчетовФактурНаАванс.Добавить(Перечисления.ВидСчетаФактурыВыставленного.НаАвансКомитента);
		ВидыСчетовФактурНаАванс.Добавить(Перечисления.ВидСчетаФактурыВыставленного.НаАвансКомитентаНаЗакупку);
		
		ДоговорысчетовФактурНаАванс = Новый СписокЗначений;
		ДоговорысчетовФактурНаАванс.Добавить(Параметры.Отбор.ДоговорКонтрагента);
		ДоговорысчетовФактурНаАванс.Добавить(Справочники.ДоговорыКонтрагентов.ПустаяСсылка());
		
		ГруппаИЛИ = ОбщегоНазначенияКлиентСервер.СоздатьГруппуЭлементовОтбора(
			Список.КомпоновщикНастроек.Настройки.Отбор.Элементы, 
			"ГруппаИЛИ", 
			ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли);
		
		ГруппаИ = ОбщегоНазначенияКлиентСервер.СоздатьГруппуЭлементовОтбора(
			ГруппаИЛИ, 
			"АвансовыеСчетаФактурыПоДоговору",
			ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ);
			
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
			ГруппаИ, "ВидСчетаФактуры", ВидыСчетовФактурНаАванс, ВидСравненияКомпоновкиДанных.ВСписке);
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
			ГруппаИ, "ДоговорКонтрагента", ДоговорысчетовФактурНаАванс, ВидСравненияКомпоновкиДанных.ВСписке);
		
		ГруппаИ = ОбщегоНазначенияКлиентСервер.СоздатьГруппуЭлементовОтбора(
			ГруппаИЛИ, 
			"СчетаФактурыПоДоговору",
			ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ);
			
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
			ГруппаИ, "ВидСчетаФактуры", ВидыСчетовФактурНаАванс, ВидСравненияКомпоновкиДанных.НеВСписке);
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
			ГруппаИ, "ДоговорКонтрагента", Параметры.Отбор.ДоговорКонтрагента, ВидСравненияКомпоновкиДанных.Равно);
		
		Параметры.Отбор.Удалить("ДоговорКонтрагента");

	Иначе
		Если Параметры.Свойство("Организация") Тогда
		
			ГруппаИ = ОбщегоНазначенияКлиентСервер.СоздатьГруппуЭлементовОтбора(
				Список.КомпоновщикНастроек.Настройки.Отбор.Элементы, 
				"ГруппаИ", 
				ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ);

			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
				ГруппаИ, "Организация", Параметры.Организация, ВидСравненияКомпоновкиДанных.Равно);

			Если Параметры.Свойство("ВидСчетаФактуры") Тогда
					
				ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
				ГруппаИ, "ВидСчетаФактуры", Параметры.ВидСчетаФактуры, ВидСравненияКомпоновкиДанных.Равно);
					
			КонецЕсли;
				
			Если Параметры.Свойство("Контрагент") Тогда
					
				ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
				ГруппаИ, "Контрагент", Параметры.Контрагент, ВидСравненияКомпоновкиДанных.Равно);
					
			КонецЕсли;

			Если Параметры.Свойство("СписокКонтрагентов") Тогда
					
					ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
					ГруппаИ, "Контрагент", Параметры.СписокКонтрагентов, ВидСравненияКомпоновкиДанных.ВСписке);
					
			КонецЕсли;
			
		КонецЕсли;

		Если Параметры.Свойство("СписокСчетовФактур") Тогда

			ГруппаИ = ОбщегоНазначенияКлиентСервер.СоздатьГруппуЭлементовОтбора(
				Список.КомпоновщикНастроек.Настройки.Отбор.Элементы, 
				"ГруппаИ", 
				ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ);

			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
				ГруппаИ, "Ссылка", Параметры.СписокСчетовФактур, ВидСравненияКомпоновкиДанных.ВСписке);
		
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПриИзменении(Элемент)
	
	Если ТипЗнч(Элемент.ТекущаяСтрока) = Тип("СтрокаГруппировкиДинамическогоСписка") Тогда
		Возврат;
	КонецЕсли;
	
	Оповестить("Запись_СчетФактураВыданный", , Элемент.ТекущаяСтрока);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.Список, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти