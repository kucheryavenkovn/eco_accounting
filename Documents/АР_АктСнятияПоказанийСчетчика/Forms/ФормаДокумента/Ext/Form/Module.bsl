
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	ОтправкаПочтовыхСообщений.ПриСозданииНаСервере(ЭтаФорма);
	
	// Обработчик подсистемы "Свойства"
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Объект", Объект);
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтаФорма, ДополнительныеПараметры);
	
	Если Параметры.Ключ.Пустая() Тогда
		ПодготовитьФормуНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	ПодготовитьФормуНаСервере();
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ЗаполнитьРазницуПоказаний();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// Подсистема "Свойства"
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтаФорма, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ОрганизацияПриИзмененииНаСервере();
	КонтрагентПриИзмененииНаСервере();
	ДоговорКонтрагентаПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	
	КонтрагентПриИзмененииНаСервере();
	ДоговорКонтрагентаПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ДоговорКонтрагентаПриИзменении(Элемент)
	
	ДоговорКонтрагентаПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура УслугаПриИзменении(Элемент)
	
	УслугаПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ДокументОснованиеПриИзменении(Элемент)
	
	ДокументОснованиеПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура СпособРасчетаПриИзменении(Элемент)
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура СпособЗаполненияЧислоПриИзменении(Элемент)
	
	Если Объект.Показания.Количество() > 0 Тогда
		Объект.СпособЗаполнения = ?(Объект.СпособЗаполнения = 0, 1, 0);
		ОписаниеОповещение = Новый ОписаниеОповещения("СпособЗаполненияЧислоПриИзмененииПродолжение", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещение, "Табличная часть с показаниями будет очищена. Продолжить?", РежимДиалогаВопрос.ДаНет);
	Иначе
		СпособЗаполненияЧислоПриИзмененииЗавершение();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВидОперацииПриИзменении(Элемент)
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

#Область РаботаСПериодом

&НаКлиенте
Процедура ПериодНачалоВыбораЗавершение(СтруктураПериода, ДополнительныеПараметры) Экспорт
	
	// Установим полученный период
	Если СтруктураПериода <> Неопределено Тогда
		Объект.ВидПериода = СтруктураПериода.ВидПериода;
		Период = СтруктураПериода.Период;
		Объект.НачалоПериода = СтруктураПериода.НачалоПериода;
		Объект.ОкончаниеПериода = СтруктураПериода.КонецПериода;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВидПериодаПриИзменении(Элемент)
	
	ВыборПериодаКлиент.ВидПериодаПриИзменении(Элемент, Объект.ВидПериода, Объект.НачалоПериода, Объект.ОкончаниеПериода, Период);
	ВыборПериодаКлиентСервер.ПереключитьТекущуюСтраницуВыбораПериода(Объект.ВидПериода, Элементы.ГруппаПоляВводаПериода);
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодПриИзменении(Элемент)
	
	ВыборПериодаКлиент.ПериодПриИзменении(Элемент, Период, Объект.НачалоПериода, Объект.ОкончаниеПериода);
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПериодНачалоВыбораЗавершение", ЭтотОбъект);
	ВыборПериодаКлиент.ПериодНачалоВыбора(ЭтаФорма, Элемент, СтандартнаяОбработка, 
	Объект.ВидПериода, Объект.НачалоПериода, ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ВыборПериодаКлиент.ПериодОбработкаВыбора(
	Элемент, ВыбранноеЗначение, СтандартнаяОбработка,
	Объект.ВидПериода, Период, Объект.НачалоПериода, Объект.ОкончаниеПериода);
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	
	ВыборПериодаКлиент.ПериодАвтоПодбор(
	Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка,
	Объект.ВидПериода, Период, Объект.НачалоПериода, Объект.ОкончаниеПериода);
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	
	ВыборПериодаКлиент.ПериодОкончаниеВводаТекста(
	Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка,
	Объект.ВидПериода, Период, Объект.НачалоПериода, Объект.ОкончаниеПериода);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПоказания

&НаКлиенте
Процедура ПоказанияПоказаниеНаНачалоПериодаПриИзменении(Элемент)
	
	РассчитатьСтроку(Элементы.Показания.ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказанияПоказаниеНаКонецПериодаПриИзменении(Элементы)
	
	//СтрокаТЧ.Разница = Элементы.Показания.ТекущиеДанные(СтрокаТЧ.ПоказаниеНаКонецПериода - СтрокаТЧ.ПоказаниеНаНачалоПериода) * ?(ЗначениеЗаполнено(СтрокаТЧ.КоэффициентОтнесенияСчетчика), СтрокаТЧ.КоэффициентОтнесенияСчетчика, 1);
	ТекущийЭлемент.ТекущиеДанные.Сумма = ТекущийЭлемент.ТекущиеДанные.Цена * ТекущийЭлемент.ТекущиеДанные.ПоказаниеНаКонецПериода;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказанияКоэффициентОтнесенияСчетчикаПриИзменении(Элемент)
	
	РассчитатьСтроку(Элементы.Показания.ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказанияПриИзменении(Элемент)
	
	РассчитатьИтоговуюРазницу();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказанияПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		ТекущиеДанные = Элементы.Показания.ТекущиеДанные;
		ТекущиеДанные.ФактическоеНачало = Объект.НачалоПериода;
		ТекущиеДанные.ФактическоеОкончание = Объект.ОкончаниеПериода;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказанияЦенаПриИзменении(Элемент)
	
	РассчитатьСтроку(Элементы.Показания.ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказанияОбъектАрендыПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Показания.ТекущиеДанные;
	Договор = ?(Объект.СпособЗаполнения = 1, Объект.ДоговорКонтрагента, ТекущиеДанные.ДоговорКонтрагента);
	Услуга = ?(Объект.СпособЗаполнения = 1, ТекущиеДанные.Услуга, Объект.Услуга);
	ТекущиеДанные.Площадь = ПолучитьПлощадьПоДоговору(ТекущиеДанные.ОбъектАренды, Услуга, Договор);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказанияКонтрагентПриИзменении(Элемент)
	
	ПоказанияОбъектАрендыПриИзменении(Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказанияДоговорКонтрагентаПриИзменении(Элемент)
	
	ПоказанияОбъектАрендыПриИзменении(Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказанияУслугаПриИзменении(Элемент)
	
	ПоказанияОбъектАрендыПриИзменении(Неопределено);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура РассчитатьСуммуДокумента(Команда)
	
	Если ПроверитьТабЧастьНаДублиСтрокНаСервере() Тогда
		Оповещение = Новый ОписаниеОповещения("СпроситьОДубляхСтрок", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, "Обнаружены строки с одинаковыми договорами и объектами. Продолжить расчет?", РежимДиалогаВопрос.ДаНет);
	Иначе
		РассчитатьСуммуДокументаЗавершение();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьТариф(Команда)
	
	НовыйТариф = 0;
	Оповещение = новый ОписаниеОповещения("УстановитьТарифЗавершение", ЭтотОбъект);
	ПоказатьВводЧисла(Оповещение, НовыйТариф, "Введите новое значение тарифа", 20, 7);
	
КонецПроцедуры

&НаКлиенте
Процедура Заполнить(Команда)
	
	Если Объект.Показания.Количество() > 0 Тогда
		Оповещение = Новый ОписаниеОповещения("СпроситьОбОчисткеПередЗаполнением", ЭтотОбъект, Новый Структура("СОтбором, ПоЗданию", Ложь, Ложь));
		ПоказатьВопрос(Оповещение, "Перед заполнением табличная часть будет очищена. Продолжить?", РежимДиалогаВопрос.ДаНет, 0, КодВозвратаДиалога.Нет);
	Иначе
		ЗаполнитьЗавершение();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСОтбором(Команда)
	
	Если Объект.Показания.Количество() > 0 Тогда
		Оповещение = Новый ОписаниеОповещения("СпроситьОбОчисткеПередЗаполнением", ЭтотОбъект, Новый Структура("СОтбором, ПоЗданию", Истина, Ложь));
		ПоказатьВопрос(Оповещение, "Перед заполнением табличная часть будет очищена. Продолжить?", РежимДиалогаВопрос.ДаНет, 0, КодВозвратаДиалога.Нет);
	Иначе
		ЗаполнитьСОтборомЗавершение();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоЗданию(Команда)
	
	Если Объект.Показания.Количество() > 0 Тогда
		Оповещение = Новый ОписаниеОповещения("СпроситьОбОчисткеПередЗаполнением", ЭтотОбъект, Новый Структура("СОтбором, ПоЗданию", Ложь, Истина));
		ПоказатьВопрос(Оповещение, "Перед заполнением табличная часть будет очищена. Продолжить?", РежимДиалогаВопрос.ДаНет, 0, КодВозвратаДиалога.Нет);
	Иначе
		ЗаполнитьПоЗданиюЗавершение();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РаспределитьПоказанияСчетчиков(Команда)
	
	// Проверим, заполнены ли счетчики
	Отказ = Ложь;
	ИмяСписка = "Показания";
	Для Каждого СтрокаТЧ Из Объект.Показания Цикл
		Префикс = "Показания[" + Формат(СтрокаТЧ.НомерСтроки - 1, "ЧН=0; ЧГ=") + "].";
		Если Не ЗначениеЗаполнено(СтрокаТЧ.Счетчик) Тогда
			ТекстСообщения = ОбщегоНазначенияБПКлиентСервер.ПолучитьТекстСообщения(,, НСтр("ru = 'Счетчик'"), СтрокаТЧ.НомерСтроки, ИмяСписка);
			Поле = Префикс + "Счетчик";
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, Поле, "Объект", Отказ);
		КонецЕсли;
	КонецЦикла;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	РаспределитьПоказанияСчетчиковНаСервере();
	
	// Сообщим, если есть счетчики неуказанные в договорах
	Для Каждого СтрокаТЧ Из Объект.Показания Цикл
		Префикс = "Показания[" + Формат(СтрокаТЧ.НомерСтроки - 1, "ЧН=0; ЧГ=") + "].";
		Если Не ЗначениеЗаполнено(СтрокаТЧ.Контрагент) Тогда
			ТекстСообщения = НСтр("ru = 'Для счетчика """ + СтрокаТЧ.Счетчик + """ не найдено ни одного действующего договора'");
			Поле = Префикс + "Счетчик";
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, Поле, "Объект", Отказ);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьКонтекстныеНовости(Команда)
	
	ОбработкаНовостейКлиент.КонтекстныеНовости_ОбработкаКомандыНовости(
	ЭтаФорма,
	Команда
	);
	
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, НавигационнаяСсылка = Неопределено, СтандартнаяОбработка = Неопределено)
	УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПодготовитьФормуНаСервере()
	
	ОбщегоНазначенияБПКлиентСервер.УстановитьПараметрыФункциональныхОпцийФормыДокумента(ЭтаФорма);
	
	УстановитьПериод();
	ЗаполнитьРазницуПоказаний();
	РассчитатьИтоговуюРазницу();
	
	УправлениеФормой(ЭтаФорма);
	
	УстановитьПараметрыВыбора();
	
КонецПроцедуры // ПодготовитьФормуНаСервере()

&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтаФорма, РеквизитФормыВЗначение("Объект"));
	
КонецПроцедуры


&НаКлиенте
Процедура СпроситьОДубляхСтрок(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		РассчитатьСуммуДокументаЗавершение();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуДокументаЗавершение()
	
	ОбщаяПлощадь = Объект.Показания.Итог("Площадь");
	Если  Объект.СпособРасчета = ПредопределенноеЗначение("Перечисление.АР_СпособыРасчетаУслуг.ПоказаниеПропорциональноПлощадиОбъектов") тогда 
		Если ОбщаяПлощадь <> 0 тогда
			Для Каждого Стр Из Объект.Показания Цикл
				коэф=стр.Площадь/ОбщаяПлощадь;
				стр.ПоказаниеНаКонецПериода = Объект.ПоказаниеДокумента*коэф;
				РассчитатьСтроку(стр);
			КонецЦикла;
		КонецЕсли;
	ИначеЕсли  Объект.СпособРасчета = ПредопределенноеЗначение("Перечисление.АР_СпособыРасчетаУслуг.СуммаПропорциональноПлощадиОбъектов") тогда
		Если ОбщаяПлощадь <> 0 тогда
			Для Каждого Стр Из Объект.Показания Цикл
				коэф=стр.Площадь/ОбщаяПлощадь;
				стр.Сумма = Объект.СуммаДокумента*коэф;
			КонецЦикла;
			Разница = Объект.СуммаДокумента - Объект.Показания.Итог("Сумма");
			Если Разница <> 0 Тогда
				Объект.Показания[Объект.Показания.Количество() - 1].Сумма = Объект.Показания[Объект.Показания.Количество() - 1].Сумма + Разница;
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли  Объект.СпособРасчета = ПредопределенноеЗначение("Перечисление.АР_СпособыРасчетаУслуг.СуммаРавномерноПоДоговорам") тогда
		Если Объект.Показания.Количество() <> 0 тогда
			Для Каждого Стр Из Объект.Показания Цикл
				стр.Сумма = Объект.СуммаДокумента / Объект.Показания.Количество();
			КонецЦикла;
			Разница = Объект.СуммаДокумента - Объект.Показания.Итог("Сумма");
			Если Разница <> 0 Тогда
				Объект.Показания[Объект.Показания.Количество() - 1].Сумма = Объект.Показания[Объект.Показания.Количество() - 1].Сумма + Разница;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьТарифЗавершение(НовыйТариф, Параметры) Экспорт
	
	Если НЕ НовыйТариф = Неопределено Тогда
		Для Каждого СтрокаТЧ Из Объект.Показания Цикл
			СтрокаТЧ.Цена = НовыйТариф;
			РассчитатьСтроку(СтрокаТЧ);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СпроситьОбОчисткеПередЗаполнением(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		Если ДополнительныеПараметры.СОтбором Тогда
			ЗаполнитьСОтборомЗавершение(Истина);
		ИначеЕсли ДополнительныеПараметры.ПоЗданию Тогда
			ЗаполнитьПоЗданиюЗавершение(Истина);
		Иначе
			Объект.Показания.Очистить();
			ЗаполнитьЗавершение();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСОтборомЗавершение(ОчиститьТабЧасть = Ложь)
	
	Отказ = Ложь;
	Если Не ЗначениеЗаполнено(Объект.Услуга) Тогда
		ТекстСообщения = ОбщегоНазначенияБПКлиентСервер.ПолучитьТекстСообщения(,, НСтр("ru = 'Услуга'"));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "Услуга", "Объект", Отказ);
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ОповещениеОЗакрытии = Новый ОписаниеОповещения("ЗаполнитьСОтборомОбработкаВыбора", ЭтотОбъект, ОчиститьТабЧасть);
	
	ОткрытьФорму("Документ.АР_АктСнятияПоказанийСчетчика.Форма.ФормаОтбора",, ЭтаФорма,, ВариантОткрытияОкна.ОтдельноеОкно,, ОповещениеОЗакрытии, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоЗданиюЗавершение(ОчиститьТабЧасть = Ложь)
	
	Отказ = Ложь;
	Если Не ЗначениеЗаполнено(Объект.Услуга) Тогда
		ТекстСообщения = ОбщегоНазначенияБПКлиентСервер.ПолучитьТекстСообщения(,, НСтр("ru = 'Услуга'"));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "Услуга", "Объект", Отказ);
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ОповещениеОЗакрытии = Новый ОписаниеОповещения("ЗаполнитьПоЗданиюОбработкаВыбора", ЭтотОбъект, ОчиститьТабЧасть);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РежимВыбора", Истина);
	ПараметрыФормы.Вставить("МножественныйВыбор", Ложь);
	ПараметрыФормы.Вставить("ЗакрыватьПриВыборе", Истина);
	ПараметрыФормы.Вставить("ВыборЗдания");
	
	ОткрытьФорму("Справочник.АР_ОбъектыАренды.ФормаВыбора", ПараметрыФормы, ЭтаФорма,, ВариантОткрытияОкна.ОтдельноеОкно,, ОповещениеОЗакрытии, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСОтборомОбработкаВыбора(РезультатЗакрытия, ОчиститьТабЧасть) Экспорт
	
	Если НЕ РезультатЗакрытия = Неопределено Тогда
		Если ОчиститьТабЧасть Тогда
			Объект.Показания.Очистить();
		КонецЕсли;
		ЗаполнитьСтрокиПоказанияНаСервере(РезультатЗакрытия);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоЗданиюОбработкаВыбора(РезультатЗакрытия, ОчиститьТабЧасть) Экспорт
	
	Если НЕ РезультатЗакрытия = Неопределено Тогда
		Если ОчиститьТабЧасть Тогда
			Объект.Показания.Очистить();
		КонецЕсли;
		ЗаполнитьСтрокиПоказанияНаСервере(, РезультатЗакрытия);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СпособЗаполненияЧислоПриИзмененииПродолжение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		Объект.Показания.Очистить();
		Объект.СпособЗаполнения = ?(Объект.СпособЗаполнения = 0, 1, 0);
		СпособЗаполненияЧислоПриИзмененииЗавершение();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СпособЗаполненияЧислоПриИзмененииЗавершение()
	
	УстановитьПараметрыВыбора();
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВестиУчетПоСчетчикам()
	
	Возврат ПолучитьФункциональнуюОпцию("АР_ВестиУчетТарифицируемыхУслугПоСчетчикам");
	
КонецФункции // ЕстьСчетчики()

&НаСервере
Процедура УстановитьПериод()
	
	Если ЗначениеЗаполнено(Объект.НачалоПериода) ИЛИ ЗначениеЗаполнено(Объект.ОкончаниеПериода) Тогда
		Возврат;
	КонецЕсли;
	
	ПериодНачисления = Константы.АР_ПериодНачисленияАренднойПлаты.Получить();
	Если Не ЗначениеЗаполнено(ПериодНачисления) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не заполнена константа ""Период начисления арендной платы""");
		Возврат;
	КонецЕсли;
	
	ДлинаДня = 60*60*24;
	
	ТекДата = ТекущаяДата();
	
	Если ПериодНачисления = Перечисления.Периодичность.День Тогда
		Объект.НачалоПериода = НачалоДня(ТекДата);
		Объект.ОкончаниеПериода = КонецДня(ТекДата);
	ИначеЕсли ПериодНачисления = Перечисления.Периодичность.Неделя Тогда
		Объект.НачалоПериода = НачалоНедели(ТекДата);
		Объект.ОкончаниеПериода = КонецНедели(ТекДата);
	ИначеЕсли ПериодНачисления = Перечисления.Периодичность.Месяц Тогда
		Объект.НачалоПериода = НачалоМесяца(ТекДата);
		Объект.ОкончаниеПериода = КонецМесяца(ТекДата);
	ИначеЕсли ПериодНачисления = Перечисления.Периодичность.Квартал Тогда
		Объект.НачалоПериода = НачалоКвартала(ТекДата);
		Объект.ОкончаниеПериода = КонецКвартала(ТекДата);
	ИначеЕсли ПериодНачисления = Перечисления.Периодичность.Полугодие Тогда
		Если Месяц(ТекДата)<7 Тогда
			Объект.НачалоПериода = НачалоГода(ТекДата);
			Объект.ОкончаниеПериода = ДобавитьМесяц(Объект.НачалоПериода,6);
		Иначе
			Объект.НачалоПериода = ДобавитьМесяц(НачалоГода(ТекДата),6);
			Объект.ОкончаниеПериода = КонецГода(ТекДата);
		КонецЕсли;
	ИначеЕсли ПериодНачисления = Перечисления.Периодичность.Год Тогда
		Объект.НачалоПериода = НачалоГода(ТекДата);
		Объект.ОкончаниеПериода = КонецГода(ТекДата);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРазницуПоказаний()
	
	Для каждого СтрокаТЧ Из Объект.Показания Цикл
		СтрокаТЧ.Разница = (СтрокаТЧ.ПоказаниеНаКонецПериода - СтрокаТЧ.ПоказаниеНаНачалоПериода) * ?(ЗначениеЗаполнено(СтрокаТЧ.КоэффициентОтнесенияСчетчика), СтрокаТЧ.КоэффициентОтнесенияСчетчика, 1);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура РассчитатьСтроку(СтрокаТЧ)
	
	СтрокаТЧ.Разница = (СтрокаТЧ.ПоказаниеНаКонецПериода - СтрокаТЧ.ПоказаниеНаНачалоПериода) * ?(ЗначениеЗаполнено(СтрокаТЧ.КоэффициентОтнесенияСчетчика), СтрокаТЧ.КоэффициентОтнесенияСчетчика, 1);
	СтрокаТЧ.Сумма = СтрокаТЧ.Разница * СтрокаТЧ.Цена;
	
КонецПроцедуры

&НаСервере
Процедура РассчитатьИтоговуюРазницу()
	
	Сумма = 0;
	Для Каждого СтрокаТЧ Из Объект.Показания Цикл
		Сумма = Сумма + ?(ЗначениеЗаполнено(СтрокаТЧ.КоэффициентОтнесенияСчетчика), СтрокаТЧ.КоэффициентОтнесенияСчетчика, 1) *
		(СтрокаТЧ.ПоказаниеНаКонецПериода - СтрокаТЧ.ПоказаниеНаНачалоПериода);
	КонецЦикла;
	РазницаИтого = Сумма;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПараметрыВыбора()
	
	СвязиТелефона = Новый Массив;
	Если Объект.СпособЗаполнения = 1 Тогда
		СвязиТелефона.Добавить(Новый СвязьПараметраВыбора("Отбор.Владелец", "Объект.ДоговорКонтрагента"));
	Иначе
		СвязиТелефона.Добавить(Новый СвязьПараметраВыбора("Отбор.Владелец", "Элементы.Показания.ТекущиеДанные.ДоговорКонтрагента"));
	КонецЕсли;
	
	Элементы.ПоказанияНомерТелефона.СвязиПараметровВыбора = Новый ФиксированныйМассив(СвязиТелефона);
	
КонецПроцедуры

#Область ОбработкаРеквизитовНаСервере

&НаСервере
Процедура ОрганизацияПриИзмененииНаСервере()
	
	ЗаполнениеДокументов.ПриИзмененииЗначенияОрганизации(Объект, Пользователи.ТекущийПользователь());
	
КонецПроцедуры

&НаСервере
Процедура КонтрагентПриИзмененииНаСервере()
	
	ЗаполнениеДокументов.ПриИзмененииЗначенияКонтрагента(Объект);
	
КонецПроцедуры // КонтрагентПриИзмененииНаСервере()

&НаСервере
Процедура ДоговорКонтрагентаПриИзмененииНаСервере()
	
	Для Каждого СтрокТЧ Из Объект.Показания Цикл
		Если ЗначениеЗаполнено(СтрокТЧ.НомерТелефона) Тогда
			Если Не СтрокТЧ.НомерТелефона.Владелец = Объект.ДоговорКонтрагента Тогда
				СтрокТЧ.НомерТелефона = Справочники.АР_ТелефоныКонтрагентов.ПустаяСсылка();
			КонецЕсли;
		КонецЕсли;
		СтрокТЧ.Счетчик = Справочники.АР_Счетчики.ПустаяСсылка();
		СтрокТЧ.КоэффициентОтнесенияСчетчика = 0;
		СтрокТЧ.Площадь = ПолучитьПлощадьПоДоговору(СтрокТЧ.ОбъектАренды, СтрокТЧ.Услуга, Объект.ДоговорКонтрагента);
	КонецЦикла;
	
КонецПроцедуры // ДоговорКонтрагентаПриИзменении()

&НаСервере
Процедура УслугаПриИзмененииНаСервере() 	
	
	Для Каждого СтрокТЧ Из Объект.Показания Цикл
		СтрокТЧ.Площадь = ПолучитьПлощадьПоДоговору(СтрокТЧ.ОбъектАренды, Объект.Услуга, СтрокТЧ.ДоговорКонтрагента);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ДокументОснованиеПриИзмененииНаСервере()
	
	Если ЗначениеЗаполнено(Объект.ДокументОснование) Тогда
		ЗаполнитьЗначенияСвойств(Объект, Объект.ДокументОснование, "Контрагент,ДоговорКонтрагента");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСтрокиПоказанияНаСервере(АдресВременногоХранилища =  Неопределено, Здание = Неопределено)
	
	ОбъектЗначение = РеквизитФормыВЗначение("Объект");
	ОбъектЗначение.ЗаполнитьСтрокиПоказания(АдресВременногоХранилища, Здание);
	ЗначениеВРеквизитФормы(ОбъектЗначение,"Объект");
	
	ЗаполнитьРазницуПоказаний();
	РассчитатьИтоговуюРазницу();
	
КонецПроцедуры

&НаСервере
Процедура РаспределитьПоказанияСчетчиковНаСервере()
	
	ОбъектЗначение = РеквизитФормыВЗначение("Объект");
	ОбъектЗначение.РаспределитьПоказанияСчетчиков();
	ЗначениеВРеквизитФормы(ОбъектЗначение,"Объект");
	
	ЗаполнитьРазницуПоказаний();
	РассчитатьИтоговуюРазницу();
	
КонецПроцедуры

&НаСервере
Функция ПроверитьТабЧастьНаДублиСтрокНаСервере()
	
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	Возврат ДокументОбъект.ПроверитьТабЧастьНаДублиСтрок();
	
КонецФункции

#КонецОбласти

#КонецОбласти

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Элементы = Форма.Элементы;
	Объект   = Форма.Объект;
	
	ЕстьСчетчики = ВестиУчетПоСчетчикам();
	ПоказаниеСчетчика = ПредопределенноеЗначение("Перечисление.АР_УдалитьВидыОперацийАктСнятияПоказанийСчетчика.ПоказаниеСчетчика");
	ТрафикТелефонныхНомеров = ПредопределенноеЗначение("Перечисление.АР_УдалитьВидыОперацийАктСнятияПоказанийСчетчика.ТрафикТелефонныхНомеров");
	ПоказаниеПропорциональноПлощадиОбъектов = ПредопределенноеЗначение("Перечисление.АР_СпособыРасчетаУслуг.ПоказаниеПропорциональноПлощадиОбъектов");
	СуммаПропорциональноПлощадиОбъектов = ПредопределенноеЗначение("Перечисление.АР_СпособыРасчетаУслуг.СуммаПропорциональноПлощадиОбъектов");
	СуммаРавномерноПоДоговорам = ПредопределенноеЗначение("Перечисление.АР_СпособыРасчетаУслуг.СуммаРавномерноПоДоговорам");
	ФиксированнойСуммой = ПредопределенноеЗначение("Перечисление.АР_СпособыРасчетаУслуг.ФиксированнойСуммой");
	
	//Элементы.ДокументОснование.Видимость = Объект.СпособЗаполнения = 1;
	//Элементы.Контрагент.Видимость = Объект.СпособЗаполнения = 1;
	//Элементы.ДоговорКонтрагента.Видимость = Объект.СпособЗаполнения = 1;
	//Элементы.ПоказанияУслуга.Видимость = Объект.СпособЗаполнения = 1;
	//
	//Элементы.Услуга.Видимость = Объект.СпособЗаполнения = 0;
	//Элементы.СпособРасчета.Видимость = Объект.СпособЗаполнения = 0 И (Объект.ВидОперации = ПоказаниеСчетчика);
	//Элементы.ПоказанияКонтрагент.Видимость = Объект.СпособЗаполнения = 0;
	//Элементы.ПоказанияДоговорКонтрагента.Видимость = Объект.СпособЗаполнения = 0;
	
	Элементы.ДокументОснование.Видимость = Ложь;
	Элементы.Контрагент.Видимость = Ложь;
	Элементы.ДоговорКонтрагента.Видимость = Ложь;
	Элементы.ПоказанияУслуга.Видимость = Истина;
	//
	Элементы.Услуга.Видимость = Ложь;
	//Элементы.СпособРасчета.Видимость = Объект.СпособЗаполнения = 0 И (Объект.ВидОперации = ПоказаниеСчетчика);
	Элементы.ПоказанияКонтрагент.Видимость = Истина;
	Элементы.ПоказанияДоговорКонтрагента.Видимость = Истина;
	
	
	//Элементы.ПоказаниеДокумента.Видимость = (Объект.СпособЗаполнения = 0) и (Объект.СпособРасчета = ПоказаниеПропорциональноПлощадиОбъектов) И (Объект.ВидОперации = ПоказаниеСчетчика);
	//Элементы.ПоказанияПлощадь.Видимость = (Объект.ВидОперации = ПоказаниеСчетчика);
	
	Элементы.ПоказаниеДокумента.Видимость = Истина;
	Элементы.ПоказанияПлощадь.Видимость = Истина;
	
	//ВидимостьПоказаний = (Объект.СпособЗаполнения = 1) ИЛИ (Объект.СпособРасчета = ПоказаниеПропорциональноПлощадиОбъектов)
	//																	ИЛИ (Объект.СпособРасчета = ФиксированнойСуммой)
	//																	ИЛИ (Не ЗначениеЗаполнено(Объект.СпособРасчета))
	//																	ИЛИ (Объект.ВидОперации = ТрафикТелефонныхНомеров);
	ВидимостьПоказаний = Ложь;																		
	Элементы.ПоказанияПоказаниеНаНачалоПериода.Видимость = ВидимостьПоказаний;
	//Элементы.ПоказанияПоказаниеНаКонецПериода.Видимость = ВидимостьПоказаний;
	Элементы.ПоказанияПоказаниеНаКонецПериода.Видимость = Истина;
	Элементы.Разница.Видимость = ВидимостьПоказаний;
	//Элементы.ПоказанияЦена.Видимость = ВидимостьПоказаний;
	Элементы.ПоказанияЦена.Видимость = Истина;
	
	//Элементы.СуммаДокумента.Видимость = (Объект.СпособЗаполнения = 0) И (Объект.ВидОперации = ПоказаниеСчетчика)
	//И ((Объект.СпособРасчета = СуммаПропорциональноПлощадиОбъектов)
	//ИЛИ (Объект.СпособРасчета = СуммаРавномерноПоДоговорам));
	
	//Элементы.РассчитатьСуммуДокумента.Видимость = (Объект.СпособЗаполнения = 0) и (Объект.ВидОперации = ПоказаниеСчетчика)
	//и ((Объект.СпособРасчета = ПоказаниеПропорциональноПлощадиОбъектов)
	//или (Объект.СпособРасчета = СуммаПропорциональноПлощадиОбъектов)
	//или (Объект.СпособРасчета = СуммаРавномерноПоДоговорам));
	
	Элементы.СуммаДокумента.Видимость = Истина;
	
	Элементы.ПоказанияНомерТелефона.Видимость = (Объект.УдалитьВидОперации = ТрафикТелефонныхНомеров);
	
	//Элементы.ПоказанияЗаполнитьСОтбором.Видимость = Объект.СпособЗаполнения = 0;
	//Элементы.ПоказанияРаспределитьПоказанияСчетчиков.Видимость = Объект.СпособЗаполнения = 0;
	Элементы.ПоказанияЗаполнитьСОтбором.Видимость = Ложь;
	Элементы.ПоказанияРаспределитьПоказанияСчетчиков.Видимость = Ложь;
	
	
	Форма.Период = ВыборПериодаКлиентСервер.ПолучитьПредставлениеПериодаОтчета(
	Объект.ВидПериода, Объект.НачалоПериода, Объект.ОкончаниеПериода);
	
	ВыборПериодаКлиентСервер.ПереключитьТекущуюСтраницуВыбораПериода(Объект.ВидПериода, Элементы.ГруппаПоляВводаПериода);
	
КонецПроцедуры // УправлениеФормой()

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// Обработчик подсистемы "Свойства"
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтаФорма, ТекущийОбъект);
	
	ОбщийОбъект=Справочники.АР_ОбъектыАренды.НайтиПоКоду("000000001"); //СВД
	
	Для Каждого Стр из Объект.Показания Цикл
		
		Если не ЗначениеЗаполнено(Стр.ОбъектАренды) Тогда
			Стр.ОбъектАренды=ОбщийОбъект;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьЗавершение()
	
	Отказ = Ложь;
	//Если Объект.СпособЗаполнения = 1 тогда
	//	
	//	Если Не ЗначениеЗаполнено(Объект.Контрагент) Тогда
	//		ТекстСообщения = ОбщегоНазначенияБПКлиентСервер.ПолучитьТекстСообщения(,, НСтр("ru = 'Контрагент'"));
	//		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "Контрагент", "Объект", Отказ);
	//	КонецЕсли;
	//	
	//	Если Не ЗначениеЗаполнено(Объект.ДоговорКонтрагента) Тогда
	//		ТекстСообщения = ОбщегоНазначенияБПКлиентСервер.ПолучитьТекстСообщения(,, НСтр("ru = 'Договор контрагента'"));
	//		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "ДоговорКонтрагента", "Объект", Отказ);
	//	КонецЕсли;
	//	
	//	Если Отказ Тогда
	//		Возврат;
	//	КонецЕсли;
	//	
	//	ЗаполнитьСтрокиПоказанияНаСервере();
	//	
	//Иначе
	//	
	//	Если Не ЗначениеЗаполнено(Объект.Организация) Тогда
	//		ТекстСообщения = ОбщегоНазначенияБПКлиентСервер.ПолучитьТекстСообщения(,, НСтр("ru = 'Организация'"));
	//		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "Организация", "Объект", Отказ);
	//	КонецЕсли;
	//	
	//	Если Не ЗначениеЗаполнено(Объект.Услуга) Тогда
	//		ТекстСообщения = ОбщегоНазначенияБПКлиентСервер.ПолучитьТекстСообщения(,, НСтр("ru = 'Услуга'"));
	//		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "Услуга", "Объект", Отказ);
	//	КонецЕсли;
	//	
	//	Если Отказ Тогда
	//		Возврат;
	//	КонецЕсли;
	//	
	//	ЗаполнитьСтрокиПоказанияНаСервере();
	//	
	//КонецЕсли;
	
	ЗаполнитьСтрокиПоказанияНаСервере();
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаСервере
Функция ПолучитьПлощадьПоДоговору(ОбъектНедвижимости, Услуга, Договор)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаСреза", Объект.Дата);
	Запрос.УстановитьПараметр("ОбъектНедвижимости", ОбъектНедвижимости);
	Запрос.УстановитьПараметр("Услуга", Услуга);
	Запрос.УстановитьПараметр("Договор", Договор);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СУММА(АР_СтавкиСрезПоследних.Площадь) КАК Площадь
	|ИЗ
	|	РегистрСведений.АР_Ставки.СрезПоследних(
	|			&ДатаСреза,
	|			Договор = &Договор
	|				И ОбъектАренды = &ОбъектНедвижимости
	|				И Услуга = &Услуга) КАК АР_СтавкиСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АР_СтатусыОбъектовАренды.СрезПоследних(
	|				&ДатаСреза,
	|				Договор = &Договор
	|					И ОбъектАренды = &ОбъектНедвижимости
	|					И Услуга = &Услуга) КАК АР_СтатусыОбъектовАрендыСрезПоследних
	|		ПО АР_СтавкиСрезПоследних.Договор = АР_СтатусыОбъектовАрендыСрезПоследних.Договор
	|			И АР_СтавкиСрезПоследних.ОбъектАренды = АР_СтатусыОбъектовАрендыСрезПоследних.ОбъектАренды
	|			И АР_СтавкиСрезПоследних.Услуга = АР_СтатусыОбъектовАрендыСрезПоследних.Услуга
	|ГДЕ
	|	АР_СтатусыОбъектовАрендыСрезПоследних.ДатаНачалаАренды <= &ДатаСреза
	|	И АР_СтатусыОбъектовАрендыСрезПоследних.ДатаОкончанияАренды > &ДатаСреза";
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Площадь;
	КонецЕсли;
	
	Возврат 0;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьИЗВывозаМусораНаСервере()
	
	ДатаНачала = НачалоДня(Объект.НачалоПериода);
	//ДатаКонца = КонецМесяца(Объект.Дата);
	ДатаКонца = КонецДня(Объект.ОкончаниеПериода);
	
	Показания2=Объект.Показания.Выгрузить();
	Показания2.Колонки.Добавить("ИНН");
	Показания2.Колонки.Добавить("КПП");
	Показания2.Колонки.Добавить("Количество");
	//Показания.Очистить();
	//Показания.Загрузить(ДокументОбъект.Показания.Выгрузить());
	Для Каждого СтрокаТ ИЗ Показания2 Цикл 
		Если ЗначениеЗаполнено(СтрокаТ.Контрагент) Тогда 
			СтрокАТ.ИНН = СтрокаТ.Контрагент.ИНН;
			СтрокаТ.КПП = СтрокаТ.Контрагент.КПП;
		КонецЕсли;
	КонецЦикла;
	
	
	ТипИнформационнойБазыДляПодключения 			= Ложь;
	ИмяСервераИнформационнойБазыДляПодключения 		= "SRV10-hv";
	ИмяИнформационнойБазыНаСервереДляПодключения 	= "Vyvoz";
	ПользовательИнформационнойБазыДляПодключения 	= "ОбменБП";
	ПарольИнформационнойБазыДляПодключения    		= "1515%%";
	
	РезультатПодключения = ПодключитсяКИнформационнойБазе(РезультатПодключения,"",ТипИнформационнойБазыДляПодключения,
	ИмяСервераИнформационнойБазыДляПодключения,ИмяИнформационнойБазыНаСервереДляПодключения,
	ПользовательИнформационнойБазыДляПодключения,ПарольИнформационнойБазыДляПодключения);
	
	Если РезультатПодключения = Неопределено Тогда
		
		Сообщить("Ошибка подключения");
		Возврат;
		
	КонецЕсли;
	
	Сообщить("Загружаю таблицу");
	
	ЗагрузитьДанные(Показания2,РезультатПодключения);
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаСервере
Функция ПодключитсяКИнформационнойБазе(РезультатПодключения,ТипИнформационнойБазыДляПодключения = Ложь,КаталогИнформационнойБазыДляПодключения="",
	ИмяСервераИнформационнойБазыДляПодключения,
	ИмяИнформационнойБазыНаСервереДляПодключения,
	ПользовательИнформационнойБазыДляПодключения,
	ПарольИнформационнойБазыДляПодключения,
	СтрокаСообщенияОбОшибке = "", Отключится=ложь) Экспорт 
	
	Перем СтрокаПодключения;
	
	Если РезультатПодключения<>Неопределено тогда
		Возврат РезультатПодключения;
	КонецЕсли;
	
	
	СтруктураПодключения = Новый Структура();
	СтруктураПодключения.Вставить("ФайловыйРежим", Ложь);
	СтруктураПодключения.Вставить("АутентификацияWindows", Ложь);
	СтруктураПодключения.Вставить("КаталогИБ", КаталогИнформационнойБазыДляПодключения);
	СтруктураПодключения.Вставить("ИмяСервера", ИмяСервераИнформационнойБазыДляПодключения);
	СтруктураПодключения.Вставить("ИмяИБНаСервере", ИмяИнформационнойБазыНаСервереДляПодключения);
	СтруктураПодключения.Вставить("Пользователь", ПользовательИнформационнойБазыДляПодключения);
	СтруктураПодключения.Вставить("Пароль", ПарольИнформационнойБазыДляПодключения);
	СтруктураПодключения.Вставить("ВерсияПлатформы", "V83");
	
	ПараметровДостаточно = ОпределитьДостаточностьПараметровДляПодключенияКИнформационнойБазе(СтруктураПодключения, СтрокаПодключения, СтрокаСообщенияОбОшибке);
	
	Если Не ПараметровДостаточно Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если Не СтруктураПодключения.АутентификацияWindows Тогда
		Если НЕ ПустаяСтрока(СтруктураПодключения.Пользователь) Тогда
			СтрокаПодключения = СтрокаПодключения + ";Usr = """ + СтруктураПодключения.Пользователь + """";
		КонецЕсли;
		Если НЕ ПустаяСтрока(СтруктураПодключения.Пароль) Тогда
			СтрокаПодключения = СтрокаПодключения + ";Pwd = """ + СтруктураПодключения.Пароль + """";
		КонецЕсли;
	КонецЕсли;
	
	//"V8" или "V81"
	ОбъектПодключения = СтруктураПодключения.ВерсияПлатформы;
	
	СтрокаПодключения = СтрокаПодключения + ";";
	
	Попытка
		
		#Если Клиент Тогда
			Состояние("Идет процесс соединения ...");
		#КонецЕсли
		
		ОбъектПодключения = ОбъектПодключения +".COMConnector";
		Если Отключится тогда
			ОбъектПодключения.Disconnect(ОбъектПодключения);
		иначе
			ТекCOMПодключение = Новый COMОбъект(ОбъектПодключения);
			ТекCOMОбъект = ТекCOMПодключение.Connect(СтрокаПодключения);
		конецесли;
		
		#Если Клиент Тогда
			Состояние("Соединение установлено");
		#КонецЕсли		
		
	Исключение
		
		СтрокаСообщенияОбОшибке = "При попытке соедиения с COM-сервером произошла следующая ошибка:" + Символы.ПС 
		+ ОписаниеОшибки();
		#Если Клиент Тогда
			Сообщить(СтрокаСообщенияОбОшибке, СтатусСообщения.Важное);
			Состояние("Соединение установить не удалось");
			Состояние();
		#КонецЕсли
		
		Возврат Неопределено;
		
	КонецПопытки;
	
	Возврат ТекCOMОбъект;
	
КонецФункции

&НаСервере
Функция ОпределитьДостаточностьПараметровДляПодключенияКИнформационнойБазе(СтруктураПодключения, СтрокаПодключения = "", СтрокаСообщенияОбОшибке = "") Экспорт
	
	НаличиеОшибок = Ложь;
	
	Если СтруктураПодключения.ФайловыйРежим  Тогда
		
		Если ПустаяСтрока(СтруктураПодключения.КаталогИБ) Тогда
			
			СтрокаСообщенияОбОшибке = "Не задан каталог информационной базы-приемника";
			#Если Клиент Тогда
				Сообщить(СтрокаСообщенияОбОшибке, СтатусСообщения.Важное);
			#КонецЕсли
			НаличиеОшибок = Истина;
			
		КонецЕсли;
		
		СтрокаПодключения = "File=""" + СтруктураПодключения.КаталогИБ + """";
	Иначе
		
		Если ПустаяСтрока(СтруктураПодключения.ИмяСервера) Тогда
			
			СтрокаСообщенияОбОшибке = "Не задано имя сервера 1С:Предприятия информационной базы-приемника";
			#Если Клиент Тогда
				Сообщить(СтрокаСообщенияОбОшибке, СтатусСообщения.Важное);
			#КонецЕсли
			НаличиеОшибок = Истина;
			
		КонецЕсли;
		
		Если ПустаяСтрока(СтруктураПодключения.ИмяИБНаСервере) Тогда
			
			СтрокаСообщенияОбОшибке = "Не задано имя информационной базы-приемника на сервере 1С:Предприятия";
			#Если Клиент Тогда
				Сообщить(СтрокаСообщенияОбОшибке, СтатусСообщения.Важное);
			#КонецЕсли
			НаличиеОшибок = Истина;
			
		КонецЕсли;		
		
		СтрокаПодключения = "Srvr = """ + СтруктураПодключения.ИмяСервера + """; Ref = """ + СтруктураПодключения.ИмяИБНаСервере + """";		
		
	КонецЕсли;
	
	Возврат НЕ НаличиеОшибок;	
	
КонецФункции



&НаСервере
Процедура  ЗагрузитьДанные(Показания2,РезультатПодключения)
	
	Если РезультатПодключения=Неопределено тогда
		Возврат;
	КонецЕсли;
	
	Запрос = РезультатПодключения.NewObject("Запрос");
	Запрос = УстановитьПараметрыЗапроса(Запрос);
	Запрос.Установитьпараметр("ВидЦен",РезультатПодключения.Справочники.ВидыЦен.НайтиПоНаименованию("Оптовая цена"));
	
	Запрос.Текст = ПолучитьТекстЗапроса();		/////
	//Запрос.УстановитьПараметр("ПустаяНоменклатура", РезультатПодключения.справочники.Номенклатура.ПустаяСсылка());
	Таблица = Запрос.Выполнить().Выгрузить();
	ТаблицаГруз = Новый ТаблицаЗначений;
	ТаблицаГруз.Колонки.Добавить("КоличествоОборот", ОбщегоНазначенияБПКлиентСервер.ПолучитьОписаниеТиповЧисла(15,3));
	ТаблицаГруз.Колонки.Добавить("КоличествоПодборОборот", ОбщегоНазначенияБПКлиентСервер.ПолучитьОписаниеТиповЧисла(15,3));
	
	ТаблицаГруз.Колонки.Добавить("ОтражатьВБухгалтерскомУчете");
	ТаблицаГруз.Колонки.Добавить("КонтрагентНаименование", ОбщегоНазначенияБПКлиентСервер.ПолучитьОписаниеТиповСтроки(300));
	ТаблицаГруз.Колонки.Добавить("КонтрагентИНН", ОбщегоНазначенияБПКлиентСервер.ПолучитьОписаниеТиповСтроки(30));
	ТаблицаГруз.Колонки.Добавить("КонтрагентКПП", ОбщегоНазначенияБПКлиентСервер.ПолучитьОписаниеТиповСтроки(30));
	ТаблицаГруз.Колонки.Добавить("НоменклатураНаименование", ОбщегоНазначенияБПКлиентСервер.ПолучитьОписаниеТиповСтроки(300));
	ТаблицаГруз.Колонки.Добавить("ЕдиницаИзмерения", ОбщегоНазначенияБПКлиентСервер.ПолучитьОписаниеТиповСтроки(300));
	ТаблицаГруз.Колонки.Добавить("ИмяТаблицы", ОбщегоНазначенияБПКлиентСервер.ПолучитьОписаниеТиповСтроки(300));
	ТаблицаГруз.Колонки.Добавить("Цена", ОбщегоНазначенияБПКлиентСервер.ПолучитьОписаниеТиповЧисла(15,2));
	//ТаблицаГруз.Колонки.Добавить("Сумма", ОбщегоНазначенияБПКлиентСервер.ПолучитьОписаниеТиповЧисла(15,2));
	
	Для Каждого СтрокаТ Из Таблица Цикл
		//НЕ БЕРЕМ лишние строки по имени таблицы
		Если Объект.СпособЗаполнения = 1 Тогда
			ИмяОтчета="ПриемОтходов";
		Иначе
			ИмяОтчета="ОперативноеВыполнение";
		КонецЕсли;
		
		Если СтрокАТ.ИмяТаблицы <> ИмяОтчета Тогда 
			Продолжить;	
		КонецЕсли;		
		СтрокаДоб= ТаблицаГруз.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаДоб, СтрокАТ);
		СтрокаДоб.КонтрагентИНН = СокрЛП(СтрокаДоб.КонтрагентИНН);
		СтрокаДоб.КонтрагентКПП = СокрЛП(СтрокаДоб.КонтрагентКПП);
		СтрокаДоб.КонтрагентНаименование = ВРег(СокрЛП(СтрокаДоб.КонтрагентНаименование));
		СтрокаДоб.ИмяТаблицы = СтрокаДоб.ИмяТаблицы;
	КонецЦикла;
	
	ТаблицаГруз.Свернуть("ОтражатьВБухгалтерскомУчете, КонтрагентНаименование, КонтрагентИНН, КонтрагентКПП, НоменклатураНаименование,ЕдиницаИзмерения,Цена","КоличествоОборот, КоличествоПодборОборот");
	
	МассивСообщили = Новый Массив;
	
	ТЗДопУслуги=Показания2.Скопировать();
	ТЗДопУслуги.Очистить();
	КонтрагентНовый=Справочники.Контрагенты.ПустаяСсылка();
	
	Для Каждого СтрокаТ из Показания2 Цикл 
		Если не ЗначениеЗаполнено(СтрокаТ.Услуга) Тогда 
			Продолжить;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СтрокАТ.Контрагент) Тогда 
			Продолжить;
		КонецЕсли;
		ИНН = СокрЛП(СтрокаТ.Контрагент.ИНН);
		КПП = СокрЛП(СтрокаТ.Контрагент.КПП);
		ИМЯ = ВРег(СокрЛП(СтрокаТ.Контрагент.Наименование));
		
		МассивНайдено = Новый Массив;
		
		//попытка найти по ИНН если он заполнен
		Если ЗначениеЗаполнено(ИНН) Тогда 
			МассивНайдено = ТаблицаГруз.НайтиСтроки(Новый Структура("КонтрагентИНН, КонтрагентКПП", ИНН, КПП));
			Если МассивНайдено.Количество()=0 Тогда 
				МассивНайдено = ТаблицаГруз.НайтиСтроки(Новый Структура("КонтрагентИНН", ИНН));	
			КонецЕсли;
		КонецЕсли;
		
		//попытка найти по Наименованию
		Если МассивНайдено.Количество()=0 и ЗначениеЗаполнено(ИМЯ) Тогда
			МассивНайдено = ТаблицаГруз.НайтиСтроки(Новый Структура("КонтрагентНаименование", ИМЯ));	
		КонецЕсли;
		
		СтрСообщения = "Контрагент не найден: "+ПривестиСтрокуКДлинне(Строка(СтрокАТ.Контрагент),35)+" ИНН: "+ПривестиСтрокуКДлинне(ИНН,14)+" КПП: "+ПривестиСтрокуКДлинне(КПП,14)+" - возможно неверно заполнен ИНН";
		Если МассивНайдено.Количество()=0 и МассивСообщили.Найти(СтрСообщения)=Неопределено Тогда
			МассивСообщили.Добавить(СтрСообщения);
			Сообщить(СтрСообщения);
			Продолжить;
		КонецЕсли;
		
		
		
		Если Объект.СпособЗаполнения = 1 Тогда
			
			
			//Кол=0;
			
			Если СтрокаТ.Контрагент<>КонтрагентНовый Тогда
				
				//Кол=0;
				Для Каждого СтрокаНайден из МассивНайдено Цикл 
					
					ПоискНоменклатуры=Справочники.Номенклатура.НайтиПоНаименованию(ВРег(СтрокаНайден.НоменклатураНаименование),,Справочники.Номенклатура.НайтиПоКоду("00000005600"));
					Если не ЗначениеЗаполнено(ПоискНоменклатуры) Тогда
						НовЭлемент=Справочники.Номенклатура.СоздатьЭлемент();
						НовЭлемент.Наименование=ВРег(СтрокаНайден.НоменклатураНаименование);
						НовЭлемент.НаименованиеПолное=ВРег(СтрокаНайден.НоменклатураНаименование);
						НовЭлемент.ЕдиницаИзмерения=Справочники.КлассификаторЕдиницИзмерения.НайтиПоНаименованию(СтрокаНайден.ЕдиницаИзмерения);
						НовЭлемент.Услуга=Истина;
						НовЭлемент.ВидСтавкиНДС=Перечисления.ВидыСтавокНДС.Общая;					
						НовЭлемент.Родитель=Справочники.Номенклатура.НайтиПоКоду("00000005600");
						НовЭлемент.Записать();
						Сообщить("Создана номенклатура "+СтрокаНайден.НоменклатураНаименование);
						ПоискНоменклатуры=НовЭлемент.Ссылка;
					КонецЕсли;
					
					НовСтрДопУслуги=ТЗДопУслуги.Добавить();
					ЗаполнитьЗначенияСвойств(НовСтрДопУслуги, СтрокаТ);
					НовСтрДопУслуги.Услуга=ПоискНоменклатуры;
					НовСтрДопУслуги.Количество=СтрокаНайден.КоличествоОборот;
					НовСтрДопУслуги.Цена=СтрокаНайден.Цена;
					//НовСтрДопУслуги.Сумма=СтрокаНайден.Сумма;
					НовСтрДопУслуги.ПоказаниеНаКонецПериода = СтрокаНайден.КоличествоОборот;
					РассчитатьСтроку(НовСтрДопУслуги);
					
					
					
				КонецЦикла;				
				
				
				КонтрагентНовый=СтрокаТ.Контрагент;
				
			КонецЕсли;
			
			
		Иначе
			
			//Собираем количество
			Кол = 0;
			Если Найти(СтрокаТ.Услуга.Наименование, "Захоронение ТКО") Тогда 
				Для Каждого СтрокаНайден из МассивНайдено Цикл 
					Если Найти(СтрокаНайден.НоменклатураНаименование,"ТКО") Тогда 
						//тут добавим условие на умя таблицы
						Кол = Кол + СтрокаНайден.КоличествоОборот*0.2;	
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
			Если Найти(СтрокаТ.Услуга.Наименование, "Вывоз и утилизация ТКО") Тогда 
				Для Каждого СтрокаНайден из МассивНайдено Цикл 
					Если Найти(СтрокаНайден.НоменклатураНаименование,"ТКО") Тогда 
						//тут добавим условие на умя таблицы
						Кол = Кол + СтрокаНайден.КоличествоОборот;	
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;		
			
			
			Если Найти(СтрокаТ.Услуга.Наименование, "Утилизация ТКО") Тогда 
				Для Каждого СтрокаНайден из МассивНайдено Цикл 
					Если Найти(СтрокаНайден.НоменклатураНаименование,"ТКО") Тогда 
						//тут добавим условие на умя таблицы
						Кол = Кол + СтрокаНайден.КоличествоОборот;	
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;			  
			Если Найти(СтрокаТ.Услуга.Наименование, "Вывоз ТБО (переменная)") Тогда 
				Для Каждого СтрокаНайден из МассивНайдено Цикл 
					Если Найти(СтрокаНайден.НоменклатураНаименование,"ТКО") Тогда 
						//тут добавим условие на умя таблицы
						Кол = Кол + СтрокаНайден.КоличествоОборот;	
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
			Если Найти(СтрокаТ.Услуга.Наименование, "СО") Тогда 
				Для Каждого СтрокаНайден из МассивНайдено Цикл 
					Если Найти(СтрокаНайден.НоменклатураНаименование,"СО") Тогда 
						Кол = Кол + СтрокаНайден.КоличествоОборот;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			Если Найти(ВРег(СтрокаТ.Услуга.Наименование), "АВТОУСЛУГИ") Тогда 
				Для Каждого СтрокаНайден из МассивНайдено Цикл 
					Если Найти(ВРег(СтрокаНайден.НоменклатураНаименование),"АВТОУСЛУГИ") Тогда 
						Кол = Кол + СтрокаНайден.КоличествоОборот;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			Если Найти(ВРег(СтрокаТ.Услуга.Наименование), "ИНЫЕ ОТХОДЫ") Тогда 
				Для Каждого СтрокаНайден из МассивНайдено Цикл 
					Если Найти(ВРег(СтрокаНайден.НоменклатураНаименование),"ИНЫЕ ОТХОДЫ") Тогда 
						Кол = Кол + СтрокаНайден.КоличествоОборот;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			Если Найти(ВРег(СтрокаТ.Услуга.Наименование), "ВЕТКИ") Тогда 
				Для Каждого СтрокаНайден из МассивНайдено Цикл 
					Если Найти(ВРег(СтрокаНайден.НоменклатураНаименование),"ВЕТКИ") Тогда 
						Кол = Кол + СтрокаНайден.КоличествоОборот;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
			Если Найти(ВРег(СтрокаТ.Услуга.Наименование), "КГМ") Тогда 
				Для Каждого СтрокаНайден из МассивНайдено Цикл 
					Если Найти(ВРег(СтрокаНайден.НоменклатураНаименование),"КГМ") Тогда 
						Кол = Кол + СтрокаНайден.КоличествоОборот;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			Если Найти(ВРег(СтрокаТ.Услуга.Наименование), "СНЕГ") Тогда 
				Для Каждого СтрокаНайден из МассивНайдено Цикл 
					Если Найти(ВРег(СтрокаНайден.НоменклатураНаименование),"СНЕГ") Тогда 
						Кол = Кол + СтрокаНайден.КоличествоОборот;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
			Если Кол<>0 Тогда 
				СтрокаТ.ПоказаниеНаКонецПериода = Кол;
				СтрокаТ.Количество = Кол;
				РассчитатьСтроку(СтрокаТ);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если Объект.СпособЗаполнения = 1 Тогда
		Для Каждого СтрДоп из ТЗДопУслуги Цикл
			НовСтрПоказания=Показания2.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтрПоказания,СтрДоп);				
		КонецЦикла;
		
		Показания2.Сортировать("Контрагент, ДоговорКонтрагента, Услуга");
	КонецЕсли;
	
	//ОчиститьСообщения();
	Объект.Показания.Загрузить(Показания2);
	
	для Каждого стр из Объект.Показания Цикл
		стр.ФД=Истина;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура Покажиошибки(ТабДок)
	ТабДок.Показать();	
КонецПроцедуры


&НаСервере
Функция  ЗагрузитьДанныеРО(РезультатПодключения)
	
	Если РезультатПодключения=Неопределено тогда
		Возврат Ложь;
	КонецЕсли;
	
	Запрос = РезультатПодключения.NewObject("Запрос");
	Запрос = УстановитьПараметрыЗапросаРО(Запрос);
	
	
	//Запрос.Установитьпараметр("ВидЦен",РезультатПодключения.Справочники.ВидыЦен.НайтиПоНаименованию("Оптовая цена"));
	
	Запрос.Текст = ПолучитьТекстЗапросаРО();		/////
	//Запрос.УстановитьПараметр("ПустаяНоменклатура", РезультатПодключения.справочники.Номенклатура.ПустаяСсылка());
	Таблица = Запрос.Выполнить().Выгрузить();
	для Каждого стр из Таблица Цикл
		Стр.ИНН=СокрЛП(Стр.ИНН);
		Стр.КПП=СокрЛП(Стр.КПП);
	КонецЦикла;
	
	Таблица.Очистить();
	
	Попытка
		Excel = Новый COMОбъект("Excel.Application");
		Excel.WorkBooks.Open("F:\Работы по 1С\Книга1.xlsx");
		ExcelЛист = Excel.Sheets(1);
	Исключение
		Сообщить("Не установлено приложение MS Excel!");
	КонецПопытки;
	
	ТекущаяСтрока = 1;
	ТекущееЗначение = СокрЛП(ExcelЛист.Cells(ТекущаяСтрока, 1).Value);
	Пока ЗначениеЗаполнено(ТекущееЗначение) Цикл
		//Сообщить("Загрузка данных... строка " + Строка(ТекущаяСтрока));
		
		НовСтр=Таблица.Добавить();
		НовСтр.Количество = ExcelЛист.Cells(ТекущаяСтрока, 4).Value;
		НовСтр.КонтрагентНаименование = СокрЛП(ExcelЛист.Cells(ТекущаяСтрока, 2).Value);
		НовСтр.ИНН = СокрЛП(Строка(Формат(Число(СокрЛП(ExcelЛист.Cells(ТекущаяСтрока, 1).Value)),"ЧГ=0")));
		НовСтр.КонтрагентНаименованиеПолное = СокрЛП(ExcelЛист.Cells(ТекущаяСтрока, 2).Value);
		
		ТекущаяСтрока=ТекущаяСтрока+1;
		ТекущееЗначение = СокрЛП(ExcelЛист.Cells(ТекущаяСтрока, 1).Value);
	КонецЦикла;
	
	Excel.WorkBooks.Close();
	
	
	Таблица.Колонки.Добавить("Контрагент");
	Таблица.Колонки.Добавить("ДоговорКонтрагента");
	Таблица.Колонки.Добавить("СтароеНачисление");
	Таблица.Колонки.Добавить("ФД");
	Таблица.Колонки.Добавить("ФактическоеНачало");
	Таблица.Колонки.Добавить("ФактическоеОкончание");
	Таблица.Колонки.Добавить("ОбъектАренды");
	Таблица.Колонки.Добавить("Услуга");
	
	Таблица.Колонки.Добавить("Цена");
	Таблица.Колонки.Добавить("Сумма");
	
	Таблица.Колонки.Добавить("ТекстОшибки");
	Таблица.Колонки.Добавить("Важность");
	Таблица.Колонки.Добавить("ОшибкаВозниклаВ");
	
	
	ЕстьОшибки=Ложь;
	ТЗОшибок=Новый ТаблицаЗначений;
	ТЗОшибок.Колонки.Добавить("ТекстОшибки");
	ТЗОшибок.Колонки.Добавить("Важность");
	ТЗОшибок.Колонки.Добавить("ОшибкаВозниклаВ");
	
	//для Каждого стр из Таблица Цикл
	//	Стр.ИНН=СокрЛП(Строка(Формат(Число(стр.ИНН),"ЧГ=0")));		
	//КонецЦикла;
	
	
	
	
	Для Каждого стр из Таблица Цикл
		Если ЗначениеЗаполнено(стр.ИНН) Тогда
			Запрос2=Новый Запрос;
			Запрос2.Текст="ВЫБРАТЬ
			|	Контрагенты.Ссылка КАК Ссылка
			|ИЗ
			|	Справочник.Контрагенты КАК Контрагенты
			|ГДЕ
			|	Контрагенты.ИНН = &ИНН
			|	И Контрагенты.КПП = &КПП
			|	И Контрагенты.ПометкаУдаления = ЛОЖЬ";
			Запрос2.УстановитьПараметр("ИНН",стр.ИНН);
			если ЗначениеЗаполнено(стр.КПП) Тогда
				Запрос2.УстановитьПараметр("КПП",стр.КПП);
			Иначе
				Запрос2.Текст=стрЗаменить(Запрос2.Текст,"И Контрагенты.КПП = &КПП","");
			КонецЕсли;
			Результат=Запрос2.Выполнить();
			если Результат.Пустой() и ЗначениеЗаполнено(стр.КПП) Тогда
				Запрос3=Новый Запрос;
				Запрос3.Текст=Запрос2.Текст;
				Запрос3.Текст=стрЗаменить(Запрос3.Текст,"И Контрагенты.КПП = &КПП","");
				Запрос3.УстановитьПараметр("ИНН",стр.ИНН);
				Результат=Запрос3.Выполнить();
			КонецЕсли;
			
			если Результат.Пустой() Тогда
				НовыйКонтрагент=Справочники.Контрагенты.СоздатьЭлемент();
				НовыйКонтрагент.ИНН=стр.ИНН;
				НовыйКонтрагент.КПП=стр.КПП;
				НовыйКонтрагент.Наименование=стр.КонтрагентНаименование;
				НовыйКонтрагент.НаименованиеПолное=стр.КонтрагентНаименованиеПолное;
				Если СтрДлина(НовыйКонтрагент.ИНН)=12 тогда
					НовыйКонтрагент.ЮридическоеФизическоеЛицо=Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо;
				Иначе
					НовыйКонтрагент.ЮридическоеФизическоеЛицо=Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо;
				КонецЕсли;
				
				НовыйКонтрагент.Родитель=Справочники.Контрагенты.НайтиПоКоду("БП-000784");
				НовыйКонтрагент.Записать();
				стр.Контрагент=НовыйКонтрагент.Ссылка;
				
				
				стр2=ТЗОшибок.Добавить();
				стр2.ТекстОшибки="Создан новый контрагент ("+Стр.КонтрагентНаименование+")";
				стр2.Важность="Низкая";
				стр2.ОшибкаВозниклаВ="Бухгалтерия";				
				
				стр.ТекстОшибки=стр2.ТекстОшибки;
				стр.Важность=стр2.Важность;
				стр.ОшибкаВозниклаВ=стр2.ОшибкаВозниклаВ;			
				
				
			Иначе
				
				ТЗНайденых=Результат.Выгрузить();
				Если ТЗНайденых.Количество()>1 Тогда
					
					стр2=ТЗОшибок.Добавить();
					стр2.ТекстОшибки="В бухгалтерии найдено более двух контрагентов для ("+Стр.КонтрагентНаименование+"/"+стр.ИНН+"/"+стр.КПП+")";
					Для Каждого стр3 из ТЗНайденых Цикл
						стр2.ТекстОшибки=стр2.ТекстОшибки+Символы.ПС+стр3.ссылка.наименование;
					КонецЦикла;
					стр2.Важность="Высокая";
					стр2.ОшибкаВозниклаВ="Бухгалтерия";
					
					стр.ТекстОшибки=стр2.ТекстОшибки;
					стр.Важность=стр2.Важность;
					стр.ОшибкаВозниклаВ=стр2.ОшибкаВозниклаВ;
					
					
					
				Иначе
					стр.Контрагент=ТЗНайденых[0].Ссылка;
				КонецЕсли;
			КонецЕсли;
			
			
		Иначе
			стр2=ТЗОшибок.Добавить();
			стр2.ТекстОшибки="В базе Вывоза мусора у контрагента отсуствует ИНН ("+Стр.КонтрагентНаименование+")";
			стр2.Важность="Средняя";
			стр2.ОшибкаВозниклаВ="Вывоз";
			
			стр.ТекстОшибки=стр2.ТекстОшибки;
			стр.Важность=стр2.Важность;
			стр.ОшибкаВозниклаВ=стр2.ОшибкаВозниклаВ;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Сообщить("Проверка договоров");
	
	Для Каждого стр из Таблица Цикл
		Если ЗначениеЗаполнено(стр.Контрагент) Тогда
			Запрос=Новый запрос;
			Запрос.Текст="ВЫБРАТЬ
			|	ДоговорыКонтрагентов.Ссылка КАК Ссылка
			|ИЗ
			|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
			|ГДЕ
			|	ДоговорыКонтрагентов.Владелец = &Владелец
			|	И ДоговорыКонтрагентов.Деятельность = &Деятельность
			|	И ДоговорыКонтрагентов.ВидДоговора = &ВидДоговора";
			Запрос.УстановитьПараметр("Владелец",стр.Контрагент);
			Запрос.УстановитьПараметр("ВидДоговора",Перечисления.ВидыДоговоровКонтрагентов.СПокупателем);
			Запрос.УстановитьПараметр("Деятельность",Справочники.НоменклатурныеГруппы.НайтиПоКоду("БП-000001"));
			Результат=Запрос.Выполнить();
			Если Результат.Пустой() тогда
				НовДоговор=Справочники.ДоговорыКонтрагентов.СоздатьЭлемент();
				НовДоговор.ВидДоговора=Перечисления.ВидыДоговоровКонтрагентов.СПокупателем;
				НовДоговор.Организация=Справочники.Организации.НайтиПоКоду("000000001");
				НовДоговор.Владелец=стр.Контрагент;
				НовДоговор.ВалютаВзаиморасчетов=Константы.ВалютаРегламентированногоУчета.Получить();
				НовДоговор.АР_АрендныйДоговор=Истина;
				НовДоговор.Дата=стр.ДатаДоговора;
				НовДоговор.Деятельность=Справочники.НоменклатурныеГруппы.НайтиПоКоду("БП-000001");
				НовДоговор.Комментарий=стр.ОтветственныйНаименование;
				НовДоговор.Наименование=стр.ДоговорНаименование;
				НовДоговор.Номер=Стр.НомерДоговора;
				НовДоговор.СрокДействия=стр.СрокДействия;
				НовДоговор.Записать();
				стр.ДоговорКонтрагента=НовДоговор.Ссылка;
			Иначе
				ВыборкаДог=Результат.Выбрать();
				ВыборкаДог.Следующий();
				НовДоговор=ВыборкаДог.ссылка.ПолучитьОбъект();
				//НовДоговор.ВидДоговора=Перечисления.ВидыДоговоровКонтрагентов.СПокупателем;
				//НовДоговор.Организация=Справочники.Организации.НайтиПоКоду("000000001");
				//НовДоговор.Владелец=стр.Контрагент;
				//НовДоговор.ВалютаВзаиморасчетов=Константы.ВалютаРегламентированногоУчета.Получить();
				НовДоговор.АР_АрендныйДоговор=Истина;
				НовДоговор.Дата=стр.ДатаДоговора;
				//НовДоговор.Деятельность=Справочники.НоменклатурныеГруппы.НайтиПоКоду("БП-000001");
				НовДоговор.Комментарий=стр.ОтветственныйНаименование;
				НовДоговор.Наименование=стр.ДоговорНаименование;
				НовДоговор.Номер=Стр.НомерДоговора;
				НовДоговор.СрокДействия=стр.СрокДействия;
				НовДоговор.Записать();
				стр.ДоговорКонтрагента=НовДоговор.Ссылка;				 
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	Сообщить("Проверка прочих начислений");
	
	Для Каждого стр из Таблица Цикл
		если ЗначениеЗаполнено(стр.Контрагент) Тогда
			Запрос=новый Запрос;
			Запрос.Текст="ВЫБРАТЬ
			|	АР_НачислениеАренднойПлатыСостав.Ссылка КАК Ссылка
			|ИЗ
			|	Документ.АР_НачислениеАренднойПлаты.Состав КАК АР_НачислениеАренднойПлатыСостав
			|ГДЕ
			|	АР_НачислениеАренднойПлатыСостав.Ссылка.Проведен = ИСТИНА
			|	И АР_НачислениеАренднойПлатыСостав.Ссылка.Дата МЕЖДУ &НачалоМесяца И &КонецМесяца
			|	И АР_НачислениеАренднойПлатыСостав.Ссылка.НачалоПериода <= &ОкончаниеПериода
			|	И АР_НачислениеАренднойПлатыСостав.Ссылка.ОкончаниеПериода >= &НачалоПериода
			|	И АР_НачислениеАренднойПлатыСостав.Номенклатура в (&Номенклатура)
			|	И АР_НачислениеАренднойПлатыСостав.Ссылка.Контрагент = &Контрагент";
			Запрос.УстановитьПараметр("НачалоМесяца",НачалоМесяца(Объект.НачалоПериода));
			Запрос.УстановитьПараметр("КонецМесяца",КонецМесяца(Объект.ОкончаниеПериода));
			Запрос.УстановитьПараметр("НачалоПериода",НачалоДня(Объект.НачалоПериода));
			Запрос.УстановитьПараметр("ОкончаниеПериода",КонецДня(Объект.ОкончаниеПериода));
			Запрос.УстановитьПараметр("Контрагент",стр.Контрагент);
			
			Если стр.Контрагент.ПринадлежитЭлементу(Справочники.Контрагенты.НайтиПоКоду("000000004")) и Объект.ОкончаниеПериода<Дата('20190101') Тогда
				Запрос.Текст=СтрЗаменить(Запрос.Текст,"И АР_НачислениеАренднойПлатыСостав.Номенклатура = &Номенклатура","");
			Иначе
				СписокНоменклатуры = Новый Массив;
				СписокНоменклатуры.Добавить(Справочники.Номенклатура.НайтиПоКоду("БП-00001356"));
				СписокНоменклатуры.Добавить(Справочники.Номенклатура.НайтиПоКоду("БП-00003281"));
				
				Запрос.УстановитьПараметр("Номенклатура",СписокНоменклатуры);
				
			КонецЕсли;
			
			Результат=Запрос.Выполнить();
			Если не Результат.Пустой() Тогда
				Выборка=Результат.Выбрать();
				Выборка.Следующий();
				стр.СтароеНачисление=Выборка.ссылка;			
				стр2=ТЗОшибок.Добавить();
				стр2.ТекстОшибки="За этот период уже сделано начисление "+Стр.СтароеНачисление;
				стр2.Важность="Средняя";
				стр2.ОшибкаВозниклаВ="Бухгалтерия";
				
				стр.ТекстОшибки=стр2.ТекстОшибки;
				стр.Важность=стр2.Важность;
				стр.ОшибкаВозниклаВ=стр2.ОшибкаВозниклаВ;
				
				
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Сообщить("Очищаем ВЦ");
	
	Для Каждого стр из Таблица Цикл
		
		Если ЗначениеЗаполнено(стр.Контрагент) и ЗначениеЗаполнено(стр.Контрагент.КодИзВЦ) Тогда
			стр.ФД=Ложь;
			стр2.ТекстОшибки="Начисляется через ВЦ "+стр.Контрагент.Наименование;
			стр2.Важность="Низкая";
			стр2.ОшибкаВозниклаВ="Бухгалтерия";
			
			стр.ТекстОшибки=стр2.ТекстОшибки;
			стр.Важность=стр2.Важность;
			стр.ОшибкаВозниклаВ=стр2.ОшибкаВозниклаВ;
			
		Иначе
			стр.ФД=Истина;
		КонецЕсли;
		
	КонецЦикла;
	
	Сообщить("Дозаполняем таблицу");
	Объект.Показания.Очистить();
	
	
	Для Каждого стр из Таблица Цикл
		если стр.Важность="Высокая" или стр.Важность="Средняя" Тогда
			стр.ФД=Ложь;
		КонецЕсли;
		
		стр.ФактическоеНачало=Объект.НачалоПериода;
		стр.ФактическоеОкончание=Объект.ОкончаниеПериода;
		стр.Услуга=Справочники.Номенклатура.НайтиПоКоду("БП-00001356");
		Стр.Цена=371.20;
		Стр.Сумма=стр.цена*стр.Количество;
		Стр.ОбъектАренды=Справочники.АР_ОбъектыАренды.НайтиПоКоду("000000001");
		
		НовСтр=Объект.Показания.Добавить();
		НовСтр.Услуга=Стр.Услуга;
		НовСтр.ФактическоеНачало=Стр.ФактическоеНачало;
		НовСтр.ФактическоеОкончание=Стр.ФактическоеОкончание;
		НовСтр.Цена=Стр.Цена;
		НовСтр.Сумма=Стр.Сумма;
		НовСтр.ОбъектАренды=Стр.ОбъектАренды;
		НовСтр.Контрагент=Стр.Контрагент;
		НовСтр.ДоговорКонтрагента=Стр.ДоговорКонтрагента;
		НовСтр.ОшибкаВозниклаВ=Стр.ОшибкаВозниклаВ;
		НовСтр.ТекстОшибки=Стр.ТекстОшибки;
		НовСтр.Важность=Стр.Важность;
		НовСтр.ТекстОшибки=Стр.ТекстОшибки;
		НовСтр.ФД=Стр.ФД;
		НовСтр.СтароеНачисление=Стр.СтароеНачисление;
		НовСтр.ЕдиницаИзмерения=НовСтр.Услуга.ЕдиницаИзмерения;
		НовСтр.ПоказаниеНаКонецПериода=Стр.Количество;
		
	КонецЦикла;
	
	///Сообщить("Заполняем документ");
	
	
	Макет=Документы.АР_АктСнятияПоказанийСчетчика.ПолучитьМакет("ОшибкиЗагрузки");
	ТабДок=новый ТабличныйДокумент;
	ОШ=Макет.ПолучитьОбласть("Заголовок");
	ТабДок.Вывести(ОШ);
	С1=Макет.ПолучитьОбласть("Строка1");
	С2=Макет.ПолучитьОбласть("Строка2");
	С3=Макет.ПолучитьОбласть("Строка3");
	
	Сообщить("Ошибки, ошибки");
	
	
	Для Каждого стр из ТЗОшибок Цикл
		Если стр.Важность="Низкая" Тогда
			с1.Параметры.Заполнить(стр);
			ТабДок.Вывести(с1);
		Иначеесли стр.Важность="Средняя" Тогда
			с2.Параметры.Заполнить(стр);
			ТабДок.Вывести(с2);
		Иначеесли стр.Важность="Высокая" Тогда
			с3.Параметры.Заполнить(стр);
			ТабДок.Вывести(с3);
		КонецЕсли;
	КонецЦикла;
	
	
	Возврат Табдок;	
	
КонецФункции

&НаСервере
Функция  ЗагрузитьДанныеРОЛимиты(РезультатПодключения)
	
	Если РезультатПодключения=Неопределено тогда
		Возврат Ложь;
	КонецЕсли;
	
	Запрос = РезультатПодключения.NewObject("Запрос");
	Запрос = УстановитьПараметрыЗапросаРО(Запрос);
	
	
	//Запрос.Установитьпараметр("ВидЦен",РезультатПодключения.Справочники.ВидыЦен.НайтиПоНаименованию("Оптовая цена"));
	
	Запрос.Текст = ПолучитьТекстЗапросаРОЛимиты();		/////
	//Запрос.УстановитьПараметр("ПустаяНоменклатура", РезультатПодключения.справочники.Номенклатура.ПустаяСсылка());
	Таблица = Запрос.Выполнить().Выгрузить();
	Сообщить("Дозаполняем площадки");
	для Каждого стр из Таблица Цикл
		Стр.ИНН=СокрЛП(Стр.ИНН);
		Стр.КПП=СокрЛП(Стр.КПП);
		Если Не ЗначениеЗаполнено(стр.ПлощадкаНаименование) ТОгда
			Для Каждого стр2 из стр.ДоговорСсылка.ргТаблицаПлощадок Цикл
				стр.ПлощадкаНаименование=СокрЛП(стр2.Площадка.Наименование);
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	//Таблица.Очистить();
	//
	//	Попытка
	//		Excel = Новый COMОбъект("Excel.Application");
	//		Excel.WorkBooks.Open("F:\Работы по 1С\Книга1.xlsx");
	//		ExcelЛист = Excel.Sheets(1);
	//	Исключение
	//		Сообщить("Не установлено приложение MS Excel!");
	//	КонецПопытки;
	//	
	//	ТекущаяСтрока = 1;
	//	ТекущееЗначение = СокрЛП(ExcelЛист.Cells(ТекущаяСтрока, 1).Value);
	//	Пока ЗначениеЗаполнено(ТекущееЗначение) Цикл
	//		//Сообщить("Загрузка данных... строка " + Строка(ТекущаяСтрока));
	//		
	//		НовСтр=Таблица.Добавить();
	//		НовСтр.Количество = ExcelЛист.Cells(ТекущаяСтрока, 4).Value;
	//		НовСтр.КонтрагентНаименование = СокрЛП(ExcelЛист.Cells(ТекущаяСтрока, 2).Value);
	//		НовСтр.ИНН = СокрЛП(Строка(Формат(Число(СокрЛП(ExcelЛист.Cells(ТекущаяСтрока, 1).Value)),"ЧГ=0")));
	//		НовСтр.КонтрагентНаименованиеПолное = СокрЛП(ExcelЛист.Cells(ТекущаяСтрока, 2).Value);
	//		
	//		ТекущаяСтрока=ТекущаяСтрока+1;
	//		ТекущееЗначение = СокрЛП(ExcelЛист.Cells(ТекущаяСтрока, 1).Value);
	//	КонецЦикла;
	//	
	//	Excel.WorkBooks.Close();
	
	
	Таблица.Колонки.Добавить("Контрагент");
	Таблица.Колонки.Добавить("ДоговорКонтрагента");
	Таблица.Колонки.Добавить("СтароеНачисление");
	Таблица.Колонки.Добавить("ФД");
	Таблица.Колонки.Добавить("ФактическоеНачало");
	Таблица.Колонки.Добавить("ФактическоеОкончание");
	Таблица.Колонки.Добавить("ОбъектАренды");
	Таблица.Колонки.Добавить("Услуга");
	
	Таблица.Колонки.Добавить("Цена");
	Таблица.Колонки.Добавить("Сумма");
	
	Таблица.Колонки.Добавить("ТекстОшибки");
	Таблица.Колонки.Добавить("Важность");
	Таблица.Колонки.Добавить("ОшибкаВозниклаВ");
	
	Таблица.Колонки.Добавить("Площадка");
	//Таблица.Колонки.Добавить("ТарифнаяЗона");
	//Таблица.Колонки.Добавить("Округ");
	
	ЕстьОшибки=Ложь;
	ТЗОшибок=Новый ТаблицаЗначений;
	ТЗОшибок.Колонки.Добавить("ТекстОшибки");
	ТЗОшибок.Колонки.Добавить("Важность");
	ТЗОшибок.Колонки.Добавить("ОшибкаВозниклаВ");
	
	//для Каждого стр из Таблица Цикл
	//	Стр.ИНН=СокрЛП(Строка(Формат(Число(стр.ИНН),"ЧГ=0")));		
	//КонецЦикла;
	
	Сообщить("Создание площадок");
	
	Для Каждого Стр из Таблица Цикл
		Если ЗначениеЗаполнено(Стр.ПлощадкаНаименование) Тогда
			ПоискПлощадки=Справочники.ЭКО_Площадки.НайтиПоНаименованию(СокрЛП(Стр.ПлощадкаНаименование),Истина);
			Если ЗначениеЗаполнено(ПоискПлощадки) Тогда
				Стр.Площадка=ПоискПлощадки;
			Иначе
				НовПлощадка=Справочники.ЭКО_Площадки.СоздатьЭлемент();
				НовПлощадка.Наименование=СокрЛП(Стр.ПлощадкаНаименование);
				Если ЗначениеЗаполнено(Стр.ТарифнаяЗона) Тогда
					ПоискТЗ=Справочники.ЭКО_ТарифныеЗоны.НайтиПоНаименованию(СокрЛП(Стр.ТарифнаяЗона),Истина);
					Если ЗначениеЗаполнено(ПоискТЗ) Тогда
						НовПлощадка.ТарифнаяЗона=ПоискТЗ;
					Иначе
						НовТарифнаяЗона=Справочники.ЭКО_ТарифныеЗоны.СоздатьЭлемент();
						НовТарифнаяЗона.Наименование=СокрЛП(Стр.ТарифнаяЗона);
						НовТарифнаяЗона.Записать();
						НовПлощадка.ТарифнаяЗона=НовТарифнаяЗона.Ссылка;
					КонецЕсли;
				КонецЕсли;
				
				Если ЗначениеЗаполнено(Стр.Округ) Тогда
					ПоискОкруг=Справочники.ЭКО_Округ.НайтиПоНаименованию(СокрЛП(Стр.Округ),Истина);
					Если ЗначениеЗаполнено(ПоискОкруг) Тогда
						НовПлощадка.Округ=ПоискОкруг;
					Иначе
						НовОкруг=Справочники.ЭКО_Округ.СоздатьЭлемент();
						НовОкруг.Наименование=СокрЛП(Стр.Округ);
						НовОкруг.Записать();
						НовПлощадка.Округ=НовОкруг.Ссылка;
					КонецЕсли;
				КонецЕсли;
				НовПлощадка.Записать();
				Стр.Площадка=НовПлощадка.Ссылка;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	
	
	Для Каждого стр из Таблица Цикл
		Если ЗначениеЗаполнено(стр.ИНН) Тогда
			Запрос2=Новый Запрос;
			Запрос2.Текст="ВЫБРАТЬ
			|	Контрагенты.Ссылка КАК Ссылка
			|ИЗ
			|	Справочник.Контрагенты КАК Контрагенты
			|ГДЕ
			|	Контрагенты.ИНН = &ИНН
			|	И Контрагенты.КПП = &КПП
			|	И Контрагенты.ПометкаУдаления = ЛОЖЬ";
			Запрос2.УстановитьПараметр("ИНН",стр.ИНН);
			если ЗначениеЗаполнено(стр.КПП) Тогда
				Запрос2.УстановитьПараметр("КПП",стр.КПП);
			Иначе
				Запрос2.Текст=стрЗаменить(Запрос2.Текст,"И Контрагенты.КПП = &КПП","");
			КонецЕсли;
			Результат=Запрос2.Выполнить();
			если Результат.Пустой() и ЗначениеЗаполнено(стр.КПП) Тогда
				Запрос3=Новый Запрос;
				Запрос3.Текст=Запрос2.Текст;
				Запрос3.Текст=стрЗаменить(Запрос3.Текст,"И Контрагенты.КПП = &КПП","");
				Запрос3.УстановитьПараметр("ИНН",стр.ИНН);
				Результат=Запрос3.Выполнить();
			КонецЕсли;
			
			если Результат.Пустой() Тогда
				НовыйКонтрагент=Справочники.Контрагенты.СоздатьЭлемент();
				НовыйКонтрагент.ИНН=стр.ИНН;
				НовыйКонтрагент.КПП=стр.КПП;
				НовыйКонтрагент.Наименование=стр.КонтрагентНаименование;
				НовыйКонтрагент.НаименованиеПолное=стр.КонтрагентНаименованиеПолное;
				Если СтрДлина(НовыйКонтрагент.ИНН)=12 тогда
					НовыйКонтрагент.ЮридическоеФизическоеЛицо=Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо;
				Иначе
					НовыйКонтрагент.ЮридическоеФизическоеЛицо=Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо;
				КонецЕсли;
				
				НовыйКонтрагент.Родитель=Справочники.Контрагенты.НайтиПоКоду("БП-000784");
				НовыйКонтрагент.Записать();
				стр.Контрагент=НовыйКонтрагент.Ссылка;
				
				
				стр2=ТЗОшибок.Добавить();
				стр2.ТекстОшибки="Создан новый контрагент ("+Стр.КонтрагентНаименование+")";
				стр2.Важность="Низкая";
				стр2.ОшибкаВозниклаВ="Бухгалтерия";				
				
				стр.ТекстОшибки=стр2.ТекстОшибки;
				стр.Важность=стр2.Важность;
				стр.ОшибкаВозниклаВ=стр2.ОшибкаВозниклаВ;			
				
				
			Иначе
				
				ТЗНайденых=Результат.Выгрузить();
				Если ТЗНайденых.Количество()>1 Тогда
					
					стр2=ТЗОшибок.Добавить();
					стр2.ТекстОшибки="В бухгалтерии найдено более двух контрагентов для ("+Стр.КонтрагентНаименование+"/"+стр.ИНН+"/"+стр.КПП+")";
					Для Каждого стр3 из ТЗНайденых Цикл
						стр2.ТекстОшибки=стр2.ТекстОшибки+Символы.ПС+стр3.ссылка.наименование;
					КонецЦикла;
					стр2.Важность="Высокая";
					стр2.ОшибкаВозниклаВ="Бухгалтерия";
					
					стр.ТекстОшибки=стр2.ТекстОшибки;
					стр.Важность=стр2.Важность;
					стр.ОшибкаВозниклаВ=стр2.ОшибкаВозниклаВ;
					
					
					
				Иначе
					стр.Контрагент=ТЗНайденых[0].Ссылка;
				КонецЕсли;
			КонецЕсли;
			
			
		Иначе
			стр2=ТЗОшибок.Добавить();
			стр2.ТекстОшибки="В базе Вывоза мусора у контрагента отсуствует ИНН ("+Стр.КонтрагентНаименование+")";
			стр2.Важность="Средняя";
			стр2.ОшибкаВозниклаВ="Вывоз";
			
			стр.ТекстОшибки=стр2.ТекстОшибки;
			стр.Важность=стр2.Важность;
			стр.ОшибкаВозниклаВ=стр2.ОшибкаВозниклаВ;
			
		КонецЕсли;
		
	КонецЦикла;
	
	
	Сообщить("Очищаем ВЦ");
	
	МассивУдаляемыхСтрок=Новый Массив;
	
	Для Каждого стр из Таблица Цикл
		
		Если ЗначениеЗаполнено(стр.Контрагент) и ЗначениеЗаполнено(стр.Контрагент.КодИзВЦ) Тогда
			МассивУдаляемыхСтрок.Добавить(стр);
			//стр.ФД=Ложь;
			//	стр2.ТекстОшибки="Начисляется через ВЦ "+стр.Контрагент.Наименование;
			//	стр2.Важность="Низкая";
			//	стр2.ОшибкаВозниклаВ="Бухгалтерия";
			//	
			//	стр.ТекстОшибки=стр2.ТекстОшибки;
			//	стр.Важность=стр2.Важность;
			//	стр.ОшибкаВозниклаВ=стр2.ОшибкаВозниклаВ;
			
		Иначе
			стр.ФД=Истина;
		КонецЕсли;
		
	КонецЦикла;
	
	Для Каждого Элемент из МассивУдаляемыхСтрок Цикл
		Таблица.Удалить(Элемент)
	КонецЦикла;
	
	
	Сообщить("Проверка договоров");
	
	Для Каждого стр из Таблица Цикл
		Если ЗначениеЗаполнено(стр.Контрагент) Тогда
			Запрос=Новый запрос;
			Запрос.Текст="ВЫБРАТЬ
			|	ДоговорыКонтрагентов.Ссылка КАК Ссылка
			|ИЗ
			|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
			|ГДЕ
			|	ДоговорыКонтрагентов.Владелец = &Владелец
			|	И ДоговорыКонтрагентов.Деятельность = &Деятельность
			|	И ДоговорыКонтрагентов.ВидДоговора = &ВидДоговора";
			Запрос.УстановитьПараметр("Владелец",стр.Контрагент);
			Запрос.УстановитьПараметр("ВидДоговора",Перечисления.ВидыДоговоровКонтрагентов.СПокупателем);
			Запрос.УстановитьПараметр("Деятельность",Справочники.НоменклатурныеГруппы.НайтиПоКоду("БП-000001"));
			Результат=Запрос.Выполнить();
			Если Результат.Пустой() тогда
				НовДоговор=Справочники.ДоговорыКонтрагентов.СоздатьЭлемент();
				НовДоговор.ВидДоговора=Перечисления.ВидыДоговоровКонтрагентов.СПокупателем;
				НовДоговор.Организация=Справочники.Организации.НайтиПоКоду("000000001");
				НовДоговор.Владелец=стр.Контрагент;
				НовДоговор.ВалютаВзаиморасчетов=Константы.ВалютаРегламентированногоУчета.Получить();
				НовДоговор.АР_АрендныйДоговор=Истина;
				НовДоговор.Дата=стр.ДатаДоговора;
				НовДоговор.Деятельность=Справочники.НоменклатурныеГруппы.НайтиПоКоду("БП-000001");
				НовДоговор.Комментарий=стр.ОтветственныйНаименование;
				НовДоговор.Наименование=стр.ДоговорНаименование;
				НовДоговор.Номер=Стр.НомерДоговора;
				НовДоговор.СрокДействия=стр.СрокДействия;
				НовДоговор.Записать();
				стр.ДоговорКонтрагента=НовДоговор.Ссылка;
			Иначе
				ВыборкаДог=Результат.Выбрать();
				ВыборкаДог.Следующий();
				НовДоговор=ВыборкаДог.ссылка.ПолучитьОбъект();
				//НовДоговор.ВидДоговора=Перечисления.ВидыДоговоровКонтрагентов.СПокупателем;
				//НовДоговор.Организация=Справочники.Организации.НайтиПоКоду("000000001");
				//НовДоговор.Владелец=стр.Контрагент;
				//НовДоговор.ВалютаВзаиморасчетов=Константы.ВалютаРегламентированногоУчета.Получить();
				НовДоговор.АР_АрендныйДоговор=Истина;
				НовДоговор.Дата=стр.ДатаДоговора;
				//НовДоговор.Деятельность=Справочники.НоменклатурныеГруппы.НайтиПоКоду("БП-000001");
				НовДоговор.Комментарий=стр.ОтветственныйНаименование;
				НовДоговор.Наименование=стр.ДоговорНаименование;
				НовДоговор.Номер=Стр.НомерДоговора;
				НовДоговор.СрокДействия=стр.СрокДействия;
				НовДоговор.Записать();
				стр.ДоговорКонтрагента=НовДоговор.Ссылка;				 
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	Сообщить("Проверка прочих начислений");
	
	Для Каждого стр из Таблица Цикл
		если ЗначениеЗаполнено(стр.Контрагент) Тогда
			Запрос=новый Запрос;
			Запрос.Текст="ВЫБРАТЬ
			|	АР_НачислениеАренднойПлатыСостав.Ссылка КАК Ссылка
			|ИЗ
			|	Документ.АР_НачислениеАренднойПлаты.Состав КАК АР_НачислениеАренднойПлатыСостав
			|ГДЕ
			|	АР_НачислениеАренднойПлатыСостав.Ссылка.Проведен = ИСТИНА
			|	И АР_НачислениеАренднойПлатыСостав.Ссылка.Дата МЕЖДУ &НачалоМесяца И &КонецМесяца
			|	И АР_НачислениеАренднойПлатыСостав.Ссылка.НачалоПериода <= &ОкончаниеПериода
			|	И АР_НачислениеАренднойПлатыСостав.Ссылка.ОкончаниеПериода >= &НачалоПериода
			|	И АР_НачислениеАренднойПлатыСостав.Номенклатура = &Номенклатура
			|	И АР_НачислениеАренднойПлатыСостав.Ссылка.Контрагент = &Контрагент";
			Запрос.УстановитьПараметр("НачалоМесяца",НачалоМесяца(Объект.НачалоПериода));
			Запрос.УстановитьПараметр("КонецМесяца",КонецМесяца(Объект.ОкончаниеПериода));
			Запрос.УстановитьПараметр("НачалоПериода",НачалоДня(Объект.НачалоПериода));
			Запрос.УстановитьПараметр("ОкончаниеПериода",КонецДня(Объект.ОкончаниеПериода));
			Запрос.УстановитьПараметр("Контрагент",стр.Контрагент);
			
			Если стр.Контрагент.ПринадлежитЭлементу(Справочники.Контрагенты.НайтиПоКоду("000000004")) и Объект.ОкончаниеПериода<Дата('20190101') Тогда
				Запрос.Текст=СтрЗаменить(Запрос.Текст,"И АР_НачислениеАренднойПлатыСостав.Номенклатура = &Номенклатура","");
			Иначе
				Запрос.УстановитьПараметр("Номенклатура",Справочники.Номенклатура.НайтиПоКоду("БП-00001356"));
			КонецЕсли;
			
			Результат=Запрос.Выполнить();
			Если не Результат.Пустой() Тогда
				Выборка=Результат.Выбрать();
				Выборка.Следующий();
				стр.СтароеНачисление=Выборка.ссылка;			
				стр2=ТЗОшибок.Добавить();
				стр2.ТекстОшибки="За этот период уже сделано начисление "+Стр.СтароеНачисление;
				стр2.Важность="Средняя";
				стр2.ОшибкаВозниклаВ="Бухгалтерия";
				
				стр.ТекстОшибки=стр2.ТекстОшибки;
				стр.Важность=стр2.Важность;
				стр.ОшибкаВозниклаВ=стр2.ОшибкаВозниклаВ;
				
				
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	
	Сообщить("Дозаполняем таблицу");
	Объект.Показания.Очистить();
	
	
	Для Каждого стр из Таблица Цикл
		если стр.Важность="Высокая" или стр.Важность="Средняя" Тогда
			стр.ФД=Ложь;
		КонецЕсли;
		
		стр.ФактическоеНачало=Объект.НачалоПериода;
		стр.ФактическоеОкончание=Объект.ОкончаниеПериода;
		стр.Услуга=Справочники.Номенклатура.НайтиПоКоду("БП-00001356");
		Стр.Цена=363.38;
		Стр.Сумма=стр.цена*стр.Количество;
		Стр.ОбъектАренды=Справочники.АР_ОбъектыАренды.НайтиПоКоду("000000001");
		
		НовСтр=Объект.Показания.Добавить();
		НовСтр.Услуга=Стр.Услуга;
		НовСтр.ФактическоеНачало=Стр.ФактическоеНачало;
		НовСтр.ФактическоеОкончание=Стр.ФактическоеОкончание;
		НовСтр.Цена=Стр.Цена;
		НовСтр.Сумма=Стр.Сумма;
		НовСтр.ОбъектАренды=Стр.ОбъектАренды;
		НовСтр.Контрагент=Стр.Контрагент;
		НовСтр.ДоговорКонтрагента=Стр.ДоговорКонтрагента;
		НовСтр.ОшибкаВозниклаВ=Стр.ОшибкаВозниклаВ;
		НовСтр.ТекстОшибки=Стр.ТекстОшибки;
		НовСтр.Важность=Стр.Важность;
		НовСтр.ТекстОшибки=Стр.ТекстОшибки;
		НовСтр.ФД=Стр.ФД;
		НовСтр.СтароеНачисление=Стр.СтароеНачисление;
		НовСтр.ЕдиницаИзмерения=НовСтр.Услуга.ЕдиницаИзмерения;
		НовСтр.ПоказаниеНаКонецПериода=Стр.Количество;
		НовСтр.Площадка=Стр.Площадка;
		НовСтр.ВывозящаяОрганизация=Справочники.Контрагенты.НайтиПоРеквизиту("ИНН",стр.ОрганизацияИНН);
		
	КонецЦикла;
	
	///Сообщить("Заполняем документ");
	
	
	Макет=Документы.АР_АктСнятияПоказанийСчетчика.ПолучитьМакет("ОшибкиЗагрузки");
	ТабДок=новый ТабличныйДокумент;
	ОШ=Макет.ПолучитьОбласть("Заголовок");
	ТабДок.Вывести(ОШ);
	С1=Макет.ПолучитьОбласть("Строка1");
	С2=Макет.ПолучитьОбласть("Строка2");
	С3=Макет.ПолучитьОбласть("Строка3");
	
	Сообщить("Ошибки, ошибки");
	
	
	Для Каждого стр из ТЗОшибок Цикл
		Если стр.Важность="Низкая" Тогда
			с1.Параметры.Заполнить(стр);
			ТабДок.Вывести(с1);
		Иначеесли стр.Важность="Средняя" Тогда
			с2.Параметры.Заполнить(стр);
			ТабДок.Вывести(с2);
		Иначеесли стр.Важность="Высокая" Тогда
			с3.Параметры.Заполнить(стр);
			ТабДок.Вывести(с3);
		КонецЕсли;
	КонецЦикла;
	
	
	Возврат Табдок;	
	
КонецФункции

&НаСервере
Функция  ЗагрузитьДанныеРОЛимитыЗаявки(РезультатПодключения,ДопЗаявки)
	
	Если РезультатПодключения=Неопределено тогда
		Возврат Ложь;
	КонецЕсли;
	
	Запрос = РезультатПодключения.NewObject("Запрос");
	Запрос = УстановитьПараметрыЗапросаРО(Запрос);
	
	
	//Запрос.Установитьпараметр("ВидЦен",РезультатПодключения.Справочники.ВидыЦен.НайтиПоНаименованию("Оптовая цена"));
	
	Если ДопЗаявки = Истина Тогда
		Запрос.Текст = ПолучитьТекстЗапросаРОЛимитыЗаявки();		/////
	Иначе
		Запрос.Текст = ПолучитьТекстЗапросаРОЛимиты1();		/////
	КонецЕсли;
	
	//Запрос.УстановитьПараметр("ПустаяНоменклатура", РезультатПодключения.справочники.Номенклатура.ПустаяСсылка());
	Таблица = Запрос.Выполнить().Выгрузить();
	
	МассивУдаляемых=Новый Массив;
	
	Для Каждого стр из Таблица Цикл
		Если стр.ДопЗаявка<>ДопЗаявки ТОгда
			МассивУдаляемых.Добавить(стр);		
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого ЭЛ из МассивУдаляемых Цикл
		Таблица.Удалить(ЭЛ);
	КонецЦикла;
	
	Сообщить("Дозаполняем площадки");
	для Каждого стр из Таблица Цикл
		Стр.ИНН=СокрЛП(Стр.ИНН);
		Стр.КПП=СокрЛП(Стр.КПП);
		Если Не ЗначениеЗаполнено(стр.ПлощадкаНаименование) ТОгда
			Для Каждого стр2 из стр.ДоговорСсылка.ргТаблицаПлощадок Цикл
				стр.ПлощадкаНаименование=СокрЛП(стр2.Площадка.Наименование);
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	//Таблица.Очистить();
	//
	//	Попытка
	//		Excel = Новый COMОбъект("Excel.Application");
	//		Excel.WorkBooks.Open("F:\Работы по 1С\Книга1.xlsx");
	//		ExcelЛист = Excel.Sheets(1);
	//	Исключение
	//		Сообщить("Не установлено приложение MS Excel!");
	//	КонецПопытки;
	//	
	//	ТекущаяСтрока = 1;
	//	ТекущееЗначение = СокрЛП(ExcelЛист.Cells(ТекущаяСтрока, 1).Value);
	//	Пока ЗначениеЗаполнено(ТекущееЗначение) Цикл
	//		//Сообщить("Загрузка данных... строка " + Строка(ТекущаяСтрока));
	//		
	//		НовСтр=Таблица.Добавить();
	//		НовСтр.Количество = ExcelЛист.Cells(ТекущаяСтрока, 4).Value;
	//		НовСтр.КонтрагентНаименование = СокрЛП(ExcelЛист.Cells(ТекущаяСтрока, 2).Value);
	//		НовСтр.ИНН = СокрЛП(Строка(Формат(Число(СокрЛП(ExcelЛист.Cells(ТекущаяСтрока, 1).Value)),"ЧГ=0")));
	//		НовСтр.КонтрагентНаименованиеПолное = СокрЛП(ExcelЛист.Cells(ТекущаяСтрока, 2).Value);
	//		
	//		ТекущаяСтрока=ТекущаяСтрока+1;
	//		ТекущееЗначение = СокрЛП(ExcelЛист.Cells(ТекущаяСтрока, 1).Value);
	//	КонецЦикла;
	//	
	//	Excel.WorkBooks.Close();
	
	
	Таблица.Колонки.Добавить("Контрагент");
	Таблица.Колонки.Добавить("ДоговорКонтрагента");
	Таблица.Колонки.Добавить("СтароеНачисление");
	Таблица.Колонки.Добавить("ФД");
	Таблица.Колонки.Добавить("ФактическоеНачало");
	Таблица.Колонки.Добавить("ФактическоеОкончание");
	Таблица.Колонки.Добавить("ОбъектАренды");
	Таблица.Колонки.Добавить("Услуга");
	
	Таблица.Колонки.Добавить("Цена");
	Таблица.Колонки.Добавить("Сумма");
	
	Таблица.Колонки.Добавить("ТекстОшибки");
	Таблица.Колонки.Добавить("Важность");
	Таблица.Колонки.Добавить("ОшибкаВозниклаВ");
	
	Таблица.Колонки.Добавить("Площадка");
	//Таблица.Колонки.Добавить("ТарифнаяЗона");
	//Таблица.Колонки.Добавить("Округ");
	
	ЕстьОшибки=Ложь;
	ТЗОшибок=Новый ТаблицаЗначений;
	ТЗОшибок.Колонки.Добавить("ТекстОшибки");
	ТЗОшибок.Колонки.Добавить("Важность");
	ТЗОшибок.Колонки.Добавить("ОшибкаВозниклаВ");
	
	//для Каждого стр из Таблица Цикл
	//	Стр.ИНН=СокрЛП(Строка(Формат(Число(стр.ИНН),"ЧГ=0")));		
	//КонецЦикла;
	
	Сообщить("Создание площадок");
	
	Для Каждого Стр из Таблица Цикл
		Если ЗначениеЗаполнено(Стр.ПлощадкаНаименование) Тогда
			ПоискПлощадки=Справочники.ЭКО_Площадки.НайтиПоНаименованию(СокрЛП(Стр.ПлощадкаНаименование),Истина);
			Если ЗначениеЗаполнено(ПоискПлощадки) Тогда
				Стр.Площадка=ПоискПлощадки;
			Иначе
				НовПлощадка=Справочники.ЭКО_Площадки.СоздатьЭлемент();
				НовПлощадка.Наименование=СокрЛП(Стр.ПлощадкаНаименование);
				Если ЗначениеЗаполнено(Стр.ТарифнаяЗона) Тогда
					ПоискТЗ=Справочники.ЭКО_ТарифныеЗоны.НайтиПоНаименованию(СокрЛП(Стр.ТарифнаяЗона),Истина);
					Если ЗначениеЗаполнено(ПоискТЗ) Тогда
						НовПлощадка.ТарифнаяЗона=ПоискТЗ;
					Иначе
						НовТарифнаяЗона=Справочники.ЭКО_ТарифныеЗоны.СоздатьЭлемент();
						НовТарифнаяЗона.Наименование=СокрЛП(Стр.ТарифнаяЗона);
						НовТарифнаяЗона.Записать();
						НовПлощадка.ТарифнаяЗона=НовТарифнаяЗона.Ссылка;
					КонецЕсли;
				КонецЕсли;
				
				Если ЗначениеЗаполнено(Стр.Округ) Тогда
					ПоискОкруг=Справочники.ЭКО_Округ.НайтиПоНаименованию(СокрЛП(Стр.Округ),Истина);
					Если ЗначениеЗаполнено(ПоискОкруг) Тогда
						НовПлощадка.Округ=ПоискОкруг;
					Иначе
						НовОкруг=Справочники.ЭКО_Округ.СоздатьЭлемент();
						НовОкруг.Наименование=СокрЛП(Стр.Округ);
						НовОкруг.Записать();
						НовПлощадка.Округ=НовОкруг.Ссылка;
					КонецЕсли;
				КонецЕсли;
				НовПлощадка.Записать();
				Стр.Площадка=НовПлощадка.Ссылка;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	
	
	Для Каждого стр из Таблица Цикл
		Если ЗначениеЗаполнено(стр.ИНН) Тогда
			Запрос2=Новый Запрос;
			Запрос2.Текст="ВЫБРАТЬ
			|	Контрагенты.Ссылка КАК Ссылка
			|ИЗ
			|	Справочник.Контрагенты КАК Контрагенты
			|ГДЕ
			|	Контрагенты.ИНН = &ИНН
			|	И Контрагенты.КПП = &КПП
			|	И Контрагенты.ПометкаУдаления = ЛОЖЬ";
			Запрос2.УстановитьПараметр("ИНН",стр.ИНН);
			
			Если ЗначениеЗаполнено(стр.ДополнительныйИдентификатор) Тогда
				Запрос2.Текст = Запрос2.Текст + " И Контрагенты.ДополнительныйИдентификатор = &ДополнительныйИдентификатор";
				Запрос2.УстановитьПараметр("ДополнительныйИдентификатор",стр.ДополнительныйИдентификатор);
			КонецЕсли;
			
			если ЗначениеЗаполнено(стр.КПП) Тогда
				Запрос2.УстановитьПараметр("КПП",стр.КПП);
			Иначе
				Запрос2.Текст=стрЗаменить(Запрос2.Текст,"И Контрагенты.КПП = &КПП","");
			КонецЕсли;
			Результат=Запрос2.Выполнить();
			если Результат.Пустой() и ЗначениеЗаполнено(стр.КПП) Тогда
				Запрос3=Новый Запрос;
				Запрос3.Текст=Запрос2.Текст;
				Запрос3.Текст=стрЗаменить(Запрос3.Текст,"И Контрагенты.КПП = &КПП","");
				Запрос3.УстановитьПараметр("ИНН",стр.ИНН);
				Запрос3.Текст=стрЗаменить(Запрос3.Текст," И Контрагенты.ДополнительныйИдентификатор = &ДополнительныйИдентификатор","");
				Результат=Запрос3.Выполнить();
			КонецЕсли;
			
			если Результат.Пустой() Тогда
				НовыйКонтрагент=Справочники.Контрагенты.СоздатьЭлемент();
				НовыйКонтрагент.ИНН=стр.ИНН;
				НовыйКонтрагент.КПП=стр.КПП;
				НовыйКонтрагент.Наименование=стр.КонтрагентНаименование;
				НовыйКонтрагент.НаименованиеПолное=стр.КонтрагентНаименованиеПолное;
				Если СтрДлина(НовыйКонтрагент.ИНН)=12 тогда
					НовыйКонтрагент.ЮридическоеФизическоеЛицо=Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо;
				Иначе
					НовыйКонтрагент.ЮридическоеФизическоеЛицо=Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо;
				КонецЕсли;
				
				НовыйКонтрагент.Родитель=Справочники.Контрагенты.НайтиПоКоду("БП-000784");
				НовыйКонтрагент.Записать();
				стр.Контрагент=НовыйКонтрагент.Ссылка;
				
				
				стр2=ТЗОшибок.Добавить();
				стр2.ТекстОшибки="Создан новый контрагент ("+Стр.КонтрагентНаименование+")";
				стр2.Важность="Низкая";
				стр2.ОшибкаВозниклаВ="Бухгалтерия";				
				
				стр.ТекстОшибки=стр2.ТекстОшибки;
				стр.Важность=стр2.Важность;
				стр.ОшибкаВозниклаВ=стр2.ОшибкаВозниклаВ;			
				
				
			Иначе
				
				ТЗНайденых=Результат.Выгрузить();
				Если ТЗНайденых.Количество()>1 Тогда
					
					стр2=ТЗОшибок.Добавить();
					стр2.ТекстОшибки="В бухгалтерии найдено более двух контрагентов для ("+Стр.КонтрагентНаименование+"/"+стр.ИНН+"/"+стр.КПП+")";
					Для Каждого стр3 из ТЗНайденых Цикл
						стр2.ТекстОшибки=стр2.ТекстОшибки+Символы.ПС+стр3.ссылка.наименование;
					КонецЦикла;
					стр2.Важность="Высокая";
					стр2.ОшибкаВозниклаВ="Бухгалтерия";
					
					стр.ТекстОшибки=стр2.ТекстОшибки;
					стр.Важность=стр2.Важность;
					стр.ОшибкаВозниклаВ=стр2.ОшибкаВозниклаВ;
					
					
					
				Иначе
					стр.Контрагент=ТЗНайденых[0].Ссылка;
				КонецЕсли;
			КонецЕсли;
			
			
		Иначе
			стр2=ТЗОшибок.Добавить();
			стр2.ТекстОшибки="В базе Вывоза мусора у контрагента отсуствует ИНН ("+Стр.КонтрагентНаименование+")";
			стр2.Важность="Средняя";
			стр2.ОшибкаВозниклаВ="Вывоз";
			
			стр.ТекстОшибки=стр2.ТекстОшибки;
			стр.Важность=стр2.Важность;
			стр.ОшибкаВозниклаВ=стр2.ОшибкаВозниклаВ;
			
		КонецЕсли;
		
	КонецЦикла;
	
	
	Сообщить("Очищаем ВЦ");
	
	МассивУдаляемыхСтрок=Новый Массив;
	
	МассивИсключаемыхОтходовПоДопВывозу = Новый Массив;
	МассивИсключаемыхОтходовПоДопВывозу.Добавить("000000001");
	МассивИсключаемыхОтходовПоДопВывозу.Добавить("ВМ-00000467");
	МассивИсключаемыхОтходовПоДопВывозу.Добавить("ВМ-00000035");
	МассивИсключаемыхОтходовПоДопВывозу.Добавить("ВМ-00000514");
	
	Для Каждого стр из Таблица Цикл
		
		Если ЗначениеЗаполнено(стр.Контрагент) и ЗначениеЗаполнено(стр.Контрагент.КодИзВЦ)
			    и Не МассивИсключаемыхОтходовПоДопВывозу.Найти(стр.ВидРабот.Код) = Неопределено Тогда
				
			МассивУдаляемыхСтрок.Добавить(стр);
			//стр.ФД=Ложь;
			//	стр2.ТекстОшибки="Начисляется через ВЦ "+стр.Контрагент.Наименование;
			//	стр2.Важность="Низкая";
			//	стр2.ОшибкаВозниклаВ="Бухгалтерия";
			//	
			//	стр.ТекстОшибки=стр2.ТекстОшибки;
			//	стр.Важность=стр2.Важность;
			//	стр.ОшибкаВозниклаВ=стр2.ОшибкаВозниклаВ;
			
		Иначе
			стр.ФД=Истина;
		КонецЕсли;
		
	КонецЦикла;
	
	Для Каждого Элемент из МассивУдаляемыхСтрок Цикл
		Таблица.Удалить(Элемент)
	КонецЦикла;
	
	
	Сообщить("Проверка договоров");
	
	Для Каждого стр из Таблица Цикл
		Если ЗначениеЗаполнено(стр.Контрагент) Тогда
			Запрос=Новый запрос;
			Запрос.Текст="ВЫБРАТЬ
			|	ДоговорыКонтрагентов.Ссылка КАК Ссылка
			|ИЗ
			|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
			|ГДЕ
			|	ДоговорыКонтрагентов.Владелец = &Владелец
			|	И ДоговорыКонтрагентов.Деятельность = &Деятельность
			|	И ДоговорыКонтрагентов.ВидДоговора = &ВидДоговора
			|	И ДоговорыКонтрагентов.Номер = &Номер
			|	И ДоговорыКонтрагентов.ПометкаУдаления = ЛОЖЬ";
			Запрос.УстановитьПараметр("Владелец",стр.Контрагент);
			Запрос.УстановитьПараметр("Номер",Стр.НомерДоговора);
			Запрос.УстановитьПараметр("ВидДоговора",Перечисления.ВидыДоговоровКонтрагентов.СПокупателем);
			Запрос.УстановитьПараметр("Деятельность",Справочники.НоменклатурныеГруппы.НайтиПоКоду("БП-000001"));
			Результат=Запрос.Выполнить();
			Если Результат.Пустой() тогда
				НовДоговор=Справочники.ДоговорыКонтрагентов.СоздатьЭлемент();
				НовДоговор.ВидДоговора=Перечисления.ВидыДоговоровКонтрагентов.СПокупателем;
				НовДоговор.Организация=Справочники.Организации.НайтиПоКоду("000000001");
				НовДоговор.Владелец=стр.Контрагент;
				НовДоговор.ВалютаВзаиморасчетов=Константы.ВалютаРегламентированногоУчета.Получить();
				НовДоговор.АР_АрендныйДоговор=Истина;
				НовДоговор.Дата=стр.ДатаДоговора;
				НовДоговор.Деятельность=Справочники.НоменклатурныеГруппы.НайтиПоКоду("БП-000001");
				//НовДоговор.Комментарий=стр.ОтветственныйНаименование;
				НовДоговор.Наименование=стр.ДоговорНаименование;
				НовДоговор.Номер=Стр.НомерДоговора;
				НовДоговор.СрокДействия=стр.СрокДействия;
				НовДоговор.Записать();
				стр.ДоговорКонтрагента=НовДоговор.Ссылка;
			Иначе
				ВыборкаДог=Результат.Выбрать();
				ВыборкаДог.Следующий();
				НовДоговор=ВыборкаДог.ссылка.ПолучитьОбъект();
				//НовДоговор.ВидДоговора=Перечисления.ВидыДоговоровКонтрагентов.СПокупателем;
				//НовДоговор.Организация=Справочники.Организации.НайтиПоКоду("000000001");
				//НовДоговор.Владелец=стр.Контрагент;
				//НовДоговор.ВалютаВзаиморасчетов=Константы.ВалютаРегламентированногоУчета.Получить();
				НовДоговор.АР_АрендныйДоговор=Истина;
				НовДоговор.Дата=стр.ДатаДоговора;
				//НовДоговор.Деятельность=Справочники.НоменклатурныеГруппы.НайтиПоКоду("БП-000001");
				//НовДоговор.Комментарий=стр.ОтветственныйНаименование;
				НовДоговор.Наименование=стр.ДоговорНаименование;
				НовДоговор.Номер=Стр.НомерДоговора;
				НовДоговор.СрокДействия=стр.СрокДействия;
				НовДоговор.Записать();
				стр.ДоговорКонтрагента=НовДоговор.Ссылка;				 
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	Сообщить("Проверка прочих начислений");
	
	Для Каждого стр из Таблица Цикл
		если ЗначениеЗаполнено(стр.Контрагент) и не ДопЗаявки Тогда
			Запрос=новый Запрос;
			Запрос.Текст="ВЫБРАТЬ
			|	АР_НачислениеАренднойПлатыСостав.Ссылка КАК Ссылка
			|ИЗ
			|	Документ.АР_НачислениеАренднойПлаты.Состав КАК АР_НачислениеАренднойПлатыСостав
			|ГДЕ
			|	АР_НачислениеАренднойПлатыСостав.Ссылка.Проведен = ИСТИНА
			|	И АР_НачислениеАренднойПлатыСостав.Ссылка.Дата МЕЖДУ &НачалоМесяца И &КонецМесяца
			|	И АР_НачислениеАренднойПлатыСостав.Ссылка.НачалоПериода <= &ОкончаниеПериода
			|	И АР_НачислениеАренднойПлатыСостав.Ссылка.ОкончаниеПериода >= &НачалоПериода
			|	И АР_НачислениеАренднойПлатыСостав.Номенклатура = &Номенклатура
			|	И АР_НачислениеАренднойПлатыСостав.Ссылка.Контрагент = &Контрагент";
			Запрос.УстановитьПараметр("НачалоМесяца",НачалоМесяца(Объект.НачалоПериода));
			Запрос.УстановитьПараметр("КонецМесяца",КонецМесяца(Объект.ОкончаниеПериода));
			Запрос.УстановитьПараметр("НачалоПериода",НачалоДня(Объект.НачалоПериода));
			Запрос.УстановитьПараметр("ОкончаниеПериода",КонецДня(Объект.ОкончаниеПериода));
			Запрос.УстановитьПараметр("Контрагент",стр.Контрагент);
			
			Если стр.Контрагент.ПринадлежитЭлементу(Справочники.Контрагенты.НайтиПоКоду("000000004")) и Объект.ОкончаниеПериода<Дата('20190101') Тогда
				Запрос.Текст=СтрЗаменить(Запрос.Текст,"И (АР_НачислениеАренднойПлатыСостав.Номенклатура = &Номенклатура или АР_НачислениеАренднойПлатыСостав.Номенклатура = &Номенклатура1 или АР_НачислениеАренднойПлатыСостав.Номенклатура = &Номенклатура2)","");
			Иначе
				Запрос.УстановитьПараметр("Номенклатура",Справочники.Номенклатура.НайтиПоКоду("БП-00001356"));
				Запрос.УстановитьПараметр("Номенклатура1",Справочники.Номенклатура.НайтиПоКоду("БП-00004488"));
				Запрос.УстановитьПараметр("Номенклатура2",Справочники.Номенклатура.НайтиПоКоду("БП-00001721"));
			КонецЕсли;
			
			Результат=Запрос.Выполнить();
			Если не Результат.Пустой() Тогда
				Выборка=Результат.Выбрать();
				Выборка.Следующий();
				стр.СтароеНачисление=Выборка.ссылка;			
				стр2=ТЗОшибок.Добавить();
				стр2.ТекстОшибки="За этот период уже сделано начисление "+Стр.СтароеНачисление;
				стр2.Важность="Средняя";
				стр2.ОшибкаВозниклаВ="Бухгалтерия";
				
				стр.ТекстОшибки=стр2.ТекстОшибки;
				стр.Важность=стр2.Важность;
				стр.ОшибкаВозниклаВ=стр2.ОшибкаВозниклаВ;
				
				
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	
	Сообщить("Дозаполняем таблицу");
	Объект.Показания.Очистить();
	
	
	Для Каждого стр из Таблица Цикл
		если стр.Важность="Высокая" или стр.Важность="Средняя" Тогда
			стр.ФД=Ложь;
		КонецЕсли;
		
		стр.ФактическоеНачало=Объект.НачалоПериода;
		стр.ФактическоеОкончание=Объект.ОкончаниеПериода;
		
		//patimka
		Если стр.Код = "ВМ-00000013"    Тогда 
			стр.Услуга=Справочники.Номенклатура.НайтиПоКоду("БП-00003295");
			//Кучерявенко
			Стр.Цена=435;
			
		ИначеЕсли     стр.Код = "ВМ-00000352" тогда
			стр.Услуга=Справочники.Номенклатура.НайтиПоКоду("БП-00001721");
			//Кучерявенко
			Стр.Цена=305;
			
		ИначеЕсли     стр.Код = "ВМ-00000467" тогда
			//стр.Услуга=Справочники.Номенклатура.НайтиПоКоду("БП-00001887");БП-00003461
			стр.Услуга=Справочники.Номенклатура.НайтиПоКоду("БП-00003461");
			//Кучерявенко
			Стр.Цена=319.79;
			
		Иначе 	
			стр.Услуга=Справочники.Номенклатура.НайтиПоКоду("БП-00003281");
			//Кучерявенко
			Стр.Цена=335.27;
			
		КонецЕсли;
		//patimka
		
		
		Стр.Сумма=стр.цена*стр.Количество;
		Стр.ОбъектАренды=Справочники.АР_ОбъектыАренды.НайтиПоКоду("000000001");
		
		НовСтр=Объект.Показания.Добавить();
		НовСтр.Услуга=Стр.Услуга;
		НовСтр.ФактическоеНачало=Стр.ФактическоеНачало;
		НовСтр.ФактическоеОкончание=Стр.ФактическоеОкончание;
		НовСтр.Цена=Стр.Цена;
		НовСтр.Сумма=Стр.Сумма;
		НовСтр.ОбъектАренды=Стр.ОбъектАренды;
		НовСтр.Контрагент=Стр.Контрагент;
		НовСтр.ДоговорКонтрагента=Стр.ДоговорКонтрагента;
		НовСтр.ОшибкаВозниклаВ=Стр.ОшибкаВозниклаВ;
		НовСтр.ТекстОшибки=Стр.ТекстОшибки;
		НовСтр.Важность=Стр.Важность;
		НовСтр.ТекстОшибки=Стр.ТекстОшибки;
		НовСтр.ФД=Стр.ФД;
		НовСтр.СтароеНачисление=Стр.СтароеНачисление;
		НовСтр.ЕдиницаИзмерения=НовСтр.Услуга.ЕдиницаИзмерения;
		НовСтр.ПоказаниеНаКонецПериода=Стр.Количество;
		НовСтр.Площадка=Стр.Площадка;
		НовСтр.ДопЗаявка=Стр.ДопЗаявка;
		НовСтр.ВывозящаяОрганизация=Справочники.Контрагенты.НайтиПоРеквизиту("ИНН",стр.ОрганизацияИНН);
		
	КонецЦикла;
	
	///Сообщить("Заполняем документ");
	
	
	Макет=Документы.АР_АктСнятияПоказанийСчетчика.ПолучитьМакет("ОшибкиЗагрузки");
	ТабДок=новый ТабличныйДокумент;
	ОШ=Макет.ПолучитьОбласть("Заголовок");
	ТабДок.Вывести(ОШ);
	С1=Макет.ПолучитьОбласть("Строка1");
	С2=Макет.ПолучитьОбласть("Строка2");
	С3=Макет.ПолучитьОбласть("Строка3");
	
	Сообщить("Ошибки, ошибки");
	
	
	Для Каждого стр из ТЗОшибок Цикл
		Если стр.Важность="Низкая" Тогда
			с1.Параметры.Заполнить(стр);
			ТабДок.Вывести(с1);
		Иначеесли стр.Важность="Средняя" Тогда
			с2.Параметры.Заполнить(стр);
			ТабДок.Вывести(с2);
		Иначеесли стр.Важность="Высокая" Тогда
			с3.Параметры.Заполнить(стр);
			ТабДок.Вывести(с3);
		КонецЕсли;
	КонецЦикла;
	
	
	Возврат Табдок;	
	
КонецФункции


&НаСервере
Функция ПолучитьТекстЗапроса()
	Возврат "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ИсточникДанных.ОбъемОборот КАК КоличествоОборот,
	|	ИсточникДанных.КоличествоПодборОборот КАК КоличествоПодборОборот,
	|	ИсточникДанных.ОтражатьВБухгалтерскомУчете,
	|	ИсточникДанных.ДоговорКонтрагента.ргТипДоговора.Наименование,
	|	ИсточникДанных.Номенклатура.Наименование,
	|	ИсточникДанных.Контрагент.Наименование,
	|	ИсточникДанных.Контрагент.ИНН,
	|	ИсточникДанных.Контрагент.КПП,
	|	""ОперативноеВыполнение"" КАК ИмяТаблицы,
	|	ИсточникДанных.Номенклатура.ЕдиницаИзмерения.Наименование КАК ЕдиницаИзмерения,
	|	0 КАК Цена,
	|	0 КАК Сумма	
	|ИЗ
	|	РегистрНакопления.ргОперативноеВыполнение.Обороты(&ДатаНач, &ДатаКон, , ) КАК ИсточникДанных
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ргПриемОтходовНаПолигонеОбороты.ОбъемОборот,
	|	ргПриемОтходовНаПолигонеОбороты.КоличествоОборот,
	|	ргПриемОтходовНаПолигонеОбороты.ОтражатьВБухгалтерскомУчете,
	|	ргПриемОтходовНаПолигонеОбороты.ДоговорКонтрагента.ргТипДоговора.Наименование,
	|	ргПриемОтходовНаПолигонеОбороты.НоменклатураИсточник.Наименование,
	|	ргПриемОтходовНаПолигонеОбороты.Контрагент.Наименование,
	|	ргПриемОтходовНаПолигонеОбороты.Контрагент.ИНН,
	|	ргПриемОтходовНаПолигонеОбороты.Контрагент.КПП,
	|	""ПриемОтходов"",
	|	ргПриемОтходовНаПолигонеОбороты.ЕдиницаИзмерения.Наименование,
	|	ВложенныйЗапрос.Цена,
	|	0
	|ИЗ
	|	РегистрНакопления.ргПриемОтходовНаПолигоне.Обороты(&ДатаНач, &ДатаКон, , ) КАК ргПриемОтходовНаПолигонеОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура,
	|			МАКСИМУМ(ЦеныНоменклатурыСрезПоследних.Цена) КАК Цена
	|		ИЗ
	|			РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&Датанач, ВидЦен = &ВидЦен) КАК ЦеныНоменклатурыСрезПоследних
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ЦеныНоменклатурыСрезПоследних.Номенклатура) КАК ВложенныйЗапрос
	|		ПО ргПриемОтходовНаПолигонеОбороты.НоменклатураИсточник = ВложенныйЗапрос.Номенклатура";
КонецФункции

&НаСервере
Функция ПолучитьТекстЗапросаРО()
	
	Возврат "ВЫБРАТЬ 
	|	СУММА(ргГрафикОбслуживанияДоговоров.Количество * ргГрафикОбслуживанияДоговоров.ОбъемТары) КАК Количество,
	|	ргГрафикОбслуживанияДоговоров.Контрагент.Наименование КАК КонтрагентНаименование,
	|  ргГрафикОбслуживанияДоговоров.Контрагент.Ответственный.Наименование КАК ОтветственныйНаименование,
	|	ргГрафикОбслуживанияДоговоров.Контрагент.ИНН как ИНН,
	|	ргГрафикОбслуживанияДоговоров.Контрагент.КПП как КПП,
	|	ргГрафикОбслуживанияДоговоров.ДоговорКонтрагента.НомерДоговора КАК НомерДоговора,
	|	ргГрафикОбслуживанияДоговоров.ДоговорКонтрагента.ргДатаЗаключения КАК ДатаЗаключения,
	|	ргГрафикОбслуживанияДоговоров.ДоговорКонтрагента.ДатаДоговора КАК ДатаДоговора,
	|	ргГрафикОбслуживанияДоговоров.ДоговорКонтрагента.ргСрокДействия КАК СрокДействия,
	|	ргГрафикОбслуживанияДоговоров.ДоговорКонтрагента.Организация.ИНН КАК ОрганизацияИНН,
	|	ргГрафикОбслуживанияДоговоров.ДоговорКонтрагента.Наименование КАК ДоговорНаименование,
	|	ВЫРАЗИТЬ(ргГрафикОбслуживанияДоговоров.Контрагент.НаименованиеПолное КАК СТРОКА(200)) КАК КонтрагентНаименованиеПолное
	|ИЗ
	|	РегистрСведений.ргГрафикОбслуживанияДоговоров КАК ргГрафикОбслуживанияДоговоров
	|ГДЕ
	|	ргГрафикОбслуживанияДоговоров.ДатаВывоза МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ргГрафикОбслуживанияДоговоров.ВидРабот.Код = &КодВидаРабот
	|
	|СГРУППИРОВАТЬ ПО
	|	ргГрафикОбслуживанияДоговоров.Контрагент.Наименование,
	|	ргГрафикОбслуживанияДоговоров.Контрагент.Ответственный.Наименование,
	|	ргГрафикОбслуживанияДоговоров.ДоговорКонтрагента.Организация.ИНН,
	|	ргГрафикОбслуживанияДоговоров.ДоговорКонтрагента.ргДатаЗаключения,
	|	ргГрафикОбслуживанияДоговоров.ДоговорКонтрагента.НомерДоговора,
	|	ргГрафикОбслуживанияДоговоров.Контрагент.ИНН,
	|	ргГрафикОбслуживанияДоговоров.Контрагент.КПП,
	|	ргГрафикОбслуживанияДоговоров.ДоговорКонтрагента.ДатаДоговора,
	|	ргГрафикОбслуживанияДоговоров.ДоговорКонтрагента.Наименование,
	|	ргГрафикОбслуживанияДоговоров.ДоговорКонтрагента.ргСрокДействия,
	|	ВЫРАЗИТЬ(ргГрафикОбслуживанияДоговоров.Контрагент.НаименованиеПолное КАК СТРОКА(200))
	|
	|УПОРЯДОЧИТЬ ПО
	|	КонтрагентНаименование
	|АВТОУПОРЯДОЧИВАНИЕ";	
КонецФункции

&НаСервере
Функция ПолучитьТекстЗапросаРОЛимиты()
	
	Возврат "ВЫБРАТЬ
	|	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Контрагент.Наименование КАК КонтрагентНаименование,
	|	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Контрагент.Ответственный.Наименование КАК ОтветственныйНаименование,
	|	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Контрагент.ИНН КАК ИНН,
	|	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Контрагент.КПП КАК КПП,
	|	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.НомерДоговора КАК НомерДоговора,
	|	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.ргДатаЗаключения КАК ДатаЗаключения,
	|	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.ДатаДоговора КАК ДатаДоговора,
	|	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.ргСрокДействия КАК СрокДействия,
	|	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.Организация.ИНН КАК ОрганизацияИНН,
	|	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.Наименование КАК ДоговорНаименование,
	|	ВЫРАЗИТЬ(ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Контрагент.НаименованиеПолное КАК СТРОКА(200)) КАК КонтрагентНаименованиеПолное,
	|	СУММА(ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Лимит) КАК Количество,
	|	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Площадка.Наименование как ПлощадкаНаименование,
	|	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Площадка.ТарифнаяЗона.Наименование как ТарифнаяЗона,
	|	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Площадка.Округ.Наименование как Округ,
	|  ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента как ДоговорСсылка			 
	|ИЗ
	|	РегистрСведений.ргРаспределениеСреднегодовогоЛимитаНаВывозМусора КАК ргРаспределениеСреднегодовогоЛимитаНаВывозМусора
	|ГДЕ
	|	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ВидРабот.Код = &КодВидаРабот
	|	И ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Дата МЕЖДУ &Началопериода И &КонецПериода
	|  и ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.ПометкаУдаления=ЛОЖЬ			 
	|СГРУППИРОВАТЬ ПО
	|	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Контрагент.Наименование,
	|	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Контрагент.Ответственный.Наименование,
	|	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.Организация.ИНН,
	|	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.ргДатаЗаключения,
	|	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.НомерДоговора,
	|	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Контрагент.ИНН,
	|	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Контрагент.КПП,
	|	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.ДатаДоговора,
	|	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.Наименование,
	|	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.ргСрокДействия,
	|	ВЫРАЗИТЬ(ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Контрагент.НаименованиеПолное КАК СТРОКА(200)),
	|	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Площадка.Наименование,
	|	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Площадка.ТарифнаяЗона.Наименование,
	|	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Площадка.Округ.Наименование,
	|  ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента
	|
	|УПОРЯДОЧИТЬ ПО
	|	КонтрагентНаименование
	|АВТОУПОРЯДОЧИВАНИЕ";
	
КонецФункции

&НаСервере
Функция ПолучитьТекстЗапросаРОЛимитыЗаявки()
	
	Возврат 
"ВЫБРАТЬ
|	СпрНоменклатура.Ссылка
|ПОМЕСТИТЬ втНоменклатура
|ИЗ
|	Справочник.Номенклатура КАК СпрНоменклатура
|ГДЕ
|	СпрНоменклатура.Код В (&КодВидаРабот, &КодВидаРабот1, &КодВидаРабот2, &КодВидаРабот3, &КодВидаРабот4)
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	ВложенныйЗапрос.КонтрагентНаименование,
|	ВложенныйЗапрос.ИНН,
|	ВложенныйЗапрос.КПП,
|	ВложенныйЗапрос.ДополнительныйИдентификатор,
|	ВложенныйЗапрос.НомерДоговора,
|	ВложенныйЗапрос.ДатаЗаключения,
|	ВложенныйЗапрос.ДатаДоговора,
|	ВложенныйЗапрос.СрокДействия,
|	ВложенныйЗапрос.ОрганизацияИНН,
|	ВложенныйЗапрос.ДоговорНаименование,
|	ВложенныйЗапрос.КонтрагентНаименованиеПолное,
|	СУММА(ВложенныйЗапрос.Количество) КАК Количество,
|	ВложенныйЗапрос.ПлощадкаНаименование,
|	ВложенныйЗапрос.ТарифнаяЗона,
|	ВложенныйЗапрос.Округ,
|	ВложенныйЗапрос.ДоговорСсылка,
|	ВложенныйЗапрос.ДопЗаявка,
|	ВложенныйЗапрос.код,
|	ВложенныйЗапрос.ВидРабот
|ИЗ
|	(ВЫБРАТЬ
|		ВложенныйЗапрос.КонтрагентНаименование КАК КонтрагентНаименование,
|		ВложенныйЗапрос.ОтветственныйНаименование КАК ОтветственныйНаименование,
|		ВложенныйЗапрос.ИНН КАК ИНН,
|		ВложенныйЗапрос.КПП КАК КПП,
|		ВложенныйЗапрос.ДополнительныйИдентификатор КАК ДополнительныйИдентификатор,
|		ВложенныйЗапрос.НомерДоговора КАК НомерДоговора,
|		ВложенныйЗапрос.ДатаЗаключения КАК ДатаЗаключения,
|		ВложенныйЗапрос.ДатаДоговора КАК ДатаДоговора,
|		ВложенныйЗапрос.СрокДействия КАК СрокДействия,
|		ВложенныйЗапрос.ОрганизацияИНН КАК ОрганизацияИНН,
|		ВложенныйЗапрос.ДоговорНаименование КАК ДоговорНаименование,
|		ВложенныйЗапрос.КонтрагентНаименованиеПолное КАК КонтрагентНаименованиеПолное,
|		ВложенныйЗапрос.Количество КАК Количество,
|		ВложенныйЗапрос.ПлощадкаНаименование КАК ПлощадкаНаименование,
|		ВложенныйЗапрос.ТарифнаяЗона КАК ТарифнаяЗона,
|		ВложенныйЗапрос.Округ КАК Округ,
|		ВложенныйЗапрос.ДоговорСсылка КАК ДоговорСсылка,
|		ИСТИНА КАК ДопЗаявка,
|		ВложенныйЗапрос.ВидРаботКод КАК код,
|		ВложенныйЗапрос.ВидРабот КАК ВидРабот
|	ИЗ
|		(ВЫБРАТЬ
|			ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.Контрагент.Наименование КАК КонтрагентНаименование,
|			ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.Автор.Наименование КАК ОтветственныйНаименование,
|			ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.Контрагент.ИНН КАК ИНН,
|			ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.Контрагент.КПП КАК КПП,
|			ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.Контрагент.ДополнительныйИдентификатор КАК ДополнительныйИдентификатор,
|			ВЫБОР
|				КОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
|					ТОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель.НомерДоговора
|				ИНАЧЕ ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.НомерДоговора
|			КОНЕЦ КАК НомерДоговора,
|			ВЫБОР
|				КОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
|					ТОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель.ргДатаЗаключения
|				ИНАЧЕ ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.ргДатаЗаключения
|			КОНЕЦ КАК ДатаЗаключения,
|			ВЫБОР
|				КОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
|					ТОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель.ДатаДоговора
|				ИНАЧЕ ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.ДатаДоговора
|			КОНЕЦ КАК ДатаДоговора,
|			ВЫБОР
|				КОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
|					ТОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель.ргСрокДействия
|				ИНАЧЕ ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.ргСрокДействия
|			КОНЕЦ КАК СрокДействия,
|			ВЫБОР
|				КОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
|					ТОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель.Организация.ИНН
|				ИНАЧЕ ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Организация.ИНН
|			КОНЕЦ КАК ОрганизацияИНН,
|			ВЫБОР
|				КОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
|					ТОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель.Наименование
|				ИНАЧЕ ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Наименование
|			КОНЕЦ КАК ДоговорНаименование,
|			ВЫРАЗИТЬ(ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.Контрагент.НаименованиеПолное КАК СТРОКА(200)) КАК КонтрагентНаименованиеПолное,
|			СУММА(ргЗаявкаНаВывозМусораТаблицаПлощадок.Количество * ргЗаявкаНаВывозМусораТаблицаПлощадок.ОбъемТары) КАК Количество,
|			ргЗаявкаНаВывозМусораТаблицаПлощадок.Площадка.Наименование КАК ПлощадкаНаименование,
|			ргЗаявкаНаВывозМусораТаблицаПлощадок.Площадка.ТарифнаяЗона.Наименование КАК ТарифнаяЗона,
|			ргЗаявкаНаВывозМусораТаблицаПлощадок.Площадка.Округ.Наименование КАК Округ,
|			ВЫБОР
|				КОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
|					ТОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель
|				ИНАЧЕ ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента
|			КОНЕЦ КАК ДоговорСсылка,
|			ргЗаявкаНаВывозМусораТаблицаПлощадок.ВидРабот.Код КАК ВидРаботКод,
|			ргЗаявкаНаВывозМусораТаблицаПлощадок.ВидРабот КАК ВидРабот,
|			ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.Организация КАК Организация
|		ИЗ
|			Документ.ргЗаявкаНаВывозМусора.ТаблицаПлощадок КАК ргЗаявкаНаВывозМусораТаблицаПлощадок
|		ГДЕ
|			ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.СкопДатаВыполнения МЕЖДУ &Началопериода И &КонецПериода
|			И ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.Проведен = ИСТИНА
|			И НЕ ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ОсновнаяОрганизация)
|			И ргЗаявкаНаВывозМусораТаблицаПлощадок.ВидРабот В
|					(ВЫБРАТЬ
|						втНоменклатура.Ссылка
|					ИЗ
|						втНоменклатура КАК втНоменклатура)
|			И ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ОтражатьВБухгалтерскомУчете
|		
|		СГРУППИРОВАТЬ ПО
|			ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.Контрагент.Наименование,
|			ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.Контрагент.ИНН,
|			ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.Контрагент.КПП,
|			ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.Контрагент.ДополнительныйИдентификатор,
|			ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.Автор.Наименование,
|			ВЫБОР
|				КОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
|					ТОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель.НомерДоговора
|				ИНАЧЕ ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.НомерДоговора
|			КОНЕЦ,
|			ВЫБОР
|				КОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
|					ТОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель.ргДатаЗаключения
|				ИНАЧЕ ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.ргДатаЗаключения
|			КОНЕЦ,
|			ВЫБОР
|				КОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
|					ТОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель.ДатаДоговора
|				ИНАЧЕ ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.ДатаДоговора
|			КОНЕЦ,
|			ВЫРАЗИТЬ(ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.Контрагент.НаименованиеПолное КАК СТРОКА(200)),
|			ВЫБОР
|				КОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
|					ТОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель.Организация.ИНН
|				ИНАЧЕ ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Организация.ИНН
|			КОНЕЦ,
|			ВЫБОР
|				КОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
|					ТОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель
|				ИНАЧЕ ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента
|			КОНЕЦ,
|			ргЗаявкаНаВывозМусораТаблицаПлощадок.Площадка.ТарифнаяЗона.Наименование,
|			ргЗаявкаНаВывозМусораТаблицаПлощадок.Площадка.Округ.Наименование,
|			ргЗаявкаНаВывозМусораТаблицаПлощадок.Площадка.Наименование,
|			ВЫБОР
|				КОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
|					ТОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель.ргСрокДействия
|				ИНАЧЕ ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.ргСрокДействия
|			КОНЕЦ,
|			ВЫБОР
|				КОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
|					ТОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель.Наименование
|				ИНАЧЕ ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Наименование
|			КОНЕЦ,
|			ргЗаявкаНаВывозМусораТаблицаПлощадок.ВидРабот.Код,
|			ргЗаявкаНаВывозМусораТаблицаПлощадок.ВидРабот,
|			ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.Организация) КАК ВложенныйЗапрос
|	
|	ОБЪЕДИНИТЬ ВСЕ
|	
|	ВЫБРАТЬ
|		ргВыполнениеЗаявокОбороты.Контрагент.Наименование,
|		ргВыполнениеЗаявокОбороты.ЗаявкаНаВывозМусора.Автор.Наименование,
|		ргВыполнениеЗаявокОбороты.Контрагент.ИНН,
|		ргВыполнениеЗаявокОбороты.Контрагент.КПП,
|		ргВыполнениеЗаявокОбороты.Контрагент.ДополнительныйИдентификатор,
|		ВЫБОР
|			КОГДА ргВыполнениеЗаявокОбороты.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
|				ТОГДА ргВыполнениеЗаявокОбороты.ДоговорКонтрагента.Родитель.НомерДоговора
|			ИНАЧЕ ргВыполнениеЗаявокОбороты.ДоговорКонтрагента.НомерДоговора
|		КОНЕЦ,
|		ВЫБОР
|			КОГДА ргВыполнениеЗаявокОбороты.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
|				ТОГДА ргВыполнениеЗаявокОбороты.ДоговорКонтрагента.Родитель.ргДатаЗаключения
|			ИНАЧЕ ргВыполнениеЗаявокОбороты.ДоговорКонтрагента.ргДатаЗаключения
|		КОНЕЦ,
|		ВЫБОР
|			КОГДА ргВыполнениеЗаявокОбороты.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
|				ТОГДА ргВыполнениеЗаявокОбороты.ДоговорКонтрагента.Родитель.ДатаДоговора
|			ИНАЧЕ ргВыполнениеЗаявокОбороты.ДоговорКонтрагента.ДатаДоговора
|		КОНЕЦ,
|		ВЫБОР
|			КОГДА ргВыполнениеЗаявокОбороты.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
|				ТОГДА ргВыполнениеЗаявокОбороты.ДоговорКонтрагента.Родитель.ргСрокДействия
|			ИНАЧЕ ргВыполнениеЗаявокОбороты.ДоговорКонтрагента.ргСрокДействия
|		КОНЕЦ,
|		ВЫБОР
|			КОГДА ргВыполнениеЗаявокОбороты.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
|				ТОГДА ргВыполнениеЗаявокОбороты.ДоговорКонтрагента.Родитель.Организация.ИНН
|			ИНАЧЕ ргВыполнениеЗаявокОбороты.ДоговорКонтрагента.Организация.ИНН
|		КОНЕЦ,
|		ВЫБОР
|			КОГДА ргВыполнениеЗаявокОбороты.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
|				ТОГДА ргВыполнениеЗаявокОбороты.ДоговорКонтрагента.Родитель.Наименование
|			ИНАЧЕ ргВыполнениеЗаявокОбороты.ДоговорКонтрагента.Наименование
|		КОНЕЦ,
|		ВЫРАЗИТЬ(ргВыполнениеЗаявокОбороты.Контрагент.НаименованиеПолное КАК СТРОКА(200)),
|		ргВыполнениеЗаявокОбороты.ОбъемРасход,
|		ргВыполнениеЗаявокОбороты.Площадка.Наименование,
|		ргВыполнениеЗаявокОбороты.Площадка.ТарифнаяЗона.Наименование,
|		ргВыполнениеЗаявокОбороты.Площадка.Округ.Наименование,
|		ргВыполнениеЗаявокОбороты.ДоговорКонтрагента,
|		ИСТИНА,
|		ргВыполнениеЗаявокОбороты.Номенклатура.Код,
|		ргВыполнениеЗаявокОбороты.Номенклатура
|	ИЗ
|		РегистрНакопления.ргВыполнениеЗаявок.Обороты(
|				&Началопериода,
|				&КонецПериода,
|				,
|				Организация = ЗНАЧЕНИЕ(Справочник.Организации.ОсновнаяОрганизация)
|					И Номенклатура В
|						(ВЫБРАТЬ
|							втНоменклатура.Ссылка
|						ИЗ
|							втНоменклатура КАК втНоменклатура)
|					И НЕ ВидОперацииСТарой = ЗНАЧЕНИЕ(Перечисление.ргВидыОперацийСТарой.Пустой)) КАК ргВыполнениеЗаявокОбороты) КАК ВложенныйЗапрос
|
|СГРУППИРОВАТЬ ПО
|	ВложенныйЗапрос.КонтрагентНаименование,
|	ВложенныйЗапрос.НомерДоговора,
|	ВложенныйЗапрос.ДатаДоговора,
|	ВложенныйЗапрос.ТарифнаяЗона,
|	ВложенныйЗапрос.код,
|	ВложенныйЗапрос.ВидРабот,
|	ВложенныйЗапрос.ИНН,
|	ВложенныйЗапрос.СрокДействия,
|	ВложенныйЗапрос.КПП,
|	ВложенныйЗапрос.Округ,
|	ВложенныйЗапрос.ОрганизацияИНН,
|	ВложенныйЗапрос.ДоговорНаименование,
|	ВложенныйЗапрос.ДатаЗаключения,
|	ВложенныйЗапрос.КонтрагентНаименованиеПолное,
|	ВложенныйЗапрос.ПлощадкаНаименование,
|	ВложенныйЗапрос.ДоговорСсылка,
|	ВложенныйЗапрос.ДопЗаявка,
|	ВложенныйЗапрос.ДополнительныйИдентификатор
|";

	
	//patimka
	//Возврат "ВЫБРАТЬ
	//|	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Контрагент.Наименование КАК КонтрагентНаименование,
	//|	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Контрагент.Ответственный.Наименование КАК ОтветственныйНаименование,
	//|	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Контрагент.ИНН КАК ИНН,
	//|	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Контрагент.КПП КАК КПП,
	//|	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Контрагент.ДополнительныйИдентификатор КАК ДополнительныйИдентификатор,
	//|		ВЫБОР
	//|			КОГДА ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	//|				ТОГДА ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.Родитель.НомерДоговора
	//|			ИНАЧЕ ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.НомерДоговора
	//|		КОНЕЦ КАК НомерДоговора,
	//|		ВЫБОР
	//|			КОГДА ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	//|				ТОГДА ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.Родитель.ргДатаЗаключения
	//|			ИНАЧЕ ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.ргДатаЗаключения
	//|		КОНЕЦ КАК ДатаЗаключения,
	//|		ВЫБОР
	//|			КОГДА ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	//|				ТОГДА ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.Родитель.ДатаДоговора
	//|			ИНАЧЕ ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.ДатаДоговора
	//|		КОНЕЦ КАК ДатаДоговора,
	//|		ВЫБОР
	//|			КОГДА ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	//|				ТОГДА ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.Родитель.ргСрокДействия
	//|			ИНАЧЕ ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.ргСрокДействия
	//|		КОНЕЦ КАК СрокДействия,
	//|		ВЫБОР
	//|			КОГДА ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	//|				ТОГДА ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.Родитель.Организация.ИНН
	//|			ИНАЧЕ ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.Организация.ИНН
	//|		КОНЕЦ КАК ОрганизацияИНН,
	//|		ВЫБОР
	//|			КОГДА ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	//|				ТОГДА ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.Родитель.Наименование
	//|			ИНАЧЕ ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.Наименование
	//|		КОНЕЦ КАК ДоговорНаименование,
	//
	//|	
	////|   ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.НомерДоговора КАК НомерДоговора,
	////|	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.ргДатаЗаключения КАК ДатаЗаключения,
	////|	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.ДатаДоговора КАК ДатаДоговора,
	////|	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.ргСрокДействия КАК СрокДействия,
	////|	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.Организация.ИНН КАК ОрганизацияИНН,
	////|	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.Наименование КАК ДоговорНаименование,
	//|	ВЫРАЗИТЬ(ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Контрагент.НаименованиеПолное КАК СТРОКА(200)) КАК КонтрагентНаименованиеПолное,
	//|	СУММА(ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Лимит) КАК Количество,
	//|	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Площадка.Наименование КАК ПлощадкаНаименование,
	//|	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Площадка.ТарифнаяЗона.Наименование КАК ТарифнаяЗона,
	//|	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Площадка.Округ.Наименование КАК Округ,
	//|		ВЫБОР
	//|			КОГДА ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	//|				ТОГДА ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.Родитель
	//|			ИНАЧЕ ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента
	//|		КОНЕЦ КАК ДоговорСсылка,			
	////	        |	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента КАК ДоговорСсылка,
	//|	ЛОЖЬ КАК ДопЗаявка,
	//|	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ВидРабот.Код КАК Код
	//|ИЗ
	//|	РегистрСведений.ргРаспределениеСреднегодовогоЛимитаНаВывозМусора КАК ргРаспределениеСреднегодовогоЛимитаНаВывозМусора
	//|ГДЕ
	//|	(ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ВидРабот.Код = &КодВидаРабот
	//|			ИЛИ ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ВидРабот.Код = &КодВидаРабот1
	//|			ИЛИ ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ВидРабот.Код = &КодВидаРабот3
	//|			ИЛИ ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ВидРабот.Код = &КодВидаРабот4
	//|			ИЛИ ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ВидРабот.Код = &КодВидаРабот2)
	//|	И ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Дата МЕЖДУ &Началопериода И &КонецПериода
	//|	И ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.ПометкаУдаления = ЛОЖЬ
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Контрагент.Наименование,
	//|	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Контрагент.Ответственный.Наименование,
	////|	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.Организация.ИНН,
	//|		ВЫБОР
	//|			КОГДА ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	//|				ТОГДА ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.Родитель.Организация.ИНН
	//|			ИНАЧЕ ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.Организация.ИНН
	//|		КОНЕЦ,
	//
	////|	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.ргДатаЗаключения,
	//|		ВЫБОР
	//|			КОГДА ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	//|				ТОГДА ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.Родитель.ргДатаЗаключения
	//|			ИНАЧЕ ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.ргДатаЗаключения
	//|		КОНЕЦ,
	//
	//// |	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.НомерДоговора,
	//|		ВЫБОР
	//|			КОГДА ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	//|				ТОГДА ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.Родитель.НомерДоговора
	//|			ИНАЧЕ ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.НомерДоговора
	//|		КОНЕЦ,
	//
	//|	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Контрагент.ИНН,
	//|	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Контрагент.КПП,
	//|	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Контрагент.ДополнительныйИдентификатор,
	////|	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.ДатаДоговора,
	//|		ВЫБОР
	//|			КОГДА ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	//|				ТОГДА ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.Родитель.ДатаДоговора
	//|			ИНАЧЕ ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.ДатаДоговора
	//|		КОНЕЦ,
	//
	////|	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.Наименование,
	//|		ВЫБОР
	//|			КОГДА ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	//|				ТОГДА ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.Родитель.Наименование
	//|			ИНАЧЕ ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.Наименование
	//|		КОНЕЦ,
	//
	////|	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.ргСрокДействия,
	//|		ВЫБОР
	//|			КОГДА ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	//|				ТОГДА ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.Родитель.ргСрокДействия
	//|			ИНАЧЕ ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.ргСрокДействия
	//|		КОНЕЦ,
	//
	//|	ВЫРАЗИТЬ(ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Контрагент.НаименованиеПолное КАК СТРОКА(200)),
	//|	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Площадка.Наименование,
	//|	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Площадка.ТарифнаяЗона.Наименование,
	//|	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Площадка.Округ.Наименование,
	//|		ВЫБОР
	//|			КОГДА ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	//|				ТОГДА ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.Родитель
	//|			ИНАЧЕ ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента
	//|		КОНЕЦ ,			
	//
	//// |	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента,
	//|	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ВидРабот.Код
	//|
	//|ОБЪЕДИНИТЬ ВСЕ
	//|
	//|ВЫБРАТЬ
	//|	ВложенныйЗапрос.КонтрагентНаименование,
	//|	ВложенныйЗапрос.ОтветственныйНаименование,
	//|	ВложенныйЗапрос.ИНН,
	//|	ВложенныйЗапрос.КПП,
	//|	ВложенныйЗапрос.ДополнительныйИдентификатор,
	//|	ВложенныйЗапрос.НомерДоговора,
	//|	ВложенныйЗапрос.ДатаЗаключения,
	//|	ВложенныйЗапрос.ДатаДоговора,
	//|	ВложенныйЗапрос.СрокДействия,
	//|	ВложенныйЗапрос.ОрганизацияИНН,
	//|	ВложенныйЗапрос.ДоговорНаименование,
	//|	ВложенныйЗапрос.КонтрагентНаименованиеПолное,
	//|	ВложенныйЗапрос.Количество,
	//|	ВложенныйЗапрос.ПлощадкаНаименование,
	//|	ВложенныйЗапрос.ТарифнаяЗона,
	//|	ВложенныйЗапрос.Округ,
	//|	ВложенныйЗапрос.ДоговорСсылка,
	//|	ИСТИНА,
	//|	ВложенныйЗапрос.ВидРаботКод
	//|ИЗ
	//|	(ВЫБРАТЬ
	//|		ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.Контрагент.Наименование КАК КонтрагентНаименование,
	//|		ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.Автор.Наименование КАК ОтветственныйНаименование,
	//|		ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.Контрагент.ИНН КАК ИНН,
	//|		ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.Контрагент.КПП КАК КПП,
	//|		ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.Контрагент.ДополнительныйИдентификатор КАК ДополнительныйИдентификатор,
	//|		ВЫБОР
	//|			КОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	//|				ТОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель.НомерДоговора
	//|			ИНАЧЕ ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.НомерДоговора
	//|		КОНЕЦ КАК НомерДоговора,
	//|		ВЫБОР
	//|			КОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	//|				ТОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель.ргДатаЗаключения
	//|			ИНАЧЕ ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.ргДатаЗаключения
	//|		КОНЕЦ КАК ДатаЗаключения,
	//|		ВЫБОР
	//|			КОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	//|				ТОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель.ДатаДоговора
	//|			ИНАЧЕ ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.ДатаДоговора
	//|		КОНЕЦ КАК ДатаДоговора,
	//|		ВЫБОР
	//|			КОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	//|				ТОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель.ргСрокДействия
	//|			ИНАЧЕ ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.ргСрокДействия
	//|		КОНЕЦ КАК СрокДействия,
	//|		ВЫБОР
	//|			КОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	//|				ТОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель.Организация.ИНН
	//|			ИНАЧЕ ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Организация.ИНН
	//|		КОНЕЦ КАК ОрганизацияИНН,
	//|		ВЫБОР
	//|			КОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	//|				ТОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель.Наименование
	//|			ИНАЧЕ ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Наименование
	//|		КОНЕЦ КАК ДоговорНаименование,
	//|		ВЫРАЗИТЬ(ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.Контрагент.НаименованиеПолное КАК СТРОКА(200)) КАК КонтрагентНаименованиеПолное,
	//|		СУММА(ргЗаявкаНаВывозМусораТаблицаПлощадок.Количество * ргЗаявкаНаВывозМусораТаблицаПлощадок.ОбъемТары) КАК Количество,
	//|		ргЗаявкаНаВывозМусораТаблицаПлощадок.Площадка.Наименование КАК ПлощадкаНаименование,
	//|		ргЗаявкаНаВывозМусораТаблицаПлощадок.Площадка.ТарифнаяЗона.Наименование КАК ТарифнаяЗона,
	//|		ргЗаявкаНаВывозМусораТаблицаПлощадок.Площадка.Округ.Наименование КАК Округ,
	//|		ВЫБОР
	//|			КОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	//|				ТОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель
	//|			ИНАЧЕ ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента
	//|		КОНЕЦ КАК ДоговорСсылка,
	//|		ргЗаявкаНаВывозМусораТаблицаПлощадок.ВидРабот.Код КАК ВидРаботКод
	//|	ИЗ
	//|		Документ.ргЗаявкаНаВывозМусора.ТаблицаПлощадок КАК ргЗаявкаНаВывозМусораТаблицаПлощадок
	//|	ГДЕ
	//|		ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.Дата МЕЖДУ &Началопериода И &КонецПериода
	//|		И ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.Проведен = ИСТИНА
	//|		И ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.СкопРазрешитьЗаявку = ИСТИНА
	//|		И (ргЗаявкаНаВывозМусораТаблицаПлощадок.ВидРабот.Код = &КодВидаРабот
	//|				ИЛИ ргЗаявкаНаВывозМусораТаблицаПлощадок.ВидРабот.Код = &КодВидаРабот1
	//|				ИЛИ ргЗаявкаНаВывозМусораТаблицаПлощадок.ВидРабот.Код = &КодВидаРабот3
	//|				ИЛИ ргЗаявкаНаВывозМусораТаблицаПлощадок.ВидРабот.Код = &КодВидаРабот4
	//|				ИЛИ ргЗаявкаНаВывозМусораТаблицаПлощадок.ВидРабот.Код = &КодВидаРабот2)
	//|	
	//|	СГРУППИРОВАТЬ ПО
	//|		ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.Контрагент.Наименование,
	//|		ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.Контрагент.ИНН,
	//|		ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.Контрагент.КПП,
	//|		ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.Контрагент.ДополнительныйИдентификатор,
	//|		ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.Автор.Наименование,
	//|		ВЫБОР
	//|			КОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	//|				ТОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель.НомерДоговора
	//|			ИНАЧЕ ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.НомерДоговора
	//|		КОНЕЦ,
	//|		ВЫБОР
	//|			КОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	//|				ТОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель.ргДатаЗаключения
	//|			ИНАЧЕ ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.ргДатаЗаключения
	//|		КОНЕЦ,
	//|		ВЫБОР
	//|			КОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	//|				ТОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель.ДатаДоговора
	//|			ИНАЧЕ ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.ДатаДоговора
	//|		КОНЕЦ,
	//|		ВЫРАЗИТЬ(ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.Контрагент.НаименованиеПолное КАК СТРОКА(200)),
	//|		ВЫБОР
	//|			КОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	//|				ТОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель.Организация.ИНН
	//|			ИНАЧЕ ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Организация.ИНН
	//|		КОНЕЦ,
	//|		ВЫБОР
	//|			КОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	//|				ТОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель
	//|			ИНАЧЕ ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента
	//|		КОНЕЦ,
	//|		ргЗаявкаНаВывозМусораТаблицаПлощадок.Площадка.ТарифнаяЗона.Наименование,
	//|		ргЗаявкаНаВывозМусораТаблицаПлощадок.Площадка.Округ.Наименование,
	//|		ргЗаявкаНаВывозМусораТаблицаПлощадок.Площадка.Наименование,
	//|		ВЫБОР
	//|			КОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	//|				ТОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель.ргСрокДействия
	//|			ИНАЧЕ ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.ргСрокДействия
	//|		КОНЕЦ,
	//|		ВЫБОР
	//|			КОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	//|				ТОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель.Наименование
	//|			ИНАЧЕ ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Наименование
	//|		КОНЕЦ,
	//|		ргЗаявкаНаВывозМусораТаблицаПлощадок.ВидРабот.Код) КАК ВложенныйЗапрос
	//|
	//|УПОРЯДОЧИТЬ ПО
	//|	КонтрагентНаименование
	//|АВТОУПОРЯДОЧИВАНИЕ";
	//
	////Возврат "ВЫБРАТЬ
	////        |	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Контрагент.Наименование КАК КонтрагентНаименование,
	////        |	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Контрагент.Ответственный.Наименование КАК ОтветственныйНаименование,
	////        |	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Контрагент.ИНН КАК ИНН,
	////        |	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Контрагент.КПП КАК КПП,
	////        |	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.НомерДоговора КАК НомерДоговора,
	////        |	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.ргДатаЗаключения КАК ДатаЗаключения,
	////        |	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.ДатаДоговора КАК ДатаДоговора,
	////        |	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.ргСрокДействия КАК СрокДействия,
	////        |	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.Организация.ИНН КАК ОрганизацияИНН,
	////        |	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.Наименование КАК ДоговорНаименование,
	////        |	ВЫРАЗИТЬ(ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Контрагент.НаименованиеПолное КАК СТРОКА(200)) КАК КонтрагентНаименованиеПолное,
	////        |	СУММА(ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Лимит) КАК Количество,
	////        |	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Площадка.Наименование КАК ПлощадкаНаименование,
	////        |	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Площадка.ТарифнаяЗона.Наименование КАК ТарифнаяЗона,
	////        |	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Площадка.Округ.Наименование КАК Округ,
	////        |	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента КАК ДоговорСсылка,
	////        |	ЛОЖЬ КАК ДопЗаявка
	////        |ИЗ
	////        |	РегистрСведений.ргРаспределениеСреднегодовогоЛимитаНаВывозМусора КАК ргРаспределениеСреднегодовогоЛимитаНаВывозМусора
	////        |ГДЕ
	////        |	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ВидРабот.Код = &КодВидаРабот
	////        |	И ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Дата МЕЖДУ &Началопериода И &КонецПериода
	////        |	И ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.ПометкаУдаления = ЛОЖЬ
	////        |
	////        |СГРУППИРОВАТЬ ПО
	////        |	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Контрагент.Наименование,
	////        |	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Контрагент.Ответственный.Наименование,
	////        |	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.Организация.ИНН,
	////        |	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.ргДатаЗаключения,
	////        |	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.НомерДоговора,
	////        |	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Контрагент.ИНН,
	////        |	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Контрагент.КПП,
	////        |	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.ДатаДоговора,
	////        |	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.Наименование,
	////        |	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.ргСрокДействия,
	////        |	ВЫРАЗИТЬ(ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Контрагент.НаименованиеПолное КАК СТРОКА(200)),
	////        |	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Площадка.Наименование,
	////        |	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Площадка.ТарифнаяЗона.Наименование,
	////        |	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Площадка.Округ.Наименование,
	////        |	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента
	////        |
	////        |ОБЪЕДИНИТЬ ВСЕ
	////        |
	////        |ВЫБРАТЬ
	////        |	ВложенныйЗапрос.КонтрагентНаименование,
	////        |	ВложенныйЗапрос.ОтветственныйНаименование,
	////        |	ВложенныйЗапрос.ИНН,
	////        |	ВложенныйЗапрос.КПП,
	////        |	ВложенныйЗапрос.НомерДоговора,
	////        |	ВложенныйЗапрос.ДатаЗаключения,
	////        |	ВложенныйЗапрос.ДатаДоговора,
	////        |	ВложенныйЗапрос.СрокДействия,
	////        |	ВложенныйЗапрос.ОрганизацияИНН,
	////        |	ВложенныйЗапрос.ДоговорНаименование,
	////        |	ВложенныйЗапрос.КонтрагентНаименованиеПолное,
	////        |	ВложенныйЗапрос.Количество,
	////        |	ВложенныйЗапрос.ПлощадкаНаименование,
	////        |	ВложенныйЗапрос.ТарифнаяЗона,
	////        |	ВложенныйЗапрос.Округ,
	////        |	ВложенныйЗапрос.ДоговорСсылка,
	////        |	ИСТИНА
	////        |ИЗ
	////        |	(ВЫБРАТЬ
	////        |		ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.Контрагент.Наименование КАК КонтрагентНаименование,
	////        |		ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.Автор.Наименование КАК ОтветственныйНаименование,
	////        |		ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.Контрагент.ИНН КАК ИНН,
	////        |		ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.Контрагент.КПП КАК КПП,
	////        |		ВЫБОР
	////        |			КОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	////        |				ТОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель.НомерДоговора
	////        |			ИНАЧЕ ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.НомерДоговора
	////        |		КОНЕЦ КАК НомерДоговора,
	////        |		ВЫБОР
	////        |			КОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	////        |				ТОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель.ргДатаЗаключения
	////        |			ИНАЧЕ ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.ргДатаЗаключения
	////        |		КОНЕЦ КАК ДатаЗаключения,
	////        |		ВЫБОР
	////        |			КОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	////        |				ТОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель.ДатаДоговора
	////        |			ИНАЧЕ ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.ДатаДоговора
	////        |		КОНЕЦ КАК ДатаДоговора,
	////        |		ВЫБОР
	////        |			КОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	////        |				ТОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель.ргСрокДействия
	////        |			ИНАЧЕ ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.ргСрокДействия
	////        |		КОНЕЦ КАК СрокДействия,
	////        |		ВЫБОР
	////        |			КОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	////        |				ТОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель.Организация.ИНН
	////        |			ИНАЧЕ ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Организация.ИНН
	////        |		КОНЕЦ КАК ОрганизацияИНН,
	////        |		ВЫБОР
	////        |			КОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	////        |				ТОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель.Наименование
	////        |			ИНАЧЕ ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Наименование
	////        |		КОНЕЦ КАК ДоговорНаименование,
	////        |		ВЫРАЗИТЬ(ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.Контрагент.НаименованиеПолное КАК СТРОКА(200)) КАК КонтрагентНаименованиеПолное,
	////        |		СУММА(ргЗаявкаНаВывозМусораТаблицаПлощадок.Количество * ргЗаявкаНаВывозМусораТаблицаПлощадок.ОбъемТары) КАК Количество,
	////        |		ргЗаявкаНаВывозМусораТаблицаПлощадок.Площадка.Наименование КАК ПлощадкаНаименование,
	////        |		ргЗаявкаНаВывозМусораТаблицаПлощадок.Площадка.ТарифнаяЗона.Наименование КАК ТарифнаяЗона,
	////        |		ргЗаявкаНаВывозМусораТаблицаПлощадок.Площадка.Округ.Наименование КАК Округ,
	////        |		ВЫБОР
	////        |			КОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	////        |				ТОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель
	////        |			ИНАЧЕ ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента
	////        |		КОНЕЦ КАК ДоговорСсылка
	////        |	ИЗ
	////        |		Документ.ргЗаявкаНаВывозМусора.ТаблицаПлощадок КАК ргЗаявкаНаВывозМусораТаблицаПлощадок
	////        |	ГДЕ
	////        |		ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.Дата МЕЖДУ &Началопериода И &КонецПериода
	////        |		И ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.Проведен = ИСТИНА
	////        |		И ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.СкопРазрешитьЗаявку = ИСТИНА
	////        |		И ргЗаявкаНаВывозМусораТаблицаПлощадок.ВидРабот.Код = &КодВидаРабот  		
	////        |	
	////        |	СГРУППИРОВАТЬ ПО
	////        |		ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.Контрагент.Наименование,
	////        |		ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.Контрагент.ИНН,
	////        |		ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.Контрагент.КПП,
	////        |		ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.Автор.Наименование,
	////        |		ВЫБОР
	////        |			КОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	////        |				ТОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель.НомерДоговора
	////        |			ИНАЧЕ ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.НомерДоговора
	////        |		КОНЕЦ,
	////        |		ВЫБОР
	////        |			КОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	////        |				ТОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель.ргДатаЗаключения
	////        |			ИНАЧЕ ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.ргДатаЗаключения
	////        |		КОНЕЦ,
	////        |		ВЫБОР
	////        |			КОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	////        |				ТОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель.ДатаДоговора
	////        |			ИНАЧЕ ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.ДатаДоговора
	////        |		КОНЕЦ,
	////        |		ВЫРАЗИТЬ(ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.Контрагент.НаименованиеПолное КАК СТРОКА(200)),
	////        |		ВЫБОР
	////        |			КОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	////        |				ТОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель.Организация.ИНН
	////        |			ИНАЧЕ ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Организация.ИНН
	////        |		КОНЕЦ,
	////        |		ВЫБОР
	////        |			КОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	////        |				ТОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель
	////        |			ИНАЧЕ ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента
	////        |		КОНЕЦ,
	////        |		ргЗаявкаНаВывозМусораТаблицаПлощадок.Площадка.ТарифнаяЗона.Наименование,
	////        |		ргЗаявкаНаВывозМусораТаблицаПлощадок.Площадка.Округ.Наименование,
	////        |		ргЗаявкаНаВывозМусораТаблицаПлощадок.Площадка.Наименование,
	////        |		ВЫБОР
	////        |			КОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	////        |				ТОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель.ргСрокДействия
	////        |			ИНАЧЕ ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.ргСрокДействия
	////        |		КОНЕЦ,
	////        |		ВЫБОР
	////        |			КОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	////        |				ТОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель.Наименование
	////        |			ИНАЧЕ ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Наименование
	////        |		КОНЕЦ) КАК ВложенныйЗапрос
	////        |
	////        |УПОРЯДОЧИТЬ ПО
	////        |	КонтрагентНаименование
	////        |АВТОУПОРЯДОЧИВАНИЕ";
	
КонецФункции


Функция ПолучитьТекстЗапросаРОЛимиты1()
	
	
	//patimka
	Возврат "ВЫБРАТЬ
	|	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Контрагент.Наименование КАК КонтрагентНаименование,
	|	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Контрагент.Ответственный.Наименование КАК ОтветственныйНаименование,
	|	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Контрагент.ИНН КАК ИНН,
	|	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Контрагент.КПП КАК КПП,
	|	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Контрагент.ДополнительныйИдентификатор КАК ДополнительныйИдентификатор,
	|		ВЫБОР
	|			КОГДА ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|				ТОГДА ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.Родитель.НомерДоговора
	|			ИНАЧЕ ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.НомерДоговора
	|		КОНЕЦ КАК НомерДоговора,
	|		ВЫБОР
	|			КОГДА ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|				ТОГДА ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.Родитель.ргДатаЗаключения
	|			ИНАЧЕ ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.ргДатаЗаключения
	|		КОНЕЦ КАК ДатаЗаключения,
	|		ВЫБОР
	|			КОГДА ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|				ТОГДА ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.Родитель.ДатаДоговора
	|			ИНАЧЕ ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.ДатаДоговора
	|		КОНЕЦ КАК ДатаДоговора,
	|		ВЫБОР
	|			КОГДА ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|				ТОГДА ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.Родитель.ргСрокДействия
	|			ИНАЧЕ ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.ргСрокДействия
	|		КОНЕЦ КАК СрокДействия,
	|		ВЫБОР
	|			КОГДА ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|				ТОГДА ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.Родитель.Организация.ИНН
	|			ИНАЧЕ ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.Организация.ИНН
	|		КОНЕЦ КАК ОрганизацияИНН,
	|		ВЫБОР
	|			КОГДА ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|				ТОГДА ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.Родитель.Наименование
	|			ИНАЧЕ ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.Наименование
	|		КОНЕЦ КАК ДоговорНаименование,
	
	|	
	//|   ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.НомерДоговора КАК НомерДоговора,
	//|	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.ргДатаЗаключения КАК ДатаЗаключения,
	//|	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.ДатаДоговора КАК ДатаДоговора,
	//|	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.ргСрокДействия КАК СрокДействия,
	//|	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.Организация.ИНН КАК ОрганизацияИНН,
	//|	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.Наименование КАК ДоговорНаименование,
	|	ВЫРАЗИТЬ(ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Контрагент.НаименованиеПолное КАК СТРОКА(200)) КАК КонтрагентНаименованиеПолное,
	|	СУММА(ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Лимит) КАК Количество,
	|	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Площадка.Наименование КАК ПлощадкаНаименование,
	|	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Площадка.ТарифнаяЗона.Наименование КАК ТарифнаяЗона,
	|	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Площадка.Округ.Наименование КАК Округ,
	|		ВЫБОР
	|			КОГДА ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|				ТОГДА ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.Родитель
	|			ИНАЧЕ ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента
	|		КОНЕЦ КАК ДоговорСсылка,			
	//	        |	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента КАК ДоговорСсылка,
	|	ЛОЖЬ КАК ДопЗаявка,
	|	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ВидРабот.Код КАК Код
	|ИЗ
	|	РегистрСведений.ргРаспределениеСреднегодовогоЛимитаНаВывозМусора КАК ргРаспределениеСреднегодовогоЛимитаНаВывозМусора
	|ГДЕ
	|	(ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ВидРабот.Код = &КодВидаРабот
	|			ИЛИ ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ВидРабот.Код = &КодВидаРабот1
	|			ИЛИ ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ВидРабот.Код = &КодВидаРабот3
	|			ИЛИ ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ВидРабот.Код = &КодВидаРабот4
	|			ИЛИ ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ВидРабот.Код = &КодВидаРабот2)
	|	И ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Дата МЕЖДУ &Началопериода И &КонецПериода
	|	И ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.ПометкаУдаления = ЛОЖЬ
	|
	|СГРУППИРОВАТЬ ПО
	|	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Контрагент.Наименование,
	|	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Контрагент.Ответственный.Наименование,
	//|	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.Организация.ИНН,
	|		ВЫБОР
	|			КОГДА ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|				ТОГДА ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.Родитель.Организация.ИНН
	|			ИНАЧЕ ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.Организация.ИНН
	|		КОНЕЦ,
	
	//|	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.ргДатаЗаключения,
	|		ВЫБОР
	|			КОГДА ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|				ТОГДА ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.Родитель.ргДатаЗаключения
	|			ИНАЧЕ ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.ргДатаЗаключения
	|		КОНЕЦ,
	
	// |	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.НомерДоговора,
	|		ВЫБОР
	|			КОГДА ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|				ТОГДА ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.Родитель.НомерДоговора
	|			ИНАЧЕ ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.НомерДоговора
	|		КОНЕЦ,
	
	|	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Контрагент.ИНН,
	|	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Контрагент.КПП,
	|	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Контрагент.ДополнительныйИдентификатор,
	//|	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.ДатаДоговора,
	|		ВЫБОР
	|			КОГДА ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|				ТОГДА ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.Родитель.ДатаДоговора
	|			ИНАЧЕ ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.ДатаДоговора
	|		КОНЕЦ,
	
	//|	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.Наименование,
	|		ВЫБОР
	|			КОГДА ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|				ТОГДА ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.Родитель.Наименование
	|			ИНАЧЕ ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.Наименование
	|		КОНЕЦ,
	
	//|	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.ргСрокДействия,
	|		ВЫБОР
	|			КОГДА ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|				ТОГДА ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.Родитель.ргСрокДействия
	|			ИНАЧЕ ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.ргСрокДействия
	|		КОНЕЦ,
	
	|	ВЫРАЗИТЬ(ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Контрагент.НаименованиеПолное КАК СТРОКА(200)),
	|	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Площадка.Наименование,
	|	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Площадка.ТарифнаяЗона.Наименование,
	|	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Площадка.Округ.Наименование,
	|		ВЫБОР
	|			КОГДА ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|				ТОГДА ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.Родитель
	|			ИНАЧЕ ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента
	|		КОНЕЦ ,			
	
	// |	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента,
	|	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ВидРабот.Код
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.КонтрагентНаименование,
	|	ВложенныйЗапрос.ОтветственныйНаименование,
	|	ВложенныйЗапрос.ИНН,
	|	ВложенныйЗапрос.КПП,
	|	ВложенныйЗапрос.ДополнительныйИдентификатор,
	|	ВложенныйЗапрос.НомерДоговора,
	|	ВложенныйЗапрос.ДатаЗаключения,
	|	ВложенныйЗапрос.ДатаДоговора,
	|	ВложенныйЗапрос.СрокДействия,
	|	ВложенныйЗапрос.ОрганизацияИНН,
	|	ВложенныйЗапрос.ДоговорНаименование,
	|	ВложенныйЗапрос.КонтрагентНаименованиеПолное,
	|	ВложенныйЗапрос.Количество,
	|	ВложенныйЗапрос.ПлощадкаНаименование,
	|	ВложенныйЗапрос.ТарифнаяЗона,
	|	ВложенныйЗапрос.Округ,
	|	ВложенныйЗапрос.ДоговорСсылка,
	|	ИСТИНА,
	|	ВложенныйЗапрос.ВидРаботКод
	|ИЗ
	|	(ВЫБРАТЬ
	|		ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.Контрагент.Наименование КАК КонтрагентНаименование,
	|		ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.Автор.Наименование КАК ОтветственныйНаименование,
	|		ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.Контрагент.ИНН КАК ИНН,
	|		ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.Контрагент.КПП КАК КПП,
	|		ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.Контрагент.ДополнительныйИдентификатор КАК ДополнительныйИдентификатор,
	|		ВЫБОР
	|			КОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|				ТОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель.НомерДоговора
	|			ИНАЧЕ ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.НомерДоговора
	|		КОНЕЦ КАК НомерДоговора,
	|		ВЫБОР
	|			КОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|				ТОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель.ргДатаЗаключения
	|			ИНАЧЕ ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.ргДатаЗаключения
	|		КОНЕЦ КАК ДатаЗаключения,
	|		ВЫБОР
	|			КОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|				ТОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель.ДатаДоговора
	|			ИНАЧЕ ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.ДатаДоговора
	|		КОНЕЦ КАК ДатаДоговора,
	|		ВЫБОР
	|			КОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|				ТОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель.ргСрокДействия
	|			ИНАЧЕ ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.ргСрокДействия
	|		КОНЕЦ КАК СрокДействия,
	|		ВЫБОР
	|			КОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|				ТОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель.Организация.ИНН
	|			ИНАЧЕ ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Организация.ИНН
	|		КОНЕЦ КАК ОрганизацияИНН,
	|		ВЫБОР
	|			КОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|				ТОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель.Наименование
	|			ИНАЧЕ ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Наименование
	|		КОНЕЦ КАК ДоговорНаименование,
	|		ВЫРАЗИТЬ(ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.Контрагент.НаименованиеПолное КАК СТРОКА(200)) КАК КонтрагентНаименованиеПолное,
	|		СУММА(ргЗаявкаНаВывозМусораТаблицаПлощадок.Количество * ргЗаявкаНаВывозМусораТаблицаПлощадок.ОбъемТары) КАК Количество,
	|		ргЗаявкаНаВывозМусораТаблицаПлощадок.Площадка.Наименование КАК ПлощадкаНаименование,
	|		ргЗаявкаНаВывозМусораТаблицаПлощадок.Площадка.ТарифнаяЗона.Наименование КАК ТарифнаяЗона,
	|		ргЗаявкаНаВывозМусораТаблицаПлощадок.Площадка.Округ.Наименование КАК Округ,
	|		ВЫБОР
	|			КОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|				ТОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель
	|			ИНАЧЕ ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента
	|		КОНЕЦ КАК ДоговорСсылка,
	|		ргЗаявкаНаВывозМусораТаблицаПлощадок.ВидРабот.Код КАК ВидРаботКод
	|	ИЗ
	|		Документ.ргЗаявкаНаВывозМусора.ТаблицаПлощадок КАК ргЗаявкаНаВывозМусораТаблицаПлощадок
	|	ГДЕ
	|		ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.Дата МЕЖДУ &Началопериода И &КонецПериода
	|		И ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.Проведен = ИСТИНА
	|		И ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.СкопРазрешитьЗаявку = ИСТИНА
	|		И (ргЗаявкаНаВывозМусораТаблицаПлощадок.ВидРабот.Код = &КодВидаРабот
	|				ИЛИ ргЗаявкаНаВывозМусораТаблицаПлощадок.ВидРабот.Код = &КодВидаРабот1
	|				ИЛИ ргЗаявкаНаВывозМусораТаблицаПлощадок.ВидРабот.Код = &КодВидаРабот3
	|				ИЛИ ргЗаявкаНаВывозМусораТаблицаПлощадок.ВидРабот.Код = &КодВидаРабот4
	|				ИЛИ ргЗаявкаНаВывозМусораТаблицаПлощадок.ВидРабот.Код = &КодВидаРабот2)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.Контрагент.Наименование,
	|		ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.Контрагент.ИНН,
	|		ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.Контрагент.КПП,
	|		ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.Контрагент.ДополнительныйИдентификатор,
	|		ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.Автор.Наименование,
	|		ВЫБОР
	|			КОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|				ТОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель.НомерДоговора
	|			ИНАЧЕ ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.НомерДоговора
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|				ТОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель.ргДатаЗаключения
	|			ИНАЧЕ ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.ргДатаЗаключения
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|				ТОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель.ДатаДоговора
	|			ИНАЧЕ ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.ДатаДоговора
	|		КОНЕЦ,
	|		ВЫРАЗИТЬ(ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.Контрагент.НаименованиеПолное КАК СТРОКА(200)),
	|		ВЫБОР
	|			КОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|				ТОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель.Организация.ИНН
	|			ИНАЧЕ ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Организация.ИНН
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|				ТОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель
	|			ИНАЧЕ ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента
	|		КОНЕЦ,
	|		ргЗаявкаНаВывозМусораТаблицаПлощадок.Площадка.ТарифнаяЗона.Наименование,
	|		ргЗаявкаНаВывозМусораТаблицаПлощадок.Площадка.Округ.Наименование,
	|		ргЗаявкаНаВывозМусораТаблицаПлощадок.Площадка.Наименование,
	|		ВЫБОР
	|			КОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|				ТОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель.ргСрокДействия
	|			ИНАЧЕ ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.ргСрокДействия
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|				ТОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель.Наименование
	|			ИНАЧЕ ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Наименование
	|		КОНЕЦ,
	|		ргЗаявкаНаВывозМусораТаблицаПлощадок.ВидРабот.Код) КАК ВложенныйЗапрос
	|
	|УПОРЯДОЧИТЬ ПО
	|	КонтрагентНаименование
	|АВТОУПОРЯДОЧИВАНИЕ";
	//
	////Возврат "ВЫБРАТЬ
	////        |	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Контрагент.Наименование КАК КонтрагентНаименование,
	////        |	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Контрагент.Ответственный.Наименование КАК ОтветственныйНаименование,
	////        |	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Контрагент.ИНН КАК ИНН,
	////        |	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Контрагент.КПП КАК КПП,
	////        |	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.НомерДоговора КАК НомерДоговора,
	////        |	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.ргДатаЗаключения КАК ДатаЗаключения,
	////        |	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.ДатаДоговора КАК ДатаДоговора,
	////        |	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.ргСрокДействия КАК СрокДействия,
	////        |	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.Организация.ИНН КАК ОрганизацияИНН,
	////        |	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.Наименование КАК ДоговорНаименование,
	////        |	ВЫРАЗИТЬ(ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Контрагент.НаименованиеПолное КАК СТРОКА(200)) КАК КонтрагентНаименованиеПолное,
	////        |	СУММА(ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Лимит) КАК Количество,
	////        |	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Площадка.Наименование КАК ПлощадкаНаименование,
	////        |	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Площадка.ТарифнаяЗона.Наименование КАК ТарифнаяЗона,
	////        |	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Площадка.Округ.Наименование КАК Округ,
	////        |	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента КАК ДоговорСсылка,
	////        |	ЛОЖЬ КАК ДопЗаявка
	////        |ИЗ
	////        |	РегистрСведений.ргРаспределениеСреднегодовогоЛимитаНаВывозМусора КАК ргРаспределениеСреднегодовогоЛимитаНаВывозМусора
	////        |ГДЕ
	////        |	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ВидРабот.Код = &КодВидаРабот
	////        |	И ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Дата МЕЖДУ &Началопериода И &КонецПериода
	////        |	И ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.ПометкаУдаления = ЛОЖЬ
	////        |
	////        |СГРУППИРОВАТЬ ПО
	////        |	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Контрагент.Наименование,
	////        |	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Контрагент.Ответственный.Наименование,
	////        |	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.Организация.ИНН,
	////        |	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.ргДатаЗаключения,
	////        |	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.НомерДоговора,
	////        |	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Контрагент.ИНН,
	////        |	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Контрагент.КПП,
	////        |	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.ДатаДоговора,
	////        |	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.Наименование,
	////        |	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента.ргСрокДействия,
	////        |	ВЫРАЗИТЬ(ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Контрагент.НаименованиеПолное КАК СТРОКА(200)),
	////        |	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Площадка.Наименование,
	////        |	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Площадка.ТарифнаяЗона.Наименование,
	////        |	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.Площадка.Округ.Наименование,
	////        |	ргРаспределениеСреднегодовогоЛимитаНаВывозМусора.ДоговорКонтрагента
	////        |
	////        |ОБЪЕДИНИТЬ ВСЕ
	////        |
	////        |ВЫБРАТЬ
	////        |	ВложенныйЗапрос.КонтрагентНаименование,
	////        |	ВложенныйЗапрос.ОтветственныйНаименование,
	////        |	ВложенныйЗапрос.ИНН,
	////        |	ВложенныйЗапрос.КПП,
	////        |	ВложенныйЗапрос.НомерДоговора,
	////        |	ВложенныйЗапрос.ДатаЗаключения,
	////        |	ВложенныйЗапрос.ДатаДоговора,
	////        |	ВложенныйЗапрос.СрокДействия,
	////        |	ВложенныйЗапрос.ОрганизацияИНН,
	////        |	ВложенныйЗапрос.ДоговорНаименование,
	////        |	ВложенныйЗапрос.КонтрагентНаименованиеПолное,
	////        |	ВложенныйЗапрос.Количество,
	////        |	ВложенныйЗапрос.ПлощадкаНаименование,
	////        |	ВложенныйЗапрос.ТарифнаяЗона,
	////        |	ВложенныйЗапрос.Округ,
	////        |	ВложенныйЗапрос.ДоговорСсылка,
	////        |	ИСТИНА
	////        |ИЗ
	////        |	(ВЫБРАТЬ
	////        |		ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.Контрагент.Наименование КАК КонтрагентНаименование,
	////        |		ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.Автор.Наименование КАК ОтветственныйНаименование,
	////        |		ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.Контрагент.ИНН КАК ИНН,
	////        |		ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.Контрагент.КПП КАК КПП,
	////        |		ВЫБОР
	////        |			КОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	////        |				ТОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель.НомерДоговора
	////        |			ИНАЧЕ ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.НомерДоговора
	////        |		КОНЕЦ КАК НомерДоговора,
	////        |		ВЫБОР
	////        |			КОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	////        |				ТОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель.ргДатаЗаключения
	////        |			ИНАЧЕ ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.ргДатаЗаключения
	////        |		КОНЕЦ КАК ДатаЗаключения,
	////        |		ВЫБОР
	////        |			КОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	////        |				ТОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель.ДатаДоговора
	////        |			ИНАЧЕ ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.ДатаДоговора
	////        |		КОНЕЦ КАК ДатаДоговора,
	////        |		ВЫБОР
	////        |			КОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	////        |				ТОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель.ргСрокДействия
	////        |			ИНАЧЕ ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.ргСрокДействия
	////        |		КОНЕЦ КАК СрокДействия,
	////        |		ВЫБОР
	////        |			КОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	////        |				ТОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель.Организация.ИНН
	////        |			ИНАЧЕ ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Организация.ИНН
	////        |		КОНЕЦ КАК ОрганизацияИНН,
	////        |		ВЫБОР
	////        |			КОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	////        |				ТОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель.Наименование
	////        |			ИНАЧЕ ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Наименование
	////        |		КОНЕЦ КАК ДоговорНаименование,
	////        |		ВЫРАЗИТЬ(ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.Контрагент.НаименованиеПолное КАК СТРОКА(200)) КАК КонтрагентНаименованиеПолное,
	////        |		СУММА(ргЗаявкаНаВывозМусораТаблицаПлощадок.Количество * ргЗаявкаНаВывозМусораТаблицаПлощадок.ОбъемТары) КАК Количество,
	////        |		ргЗаявкаНаВывозМусораТаблицаПлощадок.Площадка.Наименование КАК ПлощадкаНаименование,
	////        |		ргЗаявкаНаВывозМусораТаблицаПлощадок.Площадка.ТарифнаяЗона.Наименование КАК ТарифнаяЗона,
	////        |		ргЗаявкаНаВывозМусораТаблицаПлощадок.Площадка.Округ.Наименование КАК Округ,
	////        |		ВЫБОР
	////        |			КОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	////        |				ТОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель
	////        |			ИНАЧЕ ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента
	////        |		КОНЕЦ КАК ДоговорСсылка
	////        |	ИЗ
	////        |		Документ.ргЗаявкаНаВывозМусора.ТаблицаПлощадок КАК ргЗаявкаНаВывозМусораТаблицаПлощадок
	////        |	ГДЕ
	////        |		ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.Дата МЕЖДУ &Началопериода И &КонецПериода
	////        |		И ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.Проведен = ИСТИНА
	////        |		И ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.СкопРазрешитьЗаявку = ИСТИНА
	////        |		И ргЗаявкаНаВывозМусораТаблицаПлощадок.ВидРабот.Код = &КодВидаРабот  		
	////        |	
	////        |	СГРУППИРОВАТЬ ПО
	////        |		ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.Контрагент.Наименование,
	////        |		ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.Контрагент.ИНН,
	////        |		ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.Контрагент.КПП,
	////        |		ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.Автор.Наименование,
	////        |		ВЫБОР
	////        |			КОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	////        |				ТОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель.НомерДоговора
	////        |			ИНАЧЕ ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.НомерДоговора
	////        |		КОНЕЦ,
	////        |		ВЫБОР
	////        |			КОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	////        |				ТОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель.ргДатаЗаключения
	////        |			ИНАЧЕ ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.ргДатаЗаключения
	////        |		КОНЕЦ,
	////        |		ВЫБОР
	////        |			КОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	////        |				ТОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель.ДатаДоговора
	////        |			ИНАЧЕ ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.ДатаДоговора
	////        |		КОНЕЦ,
	////        |		ВЫРАЗИТЬ(ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.Контрагент.НаименованиеПолное КАК СТРОКА(200)),
	////        |		ВЫБОР
	////        |			КОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	////        |				ТОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель.Организация.ИНН
	////        |			ИНАЧЕ ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Организация.ИНН
	////        |		КОНЕЦ,
	////        |		ВЫБОР
	////        |			КОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	////        |				ТОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель
	////        |			ИНАЧЕ ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента
	////        |		КОНЕЦ,
	////        |		ргЗаявкаНаВывозМусораТаблицаПлощадок.Площадка.ТарифнаяЗона.Наименование,
	////        |		ргЗаявкаНаВывозМусораТаблицаПлощадок.Площадка.Округ.Наименование,
	////        |		ргЗаявкаНаВывозМусораТаблицаПлощадок.Площадка.Наименование,
	////        |		ВЫБОР
	////        |			КОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	////        |				ТОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель.ргСрокДействия
	////        |			ИНАЧЕ ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.ргСрокДействия
	////        |		КОНЕЦ,
	////        |		ВЫБОР
	////        |			КОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	////        |				ТОГДА ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Родитель.Наименование
	////        |			ИНАЧЕ ргЗаявкаНаВывозМусораТаблицаПлощадок.Ссылка.ДоговорКонтрагента.Наименование
	////        |		КОНЕЦ) КАК ВложенныйЗапрос
	////        |
	////        |УПОРЯДОЧИТЬ ПО
	////        |	КонтрагентНаименование
	////        |АВТОУПОРЯДОЧИВАНИЕ";
	
КонецФункции


&НаСервере
Функция ПривестиСтрокуКДлинне(Стр_, Кол)
	Если СтрДлина(Стр_)>= Кол Тогда 
		Возврат Стр_;
	ИначеЕсли СтрДлина(Стр_)<Кол Тогда 
		Добавить = Кол-СтрДлина(Стр_);
		Пока Добавить<>0 Цикл 
			Добавить = Добавить-1;
			Стр_ = Стр_+" ";
		КонецЦикла;
		Возврат Стр_;
	КонецЕсли;
	
КонецФункции


&НаСервере
Функция УстановитьПараметрыЗапроса(Запрос)
	Запрос.УстановитьПараметр("ДатаНач", НачалоДня(Объект.НачалоПериода));
	Запрос.УстановитьПараметр("ДатаКон", КонецДня(Объект.ОкончаниеПериода));
	Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(Объект.НачалоПериода));
	Запрос.УстановитьПараметр("КонецПериода", КонецДня(Объект.ОкончаниеПериода));
	Возврат Запрос;
КонецФункции

&НаСервере
Функция УстановитьПараметрыЗапросаРО(Запрос)
	Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(Объект.НачалоПериода));
	Запрос.УстановитьПараметр("КонецПериода", КонецДня(Объект.ОкончаниеПериода));
	Запрос.УстановитьПараметр("КодВидаРабот","ВМ-00000035");
	//patimka
	Запрос.УстановитьПараметр("КодВидаРабот1","ВМ-00000013");
	Запрос.УстановитьПараметр("КодВидаРабот2","ВМ-00000352");
	//Кучерявенко
	Запрос.УстановитьПараметр("КодВидаРабот3","ВМ-00000467");
	Запрос.УстановитьПараметр("КодВидаРабот4","ВМ-00000514");
	
	Возврат Запрос;
КонецФункции


&НаКлиенте
Процедура ЗаполнитьИЗВывозаМусора(Команда)
	ЗаполнитьИЗВывозаМусораНаСервере();
КонецПроцедуры

&НаСервере
Процедура СформироватьДокументыНаСервере()
	
	Если НЕ ЗначениеЗаполнено(Объект.Комментарий) Тогда
		Сообщить("Заполните комментарий");
		Возврат;
	КонецЕсли;
	
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	|	АР_АктСнятияПоказанийСчетчикаПоказания.Ссылка КАК Ссылка,
	|	АР_АктСнятияПоказанийСчетчикаПоказания.Услуга КАК Услуга,
	|	АР_АктСнятияПоказанийСчетчикаПоказания.ФактическоеНачало КАК ФактическоеНачало,
	|	АР_АктСнятияПоказанийСчетчикаПоказания.ФактическоеОкончание КАК ФактическоеОкончание,
	|	АР_АктСнятияПоказанийСчетчикаПоказания.ПоказаниеНаКонецПериода КАК ПоказаниеНаКонецПериода,
	|	АР_АктСнятияПоказанийСчетчикаПоказания.Цена КАК Цена,
	|	АР_АктСнятияПоказанийСчетчикаПоказания.Сумма КАК Сумма,
	|	АР_АктСнятияПоказанийСчетчикаПоказания.ОбъектАренды КАК ОбъектАренды,
	|	АР_АктСнятияПоказанийСчетчикаПоказания.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	АР_АктСнятияПоказанийСчетчикаПоказания.ФД КАК ФД,
	|	АР_АктСнятияПоказанийСчетчикаПоказания.Площадка КАК Площадка,
	|	АР_АктСнятияПоказанийСчетчикаПоказания.ВывозящаяОрганизация КАК ВывозящаяОрганизация,
	|	АР_АктСнятияПоказанийСчетчикаПоказания.ДопЗаявка КАК ДопЗаявка
	|ИЗ
	|	Документ.АР_АктСнятияПоказанийСчетчика.Показания КАК АР_АктСнятияПоказанийСчетчикаПоказания
	|ГДЕ
	|	АР_АктСнятияПоказанийСчетчикаПоказания.Ссылка = &Ссылка
	|	И АР_АктСнятияПоказанийСчетчикаПоказания.Ссылка.Проведен = ИСТИНА
	|	И АР_АктСнятияПоказанийСчетчикаПоказания.Сумма > 0
	|	И АР_АктСнятияПоказанийСчетчикаПоказания.ФД = ИСТИНА
	|
	|СГРУППИРОВАТЬ ПО
	|	АР_АктСнятияПоказанийСчетчикаПоказания.ОбъектАренды,
	|	АР_АктСнятияПоказанийСчетчикаПоказания.ФактическоеНачало,
	|	АР_АктСнятияПоказанийСчетчикаПоказания.Услуга,
	|	АР_АктСнятияПоказанийСчетчикаПоказания.ДоговорКонтрагента,
	|	АР_АктСнятияПоказанийСчетчикаПоказания.Ссылка,
	|	АР_АктСнятияПоказанийСчетчикаПоказания.ФактическоеОкончание,
	|	АР_АктСнятияПоказанийСчетчикаПоказания.Цена,
	|	АР_АктСнятияПоказанийСчетчикаПоказания.ПоказаниеНаКонецПериода,
	|	АР_АктСнятияПоказанийСчетчикаПоказания.Сумма,
	|	АР_АктСнятияПоказанийСчетчикаПоказания.ФД,
	|	АР_АктСнятияПоказанийСчетчикаПоказания.Площадка,
	|	АР_АктСнятияПоказанийСчетчикаПоказания.ВывозящаяОрганизация,
	|	АР_АктСнятияПоказанийСчетчикаПоказания.ДопЗаявка
	|
	|УПОРЯДОЧИТЬ ПО
	|	АР_АктСнятияПоказанийСчетчикаПоказания.ДоговорКонтрагента.Родитель
	|ИТОГИ ПО
	|	ДоговорКонтрагента
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	Запрос.УстановитьПараметр("Ссылка",Объект.Ссылка);
	
	ВыборкаДог=Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	
	Выписывать=Ложь;
	
	Пока ВыборкаДог.Следующий() Цикл
		
		//Если ВыборкаДог.ФД=Истина Тогда
		//Если ВыборкаДог.ДоговорКонтрагента.Код=("БП-004442") Тогда
		//Выписывать=Истина;
		//КонецЕсли;
		//
		//Если Выписывать Тогда
		Начисление = Документы.АР_НачислениеАренднойПлаты.СоздатьДокумент();
		
		Начисление.Организация=ВыборкаДог.ДоговорКонтрагента.Организация;
		Начисление.Контрагент=ВыборкаДог.ДоговорКонтрагента.Владелец;
		Начисление.ДоговорКонтрагента=ВыборкаДог.ДоговорКонтрагента;
		Уполномоченные = УстановитьРуководителяИГлавногоБухгалтера(ВыборкаДог.ДоговорКонтрагента.Организация);
		Начисление.Руководитель = Уполномоченные.Руководитель;
		Начисление.ЗаРуководителяНаОсновании = Справочники.ОснованияПраваПодписи.ОснованиеПраваПодписиФизЛица(Начисление.Руководитель, Начисление.Организация, Объект.Дата);
		Начисление.ВидПериода=Перечисления.ДоступныеПериодыОтчета.Месяц;
		
		Начисление.СчетОрганизации = Начисление.Организация.ОсновнойБанковскийСчет;
		Начисление.Дата = Объект.Дата;
		Начисление.ДатаКурса = Объект.Дата;
		//СчетаУчета = БухгалтерскийУчетРасчетовСКонтрагентами.ПолучитьСчетаРасчетовСКонтрагентом(Начисление.Организация, Начисление.Контрагент, Начисление.ДоговорКонтрагента);
		//Начисление.СчетУчетаРасчетовПоАвансам=СчетаУчета.СчетАвансовПокупателя;
		//Начисление.СчетУчетаРасчетовСКонтрагентом=СчетаУчета.СчетРасчетовПокупателя;
		Начисление.ВалютаДокумента=Начисление.ДоговорКонтрагента.ВалютаВзаиморасчетов;
		//Начисление..УчитыватьНДС=Истина;
		Начисление.СуммаВключаетНДС=Истина;
		Начисление.НеКонтролироватьСоответствиеСодержаниюДоговора=Истина;
		Начисление.НачалоПериода = Объект.НачалоПериода;
		Начисление.ОкончаниеПериода = Объект.ОкончаниеПериода;
		Начисление.Комментарий = Объект.Комментарий;
		
		Начисление.КурсВзаиморасчетов = 1;
		Начисление.КратностьВзаиморасчетов = 1;
		//Начисление.Ответственный = глЗначениеПеременной("глТекущийПользователь");
		Начисление.Ответственный = Пользователи.ТекущийПользователь();
		Начисление.СпособЗачетаАвансов=Перечисления.СпособыЗачетаАвансов.Автоматически;
		Документы.АР_НачислениеАренднойПлаты.ЗаполнитьСчетаУчетаРасчетов(Начисление);
		
		ВыборкаСтроки=ВыборкаДог.Выбрать();
		
		Пока ВыборкаСтроки.Следующий() Цикл
			
			НовСтр = Начисление.Состав.Добавить();
			НовСтр.Количество=ВыборкаСтроки.ПоказаниеНаКонецПериода;
			НовСтр.Коэффициент=1;
			НовСтр.ОбъектАренды=ВыборкаСтроки.ОбъектАренды;
			НовСтр.СпособНачисления=Константы.АР_ОсновнойСпособНачисленияАрендойПлаты.Получить();
			
			//НовСтр.СтавкаНДС=Перечисления.СтавкиНДС.НДС20; //Кучерявенко
			//НовСтр.СтавкаНДС=Перечисления.СтавкиНДС.БезНДС;
			
			
			НовСтр.СтавкаСпособаНачисления=ВыборкаСтроки.Цена;
			НовСтр.Цена=ВыборкаСтроки.Цена;
			НовСтр.Номенклатура=ВыборкаСтроки.Услуга;
			НовСтр.Содержание=ВыборкаСтроки.Услуга.НаименованиеПолное;
			НовСтр.Сумма=ВыборкаСтроки.Сумма;
			НовСтр.ДопЗаявка=ВыборкаСтроки.ДопЗаявка;
			
			НовСтр.ВывозящаяОрганизация=ВыборкаСтроки.ВывозящаяОрганизация;
			НовСтр.Площадка=ВыборкаСтроки.Площадка;
			Если ЗначениеЗаполнено(НовСтр.Площадка) Тогда
				НовСтр.Содержание=НовСтр.Содержание+" ("+НовСтр.Площадка.Наименование+")";	
			КонецЕсли;
			
			//ЗаполнитьСчетаУчетаВСтрокеТабЧастиУслуги(НовСтр, Истина);
			ПараметрыОбъекта = Новый Структура("Организация, Ссылка, ОкончаниеПериода, СуммаВключаетНДС, Дата, НачалоПериода, ВидПериода");
			ЗаполнитьЗначенияСвойств(ПараметрыОбъекта, Начисление);
			ПараметрыОбъекта.Дата = Начисление.НачалоПериода;
			МетаданныеДокумента = ПараметрыОбъекта.Ссылка.Метаданные();
			ОбработкаТабличныхЧастей.ЗаполнитьСтавкуНДСТабЧасти(НовСтр, ПараметрыОбъекта, "Состав", МетаданныеДокумента);
			
			//ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(НовСтр, Начисление);															 
			АР_ОбщиеПроцедурыПереопределяемый.РассчитатьСуммуНДСТабЧасти(НовСтр, Начисление);
			//ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(НовСтр, Начисление);		
			
		КонецЦикла;
		
		Документы.АР_НачислениеАренднойПлаты.ЗаполнитьСчетаУчетаВТабЧасти(Начисление);
		
		Отказ=Ложь;
		Попытка
			Начисление.Записать();
			Попытка
				Начисление.Записать(РежимЗаписиДокумента.Проведение);
			Исключение
				Сообщить("Не удалось провести начисление по договору """+Начисление.ДоговорКонтрагента+""" контрагента """+Начисление.Контрагент); 
			КонецПопытки
		Исключение
			Сообщить("Не удалось записать начисление по договору """+Начисление.ДоговорКонтрагента+""" контрагента """+Начисление.Контрагент); 
			Отказ = Истина;
		КонецПопытки;
		
		Если Отказ Тогда
			Продолжить;
		КонецЕсли;
		
		//КонецЦикла;
		
		ВвестиСчетФактуру(Начисление.ссылка, Отказ);
		
		//КонецЕсли;
		//КонецЕсли;
		
	КонецЦикла;
	
	Сообщить("Формирование документов завершено");
	
КонецПроцедуры

&НаСервере
Процедура ВвестиСчетФактуру(Документ, Отказ)
	
	//Если (Документ.ПометкаУдаления) Тогда
	//	Возврат;
	//КонецЕсли;
	
	//Попытаемся найти счет фактуру
	//СчетФактура = УчетНДСПереопределяемый.НайтиПодчиненныйСчетФактуруВыданныйНаРеализацию(Документ);
	
	//ОбъектСчетаФактуры = Неопределено;
	
	////Если потерпели неудачу, то необходимо ввести новый документ 
	//Если (Не ЗначениеЗаполнено(СчетФактура))
	//   И (Не Документ.ПометкаУдаления) Тогда
	
	//Вводим новый документ на основании нашего
	ОбъектСчетаФактуры = Документы.СчетФактураВыданный.СоздатьДокумент();
	ОбъектСчетаФактуры.ДокументыОснования.Очистить();
	ОбъектСчетаФактуры.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НаРеализацию;
	ОбъектСчетаФактуры.Заполнить(Документ); 
	
	Попытка
		ОбъектСчетаФактуры.Записать();
		Попытка
			ОбъектСчетаФактуры.Записать(РежимЗаписиДокумента.Проведение);
		Исключение
			////		Сообщить("Не удалось провести начисление по договору """+Начисление.ДоговорКонтрагента+""" контрагента """+Начисление.Контрагент); 
		КонецПопытки
	Исключение
	КонецПопытки;
	
	//КонецЕсли;
	
КонецПроцедуры // ВвестиСчетФактуру()


&НаКлиенте
Процедура СформироватьДокументы(Команда)
	СформироватьДокументыНаСервере();
КонецПроцедуры

&НаСервере
Функция УстановитьРуководителяИГлавногоБухгалтера(Организация)
	
	СтруктураВозврата = Новый Структура("Руководитель, ЗаРуководителяПоПриказу");
	
	Если НЕ ЗначениеЗаполнено(Организация) Тогда 
		Возврат СтруктураВозврата;
	КонецЕсли;
	
	СтруктураВозврата = Новый Структура("Руководитель, ЗаРуководителяПоПриказу");
	
	ДанныеУполномоченногоЛица = ОтветственныеЛицаБППереопределяемый.ДанныеУполномоченногоЛица(Организация, Пользователи.ТекущийПользователь());
	ОтветственныеЛица = ОтветственныеЛицаБП.ОтветственныеЛица(Организация, Объект.НачалоПериода);
	
	Если ДанныеУполномоченногоЛица = Неопределено Тогда 
		СтруктураВозврата.Руководитель = ОтветственныеЛица.Руководитель;
		СтруктураВозврата.ЗаРуководителяПоПриказу = "";
	Иначе
		СтруктураВозврата.Руководитель = ?(ЗначениеЗаполнено(ДанныеУполномоченногоЛица.Руководитель), ДанныеУполномоченногоЛица.Руководитель, ОтветственныеЛица.Руководитель);
		СтруктураВозврата.ЗаРуководителяПоПриказу = ?(ЗначениеЗаполнено(ДанныеУполномоченногоЛица.Руководитель), ДанныеУполномоченногоЛица.РуководительНаОсновании, "");
	КонецЕсли;
	
	Возврат СтруктураВозврата;
	
КонецФункции


&НаСервере
Функция ЗаполнитьПоДоговорамРОНаСервере()
	
	ДатаНачала = НачалоДня(Объект.НачалоПериода);
	//ДатаКонца = КонецМесяца(Объект.Дата);
	ДатаКонца = КонецДня(Объект.ОкончаниеПериода);
	
	//Показания2=Объект.Показания.Выгрузить();
	//Показания2.Колонки.Добавить("ИНН");
	//Показания2.Колонки.Добавить("КПП");
	//Показания2.Колонки.Добавить("Количество");
	////Показания.Очистить();
	////Показания.Загрузить(ДокументОбъект.Показания.Выгрузить());
	//Для Каждого СтрокаТ ИЗ Показания2 Цикл 
	//	Если ЗначениеЗаполнено(СтрокаТ.Контрагент) Тогда 
	//		СтрокАТ.ИНН = СтрокаТ.Контрагент.ИНН;
	//		СтрокаТ.КПП = СтрокаТ.Контрагент.КПП;
	//	КонецЕсли;
	//КонецЦикла;
	
	
	ТипИнформационнойБазыДляПодключения 			= Ложь;
	ИмяСервераИнформационнойБазыДляПодключения 		= "SRV10-hv";
	ИмяИнформационнойБазыНаСервереДляПодключения 	= "Vyvoz";
	ПользовательИнформационнойБазыДляПодключения 	= "ОбменБП";
	ПарольИнформационнойБазыДляПодключения    		= "1515%%";
	
	РезультатПодключения = ПодключитсяКИнформационнойБазе(РезультатПодключения,"",ТипИнформационнойБазыДляПодключения,
	ИмяСервераИнформационнойБазыДляПодключения,ИмяИнформационнойБазыНаСервереДляПодключения,
	ПользовательИнформационнойБазыДляПодключения,ПарольИнформационнойБазыДляПодключения);
	
	Если РезультатПодключения = Неопределено Тогда
		
		Сообщить("Ошибка подключения");
		Возврат Ложь;
		
	КонецЕсли;
	
	Сообщить("Проверка справочников");
	
	Табдок=ЗагрузитьДанныеРО(РезультатПодключения);
	
	Возврат Табдок;
	
КонецФункции


&НаКлиенте
Процедура ЗаполнитьПоДоговорамРО(Команда)
	Табдок=ЗаполнитьПоДоговорамРОНаСервере();
	ТабДок.Показать();
КонецПроцедуры


&НаСервере
Функция ЗаполнитьПоДоговорамРОЛимитыНаСервере()
	ДатаНачала = НачалоДня(Объект.НачалоПериода);
	
	ДатаКонца = КонецДня(Объект.ОкончаниеПериода);
	
	
	
	ТипИнформационнойБазыДляПодключения 			= Ложь;
	ИмяСервераИнформационнойБазыДляПодключения 		= "SRV10-hv";
	ИмяИнформационнойБазыНаСервереДляПодключения 	= "Vyvoz";
	ПользовательИнформационнойБазыДляПодключения 	= "ОбменБП";
	ПарольИнформационнойБазыДляПодключения    		= "1515%%";
	
	РезультатПодключения = ПодключитсяКИнформационнойБазе(РезультатПодключения,"",ТипИнформационнойБазыДляПодключения,
	ИмяСервераИнформационнойБазыДляПодключения,ИмяИнформационнойБазыНаСервереДляПодключения,
	ПользовательИнформационнойБазыДляПодключения,ПарольИнформационнойБазыДляПодключения);
	
	Если РезультатПодключения = Неопределено Тогда
		
		Сообщить("Ошибка подключения");
		Возврат Ложь;
		
	КонецЕсли;
	
	Сообщить("Проверка справочников");
	
	Табдок=ЗагрузитьДанныеРОЛимиты(РезультатПодключения);
	
	Возврат Табдок;
	
КонецФункции

&НаКлиенте
Процедура ЗаполнитьПоДоговорамРОЛимиты(Команда)
	Табдок=ЗаполнитьПоДоговорамРОЛимитыНаСервере();
	ТабДок.Показать();
КонецПроцедуры


&НаСервере
Функция ЗаполнитьПоДоговорамРОЛимитыЗаявкиНаСервере(ДопЗаявки=ЛОЖЬ)
	ДатаНачала = НачалоДня(Объект.НачалоПериода);
	
	ДатаКонца = КонецДня(Объект.ОкончаниеПериода);
	
	
	
	ТипИнформационнойБазыДляПодключения 			= Ложь;
	ИмяСервераИнформационнойБазыДляПодключения 		= "SRV10-hv";
	ИмяИнформационнойБазыНаСервереДляПодключения 	= "Vyvoz";
	ПользовательИнформационнойБазыДляПодключения 	= "ОбменБП";
	ПарольИнформационнойБазыДляПодключения    		= "1515%%";
	
	РезультатПодключения = ПодключитсяКИнформационнойБазе(РезультатПодключения,"",ТипИнформационнойБазыДляПодключения,
	ИмяСервераИнформационнойБазыДляПодключения,ИмяИнформационнойБазыНаСервереДляПодключения,
	ПользовательИнформационнойБазыДляПодключения,ПарольИнформационнойБазыДляПодключения);
	
	Если РезультатПодключения = Неопределено Тогда
		
		Сообщить("Ошибка подключения");
		Возврат Ложь;
		
	КонецЕсли;
	
	Сообщить("Проверка справочников");
	
	Табдок=ЗагрузитьДанныеРОЛимитыЗаявки(РезультатПодключения,ДопЗаявки);
	
	Возврат Табдок;
	
	
КонецФункции


&НаКлиенте
Процедура ЗаполнитьПоДоговорамРОЛимитыЗаявки(Команда)
	Табдок=ЗаполнитьПоДоговорамРОЛимитыЗаявкиНаСервере();
	ТабДок.Показать();
КонецПроцедуры


&НаКлиенте
Процедура ЗаполнитьПоДоговорамРОЗаявки(Команда)
	Табдок=ЗаполнитьПоДоговорамРОЛимитыЗаявкиНаСервере(Истина);
	ТабДок.Показать();
КонецПроцедуры

