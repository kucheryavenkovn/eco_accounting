#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Заголовок = Объект.Наименование;
	ПолеПросмотра = ПолучитьОбщийМакет("МакетОтображенияКартинкиДокумента").ПолучитьТекст();
	
	Если Объект.ТребуетсяОплата Тогда
		Элементы.ИмяФайла.Видимость = Ложь;
		Элементы.ТипДокумента.Видимость = Ложь;
		КоличествоФайлов = РаспознаваниеДокументовСлужебныйВызовСервера.КоличествоФайловРаспознанногоДокумента(Объект.Ссылка);
		Если КоличествоФайлов > 1 Тогда
			Элементы.СохранитьФайл.Заголовок = НСтр("ru = 'Сохранить файлы'");
		КонецЕсли;
	Иначе
		Элементы.КоличествоФайлов.Видимость = Ложь;
		Элементы.ОтправитьПовторно.Видимость = Ложь;
	КонецЕсли;
	
	Если Не РаспознаваниеДокументовСлужебныйВызовСервера.ДоступенНеоплаченныйРаспознанныйДокумент(Объект.Ссылка)
		Или Объект.ТребуетсяОплата Тогда
		
		Элементы.ГруппаПраво.Видимость = Ложь;
	Иначе
		АдресКартинки = ИсходноеИзображение();
	КонецЕсли;
	
	Если Объект.ТребуетсяОплата Тогда
		ТекущийБаланс = РаспознаваниеДокументовКоннекторСлужебный.ТекущийБаланс();
		
		Если ТекущийБаланс.Лимит < КоличествоФайлов
			Или Не РаспознаваниеДокументовСлужебныйВызовСервера.ДоступенНеоплаченныйРаспознанныйДокумент(Объект.Ссылка) Тогда
			
			Элементы.ОтправитьПовторно.Доступность = Ложь;
			Элементы.ОписаниеОшибки.Высота = 4;
		Иначе
			Элементы.СохранитьФайл.КнопкаПоУмолчанию = Ложь;
			Элементы.ОтправитьПовторно.КнопкаПоУмолчанию = Истина;
			Элементы.Переместить(Элементы.ОтправитьПовторно, Элементы.ГруппаКомандыИНастройки, Элементы.СохранитьФайл);
			
			Объект.ОписаниеОшибки =
			НСтр("ru = 'Не хватило средств на счете для распознавания документов.
			           |Нажмите ""Отправить повторно"", чтобы отправить файлы на распознавание еще раз.'");
			
			Модифицированность = Ложь;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ИсточникВыбора.ИмяФормы = "Документ.РаспознанныйДокумент.Форма.ФормаОбратнойСвязи" Тогда
		РаспознаваниеДокументовСлужебныйКлиент.ОбработкаВыбораОбратнойСвязи(ЭтотОбъект, ВыбранноеЗначение);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ТипДокументаПриИзменении(Элемент)
	
	РаспознаваниеДокументовСлужебныйКлиент.ИзменитьТипДокумента(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ТипДокументаОчистка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ПолеПросмотраДокументСформирован(Элемент)
	
	РаспознаваниеДокументовСлужебныйКлиент.ЗагрузитьКартинкуПоАдресу(Элементы.ПолеПросмотра, АдресКартинки);
	HTMLДокументСформирован = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СохранитьФайл(Команда)
	
	РаспознаваниеДокументовСлужебныйКлиент.СохранитьФайлыДокумента(Объект.Ссылка, УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура ПожаловатьсяНаКачество(Команда)
	
	РаспознаваниеДокументовСлужебныйКлиент.ОткрытьФормуОбратнойСвязи(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьПовторно(Команда)
	
	ФайлыДокумента = РаспознаваниеДокументовСлужебныйВызовСервера.ФайлыРаспознанногоДокумента(Объект.Ссылка, УникальныйИдентификатор);
	РаспознаваниеДокументовКлиент.ПоказатьДобавлениеФайлов(УникальныйИдентификатор, , ФайлыДокумента);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ИсходноеИзображение()
	
	Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.Ссылка, "ИсходноеИзображение, Миниатюра");
	
	ДанныеИзображения = Реквизиты.ИсходноеИзображение.Получить();
	Если Не ЗначениеЗаполнено(ДанныеИзображения) Тогда
		ДанныеИзображения = Реквизиты.Миниатюра.Получить();
	КонецЕсли;
	
	Если ДанныеИзображения = Неопределено Тогда
		ДанныеИзображения = РегистрыСведений.ИсходныеДанныеЗаданийРаспознаваниеДокументов
			.ПолучитьЕдинственныйИсходныйФайлИзображения(Объект.ИдентификаторЗадания);
	КонецЕсли;
	
	Если ДанныеИзображения = Неопределено Тогда 
		ДанныеИзображения = БиблиотекаКартинок.ОтсутствуетИзображениеРаспознанногоДокумента.ПолучитьДвоичныеДанные();
	КонецЕсли;
	
	Возврат ПоместитьВоВременноеХранилище(ДанныеИзображения, УникальныйИдентификатор);
	
КонецФункции

#КонецОбласти
