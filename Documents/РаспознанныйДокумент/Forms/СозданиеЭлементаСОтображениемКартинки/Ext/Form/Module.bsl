#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("РеквизитыСоздаваемогоОбъекта") Тогда
		Для Каждого ПереданныйРеквизит Из Параметры.РеквизитыСоздаваемогоОбъекта Цикл
			
			ДанныеРеквизита = РеквизитыСоздаваемогоОбъекта.Добавить();
			ЗаполнитьЗначенияСвойств(ДанныеРеквизита, ПереданныйРеквизит, , "Координаты");
			ДанныеРеквизита.Координаты.ЗагрузитьЗначения(ПереданныйРеквизит.Координаты);
			Если ТипЗнч(ПереданныйРеквизит.Значение) = Тип("Строка") Тогда
				ДанныеРеквизита.Значение = СокрЛП(ПереданныйРеквизит.Значение);
			Иначе
				ДанныеРеквизита.Значение = ПереданныйРеквизит.Значение;
			КонецЕсли;
			Если НЕ ДанныеРеквизита.ВысотаКартинки И НЕ ЗначениеЗаполнено(ДанныеРеквизита.Значение) Тогда
				ДанныеРеквизита.ИскатьПодходящие = Ложь;
			КонецЕсли;
			
			// Дубли картинок
			Если ДанныеРеквизита.ВысотаКартинки Тогда
				ХэшКартинки = ПолучитьХэшКартинкиПоАдресу(ДанныеРеквизита.Картинка);
				
				Отбор = Новый Структура("ХэшКартинки", ХэшКартинки);
				Если РеквизитыСоздаваемогоОбъекта.НайтиСтроки(Отбор).Количество()
					Или ХэшКартинки = Неопределено Тогда
					
					ДанныеРеквизита.ВысотаКартинки = 0;
				КонецЕсли;
				
				ДанныеРеквизита.ХэшКартинки = ХэшКартинки;
			КонецЕсли;
			
		КонецЦикла;
	КонецЕсли;
	
	СоздаваемыйОбъект = Параметры.СоздаваемыйОбъект;
	Заголовок = Строка(ТипЗнч(СоздаваемыйОбъект)) + " " + НСтр("ru = '(Создание)'");
	
	ТекстЗапросаПроверки = ПолучитьТекстЗапросаПроверкиПоРеквизитам();
	НастроитьСписокСуществующих();
	ОтобразитьРеквизиты();
	
	ИмяСправочника = СоздаваемыйОбъект.Метаданные().Имя;
	ОткрыватьНовыеЭлементыСправочниковПослеСоздания = РегистрыСведений.ОбщиеНастройкиРаспознаваниеДокументов.Получить().ОткрыватьНовыеЭлементыСправочниковПослеСоздания;
	
	СброситьРазмерыИПоложениеОкна();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если РеквизитыСоздаваемогоОбъекта.Количество() Тогда
		РеквизитСоздаваемогоОбъекта = РеквизитыСоздаваемогоОбъекта[0];
		Координаты = РеквизитСоздаваемогоОбъекта.Координаты.ВыгрузитьЗначения();
		ПараметрыОповещения = Новый Структура("Координаты, ВысотаКартинки", Координаты, РеквизитСоздаваемогоОбъекта.ВысотаКартинки);
		Оповестить("ВыбранРеквизитФормыСоздания", ПараметрыОповещения);
	КонецЕсли;
	
	Для Каждого РеквизитСоздаваемогоОбъекта Из РеквизитыСоздаваемогоОбъекта Цикл
		УстановитьЗначенияПараметраСписка(РеквизитСоздаваемогоОбъекта);
	КонецЦикла;
	
	ИзменитьОтображениеСпискаСуществующих();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "КартинкаОткрытия" Тогда
		ПоказатьЗначение(, Элемент.ТекущиеДанные.Ссылка);
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	ОповеститьОВыборе(Элемент.ТекущиеДанные.Ссылка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Создать(Команда)
	
	Отказ = Ложь;
	Для Каждого РеквизитСоздаваемогоОбъекта Из РеквизитыСоздаваемогоОбъекта Цикл
		Если РеквизитСоздаваемогоОбъекта.Обязательный И НЕ ЗначениеЗаполнено(РеквизитСоздаваемогоОбъекта.Значение) Тогда
			ТекстСообщения = НСтр("ru = 'Поле ""%1"" не заполнено'");
			Поле = "РеквизитыСоздаваемогоОбъекта[" + РеквизитСоздаваемогоОбъекта.ПолучитьИдентификатор() + "].Значение";
			
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = СтрШаблон(ТекстСообщения, РеквизитСоздаваемогоОбъекта.Синоним);
			Сообщение.Поле = Поле;
			Сообщение.Сообщить();
			
			Отказ = Истина;
		КонецЕсли;
	КонецЦикла;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если ИмяСправочника = "Контрагенты"
		И ОбщегоНазначенияКлиент.ПодсистемаСуществует("ИнтернетПоддержкаПользователей.РаботаСКонтрагентами") Тогда
		
		ИмяПараметра = "РаспознаваниеДокументов.ИспользоватьСервис1СКонтрагент";
		Если ПараметрыПриложения[ИмяПараметра] = Истина Тогда
			ПодтверждениеЗаполненияКонтрагентаДаннымиИзЕГРЮЛ(КодВозвратаДиалога.Да, Неопределено);
			Возврат;
		КонецЕсли;
		
		// Загрузка данных контрагента из ЕГРЮЛ
		ОписаниеОповещения = Новый ОписаниеОповещения("ПодтверждениеЗаполненияКонтрагентаДаннымиИзЕГРЮЛ", ЭтотОбъект);
		
		ОткрытьФорму("Документ.РаспознанныйДокумент.Форма.ПредложениеИспользоватьСервис1СКонтрагент", , 
			ЭтотОбъект, , , , ОписаниеОповещения);
		Возврат;
	КонецЕсли;
	
	РучноеСозданиеНовогоЭлемента();
	
КонецПроцедуры

&НаКлиенте
Процедура Выбрать(Команда)
	
	Если Элементы.Список.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОповеститьОВыборе(Элементы.Список.ТекущиеДанные.Ссылка);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОтобразитьРеквизиты()
	
	Для Каждого РеквизитСоздаваемогоОбъекта Из РеквизитыСоздаваемогоОбъекта Цикл
		
		Если РеквизитСоздаваемогоОбъекта.ВысотаКартинки > 1 ИЛИ КартинкаНеПомещаетсяВСтроке(РеквизитСоздаваемогоОбъекта.Координаты) Тогда
			ГруппаРеквизита = Элементы.Добавить("Группа" + РеквизитСоздаваемогоОбъекта.Имя, Тип("ГруппаФормы"));
			ГруппаРеквизита.Вид = ВидГруппыФормы.ОбычнаяГруппа;
			ГруппаРеквизита.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
			Элементы.Переместить(ГруппаРеквизита, ЭтотОбъект, Элементы.ГруппаРеквизитов);
		Иначе
			ГруппаРеквизита = Элементы.Добавить("Группа" + РеквизитСоздаваемогоОбъекта.Имя, Тип("ГруппаФормы"), Элементы.ГруппаРеквизитов);
			ГруппаРеквизита.Вид = ВидГруппыФормы.ОбычнаяГруппа;
			ГруппаРеквизита.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяЕслиВозможно;
			ГруппаРеквизита.Объединенная = Ложь;
		КонецЕсли;
		ГруппаРеквизита.ОтображатьЗаголовок = Ложь;
		
		ЭлементРеквизита = Элементы.Добавить(РеквизитСоздаваемогоОбъекта.Имя, Тип("ПолеФормы"), ГруппаРеквизита);
		ЭлементРеквизита.Вид = ВидПоляФормы.ПолеВвода;
		ЭлементРеквизита.Заголовок = РеквизитСоздаваемогоОбъекта.Синоним;
		ЭлементРеквизита.ПутьКДанным = "РеквизитыСоздаваемогоОбъекта[" + РеквизитСоздаваемогоОбъекта.ПолучитьИдентификатор() + "].Значение";
		ЭлементРеквизита.ВыбиратьТип = Ложь;
		ЭлементРеквизита.АвтоМаксимальнаяШирина = Ложь;
		Если РеквизитСоздаваемогоОбъекта.Обязательный Тогда
			ЭлементРеквизита.АвтоОтметкаНезаполненного = Истина;
		КонецЕсли;
		Если РеквизитСоздаваемогоОбъекта.ВысотаКартинки <> 0 Тогда
			ЭлементРеквизита.БыстрыйВыбор = Ложь;
		КонецЕсли;
		
		Если РеквизитСоздаваемогоОбъекта.ВыборГруппИЭлементов <> Неопределено Тогда 
			ЭлементРеквизита.ВыборГруппИЭлементов = РеквизитСоздаваемогоОбъекта.ВыборГруппИЭлементов;
		КонецЕсли;
		
		Если РеквизитСоздаваемогоОбъекта.Имя = "Дата" Тогда
			ЭлементРеквизита.ФорматРедактирования = "ДЛФ=D";
		КонецЕсли;
		
		ЭлементРеквизита.УстановитьДействие("ПриИзменении", "Подключаемый_ПриИзменении");
		ЭлементРеквизита.УстановитьДействие("АвтоПодбор", "Подключаемый_АвтоПодбор");
		
		Если НЕ РеквизитСоздаваемогоОбъекта.ВысотаКартинки Тогда
			Продолжить;
		КонецЕсли;
		
		ЭлементКартинки = Элементы.Добавить("Картинка" + РеквизитСоздаваемогоОбъекта.Имя, Тип("ПолеФормы"), ГруппаРеквизита);
		ЭлементКартинки.Вид = ВидПоляФормы.ПолеКартинки;
		ЭлементКартинки.Высота = РеквизитСоздаваемогоОбъекта.ВысотаКартинки;
		ЭлементКартинки.РастягиватьПоВертикали = Ложь;
		ЭлементКартинки.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		ЭлементКартинки.РазмерКартинки = РазмерКартинки.Пропорционально;
		ЭлементКартинки.ПутьКДанным = "РеквизитыСоздаваемогоОбъекта[" + РеквизитСоздаваемогоОбъекта.ПолучитьИдентификатор() + "].Картинка";
		
		Если ГруппаРеквизита.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная Тогда
			Элементы.Переместить(ЭлементРеквизита, ГруппаРеквизита);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьТекстЗапросаПроверкиПоРеквизитам()
	
	СхемаЗапроса = Новый СхемаЗапроса();
	ПакетЗапроса = СхемаЗапроса.ПакетЗапросов.Добавить();
	ОператорыПакета = ПакетЗапроса.Операторы[0];
	
	МетаданныеТипа = СоздаваемыйОбъект.Метаданные();
	ЕстьНаименованиеПолное = (МетаданныеТипа.Реквизиты.Найти("НаименованиеПолное") <> Неопределено);
	ОператорыПакета.Источники.Добавить(МетаданныеТипа.ПолноеИмя());
	ОператорыПакета.ВыбираемыеПоля.Добавить("Ссылка");
	ПолеИндексаКартинки = ОператорыПакета.ВыбираемыеПоля.Добавить("Истина");
	КолонкаИндексКартинки = ПакетЗапроса.Колонки.Найти(ПолеИндексаКартинки);
	КолонкаИндексКартинки.Псевдоним = "ИндексКартинки";
	ТекстОтбора = "";
	Для Каждого РеквизитСоздаваемогоОбъекта Из РеквизитыСоздаваемогоОбъекта Цикл
		Если НЕ РеквизитСоздаваемогоОбъекта.ИскатьПодходящие Тогда
			Продолжить;
		КонецЕсли;
		
		ОператорыПакета.ВыбираемыеПоля.Добавить(РеквизитСоздаваемогоОбъекта.Имя);
		Если РеквизитСоздаваемогоОбъекта.ПодходящиеОбязательноеРавенство Тогда
			ОператорыПакета.Отбор.Добавить(РеквизитСоздаваемогоОбъекта.Имя + "=&" + РеквизитСоздаваемогоОбъекта.Имя);
		ИначеЕсли РеквизитСоздаваемогоОбъекта.Имя = "Наименование" Тогда
			ТекстОтбораНаименование = РеквизитСоздаваемогоОбъекта.Имя + " ПОДОБНО &" + РеквизитСоздаваемогоОбъекта.Имя;

			Если ЕстьНаименованиеПолное Тогда
				ТекстОтбораНаименование = ТекстОтбораНаименование + " ИЛИ НаименованиеПолное ПОДОБНО &" + РеквизитСоздаваемогоОбъекта.Имя;
			КонецЕсли;
			
			ТекстОтбора = ТекстОтбора + ?(ПустаяСтрока(ТекстОтбора), "", " И ") + "(" + ТекстОтбораНаименование + ")";
		Иначе
			ТекстОтбора = ТекстОтбора + ?(ПустаяСтрока(ТекстОтбора), "", " И ")
				+ "ВЫБОР КОГДА &" + РеквизитСоздаваемогоОбъекта.Имя + " = Неопределено ТОГДА Ложь ИНАЧЕ "
				+ РеквизитСоздаваемогоОбъекта.Имя + "=&" + РеквизитСоздаваемогоОбъекта.Имя + " КОНЕЦ";
		КонецЕсли;
	КонецЦикла;
	
	Если ПустаяСтрока(ТекстОтбора) Тогда // При отсутствии полей выбора, например не определилась табличная часть
		Возврат ТекстОтбора;
	КонецЕсли;
	
	ОператорыПакета.Отбор.Добавить(ТекстОтбора);
	
	Возврат СхемаЗапроса.ПолучитьТекстЗапроса();
	
КонецФункции

&НаСервере
Процедура ИзменитьОтображениеСпискаСуществующих()
	
	Если ПустаяСтрока(ТекстЗапросаПроверки) Тогда 
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос(ТекстЗапросаПроверки);
	Для Каждого РеквизитСоздаваемогоОбъекта Из РеквизитыСоздаваемогоОбъекта Цикл
		Если ЗначениеЗаполнено(РеквизитСоздаваемогоОбъекта.Значение) Тогда
				Если РеквизитСоздаваемогоОбъекта.Имя = "Наименование" Тогда 
					ЗначениеРеквизита = РеквизитСоздаваемогоОбъекта.Значение + "%";
				Иначе
					ЗначениеРеквизита = РеквизитСоздаваемогоОбъекта.Значение;
				КонецЕсли;
				Запрос.УстановитьПараметр(РеквизитСоздаваемогоОбъекта.Имя, ЗначениеРеквизита);
			Иначе
				Если РеквизитСоздаваемогоОбъекта.Имя = "Наименование" Тогда
					Запрос.УстановитьПараметр("Наименование", Строка(УникальныйИдентификатор));
				Иначе
					Запрос.УстановитьПараметр(РеквизитСоздаваемогоОбъекта.Имя, Неопределено);
				КонецЕсли;
			КонецЕсли;
	КонецЦикла;
	Результат = Запрос.Выполнить();
	
	Если Не Результат.Пустой() Тогда
		Элементы.ГруппаЕстьСовпадения.Видимость = Истина;
		Элементы.Выбрать.КнопкаПоУмолчанию = Истина;
	Иначе
		Элементы.ФормаСоздать.КнопкаПоУмолчанию = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура НастроитьСписокСуществующих()
	
	Если ПустаяСтрока(ТекстЗапросаПроверки) Тогда
		Возврат;
	КонецЕсли;
	
	Список.ТекстЗапроса = ТекстЗапросаПроверки;
	Для Каждого РеквизитСоздаваемогоОбъекта Из РеквизитыСоздаваемогоОбъекта Цикл
		Если НЕ РеквизитСоздаваемогоОбъекта.ИскатьПодходящие Тогда
			Продолжить;
		КонецЕсли;
		
		ИмяРеквизита = РеквизитСоздаваемогоОбъекта.Имя;
		ДобавитьКолонкуСпискаСуществующих(ИмяРеквизита);
	КонецЦикла;
	
	ОтключаемыеПоля = Новый Массив;
	ОтключаемыеПоля.Добавить("Список.ИндексКартинки");
	
	Список.УстановитьОграниченияИспользованияВПорядке(ОтключаемыеПоля);
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьКолонкуСпискаСуществующих(ИмяКолонки)
	
	ЭлементКолонка = Элементы.Добавить("Список" + ИмяКолонки, Тип("ПолеФормы"), Элементы.Список);
	ЭлементКолонка.ПутьКДанным = "Список." + ИмяКолонки;
	
КонецПроцедуры

&НаКлиенте
Процедура РучноеСозданиеНовогоЭлемента()
	
	НовыйЭлемент = СоздатьНовыйЭлементСправочника();
	Если НовыйЭлемент = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОповеститьОВыборе(НовыйЭлемент);
	Если ОткрыватьНовыеЭлементыСправочниковПослеСоздания Тогда
		ПоказатьЗначение(, НовыйЭлемент);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция СоздатьНовыйЭлементСправочника()
	
	МенеджерСправочника = Справочники[ИмяСправочника];
	СохраняемыйОбъект = МенеджерСправочника.СоздатьЭлемент();
	
	ДанныеДляЗаполнения = Новый Структура;
	Для Каждого СохраняемыйРеквизит Из РеквизитыСоздаваемогоОбъекта Цикл
		ТипРеквизитаВОбъекте = ТипЗнч(СохраняемыйОбъект[СохраняемыйРеквизит.Имя]);
		ТипЭтогоЗначения = ТипЗнч(СохраняемыйРеквизит.Значение);
		Если ТипРеквизитаВОбъекте <> ТипЭтогоЗначения Тогда
			СохраняемыйОбъект[СохраняемыйРеквизит.Имя] =
				РаспознаваниеДокументовПереопределяемый.ПриПриведенииТипаРеквизитаВОбъекте(
					СохраняемыйОбъект.Метаданные(),
					СохраняемыйРеквизит.Значение,
					ТипЭтогоЗначения,
					ТипРеквизитаВОбъекте
				);
			ДанныеДляЗаполнения.Вставить(СохраняемыйРеквизит.Имя, СохраняемыйОбъект[СохраняемыйРеквизит.Имя]);
		Иначе
			СохраняемыйОбъект[СохраняемыйРеквизит.Имя] = СохраняемыйРеквизит.Значение;
			ДанныеДляЗаполнения.Вставить(СохраняемыйРеквизит.Имя, СохраняемыйОбъект[СохраняемыйРеквизит.Имя]);
			Если ЗначениеЗаполнено(СохраняемыйРеквизит.РеквизитыЗаполнения) Тогда
				МассивИмен = СтрРазделить(СохраняемыйРеквизит.РеквизитыЗаполнения, ",", Ложь);
				Для Каждого ТекущееИмя Из МассивИмен Цикл
					СохраняемыйОбъект[ТекущееИмя] = СохраняемыйРеквизит.Значение;
					ДанныеДляЗаполнения.Вставить(ТекущееИмя, СохраняемыйОбъект[ТекущееИмя]);
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Попытка
		РаспознаваниеДокументовПереопределяемый.ПриЗаполненииНовогоЭлементаСправочника(СохраняемыйОбъект, ДанныеДляЗаполнения);
		СохраняемыйОбъект.Записать();
	Исключение
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru = 'Описание ошибки:'") + Символы.ПС
			+ КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
		Сообщение.Сообщить();
		Возврат Неопределено;
	КонецПопытки;
	
	Возврат СохраняемыйОбъект.Ссылка;
	
КонецФункции

&НаКлиенте
Процедура ПодтверждениеОткрытияФормыНовогоЭлемента(Результат, ДополнительныеПараметры) Экспорт
	
	НовыйЭлемент = ДополнительныеПараметры.Ссылка;
	
	ОповеститьОВыборе(НовыйЭлемент);
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ПоказатьЗначение(, НовыйЭлемент);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзменении(Элемент)
	
	Отбор = Новый Структура("Имя", Элемент.Имя);
	НайденныеСтроки = РеквизитыСоздаваемогоОбъекта.НайтиСтроки(Отбор);
	Если Не НайденныеСтроки.Количество() Тогда
		Возврат;
	КонецЕсли;
	
	СвойстваРеквизита = НайденныеСтроки[0];
	УстановитьЗначенияПараметраСписка(СвойстваРеквизита);
	
	ИзменитьОтображениеСпискаСуществующих();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьЗначенияПараметраСписка(СвойстваРеквизита)
	
	Если СвойстваРеквизита.ИскатьПодходящие Тогда
		Если ЗначениеЗаполнено(СвойстваРеквизита.Значение) Тогда
			Если СвойстваРеквизита.Имя = "Наименование" Тогда 
				ЗначениеРеквизита = СвойстваРеквизита.Значение + "%";
			Иначе
				ЗначениеРеквизита = СвойстваРеквизита.Значение;
			КонецЕсли;
			Список.Параметры.УстановитьЗначениеПараметра(СвойстваРеквизита.Имя, ЗначениеРеквизита);
		Иначе
			Если СвойстваРеквизита.Имя = "Наименование" Тогда
				Список.Параметры.УстановитьЗначениеПараметра("Наименование", Строка(УникальныйИдентификатор));
			Иначе
				Список.Параметры.УстановитьЗначениеПараметра(СвойстваРеквизита.Имя, Неопределено);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_АвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	Отбор = Новый Структура("Имя", Элемент.Имя);
	НайденныеСтроки = РеквизитыСоздаваемогоОбъекта.НайтиСтроки(Отбор);
	
	СвойстваРеквизита = НайденныеСтроки[0];
	Координаты = СвойстваРеквизита.Координаты.ВыгрузитьЗначения();
	
	ПараметрыОповещения = Новый Структура("Координаты, ВысотаКартинки", Координаты, СвойстваРеквизита.ВысотаКартинки);
	Оповестить("ВыбранРеквизитФормыСоздания", ПараметрыОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодтверждениеЗаполненияКонтрагентаДаннымиИзЕГРЮЛ(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Нет Тогда
		РучноеСозданиеНовогоЭлемента();
	ИначеЕсли Результат = КодВозвратаДиалога.Да Тогда
		ДанныеДляЗаполнения = ЗаполнитьДанныеКонтрагентаИзБазыЕГРЮЛ();
		
		Если ЗначениеЗаполнено(ДанныеДляЗаполнения.ОписаниеОшибки) Тогда
			РаботаСКонтрагентамиКлиент.ОбработатьОшибку(ДанныеДляЗаполнения.ОписаниеОшибки);
			Возврат;
		КонецЕсли;
		
		НовыйКонтрагент = СоздатьНовогоКонтрагента(ДанныеДляЗаполнения);
		
		Если НовыйКонтрагент <> Неопределено Тогда
			ОповеститьОВыборе(НовыйКонтрагент);
		КонецЕсли;
		
		ИмяПараметра = "РаспознаваниеДокументов.ИспользоватьСервис1СКонтрагент";
		Если ПараметрыПриложения[ИмяПараметра] = Неопределено Тогда
			ПараметрыПриложения.Вставить(ИмяПараметра, Истина);
		КонецЕсли;
		
	Иначе // Отмена
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ЗаполнитьДанныеКонтрагентаИзБазыЕГРЮЛ()
	
	ИНН = "";
	Для Каждого РеквизитСоздаваемого Из РеквизитыСоздаваемогоОбъекта Цикл
		Если РеквизитСоздаваемого.Имя = "ИНН" Тогда
			ИНН = РеквизитСоздаваемого.Значение;
		КонецЕсли;
	КонецЦикла;
	
	МодульРаботаСКонтрагентами = ОбщегоНазначения.ОбщийМодуль("РаботаСКонтрагентами");
	
	ЭтоЮрЛицо = (СтрДлина(ИНН) = 10);
	
	Если ЭтоЮрЛицо Тогда
		ДанныеДляЗаполнения = МодульРаботаСКонтрагентами.РеквизитыЮридическогоЛицаПоИНН(ИНН);
	Иначе
		ДанныеДляЗаполнения = МодульРаботаСКонтрагентами.РеквизитыПредпринимателяПоИНН(ИНН);
	КонецЕсли;
	
	ДанныеДляЗаполнения.Вставить("ЮридическоеФизическоеЛицо", 
		?(ЭтоЮрЛицо, Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо, Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо));
	
	Если ДанныеДляЗаполнения.Свойство("ИсторияРеквизитов") Тогда
		ДанныеДляЗаполнения.Удалить("ИсторияРеквизитов");
	КонецЕсли;
	
	Возврат ДанныеДляЗаполнения;
	
КонецФункции

&НаСервере
Функция СоздатьНовогоКонтрагента(ДанныеДляЗаполнения)
	
	МенеджерСправочника = Справочники[ИмяСправочника];
	СохраняемыйОбъект = МенеджерСправочника.СоздатьЭлемент();
	
	ЗаполнитьЗначенияСвойств(СохраняемыйОбъект, ДанныеДляЗаполнения);
	СохраняемыйОбъект.НаименованиеПолное = ДанныеДляЗаполнения.НаименованиеСокращенное;
	
	// Контактная информация
	Если ДанныеДляЗаполнения.Свойство("ЮридическийАдрес")
		И ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.КонтактнаяИнформация") Тогда
		
		МодульКИ = ОбщегоНазначения.ОбщийМодуль("УправлениеКонтактнойИнформацией");
		
		ВидыАдресовКонтрагента = Новый Массив();
		ВидыАдресовКонтрагента.Добавить(Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента);
		ВидыАдресовКонтрагента.Добавить(Справочники.ВидыКонтактнойИнформации.ФактАдресКонтрагента);
		ВидыАдресовКонтрагента.Добавить(Справочники.ВидыКонтактнойИнформации.ПочтовыйАдресКонтрагента);
		
		Для Каждого ВидАдреса Из ВидыАдресовКонтрагента Цикл
			МодульКИ.ЗаписатьКонтактнуюИнформацию(СохраняемыйОбъект, ДанныеДляЗаполнения.ЮридическийАдрес.КонтактнаяИнформация, ВидАдреса, ВидАдреса.Тип);
		КонецЦикла;
		
		ВидТелефона = Справочники.ВидыКонтактнойИнформации.ТелефонКонтрагента;
		МодульКИ.ЗаписатьКонтактнуюИнформацию(СохраняемыйОбъект, ДанныеДляЗаполнения.Телефон, ВидТелефона, ВидТелефона.Тип);
		
	КонецЕсли;
	
	СохраняемыйОбъект.Записать();
	
	Возврат СохраняемыйОбъект.Ссылка;
	
КонецФункции

&НаСервереБезКонтекста
Функция КартинкаНеПомещаетсяВСтроке(Координаты)
	
	Длина = Координаты[2].Значение - Координаты[0].Значение;
	Высота = Координаты[3].Значение - Координаты[1].Значение;
	
	Возврат Длина > Высота*20;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьХэшКартинкиПоАдресу(АдресКартинки)
	
	Если Не ЗначениеЗаполнено(АдресКартинки) Тогда 
		Возврат Неопределено;
	КонецЕсли;
	
	ДвоичныеДанные = ПолучитьИзВременногоХранилища(АдресКартинки);
	
	Если ДвоичныеДанные = Неопределено Тогда 
		Возврат Неопределено;
	КонецЕсли;
	
	Хеширование = Новый ХешированиеДанных(ХешФункция.MD5);
	Хеширование.Добавить(ДвоичныеДанные);
	
	Возврат Хеширование.ХешСумма;
	
КонецФункции

&НаСервере
Процедура СброситьРазмерыИПоложениеОкна()

	ИмяПользователя = ПользователиИнформационнойБазы.ТекущийПользователь().Имя;
	Если ПравоДоступа("СохранениеДанныхПользователя", Метаданные) Тогда
		ПолноеИмяФормы = Метаданные.ОбщиеФормы.ВопросПриНаличииИмеющихсяДокументовБРД.ПолноеИмя();
		ХранилищеСистемныхНастроек.Удалить(ПолноеИмяФормы, "", ИмяПользователя);
	КонецЕсли;
	КлючСохраненияПоложенияОкна = Строка(Новый УникальныйИдентификатор);

КонецПроцедуры

#КонецОбласти
