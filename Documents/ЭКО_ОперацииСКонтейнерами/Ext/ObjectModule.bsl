
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ТребованиеНакладная") Тогда
		ВидОперации = Перечисления.ЭКО_ВидОперацийСКонтейнерами.Выдача;
		Контрагент = ДанныеЗаполнения.Контрагент;
		Организация = ДанныеЗаполнения.Организация;
		ДокОснование = ДанныеЗаполнения.Ссылка;
		//ДатаВыдачи = ДанныеЗаполнения.дата;
		МассивОбъектов = Новый Массив;
		МассивОбъектов.Добавить(Ссылка);
		ТаблицаСуммСписанияПоДокументу = БухгалтерскийУчетПереопределяемый.ПолучитьСуммуСписанияАктивовПоПартиям(ДанныеЗаполнения.ссылка, ДанныеЗаполнения.Дата, ДанныеЗаполнения.Дата);
		
		Для Каждого ТекСтрокаМатериалы Из ДанныеЗаполнения.Материалы Цикл
			Для инд = 1 по ТекСтрокаМатериалы.количество Цикл 
				НоваяСтрока = Контейнеры.Добавить();
				НоваяСтрока.Номенклатура = ТекСтрокаМатериалы.Номенклатура;
				НоваяСтрока.Количество =  1;
				НоваяСтрока.ДатаВыдачи=ДанныеЗаполнения.дата;
				НоваяСтрока.ПервоначальнаяСтоимость =   ЦенаСписания(ТаблицаСуммСписанияПоДокументу, ТекСтрокаМатериалы.Номенклатура, ТекСтрокаМатериалы.ДокументОприходования);
				
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры


Функция ЦенаСписания(ТаблицаСуммСписанияПоДокументам, Номенклатура, Партия)
	
	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить("Номенклатура",  Номенклатура);
	СтруктураПоиска.Вставить("Партия",        ?(ЗначениеЗаполнено(Партия), Партия, Неопределено));
	
	НайденныеСтроки = ТаблицаСуммСписанияПоДокументам.НайтиСтроки(СтруктураПоиска);
	
	Если НайденныеСтроки.Количество() = 0 Тогда
		Возврат 0;
	Иначе
		СтрокаСуммСписания = НайденныеСтроки[0];
		Если СтрокаСуммСписания.Количество = 0 Тогда
			Возврат 0;
		Иначе
			Возврат СтрокаСуммСписания.Сумма / СтрокаСуммСписания.Количество;
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

Процедура ОбработкаПроведения(Отказ, Режим)
	
	// регистр Хозрасчетный 
	Движения.Хозрасчетный.Записывать = Истина;
	Если ВидОперации = Перечисления.ЭКО_ВидОперацийСКонтейнерами.Выдача Тогда 
		Для Каждого ТекСтрокаКонтейнеры Из Контейнеры Цикл
			Движение = Движения.Хозрасчетный.Добавить();
			Движение.СчетДт = ПланыСчетов.Хозрасчетный.НайтиПоНаименованию("Контейнеры");
			Движение.Период = Дата;
			Движение.Организация = Организация;
			Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НайтиПоНаименованию("Контейнеры")] = ТекСтрокаКонтейнеры.Контейнер;
			Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты] = Контрагент;
			Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НайтиПоНаименованию("Площадки")] =  ТекСтрокаКонтейнеры.Площадка;
			Движение.Сумма = ТекСтрокаКонтейнеры.ПервоначальнаяСтоимость;
			Движение.КоличествоДт = ТекСтрокаКонтейнеры.Количество;
			
		КонецЦикла;
		
	Иначе
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ХозрасчетныйОстатки.КоличествоОстаток КАК КоличествоОстаток,
		|	ХозрасчетныйОстатки.Субконто1 КАК Контейнер,
		|	ХозрасчетныйОстатки.Субконто3 КАК Площадка
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(
		|			&дата,
		|			Счет = &СчетК,
		|			,
		|			Организация = &Организация
		|				И Субконто1 В (&Контейнер)
		|				И (Субконто2 = &контрагент  или &контрагент = Значение(Справочник.Контрагенты.ПустаяСсылка) )
		|				И Субконто3 В (&площадка) ) КАК ХозрасчетныйОстатки";
		
		Запрос.УстановитьПараметр("дата", Новый Граница(ЭтотОбъект.МоментВремени(), ВидГраницы.Исключая));
		Запрос.УстановитьПараметр("Контейнер", Контейнеры.ВыгрузитьКолонку("Контейнер"));
		Если ВидОперации = Перечисления.ЭКО_ВидОперацийСКонтейнерами.ВыдачаБУ  Тогда 
					Запрос.УстановитьПараметр("контрагент", Справочники.Контрагенты.ПустаяСсылка());
					Мплощадка = Новый Массив;
					Мплощадка.Добавить( Справочники.ЭКО_Площадки.ПустаяСсылка() );
					Запрос.УстановитьПараметр("площадка", Мплощадка);

		Иначе 
		Запрос.УстановитьПараметр("контрагент", Контрагент);
		Запрос.УстановитьПараметр("площадка", Контейнеры.ВыгрузитьКолонку("площадка"));
		
		КонецЕсли;
		Запрос.УстановитьПараметр("Организация",Организация);
		Запрос.УстановитьПараметр("СчетК",  ПланыСчетов.Хозрасчетный.НайтиПоНаименованию("Контейнеры"));
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		
		Для Каждого ТекСтрокаКонтейнеры Из Контейнеры Цикл
			отбор = Новый Структура;
			отбор.Вставить("Контейнер", ТекСтрокаКонтейнеры.Контейнер);
			Если ВидОперации = Перечисления.ЭКО_ВидОперацийСКонтейнерами.ВыдачаБУ  Тогда 
			отбор.Вставить("площадка", Справочники.ЭКО_Площадки.ПустаяСсылка());
			Иначе 
			отбор.Вставить("площадка", ТекСтрокаКонтейнеры.площадка);
			КонецЕсли;
			ВыборкаДетальныеЗаписи.Сбросить();
			Если ВыборкаДетальныеЗаписи.НайтиСледующий(Отбор) Тогда 
				Если ВыборкаДетальныеЗаписи.КоличествоОстаток < ТекСтрокаКонтейнеры.Количество Тогда 
					отказ = Истина;
					Сообщить("строка " + ТекСтрокаКонтейнеры.НомерСтроки +  " не достаточно количества!");
				КонецЕсли;
			Иначе
				отказ = Истина;
				Сообщить("строка " + ТекСтрокаКонтейнеры.НомерСтроки +  " не достаточно количества!");
			КонецЕсли;
			
			
			
		КонецЦикла;
		
		
		Если Не отказ Тогда 
			
			Если ВидОперации = Перечисления.ЭКО_ВидОперацийСКонтейнерами.Списание Тогда 
				Для Каждого ТекСтрокаКонтейнеры Из Контейнеры Цикл
					Движение = Движения.Хозрасчетный.Добавить();
					Движение.СчетКт = ПланыСчетов.Хозрасчетный.НайтиПоНаименованию("Контейнеры");
					Движение.Период = Дата;
					Движение.Организация = Организация;
					Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НайтиПоНаименованию("Контейнеры")] = ТекСтрокаКонтейнеры.Контейнер;
					Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты] = Контрагент;
					Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НайтиПоНаименованию("Площадки")] =  ТекСтрокаКонтейнеры.Площадка;
					Движение.Сумма = ТекСтрокаКонтейнеры.ПервоначальнаяСтоимость;
					Движение.КоличествоКт = ТекСтрокаКонтейнеры.Количество;
					
				КонецЦикла;
				
			ИначеЕсли ВидОперации = Перечисления.ЭКО_ВидОперацийСКонтейнерами.Реализация Тогда 
				Для Каждого ТекСтрокаКонтейнеры Из Контейнеры Цикл
					Движение = Движения.Хозрасчетный.Добавить();
					Движение.СчетКт = ПланыСчетов.Хозрасчетный.НайтиПоНаименованию("Контейнеры");
					Движение.Период = Дата;
					Движение.Организация = Организация;
					Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НайтиПоНаименованию("Контейнеры")] = ТекСтрокаКонтейнеры.Контейнер;
					Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты] = Контрагент;
					Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НайтиПоНаименованию("Площадки")] =  ТекСтрокаКонтейнеры.Площадка;
					РеальныйСрок = Месяц(Дата ) - Месяц(ТекСтрокаКонтейнеры.Контейнер.ДатаВыдачи )  ;

					Движение.Сумма =ТекСтрокаКонтейнеры.ПервоначальнаяСтоимость - ( ТекСтрокаКонтейнеры.ПервоначальнаяСтоимость*РеальныйСрок/ТекСтрокаКонтейнеры.Контейнер.СрокПолезногоИспользования );
					Движение.КоличествоКт = ТекСтрокаКонтейнеры.Количество;
					
					Движение = Движения.Хозрасчетный.Добавить();
					Движение.СчетДт = ПланыСчетов.Хозрасчетный.НайтиПоНаименованию("Малоценное оборудование");
					Движение.СчетКт = ПланыСчетов.Хозрасчетный.ПрочиеДоходы;
					Движение.Период = Дата;
					Движение.Организация = Организация;
					Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура] = ТекСтрокаКонтейнеры.Номенклатура;
					Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады] = Справочники.Склады.НайтиПоНаименованию("СКЛАД б/у");
					Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы] = Справочники.ПрочиеДоходыИРасходы.НайтиПоКоду("00019");
					Движение.Сумма =ТекСтрокаКонтейнеры.ПервоначальнаяСтоимость - ( ТекСтрокаКонтейнеры.ПервоначальнаяСтоимость*РеальныйСрок/ТекСтрокаКонтейнеры.Контейнер.СрокПолезногоИспользования );
					Движение.КоличествоДт = ТекСтрокаКонтейнеры.Количество;

					
				КонецЦикла;

				
			ИначеЕсли ВидОперации = Перечисления.ЭКО_ВидОперацийСКонтейнерами.Перемещение Тогда 
				Для Каждого ТекСтрокаКонтейнеры Из Контейнеры Цикл
					Движение = Движения.Хозрасчетный.Добавить();
					Движение.СчетКт = ПланыСчетов.Хозрасчетный.НайтиПоНаименованию("Контейнеры");
					Движение.Период = Дата;
					Движение.Организация = Организация;
					Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НайтиПоНаименованию("Контейнеры")] = ТекСтрокаКонтейнеры.Контейнер;
					Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты] = Контрагент;
					Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НайтиПоНаименованию("Площадки")] =  ТекСтрокаКонтейнеры.Площадка;
					Движение.Сумма = ТекСтрокаКонтейнеры.ПервоначальнаяСтоимость;
					Движение.КоличествоКт = ТекСтрокаКонтейнеры.Количество;
					
					Движение = Движения.Хозрасчетный.Добавить();
					Движение.СчетДт = ПланыСчетов.Хозрасчетный.НайтиПоНаименованию("Контейнеры");
					Движение.Период = Дата;
					Движение.Организация = Организация;
					Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НайтиПоНаименованию("Контейнеры")] = ТекСтрокаКонтейнеры.Контейнер;
					Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты] = Контрагент;
					Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НайтиПоНаименованию("Площадки")] = ТекСтрокаКонтейнеры.ПлощадкаДляПеремещения;
					Движение.Сумма = ТекСтрокаКонтейнеры.ПервоначальнаяСтоимость;
					Движение.КоличествоДт = ТекСтрокаКонтейнеры.Количество;
					
				КонецЦикла;
			ИначеЕсли ВидОперации = Перечисления.ЭКО_ВидОперацийСКонтейнерами.ВыдачаБУ Тогда 
				Для Каждого ТекСтрокаКонтейнеры Из Контейнеры Цикл
					Движение = Движения.Хозрасчетный.Добавить();
					Движение.СчетКт = ПланыСчетов.Хозрасчетный.НайтиПоНаименованию("Контейнеры");
					Движение.Период = Дата;
					Движение.Организация = Организация;
					Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НайтиПоНаименованию("Контейнеры")] = ТекСтрокаКонтейнеры.Контейнер;
					Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты] = Справочники.Контрагенты.НайтиПоКоду("000000137");
					//Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НайтиПоНаименованию("Площадки")] =  ТекСтрокаКонтейнеры.Площадка;
					Движение.Сумма = ТекСтрокаКонтейнеры.ПервоначальнаяСтоимость;
					Движение.КоличествоКт = ТекСтрокаКонтейнеры.Количество;
					
					Движение = Движения.Хозрасчетный.Добавить();
					Движение.СчетДт =  ПланыСчетов.Хозрасчетный.НайтиПоНаименованию("Контейнеры");
					Движение.Период = Дата;
					Движение.Организация = Организация;
					Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НайтиПоНаименованию("Контейнеры")] = ТекСтрокаКонтейнеры.Контейнер;
					Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты] = Контрагент ;
					Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НайтиПоНаименованию("Площадки")] = ТекСтрокаКонтейнеры.Площадка;
					Движение.Сумма = ТекСтрокаКонтейнеры.ПервоначальнаяСтоимость;
					Движение.КоличествоДт = ТекСтрокаКонтейнеры.Количество;
					
				КонецЦикла;

			Иначе 
				Для Каждого ТекСтрокаКонтейнеры Из Контейнеры Цикл
					Движение = Движения.Хозрасчетный.Добавить();
					Движение.СчетКт =  ПланыСчетов.Хозрасчетный.НайтиПоНаименованию("Контейнеры");
					Движение.Период = Дата;
					Движение.Организация = Организация;
					Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НайтиПоНаименованию("Контейнеры")] = ТекСтрокаКонтейнеры.Контейнер;
					Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты] = Контрагент;
					Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НайтиПоНаименованию("Площадки")] =  ТекСтрокаКонтейнеры.Площадка;
					Движение.Сумма = ТекСтрокаКонтейнеры.ПервоначальнаяСтоимость;
					Движение.КоличествоКт = ТекСтрокаКонтейнеры.Количество;
					
					Движение = Движения.Хозрасчетный.Добавить();
					Движение.СчетДт =  ПланыСчетов.Хозрасчетный.НайтиПоНаименованию("Контейнеры");
					Движение.Период = Дата;
					Движение.Организация = Организация;
					Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НайтиПоНаименованию("Контейнеры")] = ТекСтрокаКонтейнеры.Контейнер;
					Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты] = Справочники.Контрагенты.НайтиПоКоду("000000137");
					//Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НайтиПоНаименованию("Площадки")] = ТекСтрокаКонтейнеры.Площадка;
					Движение.Сумма = ТекСтрокаКонтейнеры.ПервоначальнаяСтоимость;
					Движение.КоличествоДт = ТекСтрокаКонтейнеры.Количество;
					
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	Если Дата >= '20200101' и ВидОперации = Перечисления.ЭКО_ВидОперацийСКонтейнерами.Реализация Тогда
		ТаблицаТовары = Контейнеры.Выгрузить();	
		ТаблицаТовары.Колонки.Добавить("СчетУчета");
		ТаблицаТовары.ЗаполнитьЗначения(ПланыСчетов.Хозрасчетный.НайтиПоНаименованию("Малоценное оборудование"), "СчетУчета");
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		Запрос.УстановитьПараметр("Склад", Справочники.Склады.НайтиПоНаименованию("СКЛАД б/у"));
		
		Запрос.Текст = "ВЫБРАТЬ
		|	ЭКО_ОперацииСКонтейнерами.Организация КАК Организация,
		|	ЭКО_ОперацииСКонтейнерами.Дата КАК Период,
		|	ЭКО_ОперацииСКонтейнерами.Ссылка КАК Регистратор,
		|	&Склад КАК Склад,
		|	ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяССылка) КАК Подразделение
		|ИЗ
		|	Документ.ЭКО_ОперацииСКонтейнерами КАК ЭКО_ОперацииСКонтейнерами
		|ГДЕ
		|	ЭКО_ОперацииСКонтейнерами.Ссылка = &Ссылка";
		
		ТаблицаРеквизиты = Запрос.Выполнить().Выгрузить();
		
		УчетНДСБП.СформироватьДвиженияОприходованиеТоваров(
		ТаблицаТовары, Неопределено,
		ТаблицаРеквизиты, Движения, Отказ);
	КонецЕсли;
	
КонецПроцедуры
