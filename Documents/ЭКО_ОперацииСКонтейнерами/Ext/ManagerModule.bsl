//Печать
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ТОРГ13";
	КомандаПечати.Представление = НСтр("ru = 'Накладная на внутреннее перемещение (ТОРГ-13)'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Накладная";
	КомандаПечати.Представление = НСтр("ru = 'Перемещение товаров'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";

КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм,ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Накладная") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Накладная", "Перемещение товаров", 
			ПечатьПеремещениеТоваров(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;

	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ТОРГ13") Тогда
	    УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ТОРГ13", "Накладная на внутреннее перемещение (ТОРГ-13)", СформироватьПечатнуюФорму(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;

	ОбщегоНазначенияБП.ЗаполнитьДополнительныеПараметрыПечати(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);	

КонецПроцедуры

Функция СформироватьПечатнуюФорму(СсылкаМО, ОбъектыПечати)
Ссылка = СсылкаМО[0];

ВалютаРегламентированногоУчета = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	
ТабличныйДокумент = Новый ТабличныйДокумент;
ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПеремещениеТоваров_ТОРГ13";

Макет = ПолучитьМакет("ПФ_MXL_ТОРГ13");
// Запомним номер строки, с которой начали выводить текущий документ.
НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
ОбластьМакетаШапка            = Макет.ПолучитьОбласть("Шапка");
ОбластьМакетаЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
ОбластьМакета                 = Макет.ПолучитьОбласть("Строка");
ОбластьИтоговПоСтранице       = Макет.ПолучитьОбласть("ИтогиПоСтранице");
ОбластьМакетаВсего            = Макет.ПолучитьОбласть("Всего");
ОбластьМакетаПодвал           = Макет.ПолучитьОбласть("Подвал");

УстановитьПривилегированныйРежим(Истина);
СведенияОбОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Ссылка.Организация, Ссылка.Дата);
ОбластьМакетаШапка.Параметры.ПредставлениеОрганизации = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОбОрганизации);
ОбластьМакетаШапка.Параметры.НомерДокумента           = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Ссылка.Номер, Истина, Ложь)+"К";
ОбластьМакетаШапка.Параметры.ДатаДокумента            = Формат(Ссылка.Дата,"ДФ=dd.MM.yyyy");
ОбластьМакетаШапка.Параметры.ОрганизацияПоОКПО        = СведенияОбОрганизации.КодПоОКПО;
ОбластьМакетаШапка.Параметры.ОтправительПодразделение = "";
ОбластьМакетаШапка.Параметры.ПолучательПодразделение  = Справочники.Склады.НайтиПоКоду("БП-000001");
ТабличныйДокумент.Вывести(ОбластьМакетаШапка);

НомерСтраницы = 1;
			
// Выводим заголовок таблицы
ОбластьМакетаЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
ТабличныйДокумент.Вывести(ОбластьМакетаЗаголовокТаблицы);

КоличествоСтрок = Ссылка.Контейнеры.Количество();

// инициализация итогов по странице
ИтогКоличествоМестПоСтранице = 0;
ИтогСуммыПоСтранице          = 0;

// инициализация итогов по документу
ИтогоКоличество  = 0;
ИтогоСумма       = 0;
КоличествоМест   = 0;
Сумма            = 0;

Ном = 0;
Для каждого Строка из Ссылка.Контейнеры Цикл

Ном = Ном + 1;
						
КоличествоМест = Строка.Количество;
Сумма          = Строка.ПервоначальнаяСтоимость*КоличествоМест;

ОбластьМакета.Параметры.Цена  = Строка.ПервоначальнаяСтоимость;
ОбластьМакета.Параметры.Сумма = Строка.ПервоначальнаяСтоимость*КоличествоМест;
ОбластьМакета.Параметры.КоличествоМест = КоличествоМест;
ОбластьМакета.Параметры.ТоварНаименование = Строка.Номенклатура.НаименованиеПолное;
ОбластьМакета.Параметры.ТоварКод = Строка.Номенклатура.Код;
ОбластьМакета.Параметры.ЕдиницаИзмеренияНаименование  = Строка.Номенклатура.ЕдиницаИзмерения.Наименование;
ОбластьМакета.Параметры.ЕдиницаИзмеренияКодПоОКЕИ     = Строка.Номенклатура.ЕдиницаИзмерения.Код;
ОбластьМакета.Параметры.КоличествоВОдномМесте         =1;
				// Проверим вывод
СтрокаСПодвалом = Новый Массив;
СтрокаСПодвалом.Добавить(ОбластьМакета);
СтрокаСПодвалом.Добавить(ОбластьИтоговПоСтранице);
Если Ном = КоличествоСтрок Тогда           // если последняя строка, должен
	СтрокаСПодвалом.Добавить(ОбластьМакетаВсего);  // помещаться и подвал документа
    СтрокаСПодвалом.Добавить(ОбластьМакетаПодвал);
КонецЕсли;

Если НЕ ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабличныйДокумент, СтрокаСПодвалом) Тогда
					
	Если КоличествоСтрок > 1 Тогда
						
	ОбластьИтоговПоСтранице.Параметры.ИтогКоличествоМестПоСтранице = ИтогКоличествоМестПоСтранице;
	ОбластьИтоговПоСтранице.Параметры.ИтогСуммыПоСтранице          = ИтогСуммыПоСтранице;
						
	ТабличныйДокумент.Вывести(ОбластьИтоговПоСтранице);
	ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
						
						// инициализация итогов по странице
	ИтогКоличествоМестПоСтранице = 0;
	ИтогСуммыПоСтранице          = 0;
						
	НомерСтраницы = НомерСтраницы + 1;
						
	ОбластьМакетаЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
	ТабличныйДокумент.Вывести(ОбластьМакетаЗаголовокТаблицы);
	КонецЕсли;
КонецЕсли;
				
ТабличныйДокумент.Вывести(ОбластьМакета);

				// Обновим итоги по странице
ИтогКоличествоМестПоСтранице = ИтогКоличествоМестПоСтранице + КоличествоМест;
ИтогСуммыПоСтранице          = ИтогСуммыПоСтранице          + Сумма;

				// Обновим итогов по документу
ИтогоКоличество  = ИтогоКоличество  + КоличествоМест;
ИтогоСумма       = ИтогоСумма       + Сумма;

КонецЦикла;

ОбластьИтоговПоСтранице.Параметры.ИтогКоличествоМестПоСтранице = ИтогКоличествоМестПоСтранице;
ОбластьИтоговПоСтранице.Параметры.ИтогСуммыПоСтранице          = ИтогСуммыПоСтранице;
ТабличныйДокумент.Вывести(ОбластьИтоговПоСтранице);

// Выводим итоги по документу в целом
ОбластьМакетаВсего.Параметры.ИтогоКоличествоМест = ИтогоКоличество;
ОбластьМакетаВсего.Параметры.ИтогоСумма          = ИтогоСумма;

ТабличныйДокумент.Вывести(ОбластьМакетаВсего);

// Выводим подвал документа
ОбластьМакетаПодвал.Параметры.ИтогоСуммаПрописью = ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(ИтогоСумма, ВалютаРегламентированногоУчета);
			
МОЛ = ОтветственныеЛицаБП.ОтветственноеЛицоНаСкладе(Справочники.Склады.НайтиПоКоду("БП-000001"),Ссылка.Дата);
ДанныеФизЛица = ОбщегоНазначенияБПВызовСервера.ДанныеФизЛица(Ссылка.Организация,МОЛ,Ссылка.Дата);
//ОбластьМакетаПодвал.Параметры.ДолжностьПолучателя = ДанныеФизЛица.Должность;
//ОбластьМакетаПодвал.Параметры.ФИОПолучателя = ДанныеФизЛица.Представление;

ТабличныйДокумент.Вывести(ОбластьМакетаПодвал);
			
// В табличном документе зададим имя области, в которую был 
// выведен объект. Нужно для возможности печати покомплектно.
УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, 
				НомерСтрокиНачало, ОбъектыПечати, Ссылка);

	
Возврат ТабличныйДокумент;


КонецФункции

Функция ПечатьПеремещениеТоваров(МассивОбъектов, ОбъектыПечати)
Ссылка = МассивОбъектов[0];
	
ТабличныйДокумент = Новый ТабличныйДокумент;
ТабличныйДокумент.АвтоМасштаб			= Истина;
ТабличныйДокумент.ОриентацияСтраницы	= ОриентацияСтраницы.Портрет;
ТабличныйДокумент.КлючПараметровПечати	= "ПАРАМЕТРЫ_ПЕЧАТИ_ПеремещениеТоваров_Накладная";
		
ПервыйДокумент = Истина;

НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ЭКО_ОперацииСКонтейнерами.ПФ_MXL_Накладная");
		
ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
НомерНаПеать = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Ссылка.Номер, Истина, Ложь)+"К"; 
ОбластьМакета.Параметры.ТекстЗаголовка = "Накладная на перемещение № " + НомерНаПеать + " от "+ Формат(Ссылка.Дата,"ДЛФ=DD");
ТабличныйДокумент.Вывести(ОбластьМакета);

ОбластьМакета = Макет.ПолучитьОбласть("Поставщик");
ТабличныйДокумент.Вывести(ОбластьМакета);

ОбластьМакета = Макет.ПолучитьОбласть("Покупатель");
ОбластьМакета.Параметры.ПредставлениеПолучателя ="Склад ПРЭО";
ТабличныйДокумент.Вывести(ОбластьМакета);


ОбластьНомера = Макет.ПолучитьОбласть("ШапкаТаблицы|НомерСтроки");
ОбластьДанных = Макет.ПолучитьОбласть("ШапкаТаблицы|Данные");
ОбластьЦена = Макет.ПолучитьОбласть("ШапкаТаблицы|Цена");

ТабличныйДокумент.Вывести(ОбластьНомера);
ТабличныйДокумент.Присоединить(ОбластьДанных);
ТабличныйДокумент.Присоединить(ОбластьЦена);


ОбластьНомера = Макет.ПолучитьОбласть("Строка|НомерСтроки");
ОбластьДанных = Макет.ПолучитьОбласть("Строка|Данные");
ОбластьЦена = Макет.ПолучитьОбласть("Строка|Цена");
НС = 0;
Для каждого Строка из Ссылка.Контейнеры цикл
ОбластьНомера.Параметры.НомерСтроки = НС;
ТабличныйДокумент.Вывести(ОбластьНомера);
ОбластьДанных.Параметры.КоличествоМест = Строка.Количество;
ОбластьДанных.Параметры.ЕдиницаИзмерения = Строка.Номенклатура.ЕдиницаИзмерения.Наименование;
ОбластьДанных.Параметры.ЕдиницаХранения  = Строка.Номенклатура.ЕдиницаИзмерения.Наименование;
ОбластьДанных.Параметры.Количество = Строка.Количество;
			
ОбластьДанных.Параметры.Товар = Строка.Номенклатура.Наименование;
ТабличныйДокумент.Присоединить(ОбластьДанных);

ОбластьЦена.Параметры.Цена = Строка.ПервоначальнаяСтоимость;
ТабличныйДокумент.Присоединить(ОбластьЦена);
НС = НС + 1;
	
КонецЦикла;

ОбластьНомера = Макет.ПолучитьОбласть("Подвал|НомерСтроки");
ОбластьДанных = Макет.ПолучитьОбласть("Подвал|Данные");
ОбластьЦена = Макет.ПолучитьОбласть("Подвал|Цена");

ТабличныйДокумент.Вывести(ОбластьНомера);
ТабличныйДокумент.Присоединить(ОбластьДанных);
ТабличныйДокумент.Присоединить(ОбластьЦена);

// Вывести подписи
ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
МОЛ = ОтветственныеЛицаБП.ОтветственноеЛицоНаСкладе(Справочники.Склады.НайтиПоКоду("БП-000001"),Ссылка.Дата);
//ДанныеФизЛица = ОбщегоНазначенияБПВызовСервера.ДанныеФизЛица(Ссылка.Организация,МОЛ,Ссылка.Дата);
//ОбластьМакета.Параметры.Получил = ДанныеФизЛица.Представление;;
ТабличныйДокумент.Вывести(ОбластьМакета);
		
Возврат ТабличныйДокумент;

КонецФункции
