
&НаСервере
Процедура СгенерироватьКонтейнерыНаСервере()
	Для Каждого Эл из Объект.Контейнеры Цикл 
		//Если ЗначениеЗаполнено(Эл.ИнвентарныйНомер) и ЗначениеЗаполнено(Эл.ПервоначальнаяСтоимость) и Не ЗначениеЗаполнено(Эл.Контейнер)   Тогда 
		Если ЗначениеЗаполнено(Эл.ПервоначальнаяСтоимость) и Не ЗначениеЗаполнено(Эл.Контейнер)   Тогда 
			
						
			Конт = Справочники.ЭКО_Контейнеры.СоздатьЭлемент();
			
			Если не ЗначениеЗаполнено( Эл.Номенклатура.Эко_ТипТары) Тогда 
				Сообщить("Для номенклатуры в строке " + эл.номерСТроки + " не заполнен тип тары!", СтатусСообщения.Важное);
			Продолжить;
			Иначе 
				Конт.СрокПолезногоИспользования = Эл.Номенклатура.Эко_ТипТары.СрокПолезногоИспользования;
			КонецЕсли;

			Если ЗначениеЗаполнено(Эл.ИнвентарныйНомер) Тогда
				Конт.ИнвентарныйНомер = Эл.ИнвентарныйНомер;
			КонецЕсли;
			
			//Конт.ИнвентарныйНомер = Эл.ИнвентарныйНомер;
			Конт.Наименование = Эл.Номенклатура.Наименование;
			Конт.ПервоначальнаяСтоимость = Эл.ПервоначальнаяСтоимость;
			Конт.ДатаВыдачи = Эл.ДатаВыдачи;
			Конт.Номенклатура = Эл.Номенклатура;
			
			
			Попытка
				Конт.Записать();
				//Если НЕ ЗначениеЗаполнено(Конт.ИнвентарныйНомер) Тогда
				//Конт.ИнвентарныйНомер = Конт.Код;
				//Конт.Записать();				
				//КонецЕсли;
				Сообщить("Создан контейнер " + Конт);
				Эл.Контейнер = Конт.Ссылка;
				Эл.ИнвентарныйНомер = Конт.ИнвентарныйНомер;
			Исключение
				Сообщить(ОписаниеОшибки());
			КонецПопытки;
		//Иначе 
		//	Сообщить("" + Эл.НомерСтроки + ": Не заполнен интвентарный номер или стоимость" );
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура СгенерироватьКонтейнеры(Команда)
	СгенерироватьКонтейнерыНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура КонтейнерыНоменклатураПриИзменении(Элемент)
	ТС = Элементы.Контейнеры.ТекущиеДанные;
	Если ЗначениеЗаполнено(тс.Контейнер) Тогда 
	ТС.ИнвентарныйНомер = ВернутьИнвНом(тс.Контейнер);
	ТС.ПервоначальнаяСтоимость = ВернутьПервСт(тс.Контейнер);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция   ВернутьИнвНом(Контейнер)
	Возврат Контейнер.ИнвентарныйНомер;
КонецФункции

&НаСервере
Функция   ВернутьПервСт(Контейнер)
	Возврат Контейнер.ПервоначальнаяСтоимость;
КонецФункции



&НаКлиенте
Процедура ВидОперацииПриИзменении(Элемент)
	УстановитьВидимость();
КонецПроцедуры
	
&НаСервере
Процедура  УстановитьВидимость()
	Если  Объект.ВидОперации = Перечисления.ЭКО_ВидОперацийСКонтейнерами.Перемещение Тогда 
		Элементы.КонтейнерыПлощадкаДляПеремещения.Видимость = истина;
	Иначе 
		Элементы.КонтейнерыПлощадкаДляПеремещения.Видимость = ложь;
	КонецЕсли;
	
	Если  Объект.ВидОперации = Перечисления.ЭКО_ВидОперацийСКонтейнерами.Выдача Тогда 
		Элементы.КонтейнерыДатаВыдачи.Видимость = истина;
	Иначе 
		Элементы.КонтейнерыДатаВыдачи.Видимость = ложь;
	КонецЕсли;

	
	Если  Объект.ВидОперации = Перечисления.ЭКО_ВидОперацийСКонтейнерами.Выдача или 
		Объект.ВидОперации = Перечисления.ЭКО_ВидОперацийСКонтейнерами.Реализация 
	Тогда 
			Элементы.КонтейнерыНоменклатура.Видимость = истина;
	Иначе 
			Элементы.КонтейнерыНоменклатура.Видимость = ложь;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	УстановитьВидимость();
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте 
Процедура Подключаемый_ВыполнитьКоманду(Команда)
          ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры 

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
          ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры 

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
          ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры 

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов	

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

