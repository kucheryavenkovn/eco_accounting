
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПередаваемыеСведения = ПолучитьИзВременногоХранилища(Параметры.АдресПараметровВХранилище);
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ПередаваемыеСведения, "УникальныйИдентификаторВладельца");
	ЗаполнитьТаблицуНачислений(ПередаваемыеСведения.МассивСтрок);
	
	Элементы.ГруппаКнопокПросмотр.Видимость       = ТолькоПросмотр;
	Элементы.ГруппаКнопокРедактирование.Видимость = НЕ ТолькоПросмотр;
	Если ТолькоПросмотр Тогда
		Элементы.ФормаЗакрыть.КнопкаПоУмолчанию = Истина;
	Иначе
		Элементы.ФормаОК.КнопкаПоУмолчанию      = Истина;
	КонецЕсли;
	
	ПеренумероватьСтроки(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ЗавершениеРаботы И Модифицированность Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если Модифицированность Тогда
		
		Отказ = Истина;
		ВопросСохранитьИзменения(Истина);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	
	Если ПроверитьЗаполнениеРеквизитов() Тогда
		Закрыть(ПоместитьИзмененныеДанныеВоВременноеХранилище());
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ПеренумероватьСтроки(Форма)
	
	Для Сч = 0 По Форма.Начисления.Количество() - 1 Цикл
		СтрокаТаблицы = Форма.Начисления[Сч];
		СтрокаТаблицы.НомерСтроки = Сч + 1;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуНачислений(МассивСтрок)

	Для Каждого СтрокаМассива ИЗ МассивСтрок Цикл
		НоваяСтрока = Начисления.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаМассива);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Функция ПроверитьЗаполнениеРеквизитов()
	
	ПроверкаПройдена = Истина;
	ДоговорыПодряда  = Новый Массив;
	Для Каждого СтрокаТаблицы ИЗ Начисления Цикл
		ИндексСтроки = Начисления.Индекс(СтрокаТаблицы);
		Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.Начисление) Тогда
			ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Колонка",
				"Заполнение",
				"Начисление",
				ИндексСтроки + 1,
				"Доплаты");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,
				,
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Начисления", ИндексСтроки+1, "Начисление"));
			ПроверкаПройдена = Ложь;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.Начисление) Тогда
			ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Колонка",
				"Заполнение",
				"Размер",
				ИндексСтроки + 1,
				"Доплаты");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,
				,
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Начисления", ИндексСтроки+1, "Размер"));
			ПроверкаПройдена = Ложь;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ПроверкаПройдена;
	
КонецФункции

&НаКлиенте
Процедура ВопросСохранитьИзменения(Закрытие)
	
	ТекстВопроса = НСтр("ru='Данные были изменены. Сохранить изменения?'");
	Оповещение = Новый ОписаниеОповещения("ВопросСохранитьИзмененияЗавершение",
		ЭтотОбъект,
		Новый Структура("Закрытие", Закрытие));
	ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросСохранитьИзмененияЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		Если ПроверитьЗаполнениеРеквизитов() Тогда
			Если ДополнительныеПараметры.Закрытие Тогда
				Закрыть(ПоместитьИзмененныеДанныеВоВременноеХранилище());
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		Если ДополнительныеПараметры.Закрытие Тогда
			Модифицированность = Ложь;
			Закрыть();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПоместитьИзмененныеДанныеВоВременноеХранилище()
	
	Модифицированность = Ложь;
	
	МассивСтрок = ОбщегоНазначения.ТаблицаЗначенийВМассив(Начисления.Выгрузить());

	ВозвращаемыеСведения = Новый Структура;
	ВозвращаемыеСведения.Вставить("УникальныйИдентификаторВладельца",
		УникальныйИдентификаторВладельца);
	ВозвращаемыеСведения.Вставить("АдресМассиваСтрок",
		ПоместитьВоВременноеХранилище(Новый ФиксированныйМассив(МассивСтрок), Новый УникальныйИдентификатор));
	
	Возврат ВозвращаемыеСведения;
	
КонецФункции

#КонецОбласти
