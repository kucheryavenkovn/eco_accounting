#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура заполняет документ по данным документа основания
Процедура ЗаполнитьДокументПоОснованию() Экспорт
	
	Если Не ЗначениеЗаполнено(ДокументОснование) Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.АР_АктПриемаПередачиПомещенияВАренду") Тогда
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДокументОснование,,"Дата,Номер,ПометкаУдаления,Проведен,ДокументОснование");
		Состав.Загрузить(ДокументОснование.Состав.Выгрузить());
		
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.АР_РасторжениеДоговораАренды")
		ИЛИ ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.АР_ДополнительноеСоглашение") Тогда
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДокументОснование,,"Дата,Номер,ПометкаУдаления,Проведен,ДокументОснование");
		Состав.Очистить();
		Для Каждого СтрокаТЧ Из ДокументОснование.ПостояннаяЧастьАренднойПлаты Цикл
			Если СтрокаТЧ.Услуга.АР_УслугаАренды Тогда
				НоваяСтрока = Состав.Добавить();
				НоваяСтрока.ОбъектАренды = СтрокаТЧ.ОбъектАренды;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьСтатусыОбъектов(Отказ)
    		
	// Сделаем проверку на то, что объект по данному договору находится в аренде
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	*
	|ПОМЕСТИТЬ ВТТабличнаяЧасть
	|ИЗ
	|	&ТабличнаяЧасть КАК ТабличнаяЧасть";
	Запрос.УстановитьПараметр("ТабличнаяЧасть", ЭтотОбъект.Состав.Выгрузить());
	Запрос.Выполнить();
	
	Запрос.УстановитьПараметр("Период", КонецДня(Дата));
	Запрос.УстановитьПараметр("Договор", ДоговорКонтрагента);
	Запрос.УстановитьПараметр("ВАренде", Перечисления.АР_СтатусыОбъектовАренды.ВАренде);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	АР_АктПриемаВозвратаАрендуемогоПомещения.ОбъектАренды,
	|	АР_АктПриемаВозвратаАрендуемогоПомещения.НомерСтроки
	|ИЗ
	|	ВТТабличнаяЧасть КАК АР_АктПриемаВозвратаАрендуемогоПомещения
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АР_СтатусыОбъектовАренды.СрезПоследних(&Период, Договор = &Договор) КАК АР_СтатусыОбъектовАрендыСрезПоследних
	|		ПО АР_АктПриемаВозвратаАрендуемогоПомещения.ОбъектАренды = АР_СтатусыОбъектовАрендыСрезПоследних.ОбъектАренды
	|ГДЕ
	|	НЕ ЕСТЬNULL(АР_СтатусыОбъектовАрендыСрезПоследних.Статус, ""Не установлен"") = &ВАренде";
	Выборка = Запрос.Выполнить().Выбрать();
	ИмяСписка = "Состав";
	Пока Выборка.Следующий() Цикл 
		Префикс = "ПостояннаяЧастьАренднойПлаты[" + Формат(Выборка.НомерСтроки - 1, "ЧН=0; ЧГ=") + "].";
		
		ТекстСообщения = НСтр("ru = 'Объект аренды """ + Выборка.ОбъектАренды + """ не предусмотрен данным договором'");
		ТекстСообщения = ОбщегоНазначенияБПКлиентСервер.ПолучитьТекстСообщения("Колонка", "Корректность", НСтр("ru = 'Объект аренды'"),
		Выборка.НомерСтроки, ИмяСписка, ТекстСообщения);
		Поле = Префикс + "ОбъектАренды";
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле, "Объект", Отказ);
	КонецЦикла;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	Если ДанныеЗаполнения <> Неопределено И ТипДанныхЗаполнения <> Тип("Структура")
		И Метаданные().ВводитсяНаОсновании.Содержит(ДанныеЗаполнения.Метаданные()) Тогда
		ДокументОснование = ДанныеЗаполнения;
		ЗаполнитьДокументПоОснованию();
	КонецЕсли;

	ЗаполнениеДокументов.Заполнить(ЭтотОбъект, ДанныеЗаполнения);

КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)

	Дата = НачалоДня(ОбщегоНазначения.ТекущаяДатаПользователя());
	Ответственный = Пользователи.ТекущийПользователь();

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	СуммаДокумента = УчетНДСПереопределяемый.ПолучитьСуммуДокументаСНДС(ЭтотОбъект);
		
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка  Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	// Исключаем из проверки реквизиты, заполнение которых стало необязательным:
	МассивНепроверяемыхРеквизитов = Новый Массив();
	
	Если Не ФормироватьПроводки Тогда
		МассивНепроверяемыхРеквизитов.Добавить("СчетУчетаБУ");
		МассивНепроверяемыхРеквизитов.Добавить("Состав.ОсновноеСредство");
	КонецЕсли;
	
	ПроверитьСтатусыОбъектов(Отказ);
		
	// Удаляем из проверяемых реквизитов все, по которым автоматическая проверка не нужна:
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)

	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ДОКУМЕНТА

	ПроведениеСервер.ПодготовитьНаборыЗаписейКПроведению(ЭтотОбъект);
	Если РучнаяКорректировка Тогда
		Возврат;
	КонецЕсли;

	ПараметрыПроведения = Документы.АР_АктПриемаВозвратаАрендуемогоПомещения.ПодготовитьПараметрыПроведения(Ссылка, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;

	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ИНФОРМАЦИОННОЙ БАЗЫ

	// ФОРМИРОВАНИЕ ДВИЖЕНИЙ
	
	АР_ОбщиеПроцедуры.СформироватьДвиженияПроводки(ПараметрыПроведения.Проводки, Движения, Отказ);
			
	ПроведениеСервер.УстановитьЗаписьОчищаемыхНаборовЗаписей(ЭтотОбъект);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)

	ПроведениеСервер.ПодготовитьНаборыЗаписейКОтменеПроведения(ЭтотОбъект);
	Движения.Записать();

КонецПроцедуры

#КонецЕсли
