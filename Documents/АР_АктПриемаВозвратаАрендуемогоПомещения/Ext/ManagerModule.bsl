#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов


////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Проведение

Функция ПодготовитьПараметрыПроведения(ДокументСсылка, Отказ) Экспорт

	ПараметрыПроведения = Новый Структура;
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);

	НомераТаблиц = Новый Структура;
	
	Запрос.Текст = ТекстЗапросаПроводки(НомераТаблиц);
		
	Результат = Запрос.ВыполнитьПакет();
	
	Для Каждого НомерТаблицы Из НомераТаблиц Цикл
		ПараметрыПроведения.Вставить(НомерТаблицы.Ключ, Результат[НомерТаблицы.Значение].Выгрузить());
	КонецЦикла;
	
	Возврат ПараметрыПроведения;
	
КонецФункции 

Функция ТекстЗапросаПроводки(НомераТаблиц)
	
	НомераТаблиц.Вставить("Проводки", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК СчетДт,
	|	Реквизиты.СчетУчетаБУ КАК СчетКт,
	|	Реквизиты.Контрагент КАК СубконтоКонтрагент,
	|	ТабличнаяЧасть.ОсновноеСредство КАК СубконтоОсновноеСредство,
	|	ТабличнаяЧасть.Сумма,
	|	""Возврат из аренды объекта недвижимости"" КАК Содержание
	|ИЗ
	|	Документ.АР_АктПриемаВозвратаАрендуемогоПомещения.Состав КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.АР_АктПриемаВозвратаАрендуемогоПомещения КАК Реквизиты
	|		ПО ТабличнаяЧасть.Ссылка = Реквизиты.Ссылка
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|	И Реквизиты.ФормироватьПроводки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Печать

// Заполняет список команд отправки по электронной почте.
// 
// Параметры:
//  КомандыОтправки - ТаблицаЗначений - состав полей см. в функции ОтправкаПочтовыхСообщений.КомандыОтправки
//
Процедура ДобавитьКомандыОтправки(КомандыОтправки) Экспорт
	
	КомандаОтправки = КомандыОтправки.Добавить();
	КомандаОтправки.Идентификатор = "Акт";
	КомандаОтправки.Представление = НСтр("ru = 'Акт приема-возврата помещений'");
	КомандаОтправки.СписокФорм    = "ФормаСписка,ФормаВыбора,ФормаДокумента";
	
КонецПроцедуры

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Акт";
	КомандаПечати.Представление = НСтр("ru = 'Акт приема-возврата помещений'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаСписка,ФормаВыбора,ФормаДокумента";

	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПечатьШаблоновWord";
	КомандаПечати.Представление = НСтр("ru = 'Печать по шаблону MS Word'");
	КомандаПечати.Обработчик    = "АР_ОбщиеПроцедурыКлиент.ВыполнитьКомандуПечатиШаблоновWord";
	КомандаПечати.СписокФорм    = "ФормаСписка,ФормаВыбора,ФормаДокумента";
	
	Если ПравоДоступа("Использование", Метаданные.Отчеты.РеестрДокументов) Тогда
		// Реестр документов
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Идентификатор = "Реестр";
		КомандаПечати.Представление = НСтр("ru = 'Реестр документов'");
		КомандаПечати.ЗаголовокФормы= НСтр("ru = 'Реестр документов ""Акт приема-возврата арендуемого помещения""'");
		КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
		КомандаПечати.СписокФорм    = "ФормаСписка";
		КомандаПечати.ДополнительныеПараметры.Вставить("НеВыводитьВКомплекте",Истина);
		КомандаПечати.Порядок       = 160;
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьДополнительныеРеквизитыДляРеестра() Экспорт
	
	Результат = Новый Структура("Информация", "Контрагент");
	
	Возврат Результат;
	
КонецФункции

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
    Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Акт") Тогда
        УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Акт", "Акт приема-возврата помещений", ПечатьАкта(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
	
КонецПроцедуры

Функция ПечатьАкта(МассивОбъектов, ОбъектыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб			= Истина;
	ТабличныйДокумент.ОриентацияСтраницы	= ОриентацияСтраницы.Портрет;
	ТабличныйДокумент.КлючПараметровПечати	= "ПАРАМЕТРЫ_ПЕЧАТИ_АктПриемаВозврата_Акт";
	
	ЗапросШапка = Новый Запрос;
	ЗапросШапка.Текст =
	"ВЫБРАТЬ
	|	АктПриемаПередачи.Контрагент,
	|	АктПриемаПередачи.Организация,
	|	АктПриемаПередачи.Организация.НаименованиеПолное КАК ПолноеНаименованиеОрганизации,
	|	АктПриемаПередачи.Контрагент.НаименованиеПолное КАК ПолноеНаименованиеКонтрагента,
	|	АктПриемаПередачи.Контрагент.АР_ГенеральныйДиректорКратко КАК РуководительКонтрагента,
	|	АктПриемаПередачи.Контрагент.АР_ГенДиректорКраткоРодительныйПадеж КАК РуководительКонтрагентаРодительныйПадеж,
	|	АктПриемаПередачи.Контрагент.АР_НаОсновании КАК КонтрагентНаОсновании,
	|	АктПриемаПередачи.ДоговорКонтрагента КАК Договор,
	|	АктПриемаПередачи.Дата КАК ДатаАкта,
	|	АктПриемаПередачи.Номер,
	|	АктПриемаПередачи.ДоговорКонтрагента.Наименование КАК ДоговорАренды,
	|	АктПриемаПередачи.Контрагент.АР_ДолжностьРуководителя КАК ДолжностьРуководителя,
	|	АктПриемаПередачи.Ссылка,
	|	АктПриемаПередачи.Дата,
	|	АктПриемаПередачи.Контрагент.АР_ДолжностьРуководителяРодительныйПадеж КАК ДолжностьРуководителяРодительныйПадеж
	|ИЗ
	|	Документ.АР_АктПриемаВозвратаАрендуемогоПомещения КАК АктПриемаПередачи
	|ГДЕ
	|	АктПриемаПередачи.Ссылка = &Ссылка";
	
	ЗапросОбъекты = Новый Запрос();
	ЗапросОбъекты.Текст = 
	"ВЫБРАТЬ
	|	АР_АктПриемаПередачиПомещенияВАрендуСостав.ОбъектАренды.Наименование КАК Помещение,
	|	ЕСТЬNULL(АР_СтавкиСрезПоследних.Площадь, АР_АктПриемаПередачиПомещенияВАрендуСостав.ОбъектАренды.ЗначениеХарактеристики) КАК Площадь,
	|	АР_АктПриемаПередачиПомещенияВАрендуСостав.ОбъектАренды.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	АР_АктПриемаПередачиПомещенияВАрендуСостав.ОбъектАренды КАК ОбъектАренды
	|ИЗ
	|	Документ.АР_АктПриемаВозвратаАрендуемогоПомещения.Состав КАК АР_АктПриемаПередачиПомещенияВАрендуСостав
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АР_Ставки.СрезПоследних(
	|				&ДатаКон,
	|				Услуга.АР_УслугаАренды
	|					И (СрокДействия >= &ДатаКон
	|						ИЛИ СрокДействия = ДАТАВРЕМЯ(1, 1, 1))) КАК АР_СтавкиСрезПоследних
	|		ПО АР_АктПриемаПередачиПомещенияВАрендуСостав.ОбъектАренды = АР_СтавкиСрезПоследних.ОбъектАренды
	|			И АР_АктПриемаПередачиПомещенияВАрендуСостав.Ссылка.ДоговорКонтрагента = АР_СтавкиСрезПоследних.Договор
	|ГДЕ
	|	АР_АктПриемаПередачиПомещенияВАрендуСостав.Ссылка = &Ссылка";
	
	ЗапросДанныеДоговора = Новый Запрос();
	ЗапросДанныеДоговора.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	АР_СтатусыОбъектовАрендыСрезПоследних.ЗаключениеДоговора.Дата КАК ДатаДоговора,
	|	АР_СтатусыОбъектовАрендыСрезПоследних.ЗаключениеДоговора.Номер КАК НомерДоговора,
	|	АР_СтатусыОбъектовАрендыСрезПоследних.ЗаключениеДоговора.ДоговорКонтрагента КАК Договор
	|ИЗ
	|	РегистрСведений.АР_СтатусыОбъектовАренды.СрезПоследних(&ДатаКон, Договор = &Договор) КАК АР_СтатусыОбъектовАрендыСрезПоследних
	|
	|УПОРЯДОЧИТЬ ПО
	|	АР_СтатусыОбъектовАрендыСрезПоследних.Период УБЫВ";
	
	ПервыйДокумент = Истина;
	
	Для каждого Документ Из МассивОбъектов Цикл
		
		Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.АР_АктПриемаВозвратаАрендуемогоПомещения.ПФ_MXL_Акт");
		
		Если НЕ ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Область = Макет.ПолучитьОбласть("Заголовок");
		
		ЗапросШапка.УстановитьПараметр("Ссылка", Документ);
		Шапка = ЗапросШапка.Выполнить().Выбрать();
		Шапка.Следующий();
		
		//только для первого листа выводим текст "Приложение 1"
		Область.Параметры.Заполнить(Шапка);
		Область.Параметры.ДатаАкта = Формат(Шапка.ДатаАкта,"ДФ='д ММММ гггг'") + " г.";
		Область.Параметры.НомерАкта = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Шапка.Номер, Истина, Истина);
		
		Руководители = ОтветственныеЛицаБП.ОтветственныеЛица(Шапка.Организация, Шапка.Дата,);
		Если Не ФизическиеЛицаЗарплатаКадры.Просклонять(Руководители.Руководитель, 2, Область.Параметры.РуководительОрганизации, Руководители.Руководитель.Пол) Тогда
			Область.Параметры.РуководительОрганизации = Руководители.РуководительПредставление;
		КонецЕсли;
		
		Область.Параметры.ДолжностьРуководителяРодительныйПадеж = Шапка.ДолжностьРуководителяРодительныйПадеж;
		
		ЗапросДанныеДоговора.УстановитьПараметр("Договор", Шапка.Договор);
		ЗапросДанныеДоговора.УстановитьПараметр("ДатаКон", КонецДня(Шапка.Дата));
		Выборка = ЗапросДанныеДоговора.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			НомерДоговора = ?(ЗначениеЗаполнено(Выборка.Договор.Номер), Выборка.Договор.Номер, Выборка.НомерДоговора);
			ДатаДоговора = ?(ЗначениеЗаполнено(Выборка.Договор.Дата), Выборка.Договор.Дата, Выборка.ДатаДоговора);
			Область.Параметры.Заполнить(Выборка);
			Область.Параметры.НомерДоговора = НомерДоговора;
			Область.Параметры.ДатаДоговора = Формат(ДатаДоговора, "ДФ='д ММММ гггг'") + " г.";
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Шапка.РуководительКонтрагентаРодительныйПадеж) Тогда
			ТекстСообщения = НСтр("ru = 'В карточке контрагента не заполнен реквизит ""Руководитель (в родительном падеже) Кратко""'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Документ,
			"Контрагент", "Объект", );
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Шапка.ДолжностьРуководителяРодительныйПадеж) Тогда
			ТекстСообщения = НСтр("ru = 'В карточке контрагента не заполнен реквизит ""Должность реководителя (род. падеж)""'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Документ,
			"Контрагент", "Объект", );
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Шапка.КонтрагентНаОсновании) Тогда
			ТекстСообщения = НСтр("ru = 'В карточке контрагента не заполнен реквизит ""Действует на основании""'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Документ,
			"Контрагент", "Объект", );
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(Область);
		
		//теперь для каждого объекта заполняем таблицу
		ЗапросОбъекты.УстановитьПараметр("Ссылка", Документ);
		ЗапросОбъекты.УстановитьПараметр("ДатаКон", КонецДня(Шапка.Дата));
		ОбъектыАренды = ЗапросОбъекты.Выполнить().Выбрать();
		
		Область = Макет.ПолучитьОбласть("СтрокаТаблицы");
		
		Индекс = 1;
		Пока ОбъектыАренды.Следующий() Цикл
			Область.Параметры.НомерСтроки = Индекс;
			Область.Параметры.Заполнить(ОбъектыАренды);
			Если ОбъектыАренды.ОбъектАренды.КонтактнаяИнформация.Количество() > 0 Тогда
				Область.Параметры.Адрес = ОбъектыАренды.ОбъектАренды.КонтактнаяИнформация[0].Представление;
			Иначе
				Область.Параметры.Адрес = "";
			КонецЕсли;
			ТабличныйДокумент.Вывести(Область);
			Индекс = Индекс+1;
		КонецЦикла;
		
		Область = Макет.ПолучитьОбласть("Подвал");
		Область.Параметры.РуководительОрганизации = Руководители.РуководительПредставление;
		Область.Параметры.РуководительКонтрагента = Шапка.РуководительКонтрагента;
		
		ТабличныйДокумент.Вывести(Область);
			
		// В табличном документе зададим имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, 
		НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
		
КонецФункции


#КонецЕсли
