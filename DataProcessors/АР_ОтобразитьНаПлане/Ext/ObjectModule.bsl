
// МенеджерЛицензий – ссылка на менеджер лицензий, которым был создан объект
// КлиентскаяСсылка – признак, что обработка создается по ссылке с клиента
// Отказ – флаг, устанавливаемый разработчиком, если нужно запретить
// создание обработки
// ОписаниеОшибки – описание ошибки, устанавливаемое разработчиком
Процедура ПриСоздании(МенеджерЛицензий, КлиентскаяСсылка, Отказ, ОписаниеОшибки) Экспорт
	
	Отказ = Ложь;
	
КонецПроцедуры

Функция ПолучитьДанныеПланировок() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", СсылкаНаОбъект);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗаключениеДоговора.ОбъектАренды КАК ОбъектАренды,
	|	ЗаключениеДоговора.ОбъектАренды.РасположениеНаПлане.ФайлПланировки КАК ФайлПланировки,
	|	ЗаключениеДоговора.ОбъектАренды.РасположениеНаПлане.Лист КАК Лист,
	|	ЗаключениеДоговора.ОбъектАренды.РасположениеНаПлане.ГрОбъект КАК ГрОбъект,
	|	ЗаключениеДоговора.ОбъектАренды.РасположениеНаПлане.ОбластьТекста КАК ОбластьТекста
	|ИЗ
	|	Документ.АР_ЗаключениеДоговораАренды.ПостояннаяЧастьАренднойПлаты КАК ЗаключениеДоговора
	|ГДЕ
	|	ЗаключениеДоговора.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДополнительноСоглашение.ОбъектАренды,
	|	ДополнительноСоглашение.ОбъектАренды.РасположениеНаПлане.ФайлПланировки,
	|	ДополнительноСоглашение.ОбъектАренды.РасположениеНаПлане.Лист,
	|	ДополнительноСоглашение.ОбъектАренды.РасположениеНаПлане.ГрОбъект,
	|	ДополнительноСоглашение.ОбъектАренды.РасположениеНаПлане.ОбластьТекста
	|ИЗ
	|	Документ.АР_ДополнительноеСоглашение.ПостояннаяЧастьАренднойПлаты КАК ДополнительноСоглашение
	|ГДЕ
	|	ДополнительноСоглашение.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РасторжениеДоговора.ОбъектАренды,
	|	РасторжениеДоговора.ОбъектАренды.РасположениеНаПлане.ФайлПланировки,
	|	РасторжениеДоговора.ОбъектАренды.РасположениеНаПлане.Лист,
	|	РасторжениеДоговора.ОбъектАренды.РасположениеНаПлане.ГрОбъект,
	|	РасторжениеДоговора.ОбъектАренды.РасположениеНаПлане.ОбластьТекста
	|ИЗ
	|	Документ.АР_РасторжениеДоговораАренды.ПостояннаяЧастьАренднойПлаты КАК РасторжениеДоговора
	|ГДЕ
	|	РасторжениеДоговора.Ссылка = &Ссылка
	|ИТОГИ
	|	МАКСИМУМ(ГрОбъект)
	|ПО
	|	ФайлПланировки,
	|	Лист,
	|	ОбъектАренды";
	
	Результат = Запрос.Выполнить();
	
	МассивФайловПланировок = Новый Массив;
	
	Если Результат.Пустой() Тогда
		Сообщить("Отображение объектов на плане отсутствует!");
	Иначе
		ВыборкаПоФайлам = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаПоФайлам.Следующий() Цикл
			
			Если ЗначениеЗаполнено(ВыборкаПоФайлам.ФайлПланировки) Тогда
				
				ВыборкаПоЛистам = ВыборкаПоФайлам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				ПервыйЛист = "";
				
				МассивЛистов = Новый Массив;
				
				Пока ВыборкаПоЛистам.Следующий() Цикл
					Если Не ЗначениеЗаполнено(ПервыйЛист) Тогда
						ПервыйЛист = СокрЛП(ВыборкаПоЛистам.Лист);
					КонецЕсли;
					ВыборкаОбъекты = ВыборкаПоЛистам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					
					МассивОбъектов = Новый Массив;
					Пока ВыборкаОбъекты.Следующий() Цикл
						СтруктураОбъектов = Новый Структура("ГрОбъект, ОбластьТекста, ОбъектАренды", ВыборкаОбъекты.ГрОбъект, ВыборкаОбъекты.ОбластьТекста, ВыборкаОбъекты.ОбъектАренды.Наименование);
						МассивОбъектов.Добавить(СтруктураОбъектов);
					КонецЦикла;
					
					СтруктураЛиста = Новый Структура("Лист, МассивОбъектов", ВыборкаПоЛистам.Лист, МассивОбъектов);
					
					МассивЛистов.Добавить(СтруктураЛиста);
					
				КонецЦикла;
				
				СтруктураФайлов = Новый Структура("ФайлПланировки, МассивЛистов, ПервыйЛист", ВыборкаПоФайлам.ФайлПланировки, МассивЛистов, ПервыйЛист);
				
				МассивФайловПланировок.Добавить(СтруктураФайлов);
				
			Иначе
				ВыборкаПоЛистам = ВыборкаПоФайлам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ВыборкаПоЛистам.Следующий() Цикл
					ВыборкаОбъекты = ВыборкаПоЛистам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					Пока ВыборкаОбъекты.Следующий() Цикл
						Сообщить("Для объекта недвижимости """ + СокрЛП(ВыборкаОбъекты.ОбъектАренды) + """ не указана планировка!", СтатусСообщения.Важное);   							
					КонецЦикла;
				КонецЦикла;  			
			КонецЕсли;  			
		КонецЦикла;
	КонецЕсли;
	
	Возврат МассивФайловПланировок;
	
КонецФункции	

Функция Печать() Экспорт
	
	ДанныеПланировок = ПолучитьДанныеПланировок();
	
	МассивВозврата = Новый Массив;
	
	Если ДанныеПланировок.Количество() = 0 Тогда
		Сообщить("Отображение объектов на плане отсутствует!");
	Иначе
		
		Excel = Новый COMОбъект("Excel.Application");
		
		Для Каждого СтруктураФайлов Из ДанныеПланировок Цикл
			
			ФайлШаблона = ПолучитьПутьКФайлуПланировки(СтруктураФайлов.ФайлПланировки);
			
			Файл = Новый Файл(ФайлШаблона);
			Если Не Файл.Существует() Тогда
				Сообщить("Файл """ + СокрЛП(ФайлШаблона) + """ не существует!", СтатусСообщения.Важное); 
				Продолжить;
			КонецЕсли;
			Excel.DisplayAlerts = Ложь;
			Шаблон = Excel.Workbooks.Open(СокрЛП(ФайлШаблона),, Истина); 
			ПолноеИмяФайла = ПолучитьИмяВременногоФайла(Файл.Расширение);
			Excel.DisplayAlerts = Ложь;
			Шаблон.SaveAs(ПолноеИмяФайла);
			
			ПервыйЛист = СтруктураФайлов.ПервыйЛист;
			
			Для Каждого СтруктураЛиста Из СтруктураФайлов.МассивЛистов Цикл
				
				Попытка
					План = НайтиЛист(СокрЛП(СтруктураЛиста.Лист), Excel);
					Если План = Неопределено Тогда
						Сообщить("Лист """ + СокрЛП(СтруктураЛиста.Лист) + """ не найден");
						Продолжить;	
					КонецЕсли;
					План.Select();
					План.Activate();
					
					// Сделаем невидимыми выноски и текст в надписях уберем, заполним объекты по умолчанию
					Для Каждого Объект Из План.Shapes Цикл
						
						Если АР_ОбщиеПроцедурыКлиентСервер.ЭтоТекстоваяОбласть(Объект) Тогда
							
							Если АР_ОбщиеПроцедурыКлиентСервер.ЭтоВыноска(Объект) Тогда
								Объект.Line.Visible = Ложь;
								Объект.Fill.Visible = Ложь;
							КонецЕсли;
							Попытка
								Объект.TextEffect.Text = "";
							Исключение
								Объект.OLEFormat.Object.Text = "";
							КонецПопытки;
							
						ИначеЕсли АР_ОбщиеПроцедурыКлиентСервер.ЭтоГрафическийОбъект(Объект) Тогда
							
							Если АР_ОбщиеПроцедурыКлиентСервер.ДоступнаЗаливка(Объект) Тогда
								Объект.Fill.Visible = -1;
								Объект.Fill.Solid();
								Объект.Fill.ForeColor.SchemeColor = 43;
								Объект.Fill.Transparency = 0.5;
							КонецЕсли;
							Объект.Line.Weight = 0.75;
							Объект.Line.DashStyle = 1;
							Объект.Line.Style = 1;
							Объект.Line.Transparency = 0;
							Объект.Line.Visible = -1;
							Объект.Line.ForeColor.SchemeColor = 64;
							Объект.Line.BackColor.RGB = АР_ОбщиеПроцедуры.ПолучитьЦвет("255, 255, 255");
							
						КонецЕсли;
							
					КонецЦикла;
					
				Исключение
					Продолжить;
				КонецПопытки;  				
				
				Для Каждого СтруктураОбъектов Из СтруктураЛиста.МассивОбъектов Цикл
					
					Попытка
						ТекстОшибки = "Для объекта """ + СтруктураОбъектов.ОбъектАренды + """ на листе """ + СтруктураЛиста.Лист + """ не найден графический объект """ + СтруктураОбъектов.ГрОбъект + """";
						Объект = НайтиОбласть(СтруктураОбъектов.ГрОбъект, Excel.ActiveSheet);
						Если Объект = Неопределено Тогда
							ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
							Продолжить;
						КонецЕсли;
						ТекстОшибки = "";
						Объект.Select();
						// Заштрихуем выделенный объект
						Excel.Selection.ShapeRange.Line.Weight = 0.75;
						Excel.Selection.ShapeRange.Line.DashStyle = 1;
						Excel.Selection.ShapeRange.Line.Style = 1;
						Excel.Selection.ShapeRange.Line.Transparency = 0;
						Excel.Selection.ShapeRange.Line.Visible = -1;
						Excel.Selection.ShapeRange.Line.ForeColor.SchemeColor = 64;
						Excel.Selection.ShapeRange.Line.BackColor.RGB = АР_ОбщиеПроцедуры.ПолучитьЦвет("255, 255, 255");
						Excel.Selection.ShapeRange.Fill.Visible = -1;
						Excel.Selection.ShapeRange.Fill.ForeColor.RGB = АР_ОбщиеПроцедуры.ПолучитьЦвет("145, 145, 145");
						Excel.Selection.ShapeRange.Fill.BackColor.RGB = АР_ОбщиеПроцедуры.ПолучитьЦвет("255, 255, 255");
						Excel.Selection.ShapeRange.Fill.Transparency = 0;
						Excel.Selection.ShapeRange.Fill.Patterned(54);
						Если ЗначениеЗаполнено(СтруктураОбъектов.ОбластьТекста) Тогда
							ОбъектТекст = НайтиОбласть(СтруктураОбъектов.ОбластьТекста, Excel.ActiveSheet);
							Если ОбъектТекст = Неопределено Тогда
								ТекстОшибки = "Для объекта """ + СтруктураОбъектов.ОбъектАренды + """ на листе """ + СтруктураЛиста.Лист + """ не найдена область текста """ + СтруктураОбъектов.ОбластьТекста + """";
								ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
								Продолжить;
							КонецЕсли;
						Иначе
							ОбъектТекст = Excel.ActiveSheet.Shapes.AddTextbox(1, Объект.Left, Объект.Top, Объект.Width, Объект.Height);
						КонецЕсли;
						
						Текст = СокрЛП(СтруктураОбъектов.ОбъектАренды);
						Попытка  // Это Excel 2007
							Если АР_ОбщиеПроцедурыКлиентСервер.ПрименитьОформлениеТекста(СтруктураОбъектов.ОбластьТекста, ОбъектТекст) Тогда
								ОбъектТекст.TextEffect.FontName = "Arial CYR";
								ОбъектТекст.TextEffect.FontSize = 10;
								ОбъектТекст.TextEffect.FontBold = True;
							КонецЕсли;
							ВысотаИсходная = ОбъектТекст.Height;
							ОбъектТекст.TextEffect.Text = Текст;
							Если АР_ОбщиеПроцедурыКлиентСервер.ЭтоВыноска(ОбъектТекст, Истина) Тогда
								ОбъектТекст.TextFrame2.VerticalAnchor = 1;
								ОбъектТекст.TextFrame2.AutoSize = 0;
								ОбъектТекст.TextFrame2.AutoSize = 1;
								ВысотаНовая = ОбъектТекст.Height;
								Если АР_ОбщиеПроцедурыКлиентСервер.ЭтоВыноска(ОбъектТекст) Тогда
									Сдвиг = (ВысотаНовая-ВысотаИсходная)*(0.5+ОбъектТекст.Adjustments.Item(2));
									ОбъектТекст.Top = ОбъектТекст.Top - Сдвиг;
								КонецЕсли;
								ОбъектТекст.TextFrame2.AutoSize = 0;
								ОбъектТекст.TextFrame2.AutoSize = 1;
								ОбъектТекст.Select();
								Excel.Selection.ShapeRange.ScaleHeight(1.02, Ложь, 0);
							КонецЕсли;
							ОбъектТекст.Fill.Visible = Ложь;
							Если АР_ОбщиеПроцедурыКлиентСервер.ЭтоВыноска(ОбъектТекст) Тогда
								ОбъектТекст.Line.Visible = Истина;
							Иначе
								ОбъектТекст.Line.Visible = Ложь;
							КонецЕсли;
						Исключение 
							Попытка // Это Excel 2003
								Если АР_ОбщиеПроцедурыКлиентСервер.ПрименитьОформлениеТекста(СтруктураОбъектов.ОбластьТекста, ОбъектТекст) Тогда
									ОбъектТекст.OLEFormat.Object.Font.Name = "Arial CYR";
									ОбъектТекст.OLEFormat.Object.Font.Size = 10;
									ОбъектТекст.OLEFormat.Object.Font.Bold = True;
								КонецЕсли;
								ОбъектТекст.OLEFormat.Object.Text = Текст;
								ОбъектТекст.Fill.Visible = Ложь;
								Если АР_ОбщиеПроцедурыКлиентСервер.ЭтоВыноска(ОбъектТекст) Тогда
									ОбъектТекст.Line.Visible = Истина;
								Иначе
									ОбъектТекст.Line.Visible = Ложь;
								КонецЕсли;
							Исключение
								Продолжить;
							КонецПопытки;
						КонецПопытки;
					Исключение
						СообщениеОбОшибке = ?(ЗначениеЗаполнено(ТекстОшибки), ТекстОшибки, ОписаниеОшибки());
						ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СообщениеОбОшибке);
						ТекстОшибки = "";
						Продолжить;
					КонецПопытки; 			
				КонецЦикла;
			КонецЦикла;
			
			ЗаполнитьРеквизиты(СсылкаНаОбъект, Шаблон);
			
			// Установим лист с планировкой открытым по-умолчанию
			Попытка
				Лист = НайтиЛист(ПервыйЛист, Excel);
				Лист.Select();
			Исключение
			КонецПопытки; 
			Шаблон.Save();
			Шаблон.Close();
			Шаблон = Неопределено;
			
			Файл = Новый Файл(ПолноеИмяФайла);
			Если Файл.Существует() Тогда
				ДвоичныеДанные = Новый ДвоичныеДанные(ПолноеИмяФайла);
				СсылкаНаДвоичныеДанныеФайла = ПоместитьВоВременноеХранилище(ДвоичныеДанные, Новый УникальныйИдентификатор);
				
				НоваяСтруктураДанных = Новый Структура;
				НоваяСтруктураДанных.Вставить("СсылкаНаДвоичныеДанныеФайла", СсылкаНаДвоичныеДанныеФайла);
				НоваяСтруктураДанных.Вставить("ФайлПланировки", СтруктураФайлов.ФайлПланировки);
				
				МассивВозврата.Добавить(НоваяСтруктураДанных);
			КонецЕсли;
			
			Если Excel.Workbooks.Count() = 0 Тогда
				Excel.Quit();
			КонецЕсли;
			
		КонецЦикла;
	КонецЕсли;
	
	Возврат МассивВозврата;
	
КонецФункции	

Функция ПолучитьПутьКФайлуПланировки(ХранилищеПланировки) Экспорт
	
	Если Не ЗначениеЗаполнено(ХранилищеПланировки) Тогда
		Возврат "";
	КонецЕсли;
	
	ПолноеИмяФайла = ХранилищеПланировки.ИмяФайла;
	Если Не ЗначениеЗаполнено(ПолноеИмяФайла) Тогда
		Сообщить("Не заполнено имя файла в планировке """ + ХранилищеПланировки + """", СтатусСообщения.Важное);
		Возврат "";
	КонецЕсли;
	
	// Получить расширение файла.
	РасширениеФайла = Прав(ПолноеИмяФайла, 4);
	
	Если Лев(РасширениеФайла, 1) = "." Тогда
		// Получить имя временного файла. Установить расширение временного файла.
		РасширениеФайла = Прав(ПолноеИмяФайла, 3);
	КонецЕсли;
	
	Если ВРег(РасширениеФайла) <> "XLS" И  ВРег(РасширениеФайла) <> "XLSX" Тогда // Файл не является экселевским
		Сообщить("Файл планировки не является файлом Excel", СтатусСообщения.Важное);
		Возврат "";
	КонецЕсли;
	
	Возврат ПолноеИмяФайла;
	
КонецФункции

Процедура ЗаполнитьРеквизиты(Ссылка, Excel)
	
	Если НЕ (ТипЗнч(Ссылка) = Тип("ДокументСсылка.АР_ЗаключениеДоговораАренды")
		ИЛИ ТипЗнч(Ссылка) = Тип("ДокументСсылка.АР_ДополнительноеСоглашение")) Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Попытка
		
		Лист = НайтиЛист("Реквизиты", Excel);
		КоличествоСтрок = Лист.Cells(1, 1).SpecialCells(11).Row;
		
		Для К = 1 По КоличествоСтрок Цикл
			
			Формула = СокрЛП(Лист.Cells(К, 2).Value);
			
			Если НЕ ЗначениеЗаполнено(Формула) Тогда
				Продолжить;
			КонецЕсли;
			
			Значение = АР_ОбщиеПроцедуры.ПолучитьЗначениеРеквизита(Ссылка, Формула,, Ссылка.Дата);
			
			Если ЗначениеЗаполнено(Значение) Тогда
				Лист.Cells(К, 3).Value = Строка(Значение);
			КонецЕсли;
			
		КонецЦикла;
		
	Исключение
	КонецПопытки;
	
КонецПроцедуры

Функция НайтиЛист(ИмяЛиста, Excel)
	
	Для Каждого Стр Из Excel.Sheets Цикл
		Если СокрЛП(Стр.Name) = ИмяЛиста Тогда
			Возврат Стр;	
		КонецЕсли;
	КонецЦикла;
	
КонецФункции

Функция НайтиОбласть(ИмяОбласти, Лист)
	
	Для Каждого Стр Из Лист.Shapes Цикл
		Если СокрЛП(Стр.Name) = ИмяОбласти Тогда
			Возврат Стр;	
		КонецЕсли;
	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции
