
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

&НаСервере
Процедура ИнициализироватьКомпоновщикНастроек()
	
	СхемаКомпоновкиДанных = Обработки.АР_ПодборПараметровРасшифровкиПлатежаДляАренды.ПолучитьМакет("Макет");
	КомпоновщикНастроек = Новый КомпоновщикНастроекКомпоновкиДанных;
	КомпоновщикНастроек.Инициализировать(
		Новый ИсточникДоступныхНастроекКомпоновкиДанных(ПоместитьВоВременноеХранилище(СхемаКомпоновкиДанных, ЭтаФорма.УникальныйИдентификатор))
	);
	КомпоновщикНастроек.ЗагрузитьНастройки(СхемаКомпоновкиДанных.НастройкиПоУмолчанию);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокДолговПоРегистру(АдресВременногоХранилища)
	
	СхемаКомпоновкиДанных = Обработки.АР_ПодборПараметровРасшифровкиПлатежаДляАренды.ПолучитьМакет("Макет");
	СхемаКомпоновкиДанных.Параметры.Найти("Контрагент").Значение = Контрагент;
	СхемаКомпоновкиДанных.Параметры.Найти("Организация").Значение = Организация;
	НастройкиКомпоновки = КомпоновщикНастроек.Настройки;
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	Попытка 
		МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, НастройкиКомпоновки, , , Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
		
		ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
		ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, , , Истина);
		
		ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
		
		РасшифровкаПлатежа = Новый ТаблицаЗначений;
		
		ПроцессорВывода.УстановитьОбъект(РасшифровкаПлатежа);
		ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	Исключение
		Возврат;
	КонецПопытки;
	
	Если Не Объект.СпособЗаполнения = 2 Тогда
		
		Если Объект.ПодбиратьСумму Тогда
			
			Если Объект.СпособЗаполнения = 1 Тогда
				РасшифровкаПлатежа.Сортировать("ДатаВозникновения Убыв");
			Иначе
				РасшифровкаПлатежа.Сортировать("ДатаВозникновения Возр");
			КонецЕсли;
			
			Сч = 0;
			ВсегоПлатежей = 0;
			Пока Сч < РасшифровкаПлатежа.Количество() Цикл
				
				СтрокаДолг = РасшифровкаПлатежа[Сч];  				
				Если ВсегоПлатежей + СтрокаДолг.СуммаПлатежа <= Объект.СуммаДляПодбора Тогда
					
					СуммаПлатежа = СтрокаДолг.СуммаПлатежа;
					ВсегоПлатежей = ВсегоПлатежей + СуммаПлатежа;
					Сч = Сч + 1;
					
				ИначеЕсли ВсегоПлатежей < Объект.СуммаДляПодбора Тогда
					
					СуммаПлатежа = Объект.СуммаДляПодбора - ВсегоПлатежей;
					СтрокаДолг.СуммаПлатежа = СуммаПлатежа;
					ВсегоПлатежей = ВсегоПлатежей + СуммаПлатежа;
					Сч = Сч + 1;
					
				Иначе
					
					РасшифровкаПлатежа.Удалить(Сч);
					
				КонецЕсли;
				
			КонецЦикла;
			
			Если Объект.ПодбиратьСумму И ВсегоПлатежей < Объект.СуммаДляПодбора Тогда
				
				СтрокаПлатеж = РасшифровкаПлатежа.Добавить();
				СтрокаПлатеж.СуммаПлатежа = Объект.СуммаДляПодбора - ВсегоПлатежей;
				
			КонецЕсли;	
		КонецЕсли;
		
	Иначе
		
		Сч = 0;
		ВсегоПлатежей = 0;
		Пока Сч < РасшифровкаПлатежа.Количество() Цикл
			
			СтрокаДолг = РасшифровкаПлатежа[Сч];  				
			
			СтруктураОтбора = Новый Структура;
			СтруктураОтбора.Вставить("ДоговорКонтрагента", СтрокаДолг.ДоговорКонтрагента);
			СтруктураОтбора.Вставить("АР_ПериодАренды", СтрокаДолг.АР_ПериодАренды);
			СтруктураОтбора.Вставить("АР_СчетНаАренду", СтрокаДолг.АР_СчетНаАренду);
			СтруктураОтбора.Вставить("АР_УслугаАренды", СтрокаДолг.АР_УслугаАренды);
			СтруктураОтбора.Вставить("АР_ОбъектАренды", СтрокаДолг.АР_ОбъектАренды);
			СтруктураОтбора.Вставить("АР_Депозит", СтрокаДолг.АР_Депозит);
			СтруктураОтбора.Вставить("АР_Пени", СтрокаДолг.АР_Пени);
			
			СтрокиДокумента = Объект.РасшифровкаПлатежа.НайтиСтроки(СтруктураОтбора);
			Если СтрокиДокумента.Количество() = 0 Тогда
				ЕстьСтрокиТЧ = Ложь;
			Иначе
				ЕстьСтрокиТЧ = Истина;
			КонецЕсли;
			
			Если ЕстьСтрокиТЧ Тогда
				
				Если Объект.ПодбиратьСумму Тогда
					
					Если ВсегоПлатежей + СтрокаДолг.СуммаПлатежа <= Объект.СуммаДляПодбора Тогда
						
						СуммаПлатежа = СтрокаДолг.СуммаПлатежа;
						ВсегоПлатежей = ВсегоПлатежей + СуммаПлатежа;
						Сч = Сч + 1;
						
					ИначеЕсли ВсегоПлатежей < Объект.СуммаДляПодбора Тогда
						
						СуммаПлатежа = Объект.СуммаДляПодбора - ВсегоПлатежей;
						СтрокаДолг.СуммаПлатежа = СуммаПлатежа;
						ВсегоПлатежей = ВсегоПлатежей + СуммаПлатежа;
						Сч = Сч + 1;
						
					Иначе
						РасшифровкаПлатежа.Удалить(Сч);
					КонецЕсли;
					
				Иначе
					Сч = Сч + 1;
				КонецЕсли;
			Иначе
				РасшифровкаПлатежа.Удалить(Сч);
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	Для Каждого СтрокаРасчета Из РасшифровкаПлатежа Цикл
		ПараметрыНачисленияПени = АР_ПроцедурыНачисления.ПолучитьПараметрыНачисленияПени(СтрокаРасчета.ДоговорКонтрагента, СтрокаРасчета.ДатаВозникновения);
		ОбособленныйУчетПени = ?(ПараметрыНачисленияПени = Неопределено, Ложь, ПараметрыНачисленияПени.СпособПогашенияПени = ПредопределенноеЗначение("Перечисление.АР_СпособыПогашенияПени.ВестиОбособленныйУчетПени"));
		Если НЕ ОбособленныйУчетПени Тогда
			СтрокаРасчета.АР_Пени = Ложь;	
		КонецЕсли;
	КонецЦикла;
	
	АдресВременногоХранилища = ПоместитьВоВременноеХранилище(РасшифровкаПлатежа);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Объект.ПодбиратьСумму = Ложь;
	ИнициализироватьКомпоновщикНастроек();
	
	Если Параметры.Свойство("Контрагент") Тогда
		ЭтаФорма.Контрагент = Параметры.Контрагент;	
	КонецЕсли;
	Если Параметры.Свойство("Организация") Тогда
		ЭтаФорма.Организация = Параметры.Организация;	
	КонецЕсли;
	Если Параметры.Свойство("СуммаДляПодбора") Тогда
		Объект.СуммаДляПодбора = Параметры.СуммаДляПодбора;	
	КонецЕсли;
	Если Параметры.Свойство("АдресВременногоХранилища") Тогда
		ТаблицаЗначений = ПолучитьИзВременногоХранилища(Параметры.АдресВременногоХранилища);
		Объект.РасшифровкаПлатежа.Загрузить(ТаблицаЗначений);
	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

&НаКлиенте
Процедура Заполнить(Команда)
	
	АдресВременногоХранилища = "";
	ЗаполнитьСписокДолговПоРегистру(АдресВременногоХранилища);	
	ЭтаФорма.Закрыть(АдресВременногоХранилища);	
	
КонецПроцедуры
