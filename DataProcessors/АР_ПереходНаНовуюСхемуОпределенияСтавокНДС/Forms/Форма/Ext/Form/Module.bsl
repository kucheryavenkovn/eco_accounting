&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИспользоватьСхемуОпределенияСтавокНДСПоАрендеНаОсновеДоговора =
		Константы.АР_ИспользоватьСхемуОпределенияСтавокНДСПоАрендеНаОсновеДоговора.Получить();
			
	СКД = РеквизитФормыВЗначение("Объект").ПолучитьМакет("ЗаполнениеСпискаДокументов");
	
	Объект.КомпоновщикНастроек.Инициализировать(
		Новый ИсточникДоступныхНастроекКомпоновкиДанных(ПоместитьВоВременноеХранилище(СКД, УникальныйИдентификатор)));
	Объект.КомпоновщикНастроек.ЗагрузитьНастройки(СКД.НастройкиПоУмолчанию);
	Объект.КомпоновщикНастроек.Восстановить(СпособВосстановленияНастроекКомпоновкиДанных.ПроверятьДоступность);
	
	Если ИспользоватьСхемуОпределенияСтавокНДСПоАрендеНаОсновеДоговора Тогда
		БылиИзменения = Истина; 
	КонецЕсли;
	
КонецПроцедуры
	
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьВидимостьИДоступность();
КонецПроцедуры

&НаСервере
Процедура ЗаписатьПараметрыУчета()
	
	Константы.АР_ИспользоватьСхемуОпределенияСтавокНДСПоАрендеНаОсновеДоговора.Установить(ИспользоватьСхемуОпределенияСтавокНДСПоАрендеНаОсновеДоговора);	
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимостьИДоступность()
	
	Элементы.ГруппаСтраницы.Доступность = ИспользоватьСхемуОпределенияСтавокНДСПоАрендеНаОсновеДоговора;
	Элементы.ФормаИзменитьДокументы.Доступность = ИспользоватьСхемуОпределенияСтавокНДСПоАрендеНаОсновеДоговора;
	
КонецПроцедуры
 

&НаКлиенте
Процедура ИспользоватьСхемуОпределенияСтавокНДСПоАрендеНаОсновеДоговораПриИзменении(Элемент)
	
	ЗаписатьПараметрыУчета();
	Оповестить("ИзмененаСхемаОпределенияСтавокНДС");
	
	УстановитьВидимостьИДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура СписокДокументовДокументПриИзменении(Элемент)
	ТекущиеДанные = Элементы.СписокДокументов.ТекущиеДанные;
	
	Документ = ТекущиеДанные.Документ;
	
	Реквизиты = АР_ОбщиеПроцедуры.ЗначенияРеквизитовОбъекта(Документ,"Организация, Контрагент, ДоговорКонтрагента");
	
	ЗаполнитьЗначенияСвойств(ТекущиеДанные,Реквизиты);
КонецПроцедуры

&НаКлиенте
Процедура КомпоновщикНастроекНастройкиОтборПриИзменении(Элемент)
	// Этот код нужен для того, чтобы при редактировании отбора обязательно вызывалась функция ПриСохраненииДанныхВНастройкахНаСервере
	// Без данного кода если в форме не был изменен ни один автоматически сохраняемый реквизит, а изменен только отбор, то функция
	// ПриСохраненииДанныхВНастройкахНаСервере не будет вызвана
	Объект.СуммаВключаетНДС = Объект.СуммаВключаетНДС;
КонецПроцедуры

&НаСервере
Процедура ПриСохраненииДанныхВНастройкахНаСервере(Настройки)
	
	Настройки["НастройкиОтбора"] = Объект.КомпоновщикНастроек.ПолучитьНастройки();
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	Попытка
		Объект.КомпоновщикНастроек.ЗагрузитьНастройки(Настройки["НастройкиОтбора"]);
	Исключение
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура Заполнить(Команда)
	
	Если Объект.СписокДокументов.Количество() > 0 Тогда
		ПоказатьВопрос(Новый ОписаниеОповещения("ЗаполнитьЗавершение", ЭтотОбъект), "Табличная часть будет очищена. Продолжить?", РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Нет);
        Возврат;
	КонецЕсли;
	
	ЗаполнитьФрагмент();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
    
    Если РезультатВопроса = КодВозвратаДиалога.Нет Тогда
        Возврат;
    КонецЕсли;
    
    ЗаполнитьФрагмент();

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьФрагмент()
    
    Отказ = Ложь;
        
    Если Отказ Тогда
        Возврат;
	КонецЕсли;
				
    ЗаполнитьНаСервере();

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНаСервере(СтруктураСвойств = Неопределено)
	
	СКД = РеквизитФормыВЗначение("Объект").ПолучитьМакет("ЗаполнениеСпискаДокументов");
	НастройкиКомпоновки = Объект.КомпоновщикНастроек.ПолучитьНастройки();
	
	КомпановщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	
	МакетКомпоновки = КомпановщикМакета.Выполнить(СКД, НастройкиКомпоновки,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	Таблица = Новый ТаблицаЗначений;
	ПроцессорВывода.УстановитьОбъект(Таблица);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	Объект.СписокДОкументов.Очистить();
		
	Для Каждого Строка Из Таблица Цикл
		НоваяСтрока = Объект.СписокДОкументов.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,Строка); 
	КонецЦикла; 
	
	//Если Объект.СтавкиНДСПоУслугам.Количество() = 0 Тогда
	//	ОбновитьПоСпискуДокументовНаСервере();	
	//КонецЕсли; 
					
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПоСпискуДокументов(Команда)
	Если Объект.СтавкиНДСПоУслугам.Количество() > 0 Тогда
		ПоказатьВопрос(Новый ОписаниеОповещения("ОбновитьПоСпискуДокументовЗавершение", ЭтотОбъект), "Табличная часть будет очищена. Продолжить?", РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Нет);
        Возврат;
	КонецЕсли;
	
	ОбновитьПоСпискуДокументовНаСервере();

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПоСпискуДокументовЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
    
    Если РезультатВопроса = КодВозвратаДиалога.Нет Тогда
        Возврат;
    КонецЕсли;
    
    ОбновитьПоСпискуДокументовНаСервере();

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПоСпискуДокументовФрагмент()
    				
    ОбновитьПоСпискуДокументовНаСервере();

КонецПроцедуры

&НаСервере
Процедура ОбновитьПоСпискуДокументовНаСервере(СтруктураСвойств = Неопределено)
	
	Объект.СтавкиНДСПоУслугам.Очистить();
	
	МассивДокументов = Объект.СписокДокументов.Выгрузить(,"Документ").ВыгрузитьКолонку("Документ");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ВЗ.Услуга КАК Услуга
	|ИЗ
	|	(ВЫБРАТЬ
	|		АР_ЗаключениеДоговораАрендыПостояннаяЧастьАренднойПлаты.Услуга КАК Услуга
	|	ИЗ
	|		Документ.АР_ЗаключениеДоговораАренды.ПостояннаяЧастьАренднойПлаты КАК АР_ЗаключениеДоговораАрендыПостояннаяЧастьАренднойПлаты
	|	ГДЕ
	|		АР_ЗаключениеДоговораАрендыПостояннаяЧастьАренднойПлаты.Ссылка В(&МассивДокументов)
	|		И АР_ЗаключениеДоговораАрендыПостояннаяЧастьАренднойПлаты.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.ПустаяСсылка)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		АР_ЗаключениеДоговораАрендыПеременнаяЧастьАренднойПлаты.Услуга
	|	ИЗ
	|		Документ.АР_ЗаключениеДоговораАренды.ПеременнаяЧастьАренднойПлаты КАК АР_ЗаключениеДоговораАрендыПеременнаяЧастьАренднойПлаты
	|	ГДЕ
	|		АР_ЗаключениеДоговораАрендыПеременнаяЧастьАренднойПлаты.Ссылка В(&МассивДокументов)
	|		И АР_ЗаключениеДоговораАрендыПеременнаяЧастьАренднойПлаты.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.ПустаяСсылка)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		АР_ДополнительноеСоглашениеПостояннаяЧастьАренднойПлаты.Услуга
	|	ИЗ
	|		Документ.АР_ДополнительноеСоглашение.ПостояннаяЧастьАренднойПлаты КАК АР_ДополнительноеСоглашениеПостояннаяЧастьАренднойПлаты
	|	ГДЕ
	|		АР_ДополнительноеСоглашениеПостояннаяЧастьАренднойПлаты.Ссылка В(&МассивДокументов)
	|		И АР_ДополнительноеСоглашениеПостояннаяЧастьАренднойПлаты.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.ПустаяСсылка)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		АР_ДополнительноеСоглашениеПеременнаяЧастьАренднойПлаты.Услуга
	|	ИЗ
	|		Документ.АР_ДополнительноеСоглашение.ПеременнаяЧастьАренднойПлаты КАК АР_ДополнительноеСоглашениеПеременнаяЧастьАренднойПлаты
	|	ГДЕ
	|		АР_ДополнительноеСоглашениеПеременнаяЧастьАренднойПлаты.Ссылка В(&МассивДокументов)
	|		И АР_ДополнительноеСоглашениеПеременнаяЧастьАренднойПлаты.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.ПустаяСсылка)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		АР_РасторжениеДоговораАрендыПостояннаяЧастьАренднойПлаты.Услуга
	|	ИЗ
	|		Документ.АР_РасторжениеДоговораАренды.ПостояннаяЧастьАренднойПлаты КАК АР_РасторжениеДоговораАрендыПостояннаяЧастьАренднойПлаты
	|	ГДЕ
	|		АР_РасторжениеДоговораАрендыПостояннаяЧастьАренднойПлаты.Ссылка В(&МассивДокументов)
	|		И АР_РасторжениеДоговораАрендыПостояннаяЧастьАренднойПлаты.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.ПустаяСсылка)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		АР_РасторжениеДоговораАрендыПеременнаяЧастьАренднойПлаты.Услуга
	|	ИЗ
	|		Документ.АР_РасторжениеДоговораАренды.ПеременнаяЧастьАренднойПлаты КАК АР_РасторжениеДоговораАрендыПеременнаяЧастьАренднойПлаты
	|	ГДЕ
	|		АР_РасторжениеДоговораАрендыПеременнаяЧастьАренднойПлаты.Ссылка В(&МассивДокументов)
	|		И АР_РасторжениеДоговораАрендыПеременнаяЧастьАренднойПлаты.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.ПустаяСсылка)) КАК ВЗ";
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	
	Объект.СтавкиНДСПоУслугам.Загрузить(Запрос.Выполнить().Выгрузить());
	Для каждого СтрокаТЧ Из Объект.СтавкиНДСПоУслугам Цикл
		СтрокаТЧ.СтавкаНДС = АР_ОбщиеПроцедуры.ПолучитьСтавкуНДСНоменклатуры(СтрокаТЧ.Услуга, '20190101');
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьДокументы(Команда)
	
	Если ПроверитьЗаполнение() Тогда
		Если ИзменитьДокументыНаСервере() Тогда	
			ПоказатьПредупреждение(,"Документы успешно изменены");
		Иначе
			ПоказатьПредупреждение(,"При перепроведении документов возникли ошибки, не все документы изменены");
		КонецЕсли;	
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Функция ИзменитьДокументыНаСервере()
	
	УстановитьПривилегированныйРежим(Истина);
	
	СтавкиНДСПоУслугам = Новый Соответствие;
	
	Для каждого Строка Из Объект.СтавкиНДСПоУслугам Цикл
		СтавкиНДСПоУслугам[Строка.Услуга] = Строка.СтавкаНДС;
	КонецЦикла; 
	
	БезОшибок = Истина;
	
	Для каждого СтрокаСписка Из Объект.СписокДокументов Цикл
		ДокОбъект = СтрокаСписка.Документ.ПолучитьОбъект();
				
		Если Объект.ВариантУчетаНДС = Перечисления.ВариантыРасчетаНДС.ДокументБезНДС Тогда
			ДокОбъект.ДокументБезНДС	= Истина;
			ДокОбъект.СуммаВключаетНДС	= Истина;
		Иначе
			ДокОбъект.ДокументБезНДС	= Ложь;
			Если Объект.ВариантУчетаНДС = Перечисления.ВариантыРасчетаНДС.НДСВСумме Тогда
				ДокОбъект.СуммаВключаетНДС	= Истина;
			Иначе
				ДокОбъект.СуммаВключаетНДС	= Ложь;
			КонецЕсли;
		КонецЕсли;
		
		Если НЕ ДокОбъект.ДокументБезНДС Тогда
			Для каждого Строка Из ДокОбъект.ПостояннаяЧастьАренднойПлаты Цикл
				Если ЗначениеЗаполнено(СтавкиНДСПоУслугам[Строка.Услуга]) И СтавкиНДСПоУслугам[Строка.Услуга] <> Строка.СтавкаНДС Тогда
					Строка.СтавкаНДС = СтавкиНДСПоУслугам[Строка.Услуга];
				ИначеЕсли СтавкиНДСПоУслугам[Строка.Услуга] = Неопределено И НЕ ЗначениеЗаполнено(Строка.СтавкаНДС) Тогда
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Для услуги " + Строка.Услуга + " не указана ставка НДС для заполнения документов (" + ДокОбъект + ")", ДокОбъект.Ссылка);
				КонецЕсли; 
			КонецЦикла; 
			
			Для каждого Строка Из ДокОбъект.ПеременнаяЧастьАренднойПлаты Цикл
				Если ЗначениеЗаполнено(СтавкиНДСПоУслугам[Строка.Услуга]) И СтавкиНДСПоУслугам[Строка.Услуга] <> Строка.СтавкаНДС Тогда
					Строка.СтавкаНДС = СтавкиНДСПоУслугам[Строка.Услуга];
				ИначеЕсли СтавкиНДСПоУслугам[Строка.Услуга] = Неопределено И НЕ ЗначениеЗаполнено(Строка.СтавкаНДС) Тогда
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Для услуги " + Строка.Услуга + " не указана ставка НДС для заполнения документов (" + ДокОбъект + ")", ДокОбъект.Ссылка);
				КонецЕсли; 
			КонецЦикла;
		Иначе
			Для каждого Строка Из ДокОбъект.ПостояннаяЧастьАренднойПлаты Цикл
				Строка.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС;
			КонецЦикла; 
			Для каждого Строка Из ДокОбъект.ПеременнаяЧастьАренднойПлаты Цикл
				Строка.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС;
			КонецЦикла; 
		КонецЕсли; 
		
		Попытка
			ДокОбъект.ОбменДанными.Загрузка = Истина;
			ДокОбъект.Записать();
			БылиИзменения = Истина;
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не удалось изменить документ " + ДокОбъект, ДокОбъект.Ссылка);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Информация по ошибке: " + ОписаниеОшибки());
			БезОшибок = Ложь;
		КонецПопытки;
		ЗаполнитьСтавкуНДСВРегистре(ДокОбъект.Ссылка);

	КонецЦикла;
	
	Возврат БезОшибок;

КонецФункции

&НаКлиенте
Процедура СписокДокументовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ТекущиеДанные = Элементы.СписокДокументов.ТекущиеДанные;
	Если Поле <> Элементы.СписокДокументовДокумент И ЗначениеЗаполнено(ТекущиеДанные.Документ) Тогда
		СтандартнаяОбработка = Ложь;
		ПоказатьЗначение(,ТекущиеДанные.Документ);
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если НЕ Объект.ДокументБезНДС И Объект.СтавкиНДСПоУслугам.Количество() = 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не введено ни одной строки в список ""Ставки НДС по услугам""",,, "Объект.СтавкиНДСПоУслугам", Отказ);
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура Очистить(Команда)
	Если Объект.СписокДокументов.Количество() > 0 Тогда
		Оповещение = Новый ОписаниеОповещения("ОчиститьПослеВопроса", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, "Очистить список документов?", РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет);
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьПослеВопроса(РезультатВопроса, ДопольнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		Объект.СписокДокументов.Очистить();	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСтавкуНДСВРегистре(Документ)
	
	Если ТипЗнч(Документ) = Тип("ДокументСсылка.АР_РасторжениеДоговораАренды") Тогда
		Возврат;
	КонецЕсли;
	
	СтавкиНДСПоУслугам = Новый Соответствие;
	Для каждого Строка Из Объект.СтавкиНДСПоУслугам Цикл
		СтавкиНДСПоУслугам[Строка.Услуга] = Строка.СтавкаНДС;
	КонецЦикла; 
	
	Набор = РегистрыСведений.АР_Ставки.СоздатьНаборЗаписей();
	Набор.Отбор.Регистратор.Установить(Документ);
	Набор.Прочитать();
	
	Для Каждого Запись Из Набор Цикл
		Если Объект.ВариантУчетаНДС = Перечисления.ВариантыРасчетаНДС.ДокументБезНДС Тогда
			Запись.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС;
		ИначеЕсли ЗначениеЗаполнено(СтавкиНДСПоУслугам[Запись.Услуга]) И СтавкиНДСПоУслугам[Запись.Услуга] <> Запись.СтавкаНДС Тогда
			Запись.СтавкаНДС = СтавкиНДСПоУслугам[Запись.Услуга];
		КонецЕсли;
	КонецЦикла;
	
	Набор.Записать();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ИспользоватьСхемуОпределенияСтавокНДСПоАрендеНаОсновеДоговора
		И НЕ БылиИзменения
		И НЕ ЗакрытьОкончательно Тогда
		Отказ = Истина;
		СписокКнопок = Новый СписокЗначений;
		СписокКнопок.Добавить(КодВозвратаДиалога.Отмена, "Вернуться в обработку для изменения документов");
		СписокКнопок.Добавить(КодВозвратаДиалога.ОК, "Все равно закрыть, изменю позже");
		Оповещение = Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтотОбъект, Отказ);
		ПоказатьВопрос(Оповещение, "Не внесены изменения в существующие документы: для перехода на новую схему определения ставок НДС необходимо внести изменения в существующие документы, в противном случае для всех договоров аренды будет установлен вариант учета «НДС сверху»", СписокКнопок);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(РезультатВопроса, Отказ) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.ОК Тогда
		ЗакрытьОкончательно = Истина;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

