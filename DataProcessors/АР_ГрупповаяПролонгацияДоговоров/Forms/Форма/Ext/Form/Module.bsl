
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

&НаСервере
Процедура СформироватьДокументыНаСервере()
	
	СхемаКомпоновкиДанных = Обработки.АР_ГрупповаяПролонгацияДоговоров.ПолучитьМакет("Макет");;
	НастройкиКомпоновки = КомпоновщикНастроек.Настройки;
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	Попытка 
		МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, НастройкиКомпоновки, , , Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
		
		ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
		ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, , , Истина);
		
		ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
		
		ТаблицаЗначений =  Новый ТаблицаЗначений;
		
		ПроцессорВывода.УстановитьОбъект(ТаблицаЗначений);
		ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	Исключение
		Возврат;
	КонецПопытки;
	
	СписокКонтрагентов = Новый СписокЗначений;
	СписокДоговоров = Новый СписокЗначений;
	СписокЗаключенийДоговоров = Новый СписокЗначений;
	
	СписокКонтрагентов.ЗагрузитьЗначения(ТаблицаЗначений.ВыгрузитьКолонку("КонтрагентСсылка"));
	СписокДоговоров.ЗагрузитьЗначения(ТаблицаЗначений.ВыгрузитьКолонку("ДоговорСсылка"));
	СписокЗаключенийДоговоров.ЗагрузитьЗначения(ТаблицаЗначений.ВыгрузитьКолонку("ЗаключениеДоговора"));
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ДействующиеДоговоры.Договор КАК Договор
	|ИЗ
	|	РегистрСведений.АР_СтатусыОбъектовАренды.СрезПоследних(
	|			,
	|			ЗаключениеДоговора.Контрагент В (&МассивКонтрагентов)
	|				И Договор В (&МассивДоговоров)
	|				И ЗаключениеДоговора В (&МассивЗаключениеДоговоров)) КАК ДействующиеДоговоры
	|ГДЕ
	|	ДействующиеДоговоры.Статус = &ВАренде
	|	И &ДатаДействующихСоглашений МЕЖДУ ДействующиеДоговоры.ДатаНачалаАренды И ДействующиеДоговоры.ДатаОкончанияАренды
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДействующиеДоговоры.Договор.Владелец.Наименование";
	
	Запрос.УстановитьПараметр("ВАренде",Перечисления.АР_СтатусыОбъектовАренды.ВАренде);
	Запрос.УстановитьПараметр("МассивКонтрагентов", СписокКонтрагентов);
	Запрос.УстановитьПараметр("МассивДоговоров", СписокДоговоров);
	Запрос.УстановитьПараметр("МассивЗаключениеДоговоров", СписокЗаключенийДоговоров);
	Запрос.УстановитьПараметр("ДатаДействующихСоглашений", Объект.ДатаДействующихСоглашений);
	
	МассивИспользуемыхУслуг = Новый Массив;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ДокументШаблон = Документы.АР_ДополнительноеСоглашение.СоздатьДокумент();
		ДанныеЗаполнения = Новый Структура("ДоговорКонтрагента, Период", Выборка.Договор, Объект.ДатаДействующихСоглашений);
		ДокументШаблон.Заполнить(ДанныеЗаполнения);
		
		Если Объект.ВидДокументов = 0 Тогда
			Документ = ДокументШаблон;
		Иначе
			Документ = Документы.АР_ЗаключениеДоговораАренды.СоздатьДокумент();
			ЗаполнитьЗначенияСвойств(Документ, ДокументШаблон);
			Документ.СрокиОплаты.Загрузить(ДокументШаблон.СрокиОплаты.Выгрузить());
			Документ.ПостояннаяЧастьАренднойПлаты.Загрузить(ДокументШаблон.ПостояннаяЧастьАренднойПлаты.Выгрузить());
			Документ.ПеременнаяЧастьАренднойПлаты.Загрузить(ДокументШаблон.ПеременнаяЧастьАренднойПлаты.Выгрузить());
		КонецЕсли;
		
		Документ.Дата = Объект.ДатаНачалаДействияСоглашения;
		Документ.Комментарий = СтрШаблон("Групповая пролонгация договоров от %1", Формат(ТекущаяДата(), "ДФ=дд.ММ.гггг"));
		
		МассивСтрок = Новый Массив;
		Для каждого СтрокаТЧ Из Документ.ПостояннаяЧастьАренднойПлаты Цикл
			МассивСтрок.Добавить(СтрокаТЧ);
		КонецЦикла;	
		Для каждого СтрокаТЧ Из Документ.ПеременнаяЧастьАренднойПлаты Цикл
			МассивСтрок.Добавить(СтрокаТЧ);
		КонецЦикла;	
		
		ЕстьИзменения = Ложь;
		ЕстьИзмененияСтавок = Ложь;
		МассивСтрокСГрафиком = Новый Массив;
		МассивОтложенныхСообщений = Новый Массив;
		Для каждого СтрокаТЧ Из МассивСтрок Цикл
			
			ЕстьИзмененияСтроки = Ложь;
			
			Если Объект.ВидДокументов = 1 
				И СтрокаТЧ.ДатаОкончанияСрокаАренды >= НачалоДня(Документ.Дата) Тогда
				ТекстСообщения = СтрШаблон("По договору %1, объекту аренды %2 и услуге %3 текущая дата окончания аренды превышает дату создания заключения договора аренды",
				Документ.ДоговорКонтрагента, СтрокаТЧ.ОбъектАренды, СтрокаТЧ.Услуга);
				МассивОтложенныхСообщений.Добавить(ТекстСообщения);
			КонецЕсли;
			
			Если Объект.ВидОперации = 0 ИЛИ Объект.ВидОперации = 2 Тогда // Пролонгация
				Если Объект.ДатаПродленияФиксирована = 0 Тогда
					ДатаОкончанияСрокаАренды = Объект.ДатаОкончанияДоговора;
				Иначе
					ДатаОкончанияСрокаАренды = АР_ОбщиеПроцедуры.ДобавитьПериод(СтрокаТЧ.ДатаОкончанияСрокаАренды, Объект.Период, Объект.КоличествоПериодов);
				КонецЕсли;
				
				Если ДатаОкончанияСрокаАренды > Документ.ДатаОкончанияДоговора Тогда
					Документ.ДатаОкончанияДоговора = ДатаОкончанияСрокаАренды;
				КонецЕсли;
				
				Если ДатаОкончанияСрокаАренды > СтрокаТЧ.ДатаОкончанияСрокаАренды Тогда
					СтрокаТЧ.ДатаОкончанияСрокаАренды = ДатаОкончанияСрокаАренды;
					ЕстьИзменения = Истина;
					ЕстьИзмененияСтроки = Истина;
				КонецЕсли;
			КонецЕсли;
			
			Если Объект.ВидОперации = 1 ИЛИ Объект.ВидОперации = 2 Тогда // Изменение ставки
				СтрокиСтавок = Объект.СтавкиНаУслуги.НайтиСтроки(Новый Структура("Услуга", СтрокаТЧ.Услуга));
				Если СтрокиСтавок.Количество() Тогда
					Если СтрокиСтавок[0].Ставка <> СтрокаТЧ.Ставка 
						ИЛИ СтрокиСтавок[0].СпособНачисления <> СтрокаТЧ.СпособНачисления Тогда
						СтрокаТЧ.Ставка = СтрокиСтавок[0].Ставка;
						СтрокаТЧ.СпособНачисления = СтрокиСтавок[0].СпособНачисления;
						ЕстьИзменения = Истина;
						ЕстьИзмененияСтавок = Истина;
						ЕстьИзмененияСтроки = Истина;
					КонецЕсли;
					Если МассивИспользуемыхУслуг.Найти(СтрокаТЧ.Услуга) = Неопределено Тогда
						МассивИспользуемыхУслуг.Добавить(СтрокаТЧ.Услуга);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
			Если Объект.ВидДокументов = 1 Тогда
				СтрокаТЧ.ДатаНачалаСрокаАренды = Документ.Дата;
			КонецЕсли;
			
			Если Не ЕстьИзмененияСтроки И Не Объект.ДобавлятьВсеУслуги И Объект.ВидДокументов = 0 Тогда
				ТабличнаяЧасть = ?(СтрокаТЧ.Услуга.АР_ПостояннаяЧастьОплаты, Документ.ПостояннаяЧастьАренднойПлаты, Документ.ПеременнаяЧастьАренднойПлаты);
				ТабличнаяЧасть.Удалить(СтрокаТЧ);
			Иначе
				Если ТипЗнч(СтрокаТЧ.Ставка) = Тип("СправочникСсылка.АР_ГрафикиИзмененияСтавокНаУслуги") Тогда
					МассивСтрокСГрафиком.Добавить(СтрокаТЧ);
				КонецЕсли;
			КонецЕсли;
			
		КонецЦикла;
		
		Если Не ЕстьИзменения Тогда
			Продолжить;
		КонецЕсли;
		
		Для каждого ТекстСообщения Из МассивОтложенныхСообщений Цикл
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		КонецЦикла;
		
		Если Объект.ВидДокументов = 0 Тогда
			Если Не ЕстьИзмененияСтавок Тогда
				Документ.СрокДействия = '00010101';
			Иначе
				Документ.СрокДействия = Объект.СрокДействия;
			КонецЕсли;
		КонецЕсли;
		
		Попытка
			
			Документ.Записать(РежимЗаписиДокумента.Запись);
			
			// Для заключения договора создаем новый договор контрагента
			Если Объект.ВидДокументов = 1 Тогда
				НовыйДоговорКонтрагента = Документ.ДоговорКонтрагента.Скопировать();
				НовоеНаименование = "№ "+ ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Документ.Номер, Истина, Истина) + " от " + Формат(Документ.Дата, "ДФ=""дд ММММ гггг""");
				НовыйДоговорКонтрагента.Наименование = НовоеНаименование;
				НовыйДоговорКонтрагента.Записать();
				Документ.ДоговорКонтрагента = НовыйДоговорКонтрагента.Ссылка;
			КонецЕсли;
			
			// Преобразуем графики
			Для каждого СтрокаТЧ Из МассивСтрокСГрафиком Цикл
				Ставка = СтрокаТЧ.Ставка;
				СтарыйГрафик = Ставка.ГрафикСтавок.Выгрузить();
				СтарыйГрафик.Сортировать("Дата");
				Сч = 0;
				Пока Сч < СтарыйГрафик.Количество()-1 Цикл
					СтрокаГрафика = СтарыйГрафик[Сч];
					СледующаяСтрокаГрафика = СтарыйГрафик[Сч+1];
					Если СледующаяСтрокаГрафика.Дата <= НачалоДня(Документ.Дата) Тогда
						СтарыйГрафик.Удалить(Сч);
					Иначе
						Сч = Сч + 1;
					КонецЕсли;
				КонецЦикла;
				Если СтарыйГрафик.Количество() = 1 Тогда
					СтрокаТЧ.Ставка = СтарыйГрафик[0].Ставка;
				Иначе
					Если СтарыйГрафик[0].Дата < НачалоДня(Документ.Дата) Тогда
						СтарыйГрафик[0].Дата = НачалоДня(Документ.Дата);
					КонецЕсли;
					НовыйГрафик = Справочники.АР_ГрафикиИзмененияСтавокНаУслуги.СоздатьЭлемент();
					НовыйГрафик.Наименование = Ставка.Наименование;
					НовыйГрафик.Владелец = Документ.ДоговорКонтрагента;
					НовыйГрафик.Документ = Документ.Ссылка;
					НовыйГрафик.ГрафикСтавок.Загрузить(СтарыйГрафик);
					НовыйГрафик.Записать();
					СтрокаТЧ.Ставка = НовыйГрафик.Ссылка;
				КонецЕсли;
			КонецЦикла;
			
			Документ.Записать(РежимЗаписиДокумента.Запись);
			СтрокаТЧ = Объект.СформированныеДокументы.Добавить();
			СтрокаТЧ.Документ = Документ.Ссылка;
			
		Исключение
			ТекстОшибки = СтрШаблон("Ошибка создания документа %1", Документ);
			ОбщегоНазначения.СообщитьПользователю(ТекстОшибки);
		КонецПопытки;
		
	КонецЦикла;
	
	// Проверим, что нет услуг, которые не используются в договорах
	Для каждого СтрокаТЧ Из Объект.СтавкиНаУслуги Цикл
		Если МассивИспользуемыхУслуг.Найти(СтрокаТЧ.Услуга) = Неопределено Тогда
			ТекстСообщения = СтрШаблон("Услуга %1 не обнаружена в обрабатываемых договорах", СтрокаТЧ.Услуга);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,, "Объект.СтавкиНаУслуги[" + Число(СтрокаТЧ.НомерСтроки - 1) + "].Услуга");
		КонецЕсли;
	КонецЦикла;
	
	ЗаполнитьСостоянияДокументов();
	
	ТекстСообщения = НСтр("ru = 'Формирование документов завершено'");
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСостоянияДокументов()
	
	Для каждого СтрокаТЧ Из Объект.СформированныеДокументы Цикл
		Если СтрокаТЧ.Документ.Проведен Тогда
			СтрокаТЧ.СостояниеДокумента = 1;
		ИначеЕсли СтрокаТЧ.Документ.ПометкаУдаления Тогда
			СтрокаТЧ.СостояниеДокумента = 2;
		Иначе
			СтрокаТЧ.СостояниеДокумента = 0;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ИнициализироватьКомпоновщикНастроек()
	
	СхемаКомпоновкиДанных = Обработки.АР_ГрупповаяПролонгацияДоговоров.ПолучитьМакет("Макет");
	КомпоновщикНастроек = Новый КомпоновщикНастроекКомпоновкиДанных;
	КомпоновщикНастроек.Инициализировать(
		Новый ИсточникДоступныхНастроекКомпоновкиДанных(ПоместитьВоВременноеХранилище(СхемаКомпоновкиДанных, ЭтаФорма.УникальныйИдентификатор))
	);
	КомпоновщикНастроек.ЗагрузитьНастройки(СхемаКомпоновкиДанных.НастройкиПоУмолчанию);
	
КонецПроцедуры

&НаСервере
Процедура ПровестиДокументыНаСервере()
	
	Для каждого СтрокаТЧ из Объект.СформированныеДокументы Цикл
		Если СтрокаТЧ.Пометка Тогда
			ДокументОбъект = СтрокаТЧ.Документ.ПолучитьОбъект();
			Если ДокументОбъект <> Неопределено И НЕ ДокументОбъект.ПометкаУдаления Тогда
				Попытка
					ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
					СтрокаТЧ.Пометка = Ложь;
				Исключение
				КонецПопытки;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	ЗаполнитьСостоянияДокументов();
	
КонецПроцедуры

&НаСервере
Процедура ПометитьНаУдалениеНаСервере()
	
	Для каждого СтрокаТЧ из Объект.СформированныеДокументы Цикл
		Если СтрокаТЧ.Пометка Тогда
			ДокументОбъект = СтрокаТЧ.Документ.ПолучитьОбъект();
			Если ДокументОбъект <> Неопределено Тогда
				Попытка
					ДокументОбъект.УстановитьПометкуУдаления(НЕ ДокументОбъект.ПометкаУдаления);;
					СтрокаТЧ.Пометка = Ложь;
				Исключение
				КонецПопытки;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	ЗаполнитьСостоянияДокументов();
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьВнешниеПечатныеФормы(СписокПечатныхФорм)

	ДоступныеКомандыПечати = ДополнительныеОтчетыИОбработки.НовыйЗапросПоДоступнымКомандам(
		Перечисления.ВидыДополнительныхОтчетовИОбработок.ПечатнаяФорма,
		?(Объект.ВидДокументов = 0, "Документ.АР_ДополнительноеСоглашение", "Документ.АР_ЗаключениеДоговораАренды"),
		ЛОЖЬ).Выполнить().Выгрузить();
		
	Для Каждого КомандаПечати Из ДоступныеКомандыПечати Цикл
		СписокПечатныхФорм.Добавить(Новый Структура("Идентификатор, Ссылка, Внешняя", КомандаПечати.Идентификатор, КомандаПечати.Ссылка, Истина), КомандаПечати.Представление);
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Функция ПолучитьСписокПечатныхФорм()
	
	СписокПечатныхФорм = Новый СписокЗначений;
	Если Объект.ВидДокументов = 0 Тогда
		СписокПечатныхФорм.Добавить("ПередаточныйАкт", "Передаточный акт");
		СписокПечатныхФорм.Добавить("ПротоколСогласованияЦены", "Протокол согласования цены");
		СписокПечатныхФорм.Добавить("СоглашениеОПролонгации", "Соглашение о пролонгации");
		СписокПечатныхФорм.Добавить("СтруктураАссортимента", "Структура ассортимента");
	Иначе
		СписокПечатныхФорм.Добавить("ПередаточныйАкт", "Передаточный акт");
		СписокПечатныхФорм.Добавить("ПротоколСогласованияЦены", "Протокол согласования цены");
		СписокПечатныхФорм.Добавить("СтруктураАссортимента", "Структура ассортимента");
	КонецЕсли;
	
	ДобавитьВнешниеПечатныеФормы(СписокПечатныхФорм);
	
	Возврат СписокПечатныхФорм;
	
КонецФункции

&НаКлиенте
Процедура ВыполнитьПечатьНаКлиенте(ПечатнаяФорма, НаПринтер)
	
	МассивДокументов = Новый Массив;	
	Для каждого СтрокаТЧ Из Объект.СформированныеДокументы Цикл
		Если СтрокаТЧ.Пометка Тогда
			МассивДокументов.Добавить(СтрокаТЧ.Документ);
		КонецЕсли;
	КонецЦикла;
	
	Если МассивДокументов.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ПечатнаяФорма", ПечатнаяФорма);
	ДополнительныеПараметры.Вставить("НаПринтер", НаПринтер);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыполнитьПечатьНаКлиентеЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	УправлениеПечатьюКлиент.ПроверитьПроведенностьДокументов(ОписаниеОповещения, МассивДокументов, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьПечатьНаКлиентеЗавершение(МассивДокументов, ДополнительныеПараметры) Экспорт
	
	ЗаполнитьСостоянияДокументов();
	
	ПечатнаяФорма = ДополнительныеПараметры.ПечатнаяФорма;
	НаПринтер = ДополнительныеПараметры.НаПринтер;
	
	Если ТипЗнч(ПечатнаяФорма) = Тип("Структура") Тогда
	    ДополнительныеОтчетыИОбработкиКлиент.ВыполнитьОткрытиеПечатнойФормы(ПечатнаяФорма, ЭтаФорма, МассивДокументов);
	ИначеЕсли НаПринтер Тогда
		УправлениеПечатьюКлиент.ВыполнитьКомандуПечатиНаПринтер(?(Объект.ВидДокументов = 0, "Документ.АР_ДополнительноеСоглашение", "Документ.АР_ЗаключениеДоговораАренды"), ПечатнаяФорма, МассивДокументов, Неопределено);
	Иначе
		УправлениеПечатьюКлиент.ВыполнитьКомандуПечати(?(Объект.ВидДокументов = 0, "Документ.АР_ДополнительноеСоглашение", "Документ.АР_ЗаключениеДоговораАренды"), ПечатнаяФорма, МассивДокументов, ЭтаФорма, Неопределено);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьПараметрыВыбораЗначенияОтбора() Экспорт
	
	СписокПараметров = Новый Структура;
	СписокПараметров.Вставить("Организация", Неопределено);
	СписокПараметров.Вставить("Контрагент", Неопределено);
	
	Возврат СписокПараметров;
	
КонецФункции

&НаСервереБезКонтекста
Функция ИспользуетсяНоваяСхемаУчетаСтавокНДС()
	
	Возврат ПолучитьФункциональнуюОпцию("АР_ИспользоватьСхемуОпределенияСтавокНДСПоАрендеНаОсновеДоговора");
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ УПРАВЛЕНИЯ ВНЕШНИМ ВИДОМ ФОРМЫ

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)

	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	
	Элементы.ВидДокументов.Видимость = Объект.ВидОперации = 0 ИЛИ Объект.ВидОперации = 2;
	Элементы.ДобавлятьВсеУслуги.Видимость = Объект.ВидДокументов = 0;
	Элементы.ДатаОкончанияДоговора.Доступность = Объект.ДатаПродленияФиксирована = 0;
	Элементы.Период.Доступность = Объект.ДатаПродленияФиксирована = 1; 
	Элементы.КоличествоПериодов.Доступность = Объект.ДатаПродленияФиксирована = 1;
	
	Элементы.ГруппаПериодПролонгации.Видимость = Объект.ВидОперации = 0 ИЛИ Объект.ВидОперации = 2;
	Элементы.ГруппаСтавкиНаУслуги.Видимость = Объект.ВидОперации = 1 ИЛИ Объект.ВидОперации = 2;

	// Срок действия соглашения
	Элементы.ГруппаСрокДействияСоглашения.Видимость = (Объект.ВидОперации = 1 ИЛИ Объект.ВидОперации = 2) И Объект.ВидДокументов = 0;
	Элементы.СрокДействия.Видимость = Форма.СрокДействияСоглашения = 1;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Объект.ДатаНачалаДействияСоглашения = ТекущаяДата();
	Объект.Период = Константы.АР_ПериодНачисленияАренднойПлаты.Получить();
	Объект.КоличествоПериодов = 1;
	Объект.ДатаДействующихСоглашений = КонецМесяца(ТекущаяДата());
	Объект.ВидОперации = 2;
		
	ИнициализироватьКомпоновщикНастроек();
	
	УправлениеФормой(ЭтаФорма);
		
	Настройки = АР_ОбщиеПроцедуры.ПолучитьНастройкиГрупповыхОбработок();
	Если НЕ Настройки = Неопределено И Настройки.Свойство("УчетнаяЗаписьЭлектроннойПочты") Тогда
		УчетнаяЗаписьЭлектроннойПочты = Настройки.УчетнаяЗаписьЭлектроннойПочты;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если НЕ ЗавершениеРаботы Тогда
		АР_ОбщиеПроцедуры.СохранитьНастройкиГрупповыхОбработок(Новый Структура("УчетнаяЗаписьЭлектроннойПочты", УчетнаяЗаписьЭлектроннойПочты));
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если СрокДействияСоглашения = 1 И Не ЗначениеЗаполнено(Объект.СрокДействия) Тогда
		ТекстСообщения = "Не заполнено поле ""Срок действия""";
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,, "Объект.СрокДействия",, Отказ);
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

&НаКлиенте
Процедура СформироватьДокументы(Команда)
	
	Если Объект.СформированныеДокументы.Количество() > 0 Тогда
		
		Оповещение = Новый ОписаниеОповещения("СпроситьобОчисткеСформированныхДокументов", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, "Таблица сформированных документов будет очищена. Продолжить?", РежимДиалогаВопрос.ДаНет, 0, КодВозвратаДиалога.Нет);	
		
	Иначе
		СформироватьДокументыЗавершение();
	КонецЕсли;
	
	Оповестить("ГрупповоеСозданиеДокументов_ДопСоглашение");
	
КонецПроцедуры

&НаКлиенте
Процедура ВключитьНовуюСхемуОпределенияСтавокНДС(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ОткрытьФорму("Обработка.АР_ПереходНаНовуюСхемуОпределенияСтавокНДС.Форма");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СпроситьобОчисткеСформированныхДокументов(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		СформироватьДокументыЗавершение();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьДокументыЗавершение()
	
	Объект.СформированныеДокументы.Очистить();
	Если ЭтаФорма.ПроверитьЗаполнение() Тогда
		СформироватьДокументыНаСервере();
		Элементы.Страницы.ТекущаяСтраница = Элементы.ГруппаСформированныеДокументы;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПометки(Команда)
	
	Для каждого СтрокаТЧ Из Объект.СформированныеДокументы Цикл
		СтрокаТЧ.Пометка = Истина;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьПометки(Команда)
	
	Для каждого СтрокаТЧ Из Объект.СформированныеДокументы Цикл
		СтрокаТЧ.Пометка = Ложь;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура Провести(Команда)
	
	ПровестиДокументыНаСервере();
	
	Оповестить("ГрупповоеСозданиеДокументов_ДопСоглашение");
	
КонецПроцедуры

&НаКлиенте
Процедура ПометитьНаУдаление(Команда)
	
	ПометитьНаУдалениеНаСервере();
	
	Оповестить("ГрупповоеСозданиеДокументов_ДопСоглашение");
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьПросмотр(Команда)
	
	СписокПечатныхФорм = ПолучитьСписокПечатныхФорм();
	ОписаниеОповещения = Новый ОписаниеОповещения("ПечатьЗавершение", ЭтаФорма, Ложь);
	
	СтруктураПараметров = Новый Структура("Заголовок, Список",
		НСтр("ru = 'Выберите печатную форму'"),
		СписокПечатныхФорм);
	
	ОткрытьФорму("ОбщаяФорма.АР_ФормаВыбораИзСписка", СтруктураПараметров, ЭтотОбъект,,,, ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьНаПринтер(Команда)
	
	СписокПечатныхФорм = ПолучитьСписокПечатныхФорм();
	ОписаниеОповещения = Новый ОписаниеОповещения("ПечатьЗавершение", ЭтаФорма, Истина);
	
	СтруктураПараметров = Новый Структура("Заголовок, Список",
		НСтр("ru = 'Выберите печатную форму'"),
		СписокПечатныхФорм);
	
	ОткрытьФорму("ОбщаяФорма.АР_ФормаВыбораИзСписка", СтруктураПараметров, ЭтотОбъект,,,, ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьПоЭлектроннойПочте(Команда)
	
	МассивДокументов = Новый Массив;
	Для Каждого СтрокаТЧ Из Объект.СформированныеДокументы Цикл
		Если СтрокаТЧ.Пометка Тогда
			МассивДокументов.Добавить(СтрокаТЧ.Документ);
		КонецЕсли;
	КонецЦикла;
	
	Если МассивДокументов.Количество() > 0 Тогда
		АР_ОбщиеПроцедурыКлиент.ОтправитьПоЭлектроннойПочте(МассивДокументов, "АР_ДополнительноеСоглашение", УчетнаяЗаписьЭлектроннойПочты);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьНастройкуГрупповыхОбработок(Команда)
	
	АР_ОбщиеПроцедурыКлиент.ОткрытьНастройкуГрупповыхОбработок(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьЗавершение(ВыбранныйЭлемент, НаПринтер) Экспорт
	
	Если НЕ ВыбранныйЭлемент = Неопределено Тогда
		ВыполнитьПечатьНаКлиенте(ВыбранныйЭлемент.Значение, НаПринтер);
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ШАПКИ

&НаКлиенте
Процедура ДатаПродленияФиксированаПриИзменении(Элемент)
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура СформированныеДокументыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Попытка
		ПоказатьЗначение(, Элементы.СформированныеДокументы.ТекущиеДанные.Документ);
	Исключение
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборыПравоеЗначениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СписокПараметров = ПолучитьПараметрыВыбораЗначенияОтбора();
	АР_ОбщиеПроцедурыКлиент.ОтборыПравоеЗначениеНачалоВыбора(ЭтаФорма, Элемент, ДанныеВыбора, СтандартнаяОбработка, СписокПараметров);
	
КонецПроцедуры

&НаКлиенте
Процедура СрокДействияСоглашенияПриИзменении(Элемент)
	
	Если СрокДействияСоглашения = 0 Тогда
		Объект.СрокДействия = '00010101';
	КонецЕсли;
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидОперацииПриИзменении(Элемент)
	Если Объект.ВидОперации = 1 Тогда
		Объект.ВидДокументов = 0;
	КонецЕсли;
	УправлениеФормой(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ВидДокументовПриИзменении(Элемент)
	УправлениеФормой(ЭтаФорма);
КонецПроцедуры

