
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

&НаСервере
Процедура СформироватьОбъектыНаСервере()
	
	Для Индекс = 1 По Обработка.КоличествоОбъектов Цикл
		
		НовыйОбъект = Справочники.АР_ОбъектыАренды.СоздатьЭлемент();
		ЗаполнитьЗначенияСвойств(НовыйОбъект, Объект);
		
		// Обработчик подсистемы "Контактная информация"
		УправлениеКонтактнойИнформацией.ПередЗаписьюНаСервере(ЭтаФорма, НовыйОбъект);
		
		Попытка
			НовыйОбъект.Записать();
		Исключение
			Продолжить;
		КонецПопытки;
		
		Если ПодлежитСдачеВАренду Тогда
			НоваяЗапись = РегистрыСведений.АР_ОбъектыПодлежащиеСдачеВАренду.СоздатьМенеджерЗаписи();
			НоваяЗапись.Период = ДатаНачалаСдачиВАренду;
			НоваяЗапись.ОбъектАренды = НовыйОбъект.Ссылка;
			НоваяЗапись.ПодлежитСдачеВАренду = Истина;
			НоваяЗапись.Записать();
		КонецЕсли;
		
	КонецЦикла;
	
	ТекстСообщения = НСтр("ru = 'Выполнение обработки завершено. Создано " + Обработка.КоличествоОбъектов + " объектов недвижимости'");
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ УПРАВЛЕНИЯ ВНЕШНИМ ВИДОМ ФОРМЫ

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	
	ЭтоЗдание = АР_ОбщиеПроцедуры.ЗначениеРеквизитаОбъекта(Объект.ТипОбъекта, "КатегорияОбъекта") = ПредопределенноеЗначение("Перечисление.АР_КатегорииОбъектовНедвижимости.Здание");
	ЭтоЗемельныйУчасток = АР_ОбщиеПроцедуры.ЗначениеРеквизитаОбъекта(Объект.ТипОбъекта, "КатегорияОбъекта") = ПредопределенноеЗначение("Перечисление.АР_КатегорииОбъектовНедвижимости.ЗемельныйУчасток");
	ЭтоПомещение = АР_ОбщиеПроцедуры.ЗначениеРеквизитаОбъекта(Объект.ТипОбъекта, "КатегорияОбъекта") = ПредопределенноеЗначение("Перечисление.АР_КатегорииОбъектовНедвижимости.Помещение");
	ЭтоСооружение = АР_ОбщиеПроцедуры.ЗначениеРеквизитаОбъекта(Объект.ТипОбъекта, "КатегорияОбъекта") = ПредопределенноеЗначение("Перечисление.АР_КатегорииОбъектовНедвижимости.Сооружение");
	
	Элементы.КатегорияЗемель.Видимость = ЭтоЗемельныйУчасток;
	Элементы.НазначениеОбъекта.Видимость = Не ЭтоЗемельныйУчасток;
	Элементы.ЧислоЭтажей.Видимость = Не ЭтоЗемельныйУчасток И Не ЭтоПомещение;
	Элементы.ЧислоПодземныхЭтажей.Видимость = ЭтоЗдание ИЛИ ЭтоСооружение;
	Элементы.Этаж.Видимость = ЭтоПомещение;
	Элементы.ГодПостройки.Видимость = Не ЭтоЗемельныйУчасток И Не ЭтоПомещение;
	Элементы.ПамятникИсторииИКультуры.Видимость = Не ЭтоЗемельныйУчасток;
	
	Элементы.ОбъектЗданиеИЭтаж.Видимость = ПолучитьВидимостьЗданийИЭтажей();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьВидимостьЗданийИЭтажей()
	
	Возврат ПолучитьФункциональнуюОпцию("АР_ИспользоватьСправочникЗданияИЭтажи");
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Объект.ТипОбъекта = Константы.АР_ТипОбъектаАренды.Получить();
	Объект.ЕдиницаИзмерения = Справочники.КлассификаторЕдиницИзмерения.НайтиПоНаименованию("м2");
	
	// Обработчик подсистемы "Контактная информация"
	УправлениеКонтактнойИнформацией.ПриСозданииНаСервере(ЭтаФорма, Объект, "ГруппаКонтактнаяИнформация");
	Если НЕ Элементы.Найти("ГруппаКонтактнаяИнформацияДобавитьПолеВвода") = Неопределено Тогда
		Элементы.ГруппаКонтактнаяИнформацияДобавитьПолеВвода.Видимость = Ложь;
	КонецЕсли;
	Если НЕ Элементы.Найти("ГруппаКонтактнаяИнформацияДобавитьПолеВводаГруппаКонтактнаяИнформация") = Неопределено Тогда
		Элементы.ГруппаКонтактнаяИнформацияДобавитьПолеВводаГруппаКонтактнаяИнформация.Видимость = Ложь;
	КонецЕсли;
	
	Если НЕ Элементы.Найти("ГруппаДействийКонтактнойИнформации") = Неопределено Тогда
		Элементы.ГруппаДействийКонтактнойИнформации.Видимость = Ложь;
	КонецЕсли;
	СтрокиОписания = ЭтаФорма.КонтактнаяИнформацияОписаниеДополнительныхРеквизитов.НайтиСтроки(Новый Структура("Вид", Справочники.ВидыКонтактнойИнформации.АдресОбъектаАренды));
	Если СтрокиОписания.Количество() > 0 Тогда
		ИмяПоля = СтрокиОписания[0].ИмяРеквизита;
		Элементы[ИмяПоля].ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Авто;
	КонецЕсли;
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

&НаКлиенте
Процедура СформироватьОбъекты(Команда)
	
	Отказ = Ложь;
	Если Не ЗначениеЗаполнено(Объект.Наименование) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не заполнено поле ""Наименование""",, "Объект.Наименование",, Отказ);
	КонецЕсли;
	Если ПодлежитСдачеВАренду И Не ЗначениеЗаполнено(ДатаНачалаСдачиВАренду) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не заполнено поле ""Дата начала сдачи в аренду""",, "ДатаНачалаСдачиВАренду",, Отказ);
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(Объект.ТипОбъекта) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не заполнено поле ""Тип объекта""",, "Объект.ТипОбъекта",, Отказ);
	КонецЕсли;
	Если Не Отказ Тогда
		СформироватьОбъектыНаСервере();
	КонецЕсли;
	Оповестить("СозданыНовыеОбъектыАренды");
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ШАПКИ

&НаКлиенте
Процедура ТипОбъектаПриИзменении(Элемент)
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзменениеНастроекИспользованияЗданийИЭтажей" Тогда
		УправлениеФормой(ЭтаФорма);	
	КонецЕсли;
	
КонецПроцедуры

// СтандартныеПодсистемы.КонтактнаяИнформация

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияПриИзменении(Элемент)
	УправлениеКонтактнойИнформациейКлиент.НачатьИзменение(ЭтотОбъект, Элемент);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	УправлениеКонтактнойИнформациейКлиент.НачатьВыбор(ЭтотОбъект, Элемент, , СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияПриНажатии(Элемент, СтандартнаяОбработка)
	УправлениеКонтактнойИнформациейКлиент.НачатьВыбор(ЭтотОбъект, Элемент,, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияВыполнитьКоманду(Команда)
	
	УправлениеКонтактнойИнформациейКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияОчистка(Элемент, СтандартнаяОбработка)
	
	УправлениеКонтактнойИнформациейКлиент.НачатьОчистку(ЭтотОбъект, Элемент.Имя);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьКонтактнуюИнформацию(Результат)
	
	УправлениеКонтактнойИнформацией.ОбновитьКонтактнуюИнформацию(ЭтотОбъект, Объект, Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьОбновлениеКонтактнойИнформации(Результат, ДополнительныеПараметры) Экспорт
	
	ОбновитьКонтактнуюИнформацию(Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	УправлениеКонтактнойИнформациейКлиент.АвтоПодбор(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	УправлениеКонтактнойИнформациейКлиент.ОбработкаВыбора(ЭтотОбъект, ВыбранноеЗначение, Элемент.Имя, СтандартнаяОбработка);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.КонтактнаяИнформация
