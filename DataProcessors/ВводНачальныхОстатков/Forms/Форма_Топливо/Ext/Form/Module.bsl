
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Объект.Организация = Параметры.Организация;
	Объект.ДатаВводаОстатков = Параметры.ДатаВводаОстатков;
	
	Заголовок = СтрШаблон(НСтр("ru = 'Начальные остатки: Топливо (%1)'"), Объект.Организация);
	ОбновитьОстаткиНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)

	Если ИмяСобытия = "ИзмененениеДатыВводаОстатков"
		И Источник = "ВводНачальныхОстатков"
		И Параметр = Объект.Организация Тогда
		
		Объект.ДатаВводаОстатков = ПеречитатьДатуНачалаУчета(Объект.Организация);
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ЗавершениеРаботы И Модифицированность Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если Не Модифицированность Тогда
		Возврат;
	КонецЕсли;
	
	Отказ = Истина;
	
	Оповещение = Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтотОбъект);
	
	ТекстВопроса = НСтр("ru='Данные были изменены. Сохранить изменения?'");
	ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Записать(Команда)
	
	Если Модифицированность Тогда
		
		Отказ = Ложь;
		
		ЗаписатьНаСервере(Истина, Отказ);
		Если Не Отказ Тогда
			Оповестить("ОбновитьФормуПомощникаВводаОстатков", Объект.Организация, "ВводНачальныхОстатков");
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	Отказ = Ложь;
	Если Модифицированность Тогда
		
		ЗаписатьНаСервере(Ложь, Отказ);
		Если Не Отказ Тогда
			Оповестить("ОбновитьФормуПомощникаВводаОстатков", Объект.Организация, "ВводНачальныхОстатков");
		КонецЕсли;
		
	КонецЕсли;
	
	Если Не Отказ Тогда
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиТабличныхЧастей

&НаКлиенте
Процедура ТопливоТранспортноеСредствоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Топливо.ТекущиеДанные;
	ТекущиеДанные.Номенклатура = НоменклатураТранспортногоСредства(ТекущиеДанные.ТранспортноеСредство);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция НоменклатураТранспортногоСредства(ТранспортноеСредство)
	
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТранспортноеСредство, "Топливо");
	
КонецФункции

&НаСервере
Процедура ОбновитьОстаткиНаСервере()
	
	ПараметрыВыполнения = Новый Структура;
	ПараметрыВыполнения.Вставить("Организация", Объект.Организация);
	ПараметрыВыполнения.Вставить("ДатаВводаОстатков", Объект.ДатаВводаОстатков);
	
	Обработки.ВводНачальныхОстатков.ОбновитьОстатки(Объект.Топливо,
		"Топливо",
		ПараметрыВыполнения,
		Объект.СуществующиеДокументы);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПеречитатьДатуНачалаУчета(Организация)
	
	Возврат Обработки.ВводНачальныхОстатков.ПеречитатьДатуНачалаУчета(Организация);
	
КонецФункции

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		
		Отказ = Ложь;
		ЗаписатьНаСервере(, Отказ);
		
		Если Не Отказ Тогда
			Закрыть();
		КонецЕсли;
		
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		
		Модифицированность = Ложь;
		Закрыть();
		
	КонецЕсли;
	
КонецПроцедуры

#Область ЗаписьДанных

&НаСервере
Процедура ЗаписатьНаСервере(ОбновитьОстатки = Истина, Отказ = Ложь)
	
	Если Не ПроверитьЗаполнение() Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	МенеджерОбработки = Обработки.ВводНачальныхОстатков;
	МенеджерОбработки.СинхронизироватьСостояниеДокументов(Объект.Топливо, Объект.СуществующиеДокументы);
	
	ПараметрыДокумента = Новый Структура;
	ПараметрыДокумента.Вставить("Организация", Объект.Организация);
	ПараметрыДокумента.Вставить("Дата",        Объект.ДатаВводаОстатков);
	ПараметрыДокумента.Вставить("РазделУчета", Перечисления.РазделыУчетаДляВводаОстатков.Материалы);
	
	ТаблицаДанных = Объект.Топливо.Выгрузить();
	ПодготовитьТабличнуюЧастьКЗаписи(ТаблицаДанных, ПараметрыДокумента);
	
	МенеджерОбработки.ЗаписатьНаСервереДокументы(ПараметрыДокумента, ТаблицаДанных, "Топливо");
	МенеджерОбработки.ОбновитьФинансовыйРезультат(ПараметрыДокумента,
		Объект.ФинансовыйРезультат,
		Объект.СуществующиеДокументы);
	
	Если ОбновитьОстатки Тогда
		ОбновитьОстаткиНаСервере();
	КонецЕсли;
	
	Модифицированность = Ложь;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПодготовитьТабличнуюЧастьКЗаписи(ТаблицаДанных, ПараметрыДокумента)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ВводНачальныхОстатков.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ВводНачальныхОстатков.Топливо КАК ВводНачальныхОстатковТопливо
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводНачальныхОстатков КАК ВводНачальныхОстатков
	|		ПО ВводНачальныхОстатковТопливо.Ссылка = ВводНачальныхОстатков.Ссылка
	|ГДЕ
	|	ВводНачальныхОстатков.Проведен
	|	И ВводНачальныхОстатков.Дата = &Дата
	|	И ВводНачальныхОстатков.Организация = &Организация
	|	И ВводНачальныхОстатков.РазделУчета = &РазделУчета
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка");
	
	Для Каждого ТекущийПараметр Из ПараметрыДокумента Цикл
		Запрос.УстановитьПараметр(ТекущийПараметр.Ключ, ТекущийПараметр.Значение);
	КонецЦикла;
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		СсылкаНаДокумент = Неопределено;
	Иначе
		СсылкаНаДокумент = РезультатЗапроса.Выгрузить()[0].Ссылка;
	КонецЕсли;
	
	ТаблицаДанных.Колонки.Добавить("СуммаНУ",
		Метаданные.Обработки.ВводНачальныхОстатков.ТабличныеЧасти.Топливо.Реквизиты.Сумма.Тип);
	
	СчетУчета = ПланыСчетов.Хозрасчетный.ТопливоВБаке;
	
	Для Каждого СтрокаТаблицы Из ТаблицаДанных Цикл
		СтрокаТаблицы.СуммаНУ = СтрокаТаблицы.Сумма;
		СтрокаТаблицы.СчетУчета = СчетУчета;
		СтрокаТаблицы.Ссылка = СсылкаНаДокумент;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
