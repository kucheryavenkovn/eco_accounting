#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
				 
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Спецификация") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"Спецификация",
			НСтр("ru = 'Спецификация сырья и материалов'"),
			ПечатьСпецификации(МассивОбъектов, ОбъектыПечати, ПараметрыПечати),
			,
			"Справочник.СпецификацииНоменклатуры.ПФ_MXL_Спецификация");
	КонецЕсли;				 

КонецПроцедуры				 

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Функция формирует табличный документ с печатной формой спецификации
//
// Возвращаемое значение:
//  Табличный документ - печатная форма спецификации
//
Функция ПечатьСпецификации(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)

	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб			= Истина;
	ТабличныйДокумент.КлючПараметровПечати	= "ПАРАМЕТРЫ_ПЕЧАТИ_СпецификацияНоменклатуры";
	
	ПечатьИзНоменклатуры = (ТипЗнч(ПараметрыПечати) = Тип("Структура") 
		 И ПараметрыПечати.Свойство("ИсточникПечати") 
		 И ПараметрыПечати.ИсточникПечати = "Номенклатура");
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);		 
	Запрос.УстановитьПараметр("ПечатьИзНоменклатуры", ПечатьИзНоменклатуры);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СпецификацииНоменклатурыИсходныеКомплектующие.Ссылка КАК Ссылка,
	|	ВЫБОР
	|		КОГДА &ПечатьИзНоменклатуры
	|			ТОГДА СпецификацииНоменклатурыИсходныеКомплектующие.Ссылка.Владелец
	|		ИНАЧЕ СпецификацииНоменклатурыИсходныеКомплектующие.Ссылка
	|	КОНЕЦ КАК ИсточникПечати,
	|	СпецификацииНоменклатурыИсходныеКомплектующие.Ссылка.Владелец.НаименованиеПолное КАК НаименованиеПродукции,
	|	СпецификацииНоменклатурыИсходныеКомплектующие.Ссылка.Количество КАК КоличествоПродукции,
	|	СпецификацииНоменклатурыИсходныеКомплектующие.Ссылка.Владелец.ЕдиницаИзмерения.Наименование КАК ЕдиницаИзмеренияПродукции,
	|	СпецификацииНоменклатурыИсходныеКомплектующие.НомерСтроки КАК НомерСтроки,
	|	СпецификацииНоменклатурыИсходныеКомплектующие.Номенклатура.НаименованиеПолное КАК Наименование,
	|	СпецификацииНоменклатурыИсходныеКомплектующие.Количество КАК Количество,
	|	СпецификацииНоменклатурыИсходныеКомплектующие.Номенклатура.ЕдиницаИзмерения.Наименование КАК ЕдиницаИзмерения
	|ИЗ
	|	Справочник.СпецификацииНоменклатуры.ИсходныеКомплектующие КАК СпецификацииНоменклатурыИсходныеКомплектующие
	|ГДЕ
	|	СпецификацииНоменклатурыИсходныеКомплектующие.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки";
		
	Шапка = Запрос.Выполнить().Выбрать();
	
	ПредставлениеОрганизации = "";
	Организация = Справочники.Организации.ОрганизацияПоУмолчанию();
	Если ЗначениеЗаполнено(Организация) Тогда
		СведенияОбОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Организация);
		ПредставлениеОрганизации = СведенияОбОрганизации.СокращенноеНаименование;
	КонецЕсли;	
	
	ПервыйДокумент = Истина;
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьСпецификации.ПФ_MXL_Спецификация");
	
	// Непараметризумые области макета - инициализируем однократно
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	
	Пока Шапка.СледующийПоЗначениюПоля("Ссылка") Цикл
		
		Если НЕ ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		// Выводим шапку
		ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
		ОбластьШапка.Параметры.Заполнить(Шапка);
		ОбластьШапка.Параметры.ПредставлениеОрганизации = ПредставлениеОрганизации;
		ТабличныйДокумент.Вывести(ОбластьШапка);

		// Выводим таблицу
		ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
		
		ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
		
		// Массив с тремя областями - для разбиения на страницы.
		ВыводимыеОбласти = Новый Массив;
		ВыводимыеОбласти.Добавить(ОбластьСтрока);
		ВыводимыеОбласти.Добавить(ОбластьПодвалТаблицы);
		ВыводимыеОбласти.Добавить(ОбластьПодвал);
		
		// Обходим строки с тем же значением поля "Ссылка"
		Пока Шапка.Следующий() Цикл 
			
			ОбластьСтрока.Параметры.Заполнить(Шапка);
			
			Если ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабличныйДокумент, ВыводимыеОбласти) Тогда
				ТабличныйДокумент.Вывести(ОбластьСтрока);
			Иначе
				ТабличныйДокумент.Вывести(ОбластьПодвалТаблицы);
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
				ТабличныйДокумент.Вывести(ОбластьСтрока);
			КонецЕсли;	
			
		КонецЦикла;
		
		ТабличныйДокумент.Вывести(ОбластьПодвалТаблицы);
		ТабличныйДокумент.Вывести(ОбластьПодвал);
		
		// В табличном документе зададим имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, 
			НомерСтрокиНачало, ОбъектыПечати, Шапка.ИсточникПечати);
		
	КонецЦикла;

	Возврат ТабличныйДокумент;

КонецФункции

#КонецОбласти

#КонецЕсли