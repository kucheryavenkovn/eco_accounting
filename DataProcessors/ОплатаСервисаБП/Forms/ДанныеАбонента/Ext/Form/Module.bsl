#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Параметры.Организация) Тогда
		СведенияОбОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Параметры.Организация);
		
		НаименованиеОрганизации = СведенияОбОрганизации.СокращенноеНаименование;
		ИННАбонента = СведенияОбОрганизации.ИНН;
		КонтактноеЛицоАбонента = ?(СведенияОбОрганизации.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо,
			СведенияОбОрганизации.ФИОФизлица,
			СведенияОбОрганизации.РуководительФИО.Представление);
		ЭлектроннаяПочта = СведенияОбОрганизации.Email;
		СведенияОТелефоне = УправлениеКонтактнойИнформацией.СведенияОТелефоне(СведенияОбОрганизации.ЗначениеJSONТелефоны);
		КодСтраны = СведенияОТелефоне.КодСтраны;
		КодГорода = СведенияОТелефоне.КодГорода;
		НомерТелефона = СведенияОТелефоне.НомерТелефона;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если НЕ ПустаяСтрока(ИННАбонента) Тогда
		ДлинаИНН = СтрДлина(СокрЛП(ИННАбонента));
		Если (ДлинаИНН <> 10 И ДлинаИНН <> 12) ИЛИ НЕ СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(СокрЛП(ИННАбонента)) Тогда
			ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(,"КОРРЕКТНОСТЬ", НСтр("ru = 'ИНН'"),,,
				НСтр("ru = 'ИНН должен состоять из 10 или 12 цифр'"));
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "ИННАбонента",, Отказ);
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ ПустаяСтрока(ЭлектроннаяПочта)
		И НЕ ОбщегоНазначенияКлиентСервер.АдресЭлектроннойПочтыСоответствуетТребованиям(СокрЛП(ЭлектроннаяПочта)) Тогда
		ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(,"КОРРЕКТНОСТЬ", НСтр("ru = 'Электронная почта'"));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "ЭлектроннаяПочта",, Отказ);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПерейтиКОплате(Команда)
	
	Если НЕ ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	ФоновоеЗадание = ФоновоеЗаданиеОтправитьДанныеАбонента();
	
	УстановитьРежимОжидания(Истина);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	ПараметрыОжидания.Интервал = 1;
	ОповещениеОЗавершении = Новый ОписаниеОповещения("ОбработатьРезультатОтправкиДанныхАбонента", ЭтотОбъект);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ФоновоеЗадание, ОповещениеОЗавершении, ПараметрыОжидания);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура УстановитьРежимОжидания(ВыполняетсяФоновоеЗадание)
	
	Элементы.ГруппаФорма.Видимость = НЕ ВыполняетсяФоновоеЗадание;
	Элементы.ГруппаОжидание.Видимость = ВыполняетсяФоновоеЗадание;
	ПоложениеКоманднойПанели = ?(ВыполняетсяФоновоеЗадание,
		ПоложениеКоманднойПанелиФормы.Нет,
		ПоложениеКоманднойПанелиФормы.Низ);
	
КонецПроцедуры

&НаСервере
Функция ФоновоеЗаданиеОтправитьДанныеАбонента()
	
	ДанныеАбонента = Новый Структура;
	ДанныеАбонента.Вставить("НаименованиеОрганизации", НаименованиеОрганизации);
	ДанныеАбонента.Вставить("ИННАбонента",             ИННАбонента);
	ДанныеАбонента.Вставить("КонтактноеЛицоАбонента",  КонтактноеЛицоАбонента);
	ДанныеАбонента.Вставить("КодГорода",               КодГорода);
	ДанныеАбонента.Вставить("Телефон",                 КодСтраны + КодГорода + НомерТелефона);
	ДанныеАбонента.Вставить("ЭлектроннаяПочта",        ЭлектроннаяПочта);
	ДанныеАбонента.Вставить("НовыйКлиент1С",           НовыйКлиент1С);
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.ОжидатьЗавершение = 0;
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru='Отправить данные абонента'");
	Возврат ДлительныеОперации.ВыполнитьВФоне("Обработки.ОплатаСервисаБП.ОтправитьДанныеАбонентаВФоне",
		ДанныеАбонента, ПараметрыВыполнения);
	
КонецФункции

&НаКлиенте
Процедура ОбработатьРезультатОтправкиДанныхАбонента(Результат, ДополнительныеПараметры) Экспорт
	
	УстановитьРежимОжидания(Ложь);
	
	Если ТипЗнч(Результат) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат.Статус = "Выполнено" Тогда
		Закрыть(Истина);
	ИначеЕсли Результат.Статус = "Ошибка" Тогда
		ЗаписатьОшибкуВЖурналРегистрации(Результат.ПодробноеПредставлениеОшибки);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаписатьОшибкуВЖурналРегистрации(Знач ОписаниеОшибки)
	
	Событие = НСтр("ru='Оплата сервиса.Ошибка'");
	Уровень = УровеньЖурналаРегистрации.Ошибка;
	ОбъектМетаданных = Метаданные.Обработки.ОплатаСервисаБП;
	
	ЗаписьЖурналаРегистрации(Событие, Уровень, ОбъектМетаданных,, ОписаниеОшибки);
	
	ОбщегоНазначения.СообщитьПользователю(
		НСтр("ru='Ошибка при отправке данных на сервер. Подробности в журнале регистрации.'")
	);
	
КонецПроцедуры

#КонецОбласти
