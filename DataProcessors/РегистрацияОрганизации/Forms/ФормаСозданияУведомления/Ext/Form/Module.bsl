
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Организация = Параметры.Организация;
	
	ИмяОтчета =
		УведомлениеОСпецрежимахНалогообложенияПовтИсп.ПолучитьСоответствиеВидовУведомленийИменамОтчетов()[Параметры.ВидУведомления];
	
	ТаблицаФорм = Отчеты[ИмяОтчета].ПолучитьТаблицуФорм();
	СписокВыбора = Элементы.ПолеРедакцияФормы.СписокВыбора;
	СписокВыбора.Очистить();
	Для Каждого СтрокаТаблицы Из ТаблицаФорм Цикл
		СписокВыбора.Добавить(СтрокаТаблицы.ИмяФормы, СтрокаТаблицы.ОписаниеФормы);
		ПолеРедакцияФормы = СтрокаТаблицы.ИмяФормы;
	КонецЦикла;
	
	УведомлениеМожноЗаполнитьВПомощнике = Обработки.РегистрацияОрганизации.ДоступенСервис1СКонтрагент();
	
	Элементы.Создать.Доступность = ЗначениеЗаполнено(Организация);
	Элементы.ФормаСоздатьБезПомощника.Видимость = УведомлениеМожноЗаполнитьВПомощнике;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	Элементы.Создать.Доступность = ЗначениеЗаполнено(Организация);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Создать(Команда)
	
	СоздатьУведомление();
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьБезПомощника(Команда)
	
	СоздатьУведомление(Ложь);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура СоздатьУведомление(ИспользоватьПомощник = Истина)
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	Если ИспользоватьПомощник Тогда
		ОткрытьПомощникПодготовкиУведомления();
	Иначе
		ОткрытьСтандартнуюФормуУведомления();
	КонецЕсли;
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПомощникПодготовкиУведомления()
	
	Если ИмяОтчета = "РегламентированноеУведомлениеПолучениеПатента" Тогда
		
		Если ВыбранаАктуальнаяФормаЗаявленияНаПатент(ПолеРедакцияФормы) Тогда
			
			ПараметрыПомощника = Новый Структура;
			ПараметрыПомощника.Вставить("Организация", Организация);
			ПараметрыПомощника.Вставить("СоздатьНовоеЗаявление", Истина);
			
			ОткрытьФорму("Обработка.ПомощникЗаполненияЗаявленияНаПолучениеПатента.Форма", ПараметрыПомощника);
			
		Иначе
			ОткрытьСтандартнуюФормуУведомления();
		КонецЕсли;
		
	ИначеЕсли УведомлениеМожноЗаполнитьВПомощнике Тогда
		
		ПараметрыПомощника = РегистрацияОрганизацииКлиентСервер.НовыеПараметрыПомощникаВнесенияИзменений();
		ПараметрыПомощника.Организация = Организация;
		ПараметрыПомощника.КонтекстныйВызов = Истина;
		ПараметрыПомощника.СоздатьПриОткрытии = Истина;
		
		РегистрацияОрганизацииКлиент.ОткрытьПомощникВнесенияИзменений(ПараметрыПомощника);
		
	Иначе
		
		ОткрытьСтандартнуюФормуУведомления();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСтандартнуюФормуУведомления()
	
	ПараметрыОткрытия = Новый Структура("Организация", Организация);
	ОткрытьФорму(СтрШаблон("Отчет.%1.Форма.%2", ИмяОтчета, ПолеРедакцияФормы), ПараметрыОткрытия, ВладелецФормы);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВыбранаАктуальнаяФормаЗаявленияНаПатент(ВыбраннаяФорма)
	
	ИмяАктуальнойФормы = Отчеты.РегламентированноеУведомлениеПолучениеПатента.ПолучитьФормуПоУмолчанию();
	ИмяВыбраннойФормы = СтрШаблон("Отчет.РегламентированноеУведомлениеПолучениеПатента.Форма.%1", ВыбраннаяФорма);
	
	Возврат ИмяВыбраннойФормы = ИмяАктуальнойФормы;
	
КонецФункции

#КонецОбласти
