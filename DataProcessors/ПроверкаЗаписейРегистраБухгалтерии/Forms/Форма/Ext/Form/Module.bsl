#Область ОбработчикиКомандФормы 

&НаКлиенте
Процедура Исправить(Команда)
	
	ПроверитьЗаписи(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура Проверить(Команда)
	
	ПроверитьЗаписи(Ложь);
	
КонецПроцедуры
	
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПроверитьЗаписи(Исправлять)
	
	ПараметрыМетода = Новый Структура;
	ПараметрыМетода.Вставить("Исправлять", Исправлять);
	ДлительнаяОперация = ПроверитьЗаписиНаСервере(ПараметрыМетода, УникальныйИдентификатор);
	
	Если ДлительнаяОперация = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ДлительнаяОперация.Статус = "Ошибка" Тогда
		ПоказатьПредупреждение(, ДлительнаяОперация.КраткоеПредставлениеОшибки);
		Возврат;
	КонецЕсли;
	
	НастройкиОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Исправлять", Исправлять);
	
	Обработчик = Новый ОписаниеОповещения("ПоказатьРезультатПроверкиЗаписей", ЭтотОбъект, ДополнительныеПараметры);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, Обработчик, НастройкиОжидания);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПроверитьЗаписиНаСервере(Знач ПараметрыМетода, Знач ИдентификаторФормы)
	
	НастройкиЗапуска = ДлительныеОперации.ПараметрыВыполненияВФоне(ИдентификаторФормы);
	
	Результат = ДлительныеОперации.ВыполнитьВФоне(
		"Обработки.ПроверкаЗаписейРегистраБухгалтерии.ПроверитьЗаписиВФоне",
		ПараметрыМетода,
		НастройкиЗапуска);
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ПоказатьРезультатПроверкиЗаписей(РезультатПроверки, ДополнительныеПараметры) Экспорт

	Если РезультатПроверки = Неопределено Тогда
		Возврат;
	ИначеЕсли РезультатПроверки.Статус = "Ошибка" Тогда
		ПоказатьПредупреждение(, РезультатПроверки.КраткоеПредставлениеОшибки);
		Возврат;
	КонецЕсли;
	
	ПоказатьРезультатПроверкиЗаписейНаСервере(РезультатПроверки.АдресРезультата, ДополнительныеПараметры.Исправлять);

КонецПроцедуры 

&НаСервере
Процедура ПоказатьРезультатПроверкиЗаписейНаСервере(АдресРезультата, РежимИсправления)

	Результат.Очистить();
	Если Не ЭтоАдресВременногоХранилища(АдресРезультата) Тогда
		Возврат;
	КонецЕсли;
	
	РезультатПроверки = ПолучитьИзВременногоХранилища(АдресРезультата);
	Если ТипЗнч(РезультатПроверки) <> Тип("Структура")
		Или Не РезультатПроверки.Свойство("ДокументыСОшибками") Тогда
		Возврат;
	КонецЕсли;
	
	Макет = Обработки.ПроверкаЗаписейРегистраБухгалтерии.ПолучитьМакет("Макет");
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	Результат.Вывести(ОбластьЗаголовок);
	
	Если РезультатПроверки.ДокументыСОшибками.Количество() = 0 Тогда
		ОбластьНетОшибок = Макет.ПолучитьОбласть("НетОшибок");
		Результат.Вывести(ОбластьНетОшибок);
		Возврат;
	КонецЕсли;
	
	Если РежимИсправления Тогда
		ОбластьПодзаголовок = Макет.ПолучитьОбласть("ИсправленыОшибки");
	Иначе
		ОбластьПодзаголовок = Макет.ПолучитьОбласть("ЕстьОшибки");
	КонецЕсли;
	Результат.Вывести(ОбластьПодзаголовок);
	ОбластьЗаголовокСписка = Макет.ПолучитьОбласть("ЗаголовокСписка");
	Результат.Вывести(ОбластьЗаголовокСписка);
	Результат.ФиксацияСверху = Результат.ВысотаТаблицы;
	
	ОбластьДокумент = Макет.ПолучитьОбласть("Документ");
	Для каждого ДокументСОшибками Из РезультатПроверки.ДокументыСОшибками Цикл
		ОбластьДокумент.Параметры.Документ = ДокументСОшибками;
		Результат.Вывести(ОбластьДокумент);
	КонецЦикла;

КонецПроцедуры 

#КонецОбласти