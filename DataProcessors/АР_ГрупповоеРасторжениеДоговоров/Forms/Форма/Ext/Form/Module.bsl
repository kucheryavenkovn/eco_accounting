
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

&НаСервере
Процедура СформироватьДокументыНаСервере()
	
	СхемаКомпоновкиДанных = Обработки.АР_ГрупповоеРасторжениеДоговоров.ПолучитьМакет("Макет");;
	НастройкиКомпоновки = КомпоновщикНастроек.Настройки;
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	Попытка 
		МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, НастройкиКомпоновки, , , Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
		
		ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
		ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, , , Истина);
		
		ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
		
		ТаблицаЗначений =  Новый ТаблицаЗначений;
		
		ПроцессорВывода.УстановитьОбъект(ТаблицаЗначений);
		ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	Исключение
		Возврат;
	КонецПопытки;
	
	СписокКонтрагентов = Новый СписокЗначений;
	СписокДоговоров = Новый СписокЗначений;
	
	СписокКонтрагентов.ЗагрузитьЗначения(ТаблицаЗначений.ВыгрузитьКолонку("КонтрагентСсылка"));
	СписокДоговоров.ЗагрузитьЗначения(ТаблицаЗначений.ВыгрузитьКолонку("ДоговорСсылка"));
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	АР_СтатусыОбъектовАрендыСрезПоследних.Услуга КАК Услуга,
	|	АР_СтатусыОбъектовАрендыСрезПоследних.ОбъектАренды КАК ОбъектАренды,
	|	АР_СтатусыОбъектовАрендыСрезПоследних.ДатаНачалаАренды КАК ДатаНачалаСрокаАренды,
	|	ВЫБОР
	|		КОГДА АР_СтатусыОбъектовАрендыСрезПоследних.ДатаОкончанияАренды < &ДатаОкончания
	|			ТОГДА АР_СтатусыОбъектовАрендыСрезПоследних.ДатаОкончанияАренды
	|		ИНАЧЕ &ДатаОкончания
	|	КОНЕЦ КАК ДатаОкончанияСрокаАренды,
	|	АР_СтавкиСрезПоследних.Ставка КАК Ставка,
	|	АР_СтавкиСрезПоследних.СпособНачисления КАК СпособНачисления,
	|	ВЫБОР
	|		КОГДА АР_СтавкиСрезПоследних.СпособНачисления.ВариантРасчета = ЗНАЧЕНИЕ(Перечисление.АР_ВариантыРасчета.ПоСтавкеЗаОбъектВЦелом)
	|			ТОГДА 1
	|		ИНАЧЕ АР_СтавкиСрезПоследних.Площадь
	|	КОНЕЦ КАК Количество,
	|	АР_СтатусыОбъектовАрендыСрезПоследних.Услуга.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	АР_СтатусыОбъектовАрендыСрезПоследних.Счетчик КАК Счетчик,
	|	АР_СтатусыОбъектовАрендыСрезПоследних.КоэффициентОтнесенияСчетчика КАК КоэффициентОтнесенияСчетчика,
	|	АР_СтатусыОбъектовАрендыСрезПоследних.Услуга.АР_ПостояннаяЧастьОплаты КАК ПостояннаяЧасть,
	|	АР_СтатусыОбъектовАрендыСрезПоследних.ЗаключениеДоговора КАК ЗаключениеДоговора
	|ИЗ
	|	РегистрСведений.АР_СтатусыОбъектовАренды.СрезПоследних(
	|			&ДатаСреза,
	|			ЗаключениеДоговора.Контрагент В (&СписокКонтрагентов)
	|				И ЗаключениеДоговора.ДоговорКонтрагента В (&СписокДоговоров)) КАК АР_СтатусыОбъектовАрендыСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АР_Ставки.СрезПоследних(
	|				&ДатаСреза,
	|				СрокДействия >= &ДатаСреза
	|					ИЛИ СрокДействия = ДАТАВРЕМЯ(1, 1, 1)) КАК АР_СтавкиСрезПоследних
	|		ПО АР_СтатусыОбъектовАрендыСрезПоследних.Договор = АР_СтавкиСрезПоследних.Договор
	|			И АР_СтатусыОбъектовАрендыСрезПоследних.ОбъектАренды = АР_СтавкиСрезПоследних.ОбъектАренды
	|			И АР_СтатусыОбъектовАрендыСрезПоследних.Услуга = АР_СтавкиСрезПоследних.Услуга
	|ГДЕ
	|	АР_СтатусыОбъектовАрендыСрезПоследних.ДатаНачалаАренды < &ДатаОкончания
	|	И АР_СтатусыОбъектовАрендыСрезПоследних.ДатаОкончанияАренды > &ДатаОкончания
	|
	|УПОРЯДОЧИТЬ ПО
	|	АР_СтатусыОбъектовАрендыСрезПоследних.Договор.Владелец.Наименование
	|ИТОГИ ПО
	|	ЗаключениеДоговора";
	
	Запрос.УстановитьПараметр("СписокКонтрагентов",СписокКонтрагентов);
	Запрос.УстановитьПараметр("СписокДоговоров",СписокДоговоров);
	Запрос.УстановитьПараметр("ДатаОкончания", Объект.ДатаРасторжения);
	
	ДатаДокумента = Мин(Объект.ДатаРасторжения, ТекущаяДата());
	
	Запрос.УстановитьПараметр("ДатаСреза", ДатаДокумента);
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Выборка.Следующий() Цикл  //по заключениям договора
		
		Расторжение = Документы.АР_РасторжениеДоговораАренды.СоздатьДокумент();
		ЗаполнитьЗначенияСвойств(Расторжение, Выборка.ЗаключениеДоговора,, "Номер,Дата,Проведен,ПометкаУдаления,Ответственный");
		
		Расторжение.Дата = ДатаДокумента;
		Расторжение.ДатаОкончанияДоговора = Объект.ДатаРасторжения;
		Расторжение.Комментарий = "Групповое расторжение договоров от "+Формат(ДатаДокумента, "ДФ = дд.ММ.гггг");
		Расторжение.ДокументОснование = Выборка.ЗаключениеДоговора;
		Расторжение.Ответственный = Пользователи.ТекущийПользователь();
		
		ВыборкаОбъектов = Выборка.Выбрать();
		Пока ВыборкаОбъектов.Следующий() Цикл //по объектам аренды, которые необходимо пролонгировать
			Если ВыборкаОбъектов.ПостояннаяЧасть Тогда
				Стр = Расторжение.ПостояннаяЧастьАренднойПлаты.Добавить();
			Иначе
				Стр = Расторжение.ПеременнаяЧастьАренднойПлаты.Добавить();
			КонецЕсли;
			ЗаполнитьЗначенияСвойств(Стр, ВыборкаОбъектов);
		КонецЦикла;
		
		Попытка
			Расторжение.Записать(РежимЗаписиДокумента.Запись);
			СтрокаТЧ = Объект.СформированныеДокументы.Добавить();
			СтрокаТЧ.Документ = Расторжение.Ссылка;
		Исключение
		КонецПопытки;

	КонецЦикла;
	
	ЗаполнитьСостоянияДокументов();
	
	ТекстСообщения = НСтр("ru = 'Формирование документов завершено'");
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСостоянияДокументов()
	
	Для каждого СтрокаТЧ Из Объект.СформированныеДокументы Цикл
		Если СтрокаТЧ.Документ.Проведен Тогда
			СтрокаТЧ.СостояниеДокумента = 1;
		ИначеЕсли СтрокаТЧ.Документ.ПометкаУдаления Тогда
			СтрокаТЧ.СостояниеДокумента = 2;
		Иначе
			СтрокаТЧ.СостояниеДокумента = 0;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ИнициализироватьКомпоновщикНастроек()
	
	СхемаКомпоновкиДанных = Обработки.АР_ГрупповоеРасторжениеДоговоров.ПолучитьМакет("Макет");
	КомпоновщикНастроек = Новый КомпоновщикНастроекКомпоновкиДанных;
	КомпоновщикНастроек.Инициализировать(
		Новый ИсточникДоступныхНастроекКомпоновкиДанных(ПоместитьВоВременноеХранилище(СхемаКомпоновкиДанных, ЭтаФорма.УникальныйИдентификатор))
	);
	КомпоновщикНастроек.ЗагрузитьНастройки(СхемаКомпоновкиДанных.НастройкиПоУмолчанию);
	
КонецПроцедуры

&НаСервере
Процедура ПровестиДокументыНаСервере()
	
	Для каждого СтрокаТЧ из Объект.СформированныеДокументы Цикл
		Если СтрокаТЧ.Пометка Тогда
			ДокументОбъект = СтрокаТЧ.Документ.ПолучитьОбъект();
			Если ДокументОбъект <> Неопределено И НЕ ДокументОбъект.ПометкаУдаления Тогда
				Попытка
					Если ДокументОбъект.ПроверитьЗаполнение() Тогда
						ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
						СтрокаТЧ.Пометка = Ложь;
					КонецЕсли;
				Исключение
				КонецПопытки;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	ЗаполнитьСостоянияДокументов();
	
КонецПроцедуры

&НаСервере
Процедура ПометитьНаУдалениеНаСервере()
	
	Для каждого СтрокаТЧ из Объект.СформированныеДокументы Цикл
		Если СтрокаТЧ.Пометка Тогда
			ДокументОбъект = СтрокаТЧ.Документ.ПолучитьОбъект();
			Если ДокументОбъект <> Неопределено Тогда
				Попытка
					ДокументОбъект.УстановитьПометкуУдаления(НЕ ДокументОбъект.ПометкаУдаления);;
					СтрокаТЧ.Пометка = Ложь;
				Исключение
				КонецПопытки;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	ЗаполнитьСостоянияДокументов();
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьВнешниеПечатныеФормы(СписокПечатныхФорм)

	ДоступныеКомандыПечати = ДополнительныеОтчетыИОбработки.НовыйЗапросПоДоступнымКомандам(
		Перечисления.ВидыДополнительныхОтчетовИОбработок.ПечатнаяФорма,
		"Документ.АР_РасторжениеДоговораАренды",
		ЛОЖЬ).Выполнить().Выгрузить();
	
	Для Каждого КомандаПечати Из ДоступныеКомандыПечати Цикл
		СписокПечатныхФорм.Добавить(Новый Структура("Идентификатор, Ссылка, Внешняя", КомандаПечати.Идентификатор, КомандаПечати.Ссылка, Истина), КомандаПечати.Представление);
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Функция ПолучитьСписокПечатныхФорм()
	
	СписокПечатныхФорм = Новый СписокЗначений;
	СписокПечатныхФорм.Добавить("ПередаточныйАкт", "Передаточный акт");
	СписокПечатныхФорм.Добавить("СоглашениеОРасторжении", "Соглашение о расторжении");
	
	ДобавитьВнешниеПечатныеФормы(СписокПечатныхФорм);
	
	Возврат СписокПечатныхФорм;
	
КонецФункции

&НаКлиенте
Процедура ВыполнитьПечатьНаКлиенте(ПечатнаяФорма, НаПринтер)
	
	МассивДокументов = Новый Массив;	
	Для каждого СтрокаТЧ Из Объект.СформированныеДокументы Цикл
		Если СтрокаТЧ.Пометка Тогда
			МассивДокументов.Добавить(СтрокаТЧ.Документ);
		КонецЕсли;
	КонецЦикла;
	
	Если МассивДокументов.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ПечатнаяФорма", ПечатнаяФорма);
	ДополнительныеПараметры.Вставить("НаПринтер", НаПринтер);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыполнитьПечатьНаКлиентеЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	УправлениеПечатьюКлиент.ПроверитьПроведенностьДокументов(ОписаниеОповещения, МассивДокументов, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьПечатьНаКлиентеЗавершение(МассивДокументов, ДополнительныеПараметры) Экспорт
	
	ЗаполнитьСостоянияДокументов();
	
	ПечатнаяФорма = ДополнительныеПараметры.ПечатнаяФорма;
	НаПринтер = ДополнительныеПараметры.НаПринтер;
	
	Если ТипЗнч(ПечатнаяФорма) = Тип("Структура") Тогда
	    ДополнительныеОтчетыИОбработкиКлиент.ВыполнитьОткрытиеПечатнойФормы(ПечатнаяФорма, ЭтаФорма, МассивДокументов);
	ИначеЕсли НаПринтер Тогда
		УправлениеПечатьюКлиент.ВыполнитьКомандуПечатиНаПринтер("Документ.АР_РасторжениеДоговораАренды", ПечатнаяФорма, МассивДокументов, Неопределено);
	Иначе
		УправлениеПечатьюКлиент.ВыполнитьКомандуПечати("Документ.АР_РасторжениеДоговораАренды", ПечатнаяФорма, МассивДокументов, ЭтаФорма, Неопределено);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьПараметрыВыбораЗначенияОтбора() Экспорт
	
	СписокПараметров = Новый Структура;
	СписокПараметров.Вставить("Организация", Неопределено);
	СписокПараметров.Вставить("Контрагент", Неопределено);
	
	Возврат СписокПараметров;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ УПРАВЛЕНИЯ ВНЕШНИМ ВИДОМ ФОРМЫ

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Объект.ДатаРасторжения = ТекущаяДата();
		
	ИнициализироватьКомпоновщикНастроек();
		
	Настройки = АР_ОбщиеПроцедуры.ПолучитьНастройкиГрупповыхОбработок();
	Если НЕ Настройки = Неопределено И Настройки.Свойство("УчетнаяЗаписьЭлектроннойПочты") Тогда
		УчетнаяЗаписьЭлектроннойПочты = Настройки.УчетнаяЗаписьЭлектроннойПочты;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если НЕ ЗавершениеРаботы Тогда
		АР_ОбщиеПроцедуры.СохранитьНастройкиГрупповыхОбработок(Новый Структура("УчетнаяЗаписьЭлектроннойПочты", УчетнаяЗаписьЭлектроннойПочты));
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

&НаКлиенте
Процедура СформироватьДокументы(Команда)
	
	Если Объект.СформированныеДокументы.Количество() > 0 Тогда
		
		Оповещение = Новый ОписаниеОповещения("СпроситьобОчисткеСформированныхДокументов", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, "Таблица сформированных документов будет очищена. Продолжить?", РежимДиалогаВопрос.ДаНет, 0, КодВозвратаДиалога.Нет);	
		
	Иначе
		СформироватьДокументыЗавершение();
	КонецЕсли;
	
	Оповестить("ГрупповоеСозданиеДокументов_Расторжение")
	
КонецПроцедуры

&НаКлиенте
Процедура СпроситьобОчисткеСформированныхДокументов(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		СформироватьДокументыЗавершение();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьДокументыЗавершение()
	
	Объект.СформированныеДокументы.Очистить();
	Если ЭтаФорма.ПроверитьЗаполнение() Тогда
		СформироватьДокументыНаСервере();
		Элементы.Страницы.ТекущаяСтраница = Элементы.ГруппаСформированныеДокументы;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПометки(Команда)
	
	Для каждого СтрокаТЧ Из Объект.СформированныеДокументы Цикл
		СтрокаТЧ.Пометка = Истина;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьПометки(Команда)
	
	Для каждого СтрокаТЧ Из Объект.СформированныеДокументы Цикл
		СтрокаТЧ.Пометка = Ложь;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура Провести(Команда)
	
	ПровестиДокументыНаСервере();
	
	Оповестить("ГрупповоеСозданиеДокументов_Расторжение")
	
КонецПроцедуры

&НаКлиенте
Процедура ПометитьНаУдаление(Команда)
	
	ПометитьНаУдалениеНаСервере();
	
	Оповестить("ГрупповоеСозданиеДокументов_Расторжение")
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьПросмотр(Команда)
	
	СписокПечатныхФорм = ПолучитьСписокПечатныхФорм();
	ОписаниеОповещения = Новый ОписаниеОповещения("ПечатьЗавершение", ЭтаФорма, Ложь);
	
	СтруктураПараметров = Новый Структура("Заголовок, Список",
		НСтр("ru = 'Выберите печатную форму'"),
		СписокПечатныхФорм);
	
	ОткрытьФорму("ОбщаяФорма.АР_ФормаВыбораИзСписка", СтруктураПараметров, ЭтотОбъект,,,, ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьНаПринтер(Команда)
	
	СписокПечатныхФорм = ПолучитьСписокПечатныхФорм();
	ОписаниеОповещения = Новый ОписаниеОповещения("ПечатьЗавершение", ЭтаФорма, Истина);
	
	СтруктураПараметров = Новый Структура("Заголовок, Список",
		НСтр("ru = 'Выберите печатную форму'"),
		СписокПечатныхФорм);
	
	ОткрытьФорму("ОбщаяФорма.АР_ФормаВыбораИзСписка", СтруктураПараметров, ЭтотОбъект,,,, ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьПоЭлектроннойПочте(Команда)
	
	МассивДокументов = Новый Массив;
	Для Каждого СтрокаТЧ Из Объект.СформированныеДокументы Цикл
		Если СтрокаТЧ.Пометка Тогда
			МассивДокументов.Добавить(СтрокаТЧ.Документ);
		КонецЕсли;
	КонецЦикла;
	
	Если МассивДокументов.Количество() > 0 Тогда
		АР_ОбщиеПроцедурыКлиент.ОтправитьПоЭлектроннойПочте(МассивДокументов, "АР_РасторжениеДоговораАренды", УчетнаяЗаписьЭлектроннойПочты);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьНастройкуГрупповыхОбработок(Команда)
	
	АР_ОбщиеПроцедурыКлиент.ОткрытьНастройкуГрупповыхОбработок(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьЗавершение(ВыбранныйЭлемент, НаПринтер) Экспорт
	
	Если НЕ ВыбранныйЭлемент = Неопределено Тогда
		ВыполнитьПечатьНаКлиенте(ВыбранныйЭлемент.Значение, НаПринтер);
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ШАПКИ

&НаКлиенте
Процедура СформированныеДокументыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Попытка
		ПоказатьЗначение(, Элементы.СформированныеДокументы.ТекущиеДанные.Документ);
	Исключение
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборыПравоеЗначениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СписокПараметров = ПолучитьПараметрыВыбораЗначенияОтбора();
	АР_ОбщиеПроцедурыКлиент.ОтборыПравоеЗначениеНачалоВыбора(ЭтаФорма, Элемент, ДанныеВыбора, СтандартнаяОбработка, СписокПараметров);
	
КонецПроцедуры
