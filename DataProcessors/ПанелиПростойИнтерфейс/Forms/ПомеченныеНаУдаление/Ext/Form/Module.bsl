#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Элементы.СписокУдалитьВсе.Видимость = Пользователи.ЭтоПолноправныйПользователь();
	
	ФоновоеЗадание = ФоновоеЗаданиеОбновитьДерево();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОжидатьЗавершенияОбновленияДерева();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ПометкаНаУдаление_Установка" Тогда
		ОбновитьДерево();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	Если Элемент.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЭтоЭлементСписка = ЗначениеЗаполнено(Элемент.ТекущиеДанные.Ссылка);
	Элементы.СписокВосстановить.Доступность = ЭтоЭлементСписка;
	Элементы.СписокВосстановитьКонтекстноеМеню.Доступность = ЭтоЭлементСписка;
	Элементы.СписокИзменитьКонтекстноеМеню.Доступность = ЭтоЭлементСписка;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломИзменения(Элемент, Отказ)
	
	Ссылка = Элемент.ТекущиеДанные.Ссылка;
	
	Если ЗначениеЗаполнено(Ссылка) Тогда
		ПоказатьЗначение(, Ссылка);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Восстановить(Команда)
	
	Если Элементы.Список.ВыделенныеСтроки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ЭлементыДляВосстановления = Новый Массив;
	СсылкиДляВосстановления = Новый Массив;
	ВосстанавливаемыеТипы = Новый Массив;
	
	Для каждого Идентификатор Из Элементы.Список.ВыделенныеСтроки Цикл
		ЭлементСписка = Список.НайтиПоИдентификатору(Идентификатор);
		Ссылка = ЭлементСписка.Ссылка;
		Если ЗначениеЗаполнено(Ссылка) Тогда
			ЭлементыДляВосстановления.Добавить(ЭлементСписка);
			СсылкиДляВосстановления.Добавить(Ссылка);
			
			ТипСсылки = ТипЗнч(Ссылка);
			Если ВосстанавливаемыеТипы.Найти(ТипСсылки) = Неопределено Тогда
				ВосстанавливаемыеТипы.Добавить(ТипСсылки);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если ЭлементыДляВосстановления.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ВосстановитьНаСервере(СсылкиДляВосстановления);
	
	Для каждого ВосстанавливаемыйТип Из ВосстанавливаемыеТипы Цикл
		ОповеститьОбИзменении(ВосстанавливаемыйТип);
	КонецЦикла;
	
	Для каждого ЭлементСписка Из ЭлементыДляВосстановления Цикл
		Родитель = ЭлементСписка.ПолучитьРодителя();
		
		ЭлементыУзла = Родитель.ПолучитьЭлементы();
		ЭлементыУзла.Удалить(ЭлементыУзла.Индекс(ЭлементСписка));
		
		Если ЭлементыУзла.Количество() = 0 Тогда
			Список.ПолучитьЭлементы().Удалить(Список.ПолучитьЭлементы().Индекс(Родитель));
		Иначе
			Родитель.Представление = СтрШаблон("%1 (%2)", Родитель.ВидОбъекта, ЭлементыУзла.Количество());
		КонецЕсли;
	КонецЦикла;
	
	ЗаголовокОповещенияПользователя = НСтр("ru='Восстановление'");
	
	Если ЭлементыДляВосстановления.Количество() = 1 Тогда
		ПоказатьОповещениеПользователя(
			ЗаголовокОповещенияПользователя,
			ПолучитьНавигационнуюСсылку(Ссылка),
			Строка(Ссылка)
		);
	Иначе
		ПоказатьОповещениеПользователя(
			ЗаголовокОповещенияПользователя,,
			СтрШаблон(НСтр("ru='Восстановлено: %1'"), ЭлементыДляВосстановления.Количество())
		);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	
	ОбновитьДерево();
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьВсе(Команда)
	
	УдалениеПомеченныхОбъектов = ПолучитьФорму("Обработка.УдалениеПомеченныхОбъектов.Форма",, ЭтотОбъект);
	УдалениеПомеченныхОбъектов.ОписаниеОповещенияОЗакрытии = Новый ОписаниеОповещения("ПослеОчистки", ЭтотОбъект);
	УдалениеПомеченныхОбъектов.Открыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура УстановитьРежимОжидания(ВыполняетсяФоновоеЗадание)
	
	Элементы.Список.Видимость = НЕ ВыполняетсяФоновоеЗадание;
	Элементы.ГруппаОжидание.Видимость = ВыполняетсяФоновоеЗадание;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДерево()
	
	ФоновоеЗадание = ФоновоеЗаданиеОбновитьДерево();
	
	ОжидатьЗавершенияОбновленияДерева();
	
КонецПроцедуры

&НаСервере
Функция ФоновоеЗаданиеОбновитьДерево()
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.ОжидатьЗавершение = 0;
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru='Обновление мусорной корзины'");
	Возврат ДлительныеОперации.ВыполнитьВФоне("Обработки.ПанелиПростойИнтерфейс.ПолучитьДеревоПомеченныхНаУдалениеВФоне",
		Неопределено, ПараметрыВыполнения);
	
КонецФункции

&НаКлиенте
Процедура ОбработатьРезультатОбновленияДерева(Результат, ДополнительныеПараметры) Экспорт
	
	УстановитьРежимОжидания(Ложь);
	
	ФоновоеЗадание = Неопределено;
	
	Если ТипЗнч(Результат) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат.Статус = "Выполнено" Тогда
		УстановитьДанныеСписка(Результат.АдресРезультата);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОжидатьЗавершенияОбновленияДерева()
	
	УстановитьРежимОжидания(Истина);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	ПараметрыОжидания.Интервал = 1;
	ОповещениеОЗавершении = Новый ОписаниеОповещения("ОбработатьРезультатОбновленияДерева", ЭтотОбъект);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ФоновоеЗадание, ОповещениеОЗавершении, ПараметрыОжидания);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДанныеСписка(АдресДанных)
	
	ЗначениеВРеквизитФормы(ПолучитьИзВременногоХранилища(АдресДанных), "Список");
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеОчистки(Результат, ДополнительныеПараметры) Экспорт
	
	ОбновитьДерево();
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ВосстановитьНаСервере(Знач Ссылки)
	
	Для каждого Ссылка Из Ссылки Цикл
		Ссылка.ПолучитьОбъект().УстановитьПометкуУдаления(Ложь);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
