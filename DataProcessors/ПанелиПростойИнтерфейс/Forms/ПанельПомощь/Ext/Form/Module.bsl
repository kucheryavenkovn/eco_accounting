#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИспользоватьРазделениеПоОбластямДанных = РаботаВМоделиСервиса.РазделениеВключено()
		И РаботаВМоделиСервиса.ДоступноИспользованиеРазделенныхДанных();
	
	Элементы.ГруппаЕслиОсталисьВопросы.Видимость = ИспользоватьРазделениеПоОбластямДанных
		И ИнформационныйЦентрСервер.УстановленаИнтеграцияСоСлужбойПоддержки();
	
	Элементы.ГруппаСообщениеОНенайденном.Видимость = ИспользоватьРазделениеПоОбластямДанных;
	Элементы.ГруппаЗагрузкаДанных.Видимость = ИспользоватьРазделениеПоОбластямДанных
		И ПравоДоступа("Использование", Метаданные.Обработки.ЗагрузкаДанныхИзДругойУчетнойСистемы);
	
	Элементы.ГруппаТехническаяПоддержка.Видимость = НЕ ИспользоватьРазделениеПоОбластямДанных;
	Элементы.ДополнительнаяИнформация.Видимость = НЕ ИспользоватьРазделениеПоОбластямДанных;
	
	Элементы.ГруппаНовостиИОбновления.Видимость = ПолучитьФункциональнуюОпцию("РазрешенаРаботаСНовостями");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СообщитьОНенайденном(Команда)
	
	Если ПустаяСтрока(ТекстСообщения) Тогда
		ТекстПредупреждения = НСтр("ru='Напишите, что не удалось найти.'");
		ПоказатьПредупреждение(, ТекстПредупреждения);
		ТекущийЭлемент = Элементы.ТекстСообщения;
		Возврат;
	КонецЕсли;
	
	ЖурналРегистрацииКлиент.ДобавитьСообщениеДляЖурналаРегистрации(
		СобытиеЖурналаРегистрацииСообщение(),
		,
		ТекстСообщения,
		,
		Истина); // Сообщение сразу записываем.
	ПоказатьОповещениеПользователя(НСтр("ru='Сообщение отправлено'"), , ТекстСообщения);
	
	ТекстСообщения = "";	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура КакВключитьОтключитьРазделыОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ТекущаяСтраница", "ГруппаДокументы");
	ОткрытьФорму("Обработка.ФункциональностьПрограммы.Форма", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура КакВключитьОтключитьУчетПоДоговорамОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ТекущаяСтраница", "ГруппаУчетПоДоговорам");
	ОткрытьФорму("Обработка.ФункциональностьПрограммы.Форма", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура КакПоказатьСкрытьСчетаУчетаОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОткрытьФорму("ОбщаяФорма.ПерсональныеНастройки");
	
КонецПроцедуры

&НаКлиенте
Процедура КакВключитьПолныйПростойИнтерфейсОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОткрытьФорму("Обработка.ПанельАдминистрированияБП.Форма.Интерфейс");
	
КонецПроцедуры

&НаКлиенте
Процедура КакПосмотретьИзменитьСистемуНалогообложенияОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Организация = ОбщегоНазначенияБПВызовСервера.ПолучитьЗначениеПоУмолчанию("ОсновнаяОрганизация");
	
	ПараметрыФормыНалогиИОтчеты = Новый Структура;
	ПараметрыФормыНалогиИОтчеты.Вставить("Организация", Организация);
	
	ОткрытьФорму("ОбщаяФорма.НалогиИОтчеты", ПараметрыФормыНалогиИОтчеты, , Организация);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбращенияВСлужбуПоддержкиОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "ОткрытьОбращенияВСлужбуПоддержки" Тогда
		ИнформационныйЦентрКлиент.ОткрытьОбращенияВСлужбуПоддержки();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НовостиИОбновленияОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "Новости" Тогда
		ОткрытьФорму("Справочник.Новости.Форма.ФормаПросмотраНовостей",,, "");
	ИначеЕсли НавигационнаяСсылкаФорматированнойСтроки = "ЧтоНовогоВПрограмме" Тогда
		ОбщегоНазначенияБПКлиент.ПоказатьОбновления(НСтр("ru='Что нового в программе'"));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбращениеВТехническуюПоддержкуОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура("ТипСообщения", НавигационнаяСсылкаФорматированнойСтроки);
	ОткрытьФорму("Обработка.ОбращениеВТехническуюПоддержку.Форма.ОбращениеВПоддержку", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузкаДанныхИзДругойСистемыОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОткрытьФорму("Обработка.ЗагрузкаДанныхИзДругойУчетнойСистемы.Форма");

КонецПроцедуры

#КонецОбласти

#Область СлужебныеФункцииИПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция СобытиеЖурналаРегистрацииСообщение()

	КодЯзыка = ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка();
	ШаблонТекста = НСтр("ru='%1.Сообщение'", КодЯзыка);
	Возврат СтрШаблон(ШаблонТекста, ГруппаСобытийЖурналаРегистрации());

КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ГруппаСобытийЖурналаРегистрации()
	
	КодЯзыка  = ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка();
	Возврат НСтр("ru='Помощь БизнесСтарт'", КодЯзыка);

КонецФункции

#КонецОбласти
