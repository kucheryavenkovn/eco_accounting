#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЦветСтатусаВыполняетсяЗагрузка = ЦветаСтиля.СтатусВыполняетсяЗагрузка;
	ЦветСтатусаДанныеЗагружены = ЦветаСтиля.СтатусДанныеЗагружены;
	
	ПодготовитьФормуНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Массив") Тогда
		Файлы.Очистить();
		Для Каждого ОписаниеФайла Из ВыбранноеЗначение Цикл
			Если Не ЗначениеЗаполнено(ОписаниеФайла.ДвоичныеДанные) Тогда
				ОписаниеФайла.ДвоичныеДанные = ПолучитьИзВременногоХранилища(ОписаниеФайла.Хранение);
			КонецЕсли;
			Строка = Файлы.Добавить();
			ЗаполнитьЗначенияСвойств(Строка, ОписаниеФайла);
		КонецЦикла;
		АдресХранилища = ПоместитьВоВременноеХранилище(ВыбранноеЗначение, УникальныйИдентификатор);
		ОбработатьФайлДляЗагрузки();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если Не Элементы.Организация.Видимость И Не ЗначениеЗаполнено(Организация) Тогда
		Отказ = Истина;
		ПоказатьПредупреждение( ,
			НСтр("ru = 'Для загрузки данных из другой учетной системы создайте в базе хотя бы одну организацию'"));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗагрузитьСправочникиИДокументы(Команда)
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	СтатусОбъектов = СтатусОбъектовВыполняетсяЗагрузка();
	
	Элементы.ГруппаОрганизацияИФайл.Доступность = Ложь;
	
	УправлениеФормой(ЭтотОбъект);
	
	ПодключитьОбработчикОжидания("ЗагрузитьДанные", 0.1, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьФайлы(Команда)
	
	ВыбранныеФайлы = Новый Массив;
	Для каждого ДанныеФайла Из Файлы Цикл
		СвойстваФайла = ЗагрузкаДанныхИзДругихУчетныхСистемКлиентСервер.НовыеСвойстваФайла();
		ЗаполнитьЗначенияСвойств(СвойстваФайла, ДанныеФайла);
		ВыбранныеФайлы.Добавить(СвойстваФайла);
	КонецЦикла;
	ПараметрыОткрываемойФормы = Новый Структура;
	ПараметрыОткрываемойФормы.Вставить("ВыбранныеФайлы", ВыбранныеФайлы);
	ОткрытьФорму(
		"Обработка.ЗагрузкаДанныхИзДругойУчетнойСистемы.Форма.ВыбранныеФайлы",
		ПараметрыОткрываемойФормы,
		ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПодготовитьФормуНаСервере()
	
	ДоступноНесколькоОрганизаций =
		Обработки.ФункциональностьПрограммы.ДоступнаФункциональностьУчетПоНесколькимОрганизациям();
	КоличествоОрганизаций = Справочники.Организации.КоличествоОрганизаций();
	
	Элементы.Организация.Видимость = ДоступноНесколькоОрганизаций И КоличествоОрганизаций > 0;
	Организация = Справочники.Организации.ОрганизацияПоУмолчанию();
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Элементы = Форма.Элементы;
	
	ЗаполненСтатусОбъектов = ЗначениеЗаполнено(Форма.СтатусОбъектов);
	ВыполняетсяЧтение      = Форма.СтатусОбъектов = СтатусОбъектовВыполняетсяЧтение();
	ДанныеПрочитаны        = Форма.СтатусОбъектов = СтатусОбъектовНайденыДанные();
	ЗавершеноСОшибками     = Форма.СтатусОбъектов = СтатусОбъектовОшибка();
	ВыполняетсяЗагрузка    = Форма.СтатусОбъектов = СтатусОбъектовВыполняетсяЗагрузка();
	ЗагруженыДанные        = Форма.СтатусОбъектов = СтатусОбъектовДанныеЗагружены();
	
	Элементы.ГруппаДлительнаяОперация.Видимость = ВыполняетсяЧтение;
	Элементы.ГруппаСправочникиИДокументы.Видимость = ЗаполненСтатусОбъектов И Не ВыполняетсяЧтение;
	Элементы.НадписьСтатусОбъектов.Видимость = ЗаполненСтатусОбъектов И Не ВыполняетсяЧтение
		И Не ЗавершеноСОшибками И Не ДанныеПрочитаны;
	
	Элементы.ЗагрузитьСправочникиИДокументы.Видимость = ДанныеПрочитаны;
	
	ИменаОбъектов = МассивИменОбъектов();
	Для Каждого ИмяОбъекта Из ИменаОбъектов Цикл
		ИмяРеквизита = СтрШаблон("Надпись%1", ИмяОбъекта);
		ВидимостьРеквизитов = ЗначениеЗаполнено(Форма[ИмяРеквизита]) И Не ЗавершеноСОшибками;
		
		Элементы[СтрШаблон("Группа%1", ИмяОбъекта)].Видимость = ВидимостьРеквизитов;
		Элементы[СтрШаблон("ДекорацияПрочитано%1", ИмяОбъекта)].Видимость = ВидимостьРеквизитов И ДанныеПрочитаны;
		Элементы[СтрШаблон("ДекорацияЗагружается%1", ИмяОбъекта)].Видимость = ВидимостьРеквизитов И ВыполняетсяЗагрузка;
		Элементы[СтрШаблон("ДекорацияЗагружено%1", ИмяОбъекта)].Видимость = ВидимостьРеквизитов И ЗагруженыДанные;
	КонецЦикла;
	
	Элементы[СтрШаблон("Группа%1", ИмяОперацииПроведенияДокументов())].Видимость =
		ВыполняетсяЗагрузка Или ЗагруженыДанные;
	Элементы[СтрШаблон("Надпись%1", ИмяОперацииПроведенияДокументов())].Видимость =
		ВыполняетсяЗагрузка Или ЗагруженыДанные;
	Элементы[СтрШаблон("ДекорацияЗагружается%1", ИмяОперацииПроведенияДокументов())].Видимость = ВыполняетсяЗагрузка;
	Элементы[СтрШаблон("ДекорацияЗагружено%1", ИмяОперацииПроведенияДокументов())].Видимость = ЗагруженыДанные;
	
	Элементы.ДекорацияСтатусВыполняетсяЗагрузка.Видимость = ВыполняетсяЗагрузка;
	Элементы.ДекорацияСтатусДанныеЗагружены.Видимость = ЗагруженыДанные;
	Если ВыполняетсяЗагрузка Тогда
		Элементы.НадписьСтатусОбъектов.ЦветТекста = Форма.ЦветСтатусаВыполняетсяЗагрузка;
	ИначеЕсли ЗагруженыДанные Тогда
		Элементы.НадписьСтатусОбъектов.ЦветТекста = Форма.ЦветСтатусаДанныеЗагружены;
	КонецЕсли;
	
	Элементы.СообщенияОбОшибках.Видимость = ЗавершеноСОшибками;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьДанные()
	
	ДлительнаяОперация = ЗагрузитьДанныеНаСервере(АдресРезультата, УникальныйИдентификатор, Организация);
	
	ОповещениеОПрогрессеВыполнения = Новый ОписаниеОповещения("ОбновитьСтатусЗагрузки", ЭтотОбъект);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	ПараметрыОжидания.ОповещениеОПрогрессеВыполнения = ОповещениеОПрогрессеВыполнения;
	Обработчик = Новый ОписаниеОповещения("ЗагрузитьДанныеЗавершение", ЭтотОбъект);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, Обработчик, ПараметрыОжидания);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция МассивИменОбъектов()
	
	МассивИмен = Новый Массив;
	МассивИмен.Добавить("АвансовыйОтчет");
	МассивИмен.Добавить("Контрагенты");
	МассивИмен.Добавить("Номенклатура");
	МассивИмен.Добавить("ОприходованиеТоваров");
	МассивИмен.Добавить("ОтчетОРозничныхПродажах");
	МассивИмен.Добавить("СписаниеТоваров");
	МассивИмен.Добавить("ПоступлениеТоваров");
	МассивИмен.Добавить("ПоступлениеУслуг");
	МассивИмен.Добавить("РеализацияТоваров");
	МассивИмен.Добавить("ВозвратТоваров");
	МассивИмен.Добавить("РеализацияУслуг");
	МассивИмен.Добавить("СчетПокупателю");
	МассивИмен.Добавить("СчетПоставщика");
	МассивИмен.Добавить("СчетФактура");
	МассивИмен.Добавить("ПоступлениеНаРасчетныйСчет");
	МассивИмен.Добавить("СписаниеСРасчетногоСчета");
	МассивИмен.Добавить("РасходныйКассовыйОрдер");
	МассивИмен.Добавить("ПриходныйКассовыйОрдер");
	
	Возврат МассивИмен;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ИмяОперацииПроведенияДокументов()
	
	Возврат "ПроведениеДокументов";
	
КонецФункции

&НаСервереБезКонтекста
Функция ЗагрузитьДанныеНаСервере(АдресРезультата, УникальныйИдентификатор, Организация)
	
	ПараметрыЗадания = Новый Структура;
	ДанныеЗагрузки = ПолучитьИзВременногоХранилища(АдресРезультата);
	Для Каждого ЭлементДанных Из ДанныеЗагрузки Цикл
		ПараметрыЗадания.Вставить(ЭлементДанных.Ключ, ЭлементДанных.Значение);
	КонецЦикла;
	ПараметрыЗадания.Организация = Организация;
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Загрузка из другой учетной системы.'");
	
	Возврат ДлительныеОперации.ВыполнитьВФоне(
		"Обработки.ЗагрузкаДанныхИзДругойУчетнойСистемы.ЗагрузитьДанные",
		ПараметрыЗадания, ПараметрыВыполнения);

КонецФункции

&НаКлиенте
Процедура ОбновитьСтатусЗагрузки(СтатусВыполнения, ДополнительныеПараметры) Экспорт
	
	Результат = ПрочитатьПрогресс(СтатусВыполнения.ИдентификаторЗадания);
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	МассивРезультатов = СтрРазделить(Результат.Текст, ",");
	
	ДекорацияЗагружается = "ДекорацияЗагружается%1";
	ДекорацияЗагружено = "ДекорацияЗагружено%1";
	
	Для Каждого ТекстРезультат Из МассивРезультатов Цикл
		Элементы[СтрШаблон(ДекорацияЗагружается, ТекстРезультат)].Видимость = Ложь;
		Элементы[СтрШаблон(ДекорацияЗагружено, ТекстРезультат)].Видимость = Истина;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьДанныеЗавершение(ДлительнаяОперация, ДополнительныеПараметры) Экспорт
	
	Элементы.ГруппаОрганизацияИФайл.Доступность = Истина;
	
	Если ДлительнаяОперация = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ДлительнаяОперация.Статус = "Выполнено" Тогда
		НайденныеОрганизации = Неопределено;
		Результат = ПолучитьИзВременногоХранилища(ДлительнаяОперация.АдресРезультата);
		Если Результат.Ошибки <> Неопределено
			И Результат.Ошибки.СписокОшибок.Количество() > 0 Тогда
			ПоказатьОповещениеПользователя(НСтр("ru = 'При загрузке данных произошли ошибки.'"));
			Ошибки = Новый Массив;
			Для Каждого Ошибка Из Результат.Ошибки.СписокОшибок Цикл
				Ошибки.Добавить(Ошибка.ТекстДляОднойОшибки);
			КонецЦикла;
			СообщенияОбОшибках = СтрСоединить(Ошибки, Символы.ПС);
			СтатусОбъектов = СтатусОбъектовОшибка();
			УправлениеФормой(ЭтотОбъект);
			Возврат;
		Иначе
			УстановитьЗначенияФункциональныхОпций();
			СтатусОбъектов = СтатусОбъектовДанныеЗагружены();
			УправлениеФормой(ЭтотОбъект);
			ПоказатьОповещениеПользователя(НСтр("ru = 'Загрузка данных завершена.'"));
		КонецЕсли;
		МассивКомментариев = Новый Массив;
		МассивКомментариев.Добавить(СтрШаблон("Загружены данные в формате %1", Результат.Формат));
		Для Каждого Строка Из Объект.ЗагружаемыеДанные Цикл
			МассивКомментариев.Добавить(СтрШаблон("%1 (%2)", Строка.ПредставлениеОбъекта, Строка.КоличествоОбъектов));
		КонецЦикла;
		СтатистикаПоПоказателямКлиентСервер.ДобавитьСобытие(
			"СтатистикаБП.Обработки.ЗагрузкаДанныхИзДругойУчетнойСистемы",
			СтрСоединить(МассивКомментариев, Символы.ПС));
	ИначеЕсли ДлительнаяОперация.Статус = "Ошибка" Тогда
		СообщенияОбОшибках = ДлительнаяОперация.КраткоеПредставлениеОшибки;
		СтатусОбъектов = СтатусОбъектовОшибка();
		УправлениеФормой(ЭтотОбъект);
		ВызватьИсключение ДлительнаяОперация.КраткоеПредставлениеОшибки;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьФайлДляЗагрузки()
	
	ПараметрыОперации = НовыеПараметрыОперации();
	ЗаполнитьЗначенияСвойств(ПараметрыОперации, ЭтотОбъект);
	
	ДлительнаяОперация = ПодготовитьДанныеДляЗагрузки(ПараметрыОперации, УникальныйИдентификатор, АдресХранилища);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	
	Обработчик = Новый ОписаниеОповещения("ПодготовитьДанныеДляЗагрузкиЗавершение", ЭтотОбъект);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, Обработчик, ПараметрыОжидания);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПодготовитьДанныеДляЗагрузки(ПараметрыОперации, Знач ИдентификаторФормы, АдресХранилища)
	
	ДанныеФайлов = ПолучитьИзВременногоХранилища(АдресХранилища);
	ПараметрыОперации.ДанныеФайлов = ДанныеФайлов;
	УдалитьИзВременногоХранилища(АдресХранилища);
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(ИдентификаторФормы);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания
		= НСтр("ru = 'Подготовка данных к загрузке из другой учетной системы.'");
	
	Возврат ДлительныеОперации.ВыполнитьВФоне(
		"Обработки.ЗагрузкаДанныхИзДругойУчетнойСистемы.ПрочитатьДанныеДляЗагрузки",
		ПараметрыОперации, ПараметрыВыполнения);
	
КонецФункции

&НаСервереБезКонтекста
Функция ПрочитатьПрогресс(ИдентификаторЗадания)
	
	Возврат ДлительныеОперации.ПрочитатьПрогресс(ИдентификаторЗадания);
	
КонецФункции

&НаКлиенте
Процедура УстановитьЗначенияФункциональныхОпций()
	
	РезультатыИзменения = УстановитьЗначенияФункциональныхОпцийНаСервере();
	
	ПослеЗавершенияИзмененияФункциональности(РезультатыИзменения);
	
	ОбновитьИнтерфейс();
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция НовыеПараметрыОперации()
	
	Свойства = Новый Структура;
	Свойства.Вставить("ДанныеФайлов");
	Свойства.Вставить("Организация");
	Возврат Свойства;
	
КонецФункции

&НаКлиенте
Процедура ПодготовитьДанныеДляЗагрузкиЗавершение(ДлительнаяОперация, ДополнительныеПараметры) Экспорт
	
	Если ДлительнаяОперация = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ДлительнаяОперация.Статус = "Выполнено" Тогда
		АдресРезультата = ДлительнаяОперация.АдресРезультата;
		ЗаполнитьЗагружаемыеДанные(ДлительнаяОперация.АдресРезультата);
		
		УправлениеФормой(ЭтотОбъект);
	ИначеЕсли ДлительнаяОперация.Статус = "Ошибка" Тогда
		ВызватьИсключение ДлительнаяОперация.КраткоеПредставлениеОшибки;
	КонецЕсли;
	
	Элементы.ГруппаОрганизацияИФайл.Доступность = Истина;
	ТекущийЭлемент = Элементы.ЗагрузитьСправочникиИДокументы;
	
КонецПроцедуры

&НаСервере
Функция УстановитьЗначенияФункциональныхОпцийНаСервере()
	
	МассивРезультатов = Новый Массив;
	
	МассивОпций = Новый Массив;
	Для Каждого СтрокаДанных Из Объект.ЗагружаемыеДанные Цикл
		Если ЗначениеЗаполнено(СтрокаДанных.ИмяФункциональнойОпции) Тогда
			МассивОпций.Добавить(СтрокаДанных.ИмяФункциональнойОпции);
		КонецЕсли;
	КонецЦикла;
	ОбщегоНазначенияКлиентСервер.СвернутьМассив(МассивОпций);
	
	ИнтерфейсТаксиПростой = Обработки.ФункциональностьПрограммы.ПростойИнтерфейсФункциональности();
	
	Для Каждого ИмяФункциональности Из МассивОпций Цикл
		
		РезультатИзменения = Обработки.ФункциональностьПрограммы.Изменить(
			ИмяФункциональности, Истина, ИзменитьТолькоПростойИнтерфейс(ИнтерфейсТаксиПростой, Истина));
			
		Если Не РезультатИзменения.Отказ Тогда
			МассивРезультатов.Добавить(РезультатИзменения);
		КонецЕсли;
	КонецЦикла;
	
	Возврат МассивРезультатов;
	
КонецФункции

&НаКлиенте
Процедура ПослеЗавершенияИзмененияФункциональности(РезультатыИзменения)
	
	Если РезультатыИзменения.Количество() > 0 Тогда
		ОбновитьПовторноИспользуемыеЗначения();
		ПодключитьОбработчикОжидания("ОбновитьИнтерфейсПрограммы", 1, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьЗагружаемыеДанные(АдресРезультата)
	
	ИменаОбъектов = МассивИменОбъектов();
	Для Каждого ИмяРеквизитаФормы Из ИменаОбъектов Цикл
		ЭтотОбъект[СтрШаблон("Надпись%1", ИмяРеквизитаФормы)] = "";
	КонецЦикла;
	
	РезультатВыполнения = ПолучитьИзВременногоХранилища(АдресРезультата);
	Если РезультатВыполнения.Ошибки <> Неопределено
		И РезультатВыполнения.Ошибки.СписокОшибок.Количество() > 0 Тогда
		Ошибки = Новый Массив;
		Для Каждого Ошибка Из РезультатВыполнения.Ошибки.СписокОшибок Цикл
			Ошибки.Добавить(Ошибка.ТекстДляОднойОшибки);
		КонецЦикла;
		СообщенияОбОшибках = СтрСоединить(Ошибки, Символы.ПС);
		СтатусОбъектов = СтатусОбъектовОшибка();
		Возврат;
	КонецЕсли;
	
	Объект.ЗагружаемыеДанные.Загрузить(РезультатВыполнения.ЗагружаемыеДанные);
	
	СтатусОбъектов =
		?(Объект.ЗагружаемыеДанные.Количество() > 0, СтатусОбъектовНайденыДанные(), СтатусОбъектовОтсутствуют());
	
	ИмяГруппыФормы        = "Группа%1";
	
	Для Каждого СтрокаДанных Из Объект.ЗагружаемыеДанные Цикл
		ТекстНадписи      = СтрШаблон(
			НСтр("ru = '%1 (%2)'"), СтрокаДанных.ПредставлениеОбъекта, СтрокаДанных.КоличествоОбъектов);
		ИмяРеквизитаФормы = СтрШаблон("Надпись%1", СтрокаДанных.ИмяРеквизитаФормы);
		
		ЭтотОбъект[ИмяРеквизитаФормы] = ТекстНадписи;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьИнтерфейсПрограммы()
	
	ОбновитьИнтерфейс();
	#Если ВебКлиент Тогда
		Активизировать();
	#КонецЕсли
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ИзменитьТолькоПростойИнтерфейс(ИнтерфейсТаксиПростой, НовоеЗначение)
	
	Если Не ИнтерфейсТаксиПростой Тогда
		Возврат Ложь;
	КонецЕсли;
	
	// В простом интерфейсе включаются только опции простого интерфейса,
	// опции полного интерфейса включаются отложенно при перезапуске.
	// Отключаются все опции сразу, независимо от принадлежности к интерфейсу.
	Если НовоеЗначение Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

#Область СтатусыОбъектов

&НаКлиентеНаСервереБезКонтекста
Функция СтатусОбъектовВыполняетсяЧтение()
	
	Возврат НСтр("ru = 'Выполняется чтение'");
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция СтатусОбъектовНайденыДанные()
	
	Возврат НСтр("ru = 'Найдены данные для загрузки'");
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция СтатусОбъектовОшибка()
	
	Возврат НСтр("ru = 'Ошибка загрузки'");
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция СтатусОбъектовВыполняетсяЗагрузка()
	
	Возврат НСтр("ru = 'Выполняется загрузка...'");
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция СтатусОбъектовДанныеЗагружены()
	
	Возврат НСтр("ru = 'Данные успешно загружены'");
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция СтатусОбъектовОтсутствуют()
	
	Возврат НСтр("ru = 'Данные для загрузки не найдены'");
	
КонецФункции

#КонецОбласти

#КонецОбласти











