#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗагрузитьЗначенияНастроек();
	
	РеквизитыНовойНоменклатуры = НСтр("ru = 'Реквизиты новой номенклатуры'");
	
	Если ЗагружатьОнлайнОплаты Тогда
		Элементы.СоздаватьНовыхКонтрагентов.Доступность = Ложь;
	КонецЕсли;
	
	Если Параметры.НастройкаРеквизитов Тогда
		Элементы.ФормаВыполнитьОбмен.Видимость        = Ложь;
		Элементы.ГруппаНастройкиПодключения.Видимость = Ложь;
		Элементы.ГруппаСпособыОнлайнОплаты.Видимость  = Ложь;
		Элементы.ГруппаСпособыДоставки.Видимость      = Ложь;
		Элементы.ДатаНачалаОбмена.Видимость           = Ложь;
		Элементы.ГруппаСтатусыЗаказа.Видимость        = Ложь;
		Элементы.ПрефиксНовыхДокументов.Видимость     = Ложь;
		Элементы.Организация.Видимость                = Ложь;
		Элементы.Склад.Видимость                      = Ложь;
		Возврат;
	КонецЕсли;
	
	Если ПустаяСтрока(АдресСайта) Тогда
		
		Организация = БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("ОсновнаяОрганизация");
		Склад = БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("ОсновнойСклад");
		
		CMSИнтернетМагазина = Перечисления.CMSИнтернетМагазина.Bitrix;
		Префикс = ПрефиксПоУмолчанию();
		ВидНоменклатуры = Справочники.ВидыНоменклатуры.ЭлементВидНоменклатурыПоУмолчанию(Ложь);
		
		ДатаНачалаОбмена = НачалоДня(ТекущаяДатаСеанса())-1;
		ЗапрещенныеСтатусы = Новый СписокЗначений;
		ЗапрещенныеСтатусы.Добавить("Новый", НСтр("ru = 'Новый'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()));
		
	КонецЕсли;
	
	СписокВыбора = Элементы.CMSИнтернетМагазина.СписокВыбора;
	Для каждого CMS Из Перечисления.CMSИнтернетМагазина Цикл
		СписокВыбора.Добавить(CMS,,, ОбменСИнтернетМагазином.ЛоготипCMS(CMS));
	КонецЦикла;
	
	УстановитьПредставлениеАдресСайта(ЭтотОбъект);
	
	СпособыОплаты = СпособыОплатыПредставление(Организация);
	СпособыДоставки = СпособыДоставкиПредставление(Организация);
	СтатусЗаказа = СтатусЗаказаПредставлениеСписка(ЗапрещенныеСтатусы);
	
	Элементы.СтатусЗаказа.Доступность = ИспользоватьОтборПостатусам;
	Элементы.СпособыОплаты.Доступность = ЗагружатьОнлайнОплаты;
	Элементы.СпособыДоставки.Доступность = ЗагружатьСпособыДоставки;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция СтатусЗаказаПредставлениеСписка(ЗапрещенныеСтатусы)
	
	ПредставлениеСписка = "";
	Если ЗапрещенныеСтатусы.Количество() = 0 Тогда
		ПредставлениеСписка = НСтр("ru = '<статус не задан>'");
	Иначе
		Для каждого Статус из ЗапрещенныеСтатусы Цикл
			Статус.Значение = ?(ПустаяСтрока(Статус.Значение), НСтр("ru = '<пустой>'"), Статус.Значение);
		КонецЦикла;
		ПредставлениеСписка = СтрСоединить(ЗапрещенныеСтатусы.ВыгрузитьЗначения(), ", ");
	КонецЕсли;
	
	Возврат ПредставлениеСписка;
	
КонецФункции

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если СоздаватьНовуюНоменклатуру тогда
		Если НЕ ЗначениеЗаполнено(ВидНоменклатуры) Тогда
			Отказ = Истина;
			СообщениеОбОшибке = НСтр("ru = 'Необходимо заполнить реквизиты новой номенклатуры'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СообщениеОбОшибке);
		КонецЕсли;
	КонецЕсли;
	
	Если ЗагружатьОнлайнОплаты И НЕ СоздаватьНовыхКонтрагентов Тогда
		Отказ = Истина;
		СообщениеОбОшибке = НСтр("ru = 'Для загрузки данных об онлайн-оплатах необходимо включить ""Создавать новых контрагентов автоматически""'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СообщениеОбОшибке,,"СоздаватьНовыхКонтрагентов");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если НЕ ЗавершениеРаботы И Модифицированность Тогда
		Отказ = Истина;
		ОповещениеЗавершение = Новый ОписаниеОповещения("ВопросСохранитьИзмененияЗавершение", ЭтотОбъект);
		ПоказатьВопрос(ОповещениеЗавершение, НСтр("ru = 'Настройки обмена были изменены. Сохранить изменения?'"), РежимДиалогаВопрос.ДаНетОтмена, , КодВозвратаДиалога.Да);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросСохранитьИзмененияЗавершение(Ответ, ДопПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		
		Если ПроверитьЗаполнение() Тогда
			ЗаписатьВФорме();
		КонецЕсли;
		
	ИначеЕсли Ответ = КодВозвратаДиалога.Нет Тогда
		
		Модифицированность = Ложь;
		Закрыть();
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура РеквизитыНовойНоменклатурыНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура();
	ЗначенияРеквизитов = Новый Структура;
	ЗначенияРеквизитов.Вставить("Родитель",             ГруппаНоменклатуры);
	ЗначенияРеквизитов.Вставить("ВидНоменклатуры",      ВидНоменклатуры);
	ЗначенияРеквизитов.Вставить("НоменклатурнаяГруппа", НоменклатурнаяГруппа);
	
	ПараметрыФормы.Вставить("ЗначенияРеквизитов", ЗначенияРеквизитов);
	ПараметрыФормы.Вставить("ЕстьКолонкаСтавкаНДС",        Истина);
	ПараметрыФормы.Вставить("ЕстьКолонкаЕдиницаИзмерения", Истина);
	
	ОписаниеЗавершения = Новый ОписаниеОповещения("РеквизитыНовойНоменклатурыЗавершение", ЭтотОбъект);
	ОткрытьФорму("ОбщаяФорма.ФормаУстановкиЗначенийРеквизитовНоменклатуры", ПараметрыФормы,,,,,ОписаниеЗавершения);

КонецПроцедуры

&НаКлиенте
Процедура СтатусЗаказаНажатие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ОповещениеОЗакрытии = Новый ОписаниеОповещения("ИзменениеСтатусовЗавершение", ЭтотОбъект);
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("Статусы", ЗапрещенныеСтатусы.ВыгрузитьЗначения());
	ПараметрыФормы.Вставить("НастройкиПодключения", НастройкиПодключения());
	
	ОткрытьФорму("Обработка.ОбменСИнтернетМагазином.Форма.ФормаСпискаСтатусов", ПараметрыФормы, ЭтотОбъект,,,, ОповещениеОЗакрытии);
	
КонецПроцедуры

&НаКлиенте
Процедура ПарольПриИзменении(Элемент)
	ПарольИзменен = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьОтборПостатусамПриИзменении(Элемент)
	
	Элементы.СтатусЗаказа.Доступность = ИспользоватьОтборПостатусам;
	
КонецПроцедуры

&НаКлиенте
Процедура CMSИнтернетМагазинаПриИзменении(Элемент)
	
	УстановитьПредставлениеАдресСайта(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагружатьОнлайнОплатыПриИзменении(Элемент)
	Элементы.СпособыОплаты.Доступность = ЗагружатьОнлайнОплаты;
	ЗагружатьОнлайнОплатыПриИзмененииНаСервере();
	Элементы.СоздаватьНовыхКонтрагентов.Доступность = НЕ ЗагружатьОнлайнОплаты;
КонецПроцедуры

&НаКлиенте
Процедура ЗагружатьСпособыДоставкиПриИзменении(Элемент)
	Элементы.СпособыДоставки.Доступность = ЗагружатьСпособыДоставки;
	ЗагружатьСпособыДоставкиПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура СпособыОплатыНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Не ЗначениеЗаполнено(Организация) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Укажите организацию'"),,"Организация");
		Возврат;
	КонецЕсли;
	
	ОповещениеОЗакрытии = Новый ОписаниеОповещения("ИзменениеСпособовОплатыЗавершение", ЭтотОбъект);
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("НастройкиПодключения", НастройкиПодключения());
	ПараметрыФормы.Вставить("Организация", Организация);
	ОткрытьФорму("РегистрСведений.СпособыОнлайнОплатыИнтернетМагазина.ФормаСписка",ПараметрыФормы, ЭтотОбъект,,,,ОповещениеОЗакрытии);
	
КонецПроцедуры

&НаКлиенте
Процедура СпособыДоставкиНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Не ЗначениеЗаполнено(Организация) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Укажите организацию'"),,"Организация");
		Возврат;
	КонецЕсли;
	
	ОповещениеОЗакрытии = Новый ОписаниеОповещения("ИзменениеСпособовДоставкиЗавершение", ЭтотОбъект);
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("НастройкиПодключения", НастройкиПодключения());
	ПараметрыФормы.Вставить("Организация", Организация);
	ОткрытьФорму("РегистрСведений.СлужбыДоставкиИнтернетМагазина.ФормаСписка",ПараметрыФормы, ЭтотОбъект,,,,ОповещениеОЗакрытии);
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	СпособыДоставки = СпособыДоставкиПредставление(Организация);
	СпособыОплаты = СпособыОплатыПредставление(Организация);
КонецПроцедуры
#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СохранитьИЗакрыть(Команда)
	
	Если ПроверитьЗаполнение() Тогда
		ЗаписатьВФорме();
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьПодключение(Команда)
	
	ТекстСообщения = "";
	ПроверитьПодключениеНаСервере(НастройкиПодключения(), ТекстСообщения);
	ПоказатьПредупреждение(, ТекстСообщения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьЖурналОбмена(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ПоказатьОшибкиИПредупреждения", Истина);
	ПараметрыФормы.Вставить("ДатаНачала", НачалоДня(ТекущаяДата()));
	ПараметрыФормы.Вставить("ДатаОкончания", ТекущаяДата());
	ПараметрыФормы.Вставить("СобытиеЖурналаРегистрации", ОбменСИнтернетМагазиномВызовСервера.СобытиеЖурналаРегистрации());
	
	ОткрытьФорму("Обработка.ЖурналРегистрации.Форма.ЖурналРегистрации", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьОбмен(Команда)
	
	Если ПроверитьЗаполнение() Тогда
		ЗаписатьВФорме();
		ОбработчикПослеВыполненияОбмена = Новый ОписаниеОповещения("ОбработатьПослеВыполненияОбменаСИнтернетМагазином", ЭтотОбъект);
		ОбменСИнтернетМагазиномКлиент.ВыполнитьОбменСИнтернетМагазином(ЭтотОбъект, ОбработчикПослеВыполненияОбмена);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьНастройки(Команда)
	Если ПроверитьЗаполнение() Тогда
		ЗаписатьВФорме();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ЗаписатьВФорме()
	
	СохранитьНастройки();
	Оповестить("СозданаНастройкаОбменСИнтернетМагазином");
	Модифицированность = Ложь;
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьЗначенияНастроек()
	
	СохраненныеНастройки = ОбменСИнтернетМагазином.ПолучитьНастройкиОбмена();
	Если СохраненныеНастройки <> Неопределено Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, СохраненныеНастройки);
		Статусы = СохраненныеНастройки.ЗапрещенныеСтатусы.Получить();
		Если Статусы <> Неопределено Тогда
			ЗапрещенныеСтатусы.ЗагрузитьЗначения(Статусы);
		КонецЕсли;
		Пароль = УникальныйИдентификатор;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройки()
	
	Настройки = РегистрыСведений.НастройкиОбменаСИнтернетМагазином.СоздатьМенеджерЗаписи();
	ЗаполнитьЗначенияСвойств(Настройки, ЭтотОбъект);
	Если ЗапрещенныеСтатусы.Количество() > 0 Тогда
		Настройки.ЗапрещенныеСтатусы = Новый ХранилищеЗначения(ЗапрещенныеСтатусы.ВыгрузитьЗначения());
	КонецЕсли;
	Настройки.Записать();
	
	Если ПарольИзменен Тогда
		УстановитьПривилегированныйРежим(Истина);
		ИдентификаторПодсистемы = ОбменСИнтернетМагазином.ИдентификаторПодсистемы();
		ОбщегоНазначения.ЗаписатьДанныеВБезопасноеХранилище(ИдентификаторПодсистемы, Пароль);
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;

	
	
	
КонецПроцедуры

&НаСервере
Функция ПрефиксПоУмолчанию()
	
	ПрефиксИнформационнойБазы = ОбменДаннымиСервер.ПрефиксИнформационнойБазы();
	
	Возврат ?(ПрефиксИнформационнойБазы = "ИМ", "", "ИМ");
	
КонецФункции

&НаСервереБезКонтекста
Функция ПроверитьПодключениеНаСервере(Знач НастройкиПодключения, ОписаниеОшибки)
	
	Возврат ОбменСИнтернетМагазином.ВыполнитьТестовоеПодключение(НастройкиПодключения, ОписаниеОшибки);
	
КонецФункции

&НаКлиенте
Функция НастройкиПодключения()
	
	СтруктураНастроек = Новый Структура;
	
	СтруктураНастроек.Вставить("CMSИнтернетМагазина", CMSИнтернетМагазина);
	СтруктураНастроек.Вставить("АдресСайта",          АдресСайта);
	СтруктураНастроек.Вставить("Логин",               Логин);
	Если ПарольИзменен Тогда
		СтруктураНастроек.Вставить("Пароль", Пароль);
	Иначе
		СтруктураНастроек.Вставить("Пароль", "");
	КонецЕсли;
	
	Возврат СтруктураНастроек;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьПредставлениеАдресСайта(Форма)
	
	Элементы = Форма.Элементы;
	
	Если Форма.CMSИнтернетМагазина = ПредопределенноеЗначение("Перечисление.CMSИнтернетМагазина.Другая") Тогда
		Элементы.АдресСайта.Заголовок = НСтр("ru = 'Адрес скрипта'");
		Элементы.АдресСайта.ПодсказкаВвода = НСтр("ru = 'http://<ваш_сайт>/<путь>/1c_exchange.php'");
	Иначе
		Элементы.АдресСайта.Заголовок = НСтр("ru = 'Адрес сайта'");
		Элементы.АдресСайта.ПодсказкаВвода = НСтр("ru = 'http://имя_вашего_сайта.рф'");
	КонецЕсли;
	

КонецПроцедуры

&НаСервере
Процедура ЗагружатьОнлайнОплатыПриИзмененииНаСервере()
	
	Если НЕ ЗагружатьОнлайнОплаты Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьОплатуПоПлатежнымКартам") Тогда
		
		Попытка
			Константы.ИспользоватьОплатуПоПлатежнымКартам.Установить(Истина);
		Исключение
			
			ЗагружатьОнлайнОплаты = Ложь;
			
			ТекстСообщения = НСтр("ru = 'Не удалось включить функциональность ""Платежные карты"".
			|Обратитесь к администратору для выполнения настройки'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
			
			Возврат;
		КонецПопытки;
	КонецЕсли;
	
	СоздаватьНовыхКонтрагентов = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ЗагружатьСпособыДоставкиПриИзмененииНаСервере()
	Если НЕ ЗагружатьСпособыДоставки Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьДоставкуТранспортнойКомпанией") Тогда
		Попытка
			Константы.ИспользоватьДоставкуТранспортнойКомпанией.Установить(Истина);
		Исключение
			ТекстСообщения = НСтр("ru = 'Не удалось включить функциональность ""Доставка транспортной компанией"".
				|Обратитесь к администратору для выполнения настройки'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
			ЗагружатьСпособыДоставки = Ложь;
		КонецПопытки;
	КонецЕсли;
	
КонецПроцедуры

#Область ОбработчикиОповещения
&НаКлиенте
Процедура ИзменениеСтатусовЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		
		ЗапрещенныеСтатусы.ЗагрузитьЗначения(Результат);
		ИспользоватьОтборПостатусам = ЗапрещенныеСтатусы.Количество() > 0;
		СтатусЗаказа = СтатусЗаказаПредставлениеСписка(ЗапрещенныеСтатусы);
		
		Модифицированность = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РеквизитыНовойНоменклатурыЗавершение(Результат, ДополнительныеПараметры) Экспорт
	Если Результат <> Неопределено И НЕ Результат = КодВозвратаДиалога.Отмена Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Результат);
		ГруппаНоменклатуры = Результат.Родитель;
		Модифицированность =Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьПослеВыполненияОбменаСИнтернетМагазином(Результат, ДопПараметры) Экспорт
	
	ОбменСИнтернетМагазиномКлиент.ПоказатьРезультатВыполненияОбмена(Результат);
	
КонецПроцедуры


&НаКлиенте
Процедура ИзменениеСпособовДоставкиЗавершение(Результат, ДопПараметры) Экспорт
	
	СпособыДоставки = СпособыДоставкиПредставление(Организация);
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменениеСпособовОплатыЗавершение(Результат, ДопПараметры) Экспорт
	
	СпособыОплаты = СпособыОплатыПредставление(Организация);
	Модифицированность = Истина;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СпособыОплатыПредставление(Организация)
	ПредставлениеСписка = РегистрыСведений.СпособыОнлайнОплатыИнтернетМагазина.ПредставлениеСтрокой(Организация);
	Если ПустаяСтрока(ПредставлениеСписка) Тогда
		Возврат НСтр("ru = '<платежные системы не заданы>'")
	Иначе 
		Возврат ПредставлениеСписка;
	КонецЕсли;
КонецФункции

&НаСервереБезКонтекста
Функция СпособыДоставкиПредставление(Организация)
	ПредставлениеСписка = РегистрыСведений.СлужбыДоставкиИнтернетМагазина.ПредставлениеСтрокой(Организация);
	Если ПустаяСтрока(ПредставлениеСписка) Тогда
		Возврат НСтр("ru = '<службы доставки не заданы>'")
	Иначе 
		Возврат ПредставлениеСписка;
	КонецЕсли;
КонецФункции

#КонецОбласти

#КонецОбласти






