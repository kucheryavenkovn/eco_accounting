#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	РезультатОбмена = ПолучитьИзВременногоХранилища(Параметры.РезультатОбмена);
	
	Если НЕ РезультатОбмена.Успешно Тогда
		Элементы.ГруппаОшибки.Видимость = Истина;
		Элементы.ГруппаОплаты.Видимость = Ложь;
		Элементы.ГруппаЗаказы.Видимость = Ложь;
		Элементы.ДекорацияТекстОшибки.Заголовок = СтрСоединить(РезультатОбмена.ОписаниеОшибки, Символы.ПС);
	Иначе
	
		Заказы = РезультатОбмена.СтатистикаЗагрузки.Заказы;
		Элементы.ДекорацияЗаказы.Заголовок = СтрШаблон(НСтр("ru = 'Обработано заказов: %1'"), Заказы.Обработано);
		
		ЗаполнитьСписокДокументовНаФорме(СписокСостояний, Заказы.Создано,   "Создан");
		ЗаполнитьСписокДокументовНаФорме(СписокСостояний, Заказы.Обновлено, "Обновлен");
		
		ЗаполнитьСписокПропущенныхДокументовНаФорме(СписокСостояний, Заказы.Пропущено, "Пропущен");
		
		НастройкиОбмена = ОбменСИнтернетМагазином.ПолучитьНастройкиОбмена();
		
		ЗагружатьОнлайнОплаты = ЗначениеЗаполнено(НастройкиОбмена) И НастройкиОбмена.ЗагружатьОнлайнОплаты;
		
		Элементы.ГруппаОплаты.Видимость = ЗагружатьОнлайнОплаты;
		
		Если ЗагружатьОнлайнОплаты Тогда
			
			ОнлайнОплаты = РезультатОбмена.СтатистикаЗагрузки.ОнлайнОплаты;
			
			Элементы.ДекорацияОплаты.Заголовок = СтрШаблон(НСтр("ru = 'Обработано онлайн-оплат: %1'"), ОнлайнОплаты.Обработано);
			
			ЗаполнитьСписокДокументовНаФорме(СписокСостоянийОплат, ОнлайнОплаты.Создано,   "Создана");
			ЗаполнитьСписокДокументовНаФорме(СписокСостоянийОплат, ОнлайнОплаты.Обновлено, "Обновлена");
			ЗаполнитьСписокПропущенныхДокументовНаФорме(СписокСостоянийОплат, ОнлайнОплаты.Пропущено, "Пропущена");
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокСостояний
&НаКлиенте
Процедура СписокСостоянийВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ДанныеСтроки = СписокСостояний.НайтиПоИдентификатору(ВыбраннаяСтрока);
	Если ЗначениеЗаполнено(ДанныеСтроки.Причина) Тогда
		ПоказатьПредупреждение(, ДанныеСтроки.Причина,, НСтр("ru = 'Причина пропуска'"));
	ИначеЕсли ТипЗнч(ДанныеСтроки.Документ) <> Тип("Строка") Тогда
		ПоказатьЗначение(,ДанныеСтроки.Документ);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокСостоянийОплат
&НаКлиенте
Процедура СписокСостоянийОплатВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ДанныеСтроки = СписокСостоянийОплат.НайтиПоИдентификатору(ВыбраннаяСтрока);
	Если ЗначениеЗаполнено(ДанныеСтроки.Причина) Тогда
		ПоказатьПредупреждение(, ДанныеСтроки.Причина,, НСтр("ru = 'Причина пропуска'"));
	ИначеЕсли ТипЗнч(ДанныеСтроки.Документ) <> Тип("Строка") Тогда
		ПоказатьЗначение(,ДанныеСтроки.Документ);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
&НаСервере
Процедура ЗаполнитьСписокДокументовНаФорме(ТаблицаФормы, СписокДокументов, Статус)
	
	Для каждого Документ Из СписокДокументов Цикл
		НоваяСтрока = ТаблицаФормы.Добавить();
		НоваяСтрока.Документ = Документ;
		НоваяСтрока.Состояние = Статус;
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьСписокПропущенныхДокументовНаФорме(ТаблицаФормы, СписокДокументов, Статус)
	
	Для каждого Документ Из СписокДокументов Цикл
		НоваяСтрока = ТаблицаФормы.Добавить();
		НоваяСтрока.Документ = Документ.Ключ;
		НоваяСтрока.Причина = Документ.Значение;
		НоваяСтрока.Состояние = Статус;
	КонецЦикла;
	
КонецПроцедуры
#КонецОбласти