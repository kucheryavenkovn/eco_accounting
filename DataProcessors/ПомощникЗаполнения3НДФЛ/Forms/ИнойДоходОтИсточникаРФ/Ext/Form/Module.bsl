// ИнтернетПоддержкаПользователей.РаботаСКонтрагентами
&НаКлиенте
Перем ОтключитьЗаполнениеПоИНН;
// Конец ИнтернетПоддержкаПользователей.РаботаСКонтрагентами

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	АдресКлючейПоказателей = Параметры.АдресКлючейПоказателей;
	Декларация3НДФЛВыбраннаяФорма = Параметры.Декларация3НДФЛВыбраннаяФорма;
	ВидДохода = Параметры.Вид;
	
	Если ЭтоДивиденды(Параметры.Вид) Тогда
		Заголовок = НСтр("ru = 'Дивиденды от источника в РФ'");
	ИначеЕсли ЭтоАвторскиеВознаграждения(Параметры.Вид) Тогда
		Заголовок = НСтр("ru = 'Вознаграждение наследнику автора'");
	Иначе
		Заголовок = НСтр("ru = 'Прочие доходы от источника в РФ'");
	КонецЕсли;
	
	ЗаполнитьСписокВыбораВидаКонтрагента();
	
	ЗаполнениеРеквизитовПлашкой = Истина;
	
	Если Параметры.Свойство("СтруктураДоходовВычетов")
		И ЗначениеЗаполнено(Параметры.СтруктураДоходовВычетов) Тогда
		
		Параметры.СтруктураДоходовВычетов.Свойство("СтавкаНалога", СтавкаНалога);
		Параметры.СтруктураДоходовВычетов.Свойство("СуммаДохода", СуммаДохода);
		Параметры.СтруктураДоходовВычетов.Свойство("СуммаНалога", СуммаНалога);
		Параметры.СтруктураДоходовВычетов.Свойство("СуммаНалогаУдержанная", СуммаНалогаУдержанная);
		Параметры.СтруктураДоходовВычетов.Свойство("ВидКонтрагента", ВидКонтрагента);
		Параметры.СтруктураДоходовВычетов.Свойство("НаименованиеОперации", НаименованиеОперации);
		Параметры.СтруктураДоходовВычетов.Свойство("Наименование", Наименование);
		Параметры.СтруктураДоходовВычетов.Свойство("ФИО", ФИО);
		Параметры.СтруктураДоходовВычетов.Свойство("ИНН", ИНН);
		Параметры.СтруктураДоходовВычетов.Свойство("КПП", КПП);
		Параметры.СтруктураДоходовВычетов.Свойство("ОКТМО", ОКТМО);
		
		Если ЕстьКлючПоказателя("СуммаОблагаемогоДоходаРФ", АдресКлючейПоказателей) Тогда
			Параметры.СтруктураДоходовВычетов.Свойство("СуммаДоходаОблагаемая", СуммаДоходаОблагаемая);
		Иначе
			СуммаДоходаОблагаемая = СуммаДохода;
		КонецЕсли;
		
		ЗаполнениеРеквизитовПлашкой = НЕ ЗначениеЗаполнено(СуммаДохода);
		
	Иначе
		
		НалоговыеСтавки = Отчеты.РегламентированныйОтчет3НДФЛ.НалоговыеСтавки(Параметры.Декларация3НДФЛВыбраннаяФорма);
		Если ВидДохода = Перечисления.ИсточникиДоходовФизическихЛиц.Дивиденды Тогда
			СтавкаНалога = НалоговыеСтавки.Дивиденды;
			ВидКонтрагента = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо;
		ИначеЕсли ВидДохода = Перечисления.ИсточникиДоходовФизическихЛиц.ВознаграждениеНаследникуАвтора Тогда
			СтавкаНалога = НалоговыеСтавки.ПоУмолчанию;
			ВидКонтрагента = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо;
			НаименованиеОперации = НСтр("ru = 'Вознаграждение, полученное наследником автора'");
		Иначе
			СтавкаНалога = НалоговыеСтавки.ПоУмолчанию;
			ВидКонтрагента = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо;
		КонецЕсли;
		
	КонецЕсли;
	
	ПомощникЗаполнения3НДФЛ.ИсточникДоходовПриСозданииНаСервере(ЭтотОбъект, ЗначениеЗаполнено(ВидКонтрагента));
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	Если ВидКонтрагента = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо Тогда
		ПроверяемыеРеквизиты.Добавить("ИНН");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ВидКонтрагента) Тогда
		МассивНепроверяемыхРеквизитов.Добавить("НаименованиеОперации");
	КонецЕсли;
	
	ПомощникЗаполнения3НДФЛ.ПроверитьЗаполнениеРеквизитовИсточникаДоходов(ЭтотОбъект, МассивНепроверяемыхРеквизитов, Отказ);
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
	ОрганизацииФормыДляОтчетности.ПроверитьКодПоОКТМОНаФорме(ОКТМО, "ОКТМО", Отказ);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВидКонтрагентаПриИзменении(Элемент)
	
	// Очистим реквизиты, которые зависят от вида контрагента.
	Наименование = "";
	ФИО = "";
	ИНН = "";
	КПП = "";
	ОКТМО = "";
	
	ПомощникЗаполнения3НДФЛКлиентСервер.ПроверитьИННКПП(ЭтотОбъект, Истина, Истина);
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ИННПриИзменении(Элемент)
	
	ИНН = СокрЛП(ИНН);
	ПомощникЗаполнения3НДФЛКлиентСервер.ПроверитьИННКПП(ЭтотОбъект, Истина, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура КПППриИзменении(Элемент)
	
	КПП = СокрЛП(КПП);
	ПомощникЗаполнения3НДФЛКлиентСервер.ПроверитьИННКПП(ЭтотОбъект, Ложь, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ПолеПоискаИНННаименованиеПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(ПолеПоискаИНННаименование)
		И НЕ ЗначениеЗаполнено(ИНН) 
		И НЕ ЗначениеЗаполнено(Наименование) Тогда
		
		ПомощникЗаполнения3НДФЛКлиент.ЗаполнитьРеквизитыПоДаннымЕГР(ПолеПоискаИНННаименование, ОповещениеПослеЗаполненияПоИНН());
		ОтключитьЗаполнениеПоИНН = Истина;
		ПодключитьОбработчикОжидания("Подключаемый_ВключитьЗаполнениеПоИНН", 0.1, Истина);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СтавкаНалогаПриИзменении(Элемент)
	
	ПриИзмененииСуммыДоходаОблагаемой();
	
КонецПроцедуры

&НаКлиенте
Процедура СуммаДоходаПриИзменении(Элемент)
	
	СуммаДоходаОблагаемая = СуммаДохода;
	ПриИзмененииСуммыДоходаОблагаемой();
	
КонецПроцедуры

&НаКлиенте
Процедура СуммаДоходаОблагаемаяПриИзменении(Элемент)
	
	ПриИзмененииСуммыДоходаОблагаемой();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаОК(Команда)
	
	Если НЕ ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураРезультата = Новый Структура;
	СтруктураРезультата.Вставить("Вид", ВидДохода);
	
	СтруктураРезультата.Вставить("КодВидаДохода", КодВидаДохода(ВидДохода, Декларация3НДФЛВыбраннаяФорма));
	
	СтруктураРезультата.Вставить("Информация", ОписаниеДоходаПоВиду());
	
	СтруктураРезультата.Вставить("СтавкаНалога", СтавкаНалога);
	СтруктураРезультата.Вставить("СуммаДохода", СуммаДохода);
	СтруктураРезультата.Вставить("СуммаДоходаОблагаемая", СуммаДоходаОблагаемая);
	СтруктураРезультата.Вставить("СуммаНалога", СуммаНалога);
	СтруктураРезультата.Вставить("СуммаНалогаУдержанная", СуммаНалогаУдержанная);
	СтруктураРезультата.Вставить("ВидКонтрагента", ВидКонтрагента);
	СтруктураРезультата.Вставить("НаименованиеОперации", НаименованиеОперации);
	СтруктураРезультата.Вставить("Наименование", Наименование);
	СтруктураРезультата.Вставить("ФИО", ФИО);
	СтруктураРезультата.Вставить("ИНН", ИНН);
	СтруктураРезультата.Вставить("КПП", КПП);
	СтруктураРезультата.Вставить("ОКТМО", ОКТМО);
	
	Если ВидКонтрагента = ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ФизическоеЛицо") Тогда
		НаименованиеИсточникаДохода = ФИО;
	ИначеЕсли ВидКонтрагента = ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ЮридическоеЛицо") Тогда
		НаименованиеИсточникаДохода = Наименование;
	Иначе
		НаименованиеИсточникаДохода = НаименованиеОперации;
	КонецЕсли;
	
	СтруктураРезультата.Вставить("НаименованиеИсточникаДохода", НаименованиеИсточникаДохода);
	
	Закрыть(СтруктураРезультата);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаполнитьПоИНН(Команда)
	
	Если НЕ ЗначениеЗаполнено(ИНН) Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Поле ""ИНН"" не заполнено'"));
		ТекущийЭлемент = Элементы.ИНН;
		Возврат;
	ИначеЕсли НЕ ОшибокПоИННнет Тогда
		ПоказатьПредупреждение(, Строка(РезультатПроверкиИНН));
		ТекущийЭлемент = Элементы.ИНН;
		Возврат;
	КонецЕсли;
	
	ПомощникЗаполнения3НДФЛКлиент.ВыполнитьЗаполнениеРеквизитовПоИНН(ИНН, ОповещениеПослеЗаполненияПоИНН());
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьРеквизитыПоДаннымЕГР(Команда)
	
	Если ОтключитьЗаполнениеПоИНН <> Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПомощникЗаполнения3НДФЛКлиент.ЗаполнитьРеквизитыПоДаннымЕГР(ПолеПоискаИНННаименование, ОповещениеПослеЗаполненияПоИНН());
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьРеквизитыПоНаименованию(Команда)
	
	Если НЕ ЗначениеЗаполнено(Наименование) Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Поле ""Наименование"" не заполнено'"));
		ТекущийЭлемент = Элементы.Наименование;
		Возврат;
	Иначе
		ПомощникЗаполнения3НДФЛКлиент.ВыполнитьЗаполнениеРеквизитовПоНаименованию(Наименование, ОповещениеПослеЗаполненияПоИНН());
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьКлючСохраненияПоложенияОкна(Форма)
	
	Если ЭтоДивиденды(Форма.ВидДохода) Тогда
		ПрефиксКлючаСохранения = "ДивидендыРФ";
	ИначеЕсли ЭтоАвторскиеВознаграждения(Форма.ВидДохода) Тогда
		ПрефиксКлючаСохранения = "ВознаграждениеНаследникуАвтора";
	Иначе
		ПрефиксКлючаСохранения = "ПрочиеДоходы";
	КонецЕсли;
	
	ПомощникЗаполнения3НДФЛКлиентСервер.УстановитьКлючСохраненияПоложенияОкна(Форма, ПрефиксКлючаСохранения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииСуммыДоходаОблагаемой()
	
	СуммаНалога = Окр(СуммаДоходаОблагаемая * СтавкаНалога / 100, 0);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Элементы = Форма.Элементы;
	
	ВидДоходаДивиденды = ЭтоДивиденды(Форма.ВидДохода);
	ВидДоходаПрочие    = ЭтоПрочиеДоходы(Форма.ВидДохода);
	ВидДоходаАвторскиеВознаграждения = ЭтоАвторскиеВознаграждения(Форма.ВидДохода);
	
	Элементы.ДекорацияОписаниеДивиденды.Видимость = ВидДоходаДивиденды;
	Элементы.ДекорацияОписаниеАвторскиеВознаграждения.Видимость = ВидДоходаАвторскиеВознаграждения;
	Элементы.ДекорацияОписаниеПрочее.Видимость = ВидДоходаПрочие;
	
	Элементы.СтавкаНалога.Видимость = ВидДоходаПрочие;
	
	Если ВидДоходаДивиденды Тогда
		Элементы.ВидКонтрагента.Видимость = Ложь;
		Элементы.Наименование.Заголовок = НСтр("ru = 'Источник дохода'");
	Иначе
		Элементы.ВидКонтрагента.Видимость = Истина;
		Элементы.Наименование.Заголовок = НСтр("ru = 'Наименование'");
	КонецЕсли;
	
	Элементы.НаименованиеОперации.Видимость = Не ЗначениеЗаполнено(Форма.ВидКонтрагента)
		И Не ВидДоходаАвторскиеВознаграждения;
	
	ПомощникЗаполнения3НДФЛКлиентСервер.УстановитьВидимостьПолейКонтрагента(Форма, ЗначениеЗаполнено(Форма.ВидКонтрагента));
	
	Элементы.ИНН.ОтметкаНезаполненного = Ложь;
	Элементы.ИНН.АвтоОтметкаНезаполненного =
		(Форма.ВидКонтрагента = ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ЮридическоеЛицо"));
	
	Если ЕстьКлючПоказателя("СуммаОблагаемогоДоходаРФ", Форма.АдресКлючейПоказателей) Тогда
		Элементы.СуммаДоходаОблагаемая.Видимость = Истина;
		Элементы.СуммаНалога.Видимость = Истина;
		Элементы.ДекорацияОписаниеДивиденды.Заголовок = НСтр("ru = 'Декларируется, если при выплате дивидендов налоговый агент не удержал налог в полном объеме. Налоговую базу и сумму налога можно определить по данным справки 2-НДФЛ. Вычеты к таким доходам не применяются.'");
		Элементы.ДекорацияОписаниеПрочее.Заголовок = НСтр("ru = 'Декларируется, если при выплате дохода налоговый агент не удержал налог в полном объеме. Налоговую базу и сумму налога можно определить по данным справки 2-НДФЛ.'");
	Иначе
		Элементы.СуммаДоходаОблагаемая.Видимость = Ложь;
		Элементы.СуммаНалога.Видимость = Ложь;
		Элементы.ДекорацияОписаниеДивиденды.Заголовок = НСтр("ru = 'Декларируется, если при выплате дивидендов налоговый агент не удержал налог в полном объеме. Удержанную сумму налога можно определить по данным справки 2-НДФЛ. Вычеты к таким доходам не применяются.'");
		Элементы.ДекорацияОписаниеПрочее.Заголовок = НСтр("ru = 'Декларируется, если при выплате дохода налоговый агент не удержал налог в полном объеме. Удержанную сумму налога можно определить по данным справки 2-НДФЛ.'");
	КонецЕсли;
	
	УстановитьКлючСохраненияПоложенияОкна(Форма);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЕстьКлючПоказателя(Знач ИмяКлюча, Знач АдресКлючейПоказателей)
	
	Возврат Отчеты.РегламентированныйОтчет3НДФЛ.ЕстьКлючПоказателя(ИмяКлюча, АдресКлючейПоказателей);
	
КонецФункции

&НаСервереБезКонтекста
Функция КодВидаДохода(Знач ВидДохода, Знач ВыбраннаяФорма)
	
	КодыВидовДоходаРФ = Отчеты.РегламентированныйОтчет3НДФЛ.КодыВидовДоходовРФ(ВыбраннаяФорма);
	
	Если ЭтоДивиденды(ВидДохода) Тогда
		Возврат КодыВидовДоходаРФ.Дивиденды;
	ИначеЕсли ЭтоАвторскиеВознаграждения(ВидДохода) Тогда
		Возврат ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(
			КодыВидовДоходаРФ, "АвторскиеВознагражденияНаследникам", КодыВидовДоходаРФ.ИнойДоходОтИсточникаРФ);
	Иначе
		Возврат КодыВидовДоходаРФ.ИнойДоходОтИсточникаРФ;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Функция ОписаниеДоходаПоВиду()
	
	Если ЭтоДивиденды(ВидДохода) Тогда
		Возврат НСтр("ru = 'Дивиденды от источника в РФ'");
	ИначеЕсли ЭтоАвторскиеВознаграждения(ВидДохода) Тогда
		Возврат НСтр("ru = 'Вознаграждение наследнику автора'");
	Иначе
		Возврат НСтр("ru = 'Прочие доходы от источника в РФ'");
	КонецЕсли;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ЭтоДивиденды(ВидДохода)
	
	Возврат ВидДохода = ПредопределенноеЗначение("Перечисление.ИсточникиДоходовФизическихЛиц.Дивиденды");
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ЭтоАвторскиеВознаграждения(ВидДохода)
	
	АвторскиеВознаграждения =
		ПредопределенноеЗначение("Перечисление.ИсточникиДоходовФизическихЛиц.ВознаграждениеНаследникуАвтора");
	
	Возврат ВидДохода = АвторскиеВознаграждения;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ЭтоПрочиеДоходы(ВидДохода)
	
	Возврат ВидДохода = ПредопределенноеЗначение("Перечисление.ИсточникиДоходовФизическихЛиц.ИнойДоходОтИсточникаРФ");
	
КонецФункции

&НаСервере
Процедура ЗаполнитьСписокВыбораВидаКонтрагента()
	
	СписокВыбора = Элементы.ВидКонтрагента.СписокВыбора;
	СписокВыбора.Очистить();
	
	Если ВидДохода = Перечисления.ИсточникиДоходовФизическихЛиц.ВознаграждениеНаследникуАвтора Тогда
		СписокВыбора.Добавить(
			Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо,
			НСтр("ru = 'Индивидуальный предприниматель'"));
	Иначе
		СписокВыбора.Добавить(Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо, НСтр("ru = 'Физическое лицо'"));
	КонецЕсли;
	
	СписокВыбора.Добавить(Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо, НСтр("ru = 'Юридическое лицо'"));
	
	Если Отчеты.РегламентированныйОтчет3НДФЛ.МожноНеУказыватьНаименованиеИсточникаДохода(Декларация3НДФЛВыбраннаяФорма) Тогда
		СписокВыбора.Добавить(Перечисления.ЮридическоеФизическоеЛицо.ПустаяСсылка(), НСтр("ru = 'Неизвестен'"));
	КонецЕсли;
	
КонецПроцедуры

#Область ЗаполнениеРеквизитовКонтрагента

&НаКлиенте
Функция ОповещениеПослеЗаполненияПоИНН()
	
	Возврат Новый ОписаниеОповещения("ПослеЗаполненияПоИНН", ЭтотОбъект);
	
КонецФункции

&НаКлиенте
Процедура ПослеЗаполненияПоИНН(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Результат);
		ПомощникЗаполнения3НДФЛКлиентСервер.ПроверитьИННКПП(ЭтотОбъект, Истина, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВключитьЗаполнениеПоИНН()
	
	ОтключитьЗаполнениеПоИНН = Неопределено;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти