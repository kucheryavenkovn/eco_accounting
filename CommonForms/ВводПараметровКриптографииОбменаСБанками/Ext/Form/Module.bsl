#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ Параметры.Свойство("ОтпечатокСертификата") Тогда
		Организация			= Параметры.Организация;
		Сервис				= Параметры.Сервис;
		Если ЗначениеЗаполнено(Сервис) Тогда
			СертификатАбонента 	= УниверсальныйОбменСБанкамиВызовСервера.
				СертификатОрганизации(Сервис, Организация);
			ЗапомнитьСертификат = УниверсальныйОбменСБанкамиВызовСервера.
				ПризнакЗапомнитьСертификатОрганизации(Сервис, Организация);
		КонецЕсли;
		Если Параметры.Свойство("ПараметрыОтбора") Тогда
			ПараметрыОтбора = Параметры.ПараметрыОтбора;
		Иначе
			ПараметрыОтбора = УниверсальныйОбменСБанкамиКлиентСервер.
				ПараметрыОтбораСертификата(Сервис, Организация);
		КонецЕсли;
	Иначе
		СертификатАбонента 	= Параметры.ОтпечатокСертификата;
	КонецЕсли;
	
	Если Параметры.Свойство("ВозможностьВыбораСертификата", ВозможностьВыбораСертификата) Тогда
		Элементы.СертификатАбонентаПредставление.ТолькоПросмотр = НЕ Параметры.ВозможностьВыбораСертификата;
	КонецЕсли;
	
	Если Параметры.Свойство("НазваниеКнопки") Тогда
		Если НЕ ПустаяСтрока(Параметры.НазваниеКнопки) Тогда
			Элементы.ФормаОК.Заголовок = Параметры.НазваниеКнопки;
		КонецЕсли;
	КонецЕсли;
	
	ОтображатьПолеВводаПароля = Истина;
	Если Параметры.Свойство("ОтображатьПолеВводаПароля") Тогда
		ОтображатьПолеВводаПароля = Параметры.ОтображатьПолеВводаПароля;
		Если ОтображатьПолеВводаПароля Тогда
			ВызватьИсключение(НСтр("ru='Пароль к секретному ключу вводится средствами ОС.'"));
		КонецЕсли;
	КонецЕсли;
	
	Если Параметры.Свойство("ТекстПодсказкиПоСертификату") Тогда
		ТекстПодсказкиПоСертификату = Параметры.ТекстПодсказкиПоСертификату;
	КонецЕсли;
	
	Если Параметры.Свойство("Заголовок") И НЕ ПустаяСтрока(Параметры.Заголовок) Тогда
		ЭтотОбъект.Заголовок = Параметры.Заголовок;
	КонецЕсли;
	
	ОтображатьФлагЗапомнитьВыборСертификата = Ложь;
	Если Параметры.Свойство("ОтображатьФлагЗапомнитьВыборСертификата") Тогда
		ОтображатьФлагЗапомнитьВыборСертификата = Параметры.ОтображатьФлагЗапомнитьВыборСертификата;
	КонецЕсли;
	
	Если ОтображатьФлагЗапомнитьВыборСертификата И ЗначениеЗаполнено(Сервис) И НЕ ОтображатьПолеВводаПароля Тогда
		Элементы.ЗапомнитьВыборСертификата.Видимость = Истина;
		Шаблон = НСтр("ru='Запомнить сертификат для сервиса ""%1""'");
		Элементы.ЗапомнитьВыборСертификата.Заголовок = СтрШаблон(Шаблон, Сервис);
	Иначе
		Элементы.ЗапомнитьВыборСертификата.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОтобразитьПредставлениеСертификата();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьВвод(Команда)
	
	// обновляем настройки обмена с банками
	Если СертификатАбонента <> "" Тогда
		Если ЗначениеЗаполнено(Организация) И ЗначениеЗаполнено(Сервис) Тогда
			УниверсальныйОбменСБанкамиВызовСервера.
				СохранитьСертификатОрганизации(Сервис, Организация, СертификатАбонента, ЗапомнитьСертификат);
		КонецЕсли;
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru='Сертификат криптографии не выбран, его необходимо указать для продолжения формирования сообщения.'"),
			,"СертификатАбонентаПредставление");
		Возврат;
	КонецЕсли;
	
	Если СертификатНеНайденВХранилище Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru='Выбран сертификат криптографии, который не найден в хранилище сертификатов.
				|Выберите сертификат из хранилища.'"),
			,"СертификатАбонентаПредставление");
		Возврат;
	КонецЕсли;
	
	Результат = Новый Структура("Пароль,
								|Сертификат,
								|ЭтоОблачныйСертификат",
								"",
								СертификатАбонента,
								ЭтоОблачныйСертификат);
	Закрыть(Результат);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура СертификатАбонентаПредставлениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	Оповещение = Новый ОписаниеОповещения(
		"СертификатАбонентаПредставлениеНачалоВыбораЗавершение", ЭтотОбъект, Новый Структура("Элемент", Элемент));

	УниверсальныйОбменСБанкамиКлиент.ВыбратьСертификат(
		Оповещение, СертификатАбонента, ПараметрыОтбора);

КонецПроцедуры

&НаКлиенте
Процедура СертификатАбонентаПредставлениеНачалоВыбораЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Элемент = ДополнительныеПараметры.Элемент;
	
	Если Результат.Выполнено Тогда
		СертификатАбонента = Результат.ВыбранноеЗначение.Отпечаток;
		
		ОтобразитьПредставлениеСертификата();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ДанныеСертификата(Отпечаток)
	
	ОблачныйСертификат = УниверсальныйОбменСБанками.НайтиОблачныйСертификатВХранилище(Отпечаток);
	Если ОблачныйСертификат <> Неопределено Тогда
		Сертификат = УниверсальныйОбменСБанкамиКлиентСервер.СертификатКриптографииВСтуктуру(
			Новый СертификатКриптографии(ОблачныйСертификат.Сертификат));
		Возврат Сертификат;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

&НаКлиенте
Процедура СертификатАбонентаПредставлениеОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ПустаяСтрока(СертификатАбонента) Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭтоОблачныйСертификат Тогда
		ДанныеСертификата = ДанныеСертификата(СертификатАбонента);
		Если ДанныеСертификата <> Неопределено Тогда
			ПараметрыФормы = Новый Структура("Сертификат", ДанныеСертификата);
			ОткрытьФорму(
				"ОбщаяФорма.ПросмотрСертификатаОбменаСБанками", ПараметрыФормы,
				ЭтотОбъект,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		КонецЕсли;
	Иначе
		УниверсальныйОбменСБанкамиКлиент.ПоказатьСертификат(
			Новый Структура("Отпечаток, ЭтоЭлектроннаяПодписьВМоделиСервиса",
			СертификатАбонента, ЭтоОблачныйСертификат));
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СертификатАбонентаПредставлениеОчистка(Элемент, СтандартнаяОбработка)
	
	СертификатАбонента = "";
	ОтобразитьПредставлениеСертификата();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтобразитьПредставлениеСертификата()
	
	ЭтоОблачныйСертификат = УниверсальныйОбменСБанкамиКлиент.ЭтоОблачныйСертификатПользователя(СертификатАбонента);
		
	ПараметрыОтображенияСертификата = УниверсальныйОбменСБанкамиКлиент.ПараметрыОтобразитьПредставленияСертификатов();
	ПараметрыОтображенияСертификата.ПолеВвода								= Элементы.СертификатАбонентаПредставление;
	ПараметрыОтображенияСертификата.Сертификат								= СертификатАбонента;
	ПараметрыОтображенияСертификата.ИмяРеквизитаПредставлениеСертификата	= "СертификатАбонентаПредставление";
	ПараметрыОтображенияСертификата.Форма 									= ЭтотОбъект;
	ПараметрыОтображенияСертификата.ЭтоОблачныйСертификат					= ЭтоОблачныйСертификат;
	ПараметрыОтображенияСертификата.ТекстПодсказкиПоСертификату 			= ТекстПодсказкиПоСертификату;
	
	Оповещение = Новый ОписаниеОповещения("ОтобразитьПредставлениеСертификатаЗавершение", ЭтотОбъект);
	УниверсальныйОбменСБанкамиКлиент.
		ОтобразитьПредставлениеСертификата(Оповещение,ПараметрыОтображенияСертификата);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтобразитьПредставлениеСертификатаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	СвойстваСертификата = Результат.СвойстваСертификата;
	Если Результат.Выполнено Тогда
		СертификатНеНайденВХранилище = Результат.СертификатНеНайденВХранилище;
		Если НЕ СертификатНеНайденВХранилище Тогда
			Если СвойстваСертификата <> Неопределено Тогда
				РезультатПроверки = УниверсальныйОбменСБанкамиКлиентСервер.
						СертификатСоответствуетОтборуПриВыбореСертификата(СвойстваСертификата, ПараметрыОтбора);
				Если НЕ РезультатПроверки.ПризнакСоответствия Тогда
					// Если сертификат не подходит по критериям очищаем его.
					СертификатАбонента = "";
					ОтобразитьПредставлениеСертификата();
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	Иначе
		СертификатНеНайденВХранилище = Истина;
	КонецЕсли;
	
КонецПроцедуры 

#КонецОбласти
