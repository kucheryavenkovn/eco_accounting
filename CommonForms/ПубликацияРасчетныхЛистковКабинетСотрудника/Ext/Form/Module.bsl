
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Организация Месяц МесяцОпубликованного
	ЗначенияДляЗаполнения = Новый Структура("Организация,Месяц", "Организация", "Месяц");
	ЗарплатаКадры.ЗаполнитьПервоначальныеЗначенияВФорме(ЭтаФорма, ЗначенияДляЗаполнения);
	Если Не ЗначениеЗаполнено(Месяц) Тогда
		Месяц = ТекущаяДатаСеанса();
	КонецЕсли;
	ЗарплатаКадрыКлиентСервер.ЗаполнитьМесяцПоДате(ЭтаФорма, "Месяц", "МесяцСтрокой");
	
	НачальноеЗаполнение();
		
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура МесяцПриИзменении(Элемент)
	ЗарплатаКадрыКлиент.ВводМесяцаПриИзменении(ЭтаФорма, "Месяц", "МесяцСтрокой");
	ОбновитьСписокКПубликации();
КонецПроцедуры

&НаКлиенте
Процедура МесяцНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Оповещение = Новый ОписаниеОповещения("МесяцНачалоВыбораЗавершение", ЭтотОбъект);
	ЗарплатаКадрыКлиент.ВводМесяцаНачалоВыбора(ЭтаФорма, ЭтаФорма, "Месяц", "МесяцСтрокой", Ложь, Оповещение);
КонецПроцедуры

&НаКлиенте
Процедура МесяцНачалоВыбораЗавершение(ЗначениеВыбрано, ДополнительныеПараметры) Экспорт
	ОбновитьСписокКПубликации();
КонецПроцедуры

&НаКлиенте
Процедура МесяцРегулирование(Элемент, Направление, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаРегулирование(ЭтаФорма, "Месяц", "МесяцСтрокой", Направление);
	ПодключитьОбработчикОжидания("ОбработчикОжиданияМесяцПриРегулировании", 0.3, Истина);
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикОжиданияМесяцПриРегулировании()
	ОбновитьСписокКПубликации();
КонецПроцедуры

&НаКлиенте
Процедура МесяцАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаАвтоПодборТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура МесяцОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаОкончаниеВводаТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура МесяцОпубликованногоПриИзменении(Элемент)
	ЗарплатаКадрыКлиент.ВводМесяцаПриИзменении(ЭтаФорма, "МесяцОпубликованного", "МесяцОпубликованногоСтрокой");
	ОбновитьСписокОпубликованных();
КонецПроцедуры

&НаКлиенте
Процедура МесяцОпубликованногоНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Оповещение = Новый ОписаниеОповещения("МесяцОпубликованногоНачалоВыбораЗавершение", ЭтотОбъект);
	ЗарплатаКадрыКлиент.ВводМесяцаНачалоВыбора(ЭтаФорма, ЭтаФорма, "МесяцОпубликованного", "МесяцОпубликованногоСтрокой", Ложь, Оповещение);
КонецПроцедуры

&НаКлиенте
Процедура МесяцОпубликованногоНачалоВыбораЗавершение(ЗначениеВыбрано, ДополнительныеПараметры) Экспорт
	ОбновитьСписокОпубликованных();
КонецПроцедуры

&НаКлиенте
Процедура МесяцОпубликованногоРегулирование(Элемент, Направление, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаРегулирование(ЭтаФорма, "МесяцОпубликованного", "МесяцОпубликованногоСтрокой", Направление);
	ПодключитьОбработчикОжидания("ОбработчикОжиданияМесяцОпубликованногоПриРегулировании", 0.3, Истина);
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикОжиданияМесяцОпубликованногоПриРегулировании()
	ОбновитьСписокОпубликованных();
КонецПроцедуры

&НаКлиенте
Процедура МесяцОпубликованногоАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаАвтоПодборТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура МесяцОпубликованногоОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаОкончаниеВводаТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	ОбновитьСписокКПубликации();
	ОбновитьСписокОпубликованных();
КонецПроцедуры

&НаКлиенте
Процедура ПодразделениеПриИзменении(Элемент)
	ОбновитьСписокКПубликации();
КонецПроцедуры

&НаКлиенте
Процедура ПодразделениеОпубликованногоПриИзменении(Элемент)
	ОбновитьСписокОпубликованных();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Опубликовать(Команда)
	
	ДлительнаяОперация = ОпубликоватьНаСерве();
	Если ЗначениеЗаполнено(ДлительнаяОперация) Тогда
		ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
		ПараметрыОжидания.ВыводитьОкноОжидания = Истина;
		ПараметрыОжидания.ОповещениеПользователя.Показать = Истина;
		ПараметрыОжидания.ОповещениеПользователя.Текст = НСтр("ru = 'Выгрузка прошла успешно.'");
		ОповещениеОЗавершении = Новый ОписаниеОповещения("ЗавершитьНаКлиентеПубликацию", ЭтотОбъект);
		ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОпубликоватьПовторно(Команда)
	
	СписокФизическихЛиц = Новый Массив;
	Для Каждого ВыбраннаяСтрока Из Элементы.Опубликованные.ВыделенныеСтроки Цикл
		СписокФизическихЛиц.Добавить(Элементы.Опубликованные.ДанныеСтроки(ВыбраннаяСтрока).ФизическоеЛицо);
	КонецЦикла;
	Если СписокФизическихЛиц.Количество() = 0 Тогда
		Возврат
	КонецЕсли;
	
	ДлительнаяОперация = ОпубликоватьПовторноНаСерве(СписокФизическихЛиц);
	Если ЗначениеЗаполнено(ДлительнаяОперация) Тогда
		ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
		ПараметрыОжидания.ВыводитьОкноОжидания = Истина;
		ПараметрыОжидания.ОповещениеПользователя.Показать = Истина;
		ПараметрыОжидания.ОповещениеПользователя.Текст = НСтр("ru = 'Выгрузка прошла успешно.'");
		ОповещениеОЗавершении = Новый ОписаниеОповещения("ЗавершитьНаКлиентеПубликацию", ЭтотОбъект);
		ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОпубликоватьПовторноВсе(Команда)
	
	СписокФизическихЛиц = ОпубликованныеРасчетныеЛистки();
	ДлительнаяОперация = ОпубликоватьПовторноНаСерве(СписокФизическихЛиц);
	Если ЗначениеЗаполнено(ДлительнаяОперация) Тогда
		ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
		ПараметрыОжидания.ВыводитьОкноОжидания = Истина;
		ПараметрыОжидания.ОповещениеПользователя.Показать = Истина;
		ПараметрыОжидания.ОповещениеПользователя.Текст = НСтр("ru = 'Выгрузка прошла успешно.'");
		ОповещениеОЗавершении = Новый ОписаниеОповещения("ЗавершитьНаКлиентеПубликацию", ЭтотОбъект);
		ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьСписокКПубликации();
	
	ФизическиеЛицаКПубликации.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ПараметрыПолученияСотрудников = КадровыйУчет.ПараметрыПолученияСотрудниковОрганизацийПоСпискуФизическихЛиц();
	ПараметрыПолученияСотрудников.Организация = Организация;
	ПараметрыПолученияСотрудников.Подразделение = Подразделение;
	ПараметрыПолученияСотрудников.НачалоПериода = Месяц;
	ПараметрыПолученияСотрудников.ОкончаниеПериода = КонецМесяца(Месяц);
	ПараметрыПолученияСотрудников.КадровыеДанные = "Организация";
	КадровыйУчет.СоздатьВТСотрудникиОрганизации(Запрос.МенеджерВременныхТаблиц, Истина, ПараметрыПолученияСотрудников);
	
	СостоянияПубликации = Новый Массив;
	СостоянияПубликации.Добавить(Перечисления.СостоянияРасчетныхЛистковКабинетСотрудника.Опубликован);
	СостоянияПубликации.Добавить(Перечисления.СостоянияРасчетныхЛистковКабинетСотрудника.ОжидаетПубликации);
	Запрос.УстановитьПараметр("СостоянияПубликации", СостоянияПубликации);
	Запрос.УстановитьПараметр("МесяцПубликации", Месяц);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТСотрудникиОрганизации.ФизическоеЛицо КАК ФизическоеЛицо
	|ИЗ
	|	ВТСотрудникиОрганизации КАК ВТСотрудникиОрганизации
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РасчетныеЛисткиКабинетСотрудника КАК РасчетныеЛисткиКабинетСотрудника
	|		ПО ВТСотрудникиОрганизации.ФизическоеЛицо = РасчетныеЛисткиКабинетСотрудника.ФизическоеЛицо
	|			И ВТСотрудникиОрганизации.Организация = РасчетныеЛисткиКабинетСотрудника.Организация
	|			И (РасчетныеЛисткиКабинетСотрудника.Месяц = &МесяцПубликации)
	|			И (РасчетныеЛисткиКабинетСотрудника.СостояниеПубликации В (&СостоянияПубликации))
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПубликуемыеОбъектыКабинетСотрудника КАК ПубликуемыеОбъектыКабинетСотрудника
	|		ПО ВТСотрудникиОрганизации.Сотрудник = ПубликуемыеОбъектыКабинетСотрудника.ОбъектПубликации
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОшибкиЗаполненияПубликуемыхОбъектовКабинетСотрудника КАК ОшибкиЗаполнения
	|		ПО ВТСотрудникиОрганизации.ФизическоеЛицо = ОшибкиЗаполнения.ОбъектПубликации
	|ГДЕ
	|	РасчетныеЛисткиКабинетСотрудника.ФизическоеЛицо ЕСТЬ NULL
	|	И НЕ ЕСТЬNULL(ОшибкиЗаполнения.ЕстьОшибки, ЛОЖЬ)";
	УстановитьПривилегированныйРежим(Истина);
	Выборка = Запрос.Выполнить().Выбрать();
	УстановитьПривилегированныйРежим(Ложь);
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(ФизическиеЛицаКПубликации.Добавить(), Выборка);
	КонецЦикла;
	
	КоличествоКПубликации = ФизическиеЛицаКПубликации.Количество();
	Элементы.НадписьКПубликации.Заголовок = СтрШаблон(НСтр("ru = 'Количество сотрудников, по которым будут опубликованы расчетные листы: %1'"), КоличествоКПубликации);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСписокОпубликованных();
	ОбновитьСписокОпубликованныхНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОбновитьСписокОпубликованныхНаСервере()
	
	ОпубликованныеРасчетныеЛистки.Параметры.УстановитьЗначениеПараметра("Месяц", МесяцОпубликованного);
	
	ОпубликованныеРасчетныеЛистки.Параметры.УстановитьЗначениеПараметра("Организация", Организация);
	ОпубликованныеРасчетныеЛистки.Параметры.УстановитьЗначениеПараметра("ВсеОрганизации", Не ЗначениеЗаполнено(Организация));
	
	СостоянияПубликации = Новый Массив;
	СостоянияПубликации.Добавить(Перечисления.СостоянияРасчетныхЛистковКабинетСотрудника.Опубликован);
	СостоянияПубликации.Добавить(Перечисления.СостоянияРасчетныхЛистковКабинетСотрудника.ОжидаетПубликации);
	ОпубликованныеРасчетныеЛистки.Параметры.УстановитьЗначениеПараметра("СостоянияОпубликованы", СостоянияПубликации);
	
	ФизическиеЛица = Новый Массив;
	Если ЗначениеЗаполнено(ПодразделениеОпубликованного) Тогда
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		
		ПараметрыПолученияСотрудников = КадровыйУчет.ПараметрыПолученияСотрудниковОрганизацийПоСпискуФизическихЛиц();
		ПараметрыПолученияСотрудников.Организация = Организация;
		ПараметрыПолученияСотрудников.Подразделение = ПодразделениеОпубликованного;
		ПараметрыПолученияСотрудников.НачалоПериода = МесяцОпубликованного;
		ПараметрыПолученияСотрудников.ОкончаниеПериода = КонецМесяца(МесяцОпубликованного);
		ПараметрыПолученияСотрудников.КадровыеДанные = "Организация";
		КадровыйУчет.СоздатьВТСотрудникиОрганизации(Запрос.МенеджерВременныхТаблиц, Истина, ПараметрыПолученияСотрудников);
		
		СостоянияПубликации = Новый Массив;
		СостоянияПубликации.Добавить(Перечисления.СостоянияРасчетныхЛистковКабинетСотрудника.Опубликован);
		СостоянияПубликации.Добавить(Перечисления.СостоянияРасчетныхЛистковКабинетСотрудника.ОжидаетПубликации);
		Запрос.УстановитьПараметр("СостоянияПубликации", СостоянияПубликации);
		Запрос.УстановитьПараметр("МесяцПубликации", МесяцОпубликованного);
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВТСотрудникиОрганизации.ФизическоеЛицо КАК ФизическоеЛицо
		|ИЗ
		|	ВТСотрудникиОрганизации КАК ВТСотрудникиОрганизации
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РасчетныеЛисткиКабинетСотрудника КАК РасчетныеЛисткиКабинетСотрудника
		|		ПО ВТСотрудникиОрганизации.ФизическоеЛицо = РасчетныеЛисткиКабинетСотрудника.ФизическоеЛицо
		|			И ВТСотрудникиОрганизации.Организация = РасчетныеЛисткиКабинетСотрудника.Организация
		|			И (РасчетныеЛисткиКабинетСотрудника.Месяц = &МесяцПубликации)
		|			И (РасчетныеЛисткиКабинетСотрудника.СостояниеПубликации В (&СостоянияПубликации))
		|ГДЕ
		|	РасчетныеЛисткиКабинетСотрудника.ФизическоеЛицо ЕСТЬ НЕ NULL ";
		УстановитьПривилегированныйРежим(Истина);
		Выборка = Запрос.Выполнить().Выбрать();
		УстановитьПривилегированныйРежим(Ложь);
		Пока Выборка.Следующий() Цикл
			ФизическиеЛица.Добавить(Выборка.ФизическоеЛицо);
		КонецЦикла;
	КонецЕсли;
	ОпубликованныеРасчетныеЛистки.Параметры.УстановитьЗначениеПараметра("ФизическиеЛица", ФизическиеЛица);
	ОпубликованныеРасчетныеЛистки.Параметры.УстановитьЗначениеПараметра("ВсеФизическиеЛица",ФизическиеЛица.Количество() = 0);
	
КонецПроцедуры

&НаСервере
Функция ОпубликоватьНаСерве()

	ПараметрыПубликации = Новый Структура;
	ПараметрыПубликации.Вставить("МесяцРасчетныхЛистов", Месяц);
	ПараметрыПубликации.Вставить("Организация", Организация);
	ПараметрыПубликации.Вставить("СписокФизическихЛиц", ОбщегоНазначения.ВыгрузитьКолонку(ФизическиеЛицаКПубликации, "ФизическоеЛицо"));
	
	ДлительнаяОперация = Неопределено;
	ПараметрыВыполненияВФоне = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполненияВФоне.Вставить("НаименованиеФоновогоЗадания",
		СтрШаблон(НСтр("ru = 'Выгрузка расчетных листов в 1С:Кабинет сотрудника'")));
	ПараметрыВыполненияВФоне.ОжидатьЗавершение = 0;
	ДлительнаяОперация = ДлительныеОперации.ВыполнитьВФоне(
		"КабинетСотрудника.ОпубликоватьРасчетныеЛистыВФоне",
		ПараметрыПубликации,
		ПараметрыВыполненияВФоне);
	Возврат ДлительнаяОперация;
	
КонецФункции

&НаСервере
Функция ОпубликоватьПовторноНаСерве(СписокФизическихЛиц)

	ПараметрыПубликации = Новый Структура;
	ПараметрыПубликации.Вставить("МесяцРасчетныхЛистов", МесяцОпубликованного);
	ПараметрыПубликации.Вставить("Организация", Организация);
	ПараметрыПубликации.Вставить("СписокФизическихЛиц", СписокФизическихЛиц);
	
	ДлительнаяОперация = Неопределено;
	ПараметрыВыполненияВФоне = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполненияВФоне.Вставить("НаименованиеФоновогоЗадания",
		СтрШаблон(НСтр("ru = 'Выгрузка расчетных листов в 1С:Кабинет сотрудника'")));
	ПараметрыВыполненияВФоне.ОжидатьЗавершение = 0;
	ДлительнаяОперация = ДлительныеОперации.ВыполнитьВФоне(
		"КабинетСотрудника.ОпубликоватьРасчетныеЛистыВФоне",
		ПараметрыПубликации,
		ПараметрыВыполненияВФоне);
	Возврат ДлительнаяОперация;
	
КонецФункции

&НаКлиенте
Процедура ЗавершитьНаКлиентеПубликацию(ДлительнаяОперация, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если ЗначениеЗаполнено(ДлительнаяОперация) Тогда
		Если ДлительнаяОперация.Статус = "Ошибка" Тогда
			ПоказатьПредупреждение(, ДлительнаяОперация.КраткоеПредставлениеОшибки);
			Возврат;
		Иначе
			НачальноеЗаполнение();
			ТекстСообщения = НСтр("ru = 'Публикация расчетных листков выполнена.'");
			ПоказатьПредупреждение(, ТекстСообщения);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура НачальноеЗаполнение()

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	РасчетныеЛисткиКабинетСотрудника.Месяц КАК Месяц
	|ИЗ
	|	РегистрСведений.РасчетныеЛисткиКабинетСотрудника КАК РасчетныеЛисткиКабинетСотрудника
	|
	|УПОРЯДОЧИТЬ ПО
	|	Месяц УБЫВ";
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		МесяцОпубликованного = Месяц;
	Иначе
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		МесяцОпубликованного = Выборка.Месяц;
	КонецЕсли;
	ЗарплатаКадрыКлиентСервер.ЗаполнитьМесяцПоДате(ЭтаФорма, "МесяцОпубликованного", "МесяцОпубликованногоСтрокой");
	
	ОбновитьСписокКПубликации();
	ОбновитьСписокОпубликованныхНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ОпубликованныеПередНачаломИзменения(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаСервере
Функция ОпубликованныеРасчетныеЛистки()
	
	ФизическиеЛица = Новый Массив;
	Если ЗначениеЗаполнено(ПодразделениеОпубликованного) Тогда
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		
		ПараметрыПолученияСотрудников = КадровыйУчет.ПараметрыПолученияСотрудниковОрганизацийПоСпискуФизическихЛиц();
		ПараметрыПолученияСотрудников.Организация = Организация;
		ПараметрыПолученияСотрудников.Подразделение = ПодразделениеОпубликованного;
		ПараметрыПолученияСотрудников.НачалоПериода = МесяцОпубликованного;
		ПараметрыПолученияСотрудников.ОкончаниеПериода = КонецМесяца(МесяцОпубликованного);
		ПараметрыПолученияСотрудников.КадровыеДанные = "Организация";
		КадровыйУчет.СоздатьВТСотрудникиОрганизации(Запрос.МенеджерВременныхТаблиц, Истина, ПараметрыПолученияСотрудников);
		
		СостоянияПубликации = Новый Массив;
		СостоянияПубликации.Добавить(Перечисления.СостоянияРасчетныхЛистковКабинетСотрудника.Опубликован);
		СостоянияПубликации.Добавить(Перечисления.СостоянияРасчетныхЛистковКабинетСотрудника.ОжидаетПубликации);
		Запрос.УстановитьПараметр("СостоянияПубликации", СостоянияПубликации);
		Запрос.УстановитьПараметр("МесяцПубликации", МесяцОпубликованного);
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВТСотрудникиОрганизации.ФизическоеЛицо КАК ФизическоеЛицо
		|ИЗ
		|	ВТСотрудникиОрганизации КАК ВТСотрудникиОрганизации
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РасчетныеЛисткиКабинетСотрудника КАК РасчетныеЛисткиКабинетСотрудника
		|		ПО ВТСотрудникиОрганизации.ФизическоеЛицо = РасчетныеЛисткиКабинетСотрудника.ФизическоеЛицо
		|			И ВТСотрудникиОрганизации.Организация = РасчетныеЛисткиКабинетСотрудника.Организация
		|			И (РасчетныеЛисткиКабинетСотрудника.Месяц = &МесяцПубликации)
		|			И (РасчетныеЛисткиКабинетСотрудника.СостояниеПубликации В (&СостоянияПубликации))
		|ГДЕ
		|	РасчетныеЛисткиКабинетСотрудника.ФизическоеЛицо ЕСТЬ НЕ NULL ";
		УстановитьПривилегированныйРежим(Истина);
		Выборка = Запрос.Выполнить().Выбрать();
		УстановитьПривилегированныйРежим(Ложь);
		Пока Выборка.Следующий() Цикл
			ФизическиеЛица.Добавить(Выборка.ФизическоеЛицо);
		КонецЦикла;
	КонецЕсли;
	
	СостоянияПубликации = Новый Массив;
	СостоянияПубликации.Добавить(Перечисления.СостоянияРасчетныхЛистковКабинетСотрудника.Опубликован);
	СостоянияПубликации.Добавить(Перечисления.СостоянияРасчетныхЛистковКабинетСотрудника.ОжидаетПубликации);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ВсеОрганизации", Не ЗначениеЗаполнено(Организация));
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Месяц", МесяцОпубликованного);
	Запрос.УстановитьПараметр("СостоянияОпубликованы", СостоянияПубликации);
	Запрос.УстановитьПараметр("ВсеФизическиеЛица", ФизическиеЛица.Количество() = 0);
	Запрос.УстановитьПараметр("ФизическиеЛица", ФизическиеЛица);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РасчетныеЛисткиКабинетСотрудника.ФизическоеЛицо КАК ФизическоеЛицо
	|ИЗ
	|	РегистрСведений.РасчетныеЛисткиКабинетСотрудника КАК РасчетныеЛисткиКабинетСотрудника
	|ГДЕ
	|	(&ВсеОрганизации
	|			ИЛИ РасчетныеЛисткиКабинетСотрудника.Организация = &Организация)
	|	И РасчетныеЛисткиКабинетСотрудника.Месяц = &Месяц
	|	И РасчетныеЛисткиКабинетСотрудника.СостояниеПубликации В(&СостоянияОпубликованы)
	|	И (&ВсеФизическиеЛица
	|			ИЛИ РасчетныеЛисткиКабинетСотрудника.ФизическоеЛицо В (&ФизическиеЛица))
	|	И РасчетныеЛисткиКабинетСотрудника.Месяц = &Месяц";
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ФизическоеЛицо");
	
КонецФункции

#КонецОбласти
