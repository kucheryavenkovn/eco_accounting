#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.РежимПодключения Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
				"ФормаОпубликовать", "Видимость", Ложь);
	КонецЕсли;
	
	ЗаполнениеДанных();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДеревоНастроек

&НаКлиенте
Процедура ДеревоНастроекПубликоватьПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ДеревоНастроек.ТекущиеДанные;
	ПриИзмененииПометки(ТекущиеДанные, "Публиковать");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	Если Модифицированность Тогда
		СохранитьНастройки();
	КонецЕсли;
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура Записать(Команда)
	
	Если Модифицированность Тогда
		СохранитьНастройки();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПубликацию(Команда)
	
	Если Модифицированность Тогда
		ПоказатьВопрос(
			Новый ОписаниеОповещения("ОбновитьПубликациюЗавершение", ЭтаФорма),
			НСтр("ru = 'Для продолжения необходимо сохранить данные. Сохранить и продолжить?'"),
			РежимДиалогаВопрос.ДаНет);
	Иначе
		ВыполнитьПубликацию();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокКабинетов(Команда)
	
	Если Модифицированность Тогда
		ПоказатьВопрос(
			Новый ОписаниеОповещения("СписокКабинетовЗавершение", ЭтаФорма),
			НСтр("ru = 'Для продолжения необходимо сохранить данные. Сохранить и продолжить?'"),
			РежимДиалогаВопрос.ДаНет);
	Иначе
		ОткрытьСписокКабинетов();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтметитьВсе(Команда)
	
	УстановитьОтметкиДереваНастроек(ДеревоНастроек.ПолучитьЭлементы(), 1);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаСнятьВсе(Команда)
	
	УстановитьОтметкиДереваНастроек(ДеревоНастроек.ПолучитьЭлементы(), 0);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ДеревоВТаблицуДляЗаписи(Таблица, Дерево)
	
	Для Каждого СтрокаДерева Из Дерево.Строки Цикл
		Если ЗначениеЗаполнено(СтрокаДерева.ПозицияШтатногоРасписания) Тогда
			ОбъектПравила = СтрокаДерева.ПозицияШтатногоРасписания;
		ИначеЕсли ЗначениеЗаполнено(СтрокаДерева.Подразделение) Тогда
			ОбъектПравила = СтрокаДерева.Подразделение;
		Иначе
			ОбъектПравила = СтрокаДерева.Организация;
		КонецЕсли;
		НайденныеСтроки = Таблица.НайтиСтроки(Новый Структура("ОбъектПравила", ОбъектПравила));
		Если Не ЗначениеЗаполнено(НайденныеСтроки) Тогда
			Публиковать = ТриСостоянияВБулево(СтрокаДерева.Публиковать);
			Если Публиковать Тогда
				Запись = Таблица.Добавить();
				Запись.ОбъектПравила = ОбъектПравила;
			КонецЕсли;
		КонецЕсли;
		ДеревоВТаблицуДляЗаписи(Таблица, СтрокаДерева);
	КонецЦикла;
	
КонецФункции

&НаСервере
Функция ТриСостоянияВБулево(Значение)
	Возврат ?(Значение = 2, Ложь, Булево(Значение));
КонецФункции

&НаСервере
Процедура ЗаполнениеДанных()
	
	МенеджерВТ = Новый МенеджерВременныхТаблиц;
	УстановитьПривилегированныйРежим(Истина);
	КабинетСотрудника.СоздатьВТШтатноеРасписание(МенеджерВТ);
	УстановитьПривилегированныйРежим(Ложь);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеШтатногоРасписания.Организация КАК Организация,
	|	ДанныеШтатногоРасписания.Подразделение КАК Подразделение,
	|	ДанныеШтатногоРасписания.ПозицияШтатногоРасписания КАК ПозицияШтатногоРасписания,
	|	ВЫБОР
	|		КОГДА ПравилаПубликации.ОбъектПравила ЕСТЬ NULL
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК Публиковать
	|ИЗ
	|	ВТШтатноеРасписание КАК ДанныеШтатногоРасписания
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПравилаПубликацииКабинетСотрудника КАК ПравилаПубликации
	|		ПО ДанныеШтатногоРасписания.ПозицияШтатногоРасписания = ПравилаПубликации.ОбъектПравила
	|			И (ПравилаПубликации.ОбъектПравила ССЫЛКА Справочник.ШтатноеРасписание)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДанныеШтатногоРасписания.Организация.Наименование,
	|	ДанныеШтатногоРасписания.Подразделение.Наименование,
	|	ДанныеШтатногоРасписания.ПозицияШтатногоРасписания.Наименование
	|ИТОГИ ПО
	|	Организация,
	|	Подразделение ИЕРАРХИЯ";
	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда
		ДеревоЗначений = РеквизитФормыВЗначение("ДеревоНастроек");
		ДанныеШР = РезультатЗапроса.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
		ДеревоЗначений = ДанныеШР.Скопировать();
		ИменаПолей = Новый Массив;
		ИменаПолей.Добавить("Публиковать");
		ОпределитьПометкиРодителей(ДеревоЗначений.Строки, ИменаПолей);
		ЗначениеВРеквизитФормы(ДеревоЗначений, "ДеревоНастроек");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ОпределитьПометкиРодителей(СтрокиДерева, ИменаПолей)
	
	Результат = Новый Структура;
	Для Каждого ИмяПоля Из ИменаПолей Цикл
		Результат.Вставить(ИмяПоля, -1);
	КонецЦикла;
	Для Каждого СтрокаДерева Из СтрокиДерева Цикл
		Если СтрокаДерева.Строки.Количество() > 0 Тогда
			ЗначенияСтрок = ОпределитьПометкиРодителей(СтрокаДерева.Строки, ИменаПолей);
			ЗаполнитьЗначенияСвойств(СтрокаДерева, ЗначенияСтрок);
		КонецЕсли;
		Для Каждого ИмяПоля Из ИменаПолей Цикл
			ОпределитьПометкиСтрокиДерева(СтрокаДерева, Результат, ИмяПоля);
		КонецЦикла;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура ОпределитьПометкиСтрокиДерева(СтрокаДерева, СтруктураЗначений, ИмяПоля)
	
	Если СтрокаДерева[ИмяПоля] = 0 Тогда
		Если СтруктураЗначений[ИмяПоля] <= 0 Тогда
			СтруктураЗначений[ИмяПоля] = 0;
		Иначе
			СтруктураЗначений[ИмяПоля] = 2;
		КонецЕсли;
	ИначеЕсли СтрокаДерева[ИмяПоля] = 1 Тогда
		Если СтруктураЗначений[ИмяПоля] = -1 ИЛИ СтруктураЗначений[ИмяПоля] = 1 Тогда
			СтруктураЗначений[ИмяПоля] = 1;
		Иначе
			СтруктураЗначений[ИмяПоля] = 2;
		КонецЕсли;
	Иначе
		СтруктураЗначений[ИмяПоля] = 2;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтметкиДереваНастроек(СтрокиДерева, ЗначениеОтметки)

	Для Каждого СтрокаДерева Из СтрокиДерева Цикл
		СтрокаДерева.Публиковать = ЗначениеОтметки;
		УстановитьОтметкиДереваНастроек(СтрокаДерева.ПолучитьЭлементы(), ЗначениеОтметки);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииПометки(ТекущиеДанные, ИмяПоля)
	
	Если ТекущиеДанные[ИмяПоля] = 2 Тогда
		ТекущиеДанные[ИмяПоля] = 0;
	КонецЕсли;
	УстановитьПометкуПодчиненных(ТекущиеДанные, ИмяПоля);
	УстановитьПометкуРодителя(ТекущиеДанные.ПолучитьРодителя(), ИмяПоля);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПометкуРодителя(Родитель, ИмяПоля)
	
	Если Родитель = Неопределено Тогда
		Возврат;
	КонецЕсли;
	БылиПометки = Ложь;
	БылиПустые = Ложь;
	ДочерниеЭлементыРодителя = Родитель.ПолучитьЭлементы();
	Для Каждого ДочернийЭлемент Из ДочерниеЭлементыРодителя Цикл
		БылиПометки = БылиПометки Или ДочернийЭлемент[ИмяПоля];
		БылиПустые = БылиПустые Или Не ДочернийЭлемент[ИмяПоля];
	КонецЦикла;
	Если БылиПометки И Не БылиПустые Тогда
		Родитель[ИмяПоля] = 1;
	ИначеЕсли БылиПометки И БылиПустые Тогда
		Родитель[ИмяПоля] = 2;
	Иначе
		Родитель[ИмяПоля] = 0;
	КонецЕсли;
	Прародитель = Родитель.ПолучитьРодителя();
	Если Прародитель <> Неопределено Тогда
		УстановитьПометкуРодителя(Прародитель, ИмяПоля);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПометкуПодчиненных(Родитель, ИмяПоля)
	
	ДочерниеЭлементы = Родитель.ПолучитьЭлементы();
	Для Каждого ДочернийЭлемент Из ДочерниеЭлементы Цикл
		ДочернийЭлемент[ИмяПоля] = Родитель[ИмяПоля];
		УстановитьПометкуПодчиненных(ДочернийЭлемент, ИмяПоля);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПубликациюЗавершение(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		СохранитьНастройки();
		ВыполнитьПубликацию();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьПубликацию()
	
	Если ЕстьАктивныеФоновыеЗадания() Тогда
		ТекстСообщения = НСтр("ru = 'Публикация уже выполняется, повторите попытку позже.'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	ОчиститьСообщения();
	
	ДлительнаяОперация = ДлительнаяОперацияПубликация();
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Истина;
	ПараметрыОжидания.ОповещениеПользователя.Показать = Истина;
	ПараметрыОжидания.ОповещениеПользователя.Текст = НСтр("ru = 'Обновление публикации выполнено.'");
	ОповещениеОЗавершении = Новый ОписаниеОповещения("ВыполнитьПубликациюЗавершение", ЭтотОбъект);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЕстьАктивныеФоновыеЗадания()

	Возврат КабинетСотрудника.ЕстьАктивныеФоновыеЗадания(КабинетСотрудника.КлючФоновогоЗаданияПубликации())
		Или КабинетСотрудника.ЕстьАктивныеФоновыеЗадания("ПубликацияДанныхВСервисе") ;

КонецФункции

&НаСервере
Функция ДлительнаяОперацияПубликация()

	ДлительнаяОперация = Неопределено;
	ПараметрыВыполненияВФоне = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыПроцедуры = Новый Структура;
	ПараметрыВыполненияВФоне.Вставить("НаименованиеФоновогоЗадания",
		СтрШаблон(НСтр("ru = 'Публикация данных в сервисе 1С:Кабинет сотрудника'")));
	ПараметрыВыполненияВФоне.ОжидатьЗавершение = 0;
	ПараметрыВыполненияВФоне.КлючФоновогоЗадания = КабинетСотрудника.КлючФоновогоЗаданияПубликации();
	ДлительнаяОперация = ДлительныеОперации.ВыполнитьВФоне(
		"КабинетСотрудника.ОбновлениеПубликацииФоновоеЗадание",
		ПараметрыПроцедуры,
		ПараметрыВыполненияВФоне);
		
	Возврат ДлительнаяОперация;

КонецФункции

&НаКлиенте
Процедура ВыполнитьПубликациюЗавершение(ДлительнаяОперация, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если ЗначениеЗаполнено(ДлительнаяОперация) Тогда
		Если ДлительнаяОперация.Статус = "Ошибка" Тогда
			ПоказатьПредупреждение(, ДлительнаяОперация.КраткоеПредставлениеОшибки);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокКабинетовЗавершение(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		СохранитьНастройки();
		ОткрытьСписокКабинетов();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСписокКабинетов()

	ОткрытьФорму("РегистрСведений.ФизическиеЛицаКабинетСотрудника.Форма.ФормаСписка",,ЭтаФорма,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры


&НаКлиенте
Процедура СохранитьНастройки()
	
	СохранитьНастройкиНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройкиНаСервере()
	
	НачатьТранзакцию();
	Попытка
		
		НаборЗаписей = РегистрыСведений.ПравилаПубликацииКабинетСотрудника.СоздатьНаборЗаписей();
		ДеревоЗначений = РеквизитФормыВЗначение("ДеревоНастроек");
		Таблица = НаборЗаписей.Выгрузить();
		ДеревоВТаблицуДляЗаписи(Таблица, ДеревоЗначений);
		НаборЗаписей.Загрузить(Таблица);
		НаборЗаписей.Записать();
		
		КабинетСотрудника.ОбновитьПубликуемыеОбъекты();
		
		Модифицированность = Ложь;
		ЗафиксироватьТранзакцию();
		
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение(НСтр("ru = 'При записи правил публикации произошла ошибка.'")
			+ Символы.ПС + ОписаниеОшибки());
	КонецПопытки;
	
КонецПроцедуры


#КонецОбласти









