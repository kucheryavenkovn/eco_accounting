
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Параметры.ОбъектыОтправки) ИЛИ НЕ ЗначениеЗаполнено(Параметры.ИмяФормыДокумента) Тогда
		ВызватьИсключение НСтр("ru='Непосредственное открытие этой формы не предусмотрено.'");
	КонецЕсли;
	
	ОбъектыОтправки.ЗагрузитьЗначения(Параметры.ОбъектыОтправки);
	ОбъектОтправки = ОбъектыОтправки[0].Значение;
	ИмяМенеджераОтправки = ОбъектОтправки.Метаданные().ПолноеИмя();
	
	ИмяФормыДокумента = Параметры.ИмяФормыДокумента;
	
	АдресКомандОтправки = ОтправкаПочтовыхСообщений.АдресКомандОтправки(ИмяФормыДокумента, ИмяМенеджераОтправки,
		УникальныйИдентификатор);
	КомандыОтправки = ПолучитьИзВременногоХранилища(АдресКомандОтправки);
	
	Для Каждого КомандаОтправки Из КомандыОтправки Цикл
		//++ЭЛИАС 20180908 
		Если КомандаОтправки.Идентификатор = "СправкаРасчетПеней" 
			И КомандаОтправки.МенеджерПечати = "Документ.АР_СчетНаАренду"
			И ТипЗнч(ОбъектОтправки) = Тип("ДокументСсылка.АР_СчетНаАренду")
			И ОбъектОтправки.ВидОперации = Перечисления.АР_ВидыОперацийСчетНаАренду.ОплатаАренды Тогда
			Продолжить;
		ИначеЕсли (КомандаОтправки.Идентификатор = "АктРуб" ИЛИ КомандаОтправки.Идентификатор = "АктСводныйРуб")
			И КомандаОтправки.МенеджерПечати = "Документ.АР_НачислениеАренднойПлаты"
			И ТипЗнч(ОбъектОтправки) = Тип("ДокументСсылка.АР_НачислениеАренднойПлаты")
			И ОбъектОтправки.ВалютаДокумента = Константы.ВалютаРегламентированногоУчета.Получить() Тогда
			Продолжить;	
		ИначеЕсли (КомандаОтправки.Идентификатор = "АктРуб" ИЛИ КомандаОтправки.Идентификатор = "АктСводныйРуб")
			И КомандаОтправки.МенеджерПечати = "Документ.АР_НачислениеПени"
			И ТипЗнч(ОбъектОтправки) = Тип("ДокументСсылка.АР_НачислениеПени")
			И ОбъектОтправки.ВалютаДокумента = Константы.ВалютаРегламентированногоУчета.Получить() Тогда
			Продолжить;	
		КонецЕсли;
		//--ЭЛИАС 20180908
		Список.Добавить(КомандаОтправки.ИмяКоманды, КомандаОтправки.Представление);
	КонецЦикла;
	
	Для Каждого ФорматСохранения Из УправлениеПечатью.НастройкиФорматовСохраненияТабличногоДокумента() Цикл
		ФорматыСохранения.Добавить(ФорматСохранения.ТипФайлаТабличногоДокумента, Строка(ФорматСохранения.Ссылка), ,
			ФорматСохранения.Картинка);
	КонецЦикла;
	
	НастройкаСпискаФорм = ХранилищеОбщихНастроек.Загрузить("КомандыОтправки" + ИмяМенеджераОтправки);
	Если НастройкаСпискаФорм <> Неопределено Тогда
		Для Каждого ВыбранныйКоманда Из НастройкаСпискаФорм Цикл 
			Команда = Список.НайтиПоЗначению(ВыбранныйКоманда.Значение);
			Если Команда <> Неопределено
				И Команда.Представление = ВыбранныйКоманда.Представление Тогда
				Команда.Пометка = ВыбранныйКоманда.Пометка;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если Список.Количество() = 1 Тогда
		СценарийОтправкиОднойПечатнойФормы = Истина;
		Список[0].Пометка = Истина;
		ТекущаяГруппа = "ГруппаФорматы";
	Иначе
		СценарийОтправкиОднойПечатнойФормы = Ложь;
		ТекущаяГруппа = "ГруппаВыборПечатнойФормы";
	КонецЕсли;
	
	//++ЭЛИАС 20171130 
	АР_МодификацияКонфигурации.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	//--ЭЛИАС 20171130
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьВыборФормата();
	СформироватьПредставлениеВыбранныхФорматов();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	
	СохранитьКомандыОтправки(Список, ИмяМенеджераОтправки);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ФорматВложенийНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Для Каждого ФорматСохранения Из ФорматыСохранения Цикл
		ВыбранныйФормат = ВыбранныеФорматыСохранения.НайтиПоЗначению(ФорматСохранения.Значение);
		Если ВыбранныйФормат <> Неопределено Тогда
			ФорматСохранения.Пометка = Истина;
		Иначе
			ФорматСохранения.Пометка = Ложь;
		КонецЕсли;
	КонецЦикла;
	
	ТекущаяГруппа = "ГруппаФорматы";
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Выбрать(Команда)
	
	Если ТекущаяГруппа = "ГруппаФорматы" Тогда
		ВыбранныеФорматыСохранения.Очистить();
		Для Каждого ФорматСохранения Из ФорматыСохранения Цикл
			Если ФорматСохранения.Пометка Тогда
				ВыбранныеФорматыСохранения.Добавить(ФорматСохранения.Значение, ФорматСохранения.Представление, Истина);
			КонецЕсли;
		КонецЦикла;
		
		Если ВыбранныеФорматыСохранения.Количество() = 0 Тогда
			ВыбранныеФорматыСохранения.Добавить(ФорматыСохранения[0].Значение, ФорматыСохранения[0].Представление, Истина);
		КонецЕсли;
		
		Если НЕ СценарийОтправкиОднойПечатнойФормы Тогда
			ТекущаяГруппа = "ГруппаВыборПечатнойФормы";
			СформироватьПредставлениеВыбранныхФорматов();
			УправлениеФормой(ЭтотОбъект);
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОтправитьПоЭлектроннойПочтеНастройкаУчетнойЗаписиПредложена", ЭтотОбъект);
	РаботаСПочтовымиСообщениямиКлиент.ПроверитьНаличиеУчетнойЗаписиДляОтправкиПочты(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Если ТекущаяГруппа = "ГруппаФорматы" И НЕ СценарийОтправкиОднойПечатнойФормы Тогда
		ТекущаяГруппа = "ГруппаВыборПечатнойФормы";
		УправлениеФормой(ЭтотОбъект);
	Иначе
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОтправитьПоЭлектроннойПочтеНастройкаУчетнойЗаписиПредложена(УчетнаяЗаписьНастроена, ДополнительныеПараметры) Экспорт
	
	Если УчетнаяЗаписьНастроена <> Истина Тогда
		Возврат;
	КонецЕсли;
	
	ЕстьОшибки = Ложь;
	ВыбранныеКоманды = ОбщегоНазначенияКлиентСервер.ОтмеченныеЭлементы(Список);
	
	Если ВыбранныеКоманды.Количество() > 0 Тогда
		
		ФорматыСохраненияПечатныхФорм = ОбщегоНазначенияКлиентСервер.ОтмеченныеЭлементы(
			ВыбранныеФорматыСохранения);
		
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("УпаковатьВАрхив"  , УпаковатьВАрхив);
		ДополнительныеПараметры.Вставить("ФорматыСохранения", ФорматыСохраненияПечатныхФорм);
		
		//++ЭЛИАС 20171201 
		//ОтправкаПочтовыхСообщенийКлиент.ОтправитьПоЭлектроннойПочте(ВыбранныеКоманды, АдресКомандОтправки,
		//	ОбъектыОтправки.ВыгрузитьЗначения(), ЕстьОшибки, ДополнительныеПараметры);
		ДополнительныеПараметры.Вставить("АР_БыстраяОтправка", ЭтаФорма.АР_БыстраяОтправка);
		ДополнительныеПараметры.Вставить("АР_УчетнаяЗапись"  , ЭтаФорма.АР_УчетнаяЗапись);
		ДополнительныеПараметры.Вставить("АР_ПодписиИПечати" , ЭтаФорма.АР_ПодписиИПечати);
		
		МассивОбъектов = ОбъектыОтправки.ВыгрузитьЗначения();
		Если НЕ ЭтаФорма.АР_РазбиватьПоКонтрагентам Тогда
			ОтправкаПочтовыхСообщенийКлиент.ОтправитьПоЭлектроннойПочте(ВыбранныеКоманды, АдресКомандОтправки,
				МассивОбъектов, ЕстьОшибки, ДополнительныеПараметры);
		Иначе
			ОбъектыПоКонтрагентам = АР_ОбщиеПроцедуры.РазбитьОбъектыПоКонтрагентам(МассивОбъектов);
			Для Каждого Элемент Из ОбъектыПоКонтрагентам Цикл
				Если НЕ Элемент.Значение = Неопределено Тогда
					ОтправкаПочтовыхСообщенийКлиент.ОтправитьПоЭлектроннойПочте(ВыбранныеКоманды, АдресКомандОтправки,
						Элемент.Значение, ЕстьОшибки, ДополнительныеПараметры);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		//--ЭЛИАС 20171201
		
	Иначе
		ТекстСообщения = НСтр("ru='Необходимо выбрать, как минимум, одну печатную форму.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		ЕстьОшибки = Истина;
	КонецЕсли;
	
	Если НЕ ЕстьОшибки Тогда
		//++ЭЛИАС 20171220 
		//Закрыть();
		Закрыть(Новый Структура("АР_БыстраяОтправка", ЭтаФорма.АР_БыстраяОтправка));
		//--ЭЛИАС 20171220
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВыборФормата()
	
	ЕстьВыбранныйФормат = Ложь;
	Для Каждого ВыбранныйФормат Из ВыбранныеФорматыСохранения Цикл
		Если ВыбранныйФормат.Пометка Тогда
			ЕстьВыбранныйФормат = Истина;
			ФорматСохранения = ФорматыСохранения.НайтиПоЗначению(ВыбранныйФормат.Значение);
			Если ФорматСохранения <> Неопределено Тогда
				ФорматСохранения.Пометка = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если Не ЕстьВыбранныйФормат Тогда
		ФорматСохранения = ФорматыСохранения[0];
		ВыбранныеФорматыСохранения.Добавить(ФорматСохранения.Значение, ФорматСохранения.Представление, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьПредставлениеВыбранныхФорматов()
	
	ФорматВложений = "";
	КоличествоФорматов = 0;
	Для Каждого ВыбранныйФормат Из ВыбранныеФорматыСохранения Цикл
		Если ВыбранныйФормат.Пометка Тогда
			Если Не ПустаяСтрока(ФорматВложений) Тогда
				ФорматВложений = ФорматВложений + ", ";
			КонецЕсли;
			ФорматВложений = ФорматВложений + ВыбранныйФормат.Представление;
			КоличествоФорматов = КоличествоФорматов + 1;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СохранитьКомандыОтправки(СписокКоманд, ИмяМенеджераОтправки)
	
	ХранилищеОбщихНастроек.Сохранить("КомандыОтправки" + ИмяМенеджераОтправки, , СписокКоманд);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Элементы = Форма.Элементы;
	
	Для Каждого ГруппаСУправляемойВидимостью Из ГруппыСУправляемойВидимостью() Цикл
		Элементы[ГруппаСУправляемойВидимостью].Видимость = Ложь;
	КонецЦикла;
	
	Элементы[Форма.ТекущаяГруппа].Видимость = Истина;
	//++ЭЛИАС 20171220 
	Если НЕ Форма.Элементы.Найти("АР_ПодписиИПечатиЭлемент") = Неопределено Тогда
		Форма.Элементы.АР_ПодписиИПечатиЭлемент.Видимость = Форма.АР_БыстраяОтправка;
	КонецЕсли;
	Если НЕ Форма.Элементы.Найти("Выбрать") = Неопределено И Форма.АР_БыстраяОтправка Тогда
		Если Форма.ТекущаяГруппа = "ГруппаВыборПечатнойФормы" Тогда
			Форма.Элементы.Выбрать.Заголовок = "Отправить";
		Иначе
			Форма.Элементы.Выбрать.Заголовок = "Выбрать";
		КонецЕсли;
	КонецЕсли;
	//--ЭЛИАС 20171220
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ГруппыСУправляемойВидимостью()
	
	Результат = Новый Массив;
	
	Результат.Добавить("ГруппаФорматы");
	Результат.Добавить("ГруппаВыборПечатнойФормы");
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти
