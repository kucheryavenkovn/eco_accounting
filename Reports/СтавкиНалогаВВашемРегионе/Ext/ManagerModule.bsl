#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

// Формирует отчет о ставках УСН, помещает его в составе структуры во временное хранилище.
//
// Параметры:
//  ПараметрыОтчета - Структура - параметры для запроса информации в сервисе и формирования отчета.
//  	* КодРегиона - Строка - код субъекта РФ
//		* НаименованиеРегиона - Строка - наименование субъекта РФ
//  	* КодВидаДеятельности - Строка - код вида деятельности по классификатору ОКВЭД (ред.2)
//		* НаименованиеВидаДеятельности - Строка - наименование вида деятельности по ОКВЭД
//  	* ЭтоЮрЛицо - Булево - получать информацию для юридического лица или для предпринимателя
//  	* ПрименяетсяУСНДоходы - Булево - получать информацию для системы налогообложения УСН (доходы)
//  	* ПрименяетсяУСНДоходыРасходы - Булево - получать информацию для системы налогообложения УСН (доходы - расходы)
//		* ПоказыватьПрименить - Булево - показывать ли в сформированном ответе гиперссылки "Применить".
//										Например, не нужно показывать гиперссылки, если нет прав на изменение ставок.
//		* Организация - СправочникСсылка.Организации, Неопределено - организация, которая будет передана в расшифровку отчета
//  АдресХранилища - Строка	- адрес временного хранилища
//
Процедура СформироватьОтчетУСН(ПараметрыОтчета, АдресХранилища) Экспорт
	
	Результат = ДанныеОтчетаУСН(ПараметрыОтчета);
	ПоместитьВоВременноеХранилище(Результат, АдресХранилища);
	
КонецПроцедуры

// Формирует отчет о ставках ПСН, помещает его в составе структуры во временное хранилище.
//
// Параметры:
//  ПараметрыОтчета - Структура - параметры для запроса информации в сервисе и формирования отчета.
//  	* КодРегиона - Строка - код субъекта РФ
//		* НаименованиеРегиона - Строка - наименование субъекта РФ
//  	* КодВидаДеятельности - Строка - код вида деятельности для ПСН
//		* НаименованиеВидаДеятельности - Строка - наименование вида деятельности для ПСН
//		* Период - Дата - дата, по состоянию на которую получаются данные сервиса
//		* ПоказыватьПрименить - Булево - показывать ли в сформированном ответе гиперссылки "Применить".
//										Например, не нужно показывать гиперссылки, если нет прав на изменение ставок.
//		* ИнформацияСервиса - Структура, Неопределено - информация, ранее полученная из сервиса региональных ставок налогов.
//										Если Неопределено - информация получается при формировании отчета.
//  АдресХранилища - Строка	- адрес временного хранилища
//
Процедура СформироватьОтчетПСН(ПараметрыОтчета, АдресХранилища) Экспорт
	
	Результат = ДанныеОтчетаПСН(ПараметрыОтчета);
	ПоместитьВоВременноеХранилище(Результат, АдресХранилища);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область УСН

Функция ДанныеОтчетаУСН(Параметры)

	Результат = Новый Структура;
	Результат.Вставить("ДокументРезультат");
	Результат.Вставить("ОписаниеОшибки", "");
	
	ОтветСервиса = РегиональныеСтавкиНалогов.ПолучитьСтавкиУСН(Параметры);
	
	Если ЗначениеЗаполнено(ОтветСервиса.ОписаниеОшибки) Тогда
		Результат.ОписаниеОшибки = ОтветСервиса.ОписаниеОшибки;
		Возврат Результат;
	КонецЕсли;
	
	Если ТипЗнч(ОтветСервиса.Ответ) <> Тип("Структура")
		ИЛИ НЕ ОтветСервиса.Ответ.Свойство("ОписаниеОшибки")
		ИЛИ НЕ ОтветСервиса.Ответ.Свойство("Информация") Тогда
		Результат.ОписаниеОшибки = НСтр("ru='Ошибка при получении данных сервиса.'");
		Возврат Результат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОтветСервиса.Ответ.ОписаниеОшибки) Тогда
		Результат.ОписаниеОшибки = ОтветСервиса.Ответ.ОписаниеОшибки;
		Возврат Результат;
	КонецЕсли;
	
	Информация = ОтветСервиса.Ответ.Информация;
	
	ДокументРезультат = Новый ТабличныйДокумент;
	Области = ВсеОбластиМакета();
	
	НаименованиеОтчета = НСтр("ru='Ставки налога по упрощенной системе налогообложения'");
	Области.ЗаголовокОбщий.Параметры.НаименованиеОтчета = НаименованиеОтчета;
	Области.ЗаголовокОбщий.Параметры.НаименованиеРегиона = Параметры.НаименованиеРегиона;
	Области.ЗаголовокОбщий.Параметры.НаименованиеВидаДеятельности = Параметры.НаименованиеВидаДеятельности;
	ДокументРезультат.Вывести(Области.ЗаголовокОбщий);
	ДокументРезультат.Вывести(Области.ОкончаниеРаздела);
	
	Для каждого ОбъектНалогообложения Из Информация.ОбъектыНалогообложения Цикл
		
		ВывестиИнформациюОсновнаяСтавкаУСН(
			ОбъектНалогообложения, ДокументРезультат, Области, Параметры);
		
		ВывестиИнформациюЛьготныеСтавкиУСН(
			ОбъектНалогообложения, ДокументРезультат, Области, Параметры);
		
	КонецЦикла;
	
	ВывестиИнформациюНалоговыеКаникулыУСН(
		Информация.НалоговыеКаникулы, ДокументРезультат, Области, Параметры);
	
	Результат.ДокументРезультат = ДокументРезультат;
	Возврат Результат;
	
КонецФункции

Процедура ВывестиИнформациюОсновнаяСтавкаУСН(ОбъектНалогообложения, ДокументРезультат, Области, ПараметрыОтчета)
	
	Области.ЗаголовокОбъекта.Параметры.НаименованиеНалога = ОбъектНалогообложения.НаименованиеНалога;
	ДокументРезультат.Вывести(Области.ЗаголовокОбъекта);
	ДокументРезультат.Вывести(Области.Разделитель);
	
	ТекстЗаголовка = НСтр("ru='Основная ставка'");
	ОсновнаяСтавка = ОбъектНалогообложения.ОсновнаяСтавка;
	Области.ЗаголовокРаздела.Параметры.ЗаголовокРаздела = ВРег(ТекстЗаголовка);
	ДокументРезультат.Вывести(Области.ЗаголовокРаздела);
	ДокументРезультат.Вывести(Области.Разделитель);
	
	Области.ОсновнаяСтавка.Параметры.СтавкаПредставление = СтрШаблон("%1%%", ОсновнаяСтавка.СтавкаНалога);
	Области.ОсновнаяСтавка.Параметры.Описание = ОсновнаяСтавка.Описание;
	ДокументРезультат.Вывести(Области.ОсновнаяСтавка);
	
	Если ПараметрыОтчета.ПоказыватьПрименить 
		И ОсновнаяСтавка.Применяется Тогда
		Расшифровка = Новый Структура;
		Расшифровка.Вставить("Действие", "ПрименитьСтавку");
		Расшифровка.Вставить("УСНДоходы", ОбъектНалогообложения.УСНДоходы);
		Расшифровка.Вставить("СтавкаНалога", ОсновнаяСтавка.СтавкаНалога);
		Расшифровка.Вставить("КодРегиона", ПараметрыОтчета.КодРегиона);
		Расшифровка.Вставить("КодВидаДеятельности", ПараметрыОтчета.КодВидаДеятельности);
		Области.ПрименитьБезУсловий.Параметры.РасшифровкаПрименить = Расшифровка;
		ДокументРезультат.Вывести(Области.ПрименитьБезУсловий);
	КонецЕсли;
	ДокументРезультат.Вывести(Области.ОкончаниеРаздела);
	
КонецПроцедуры

Процедура ВывестиИнформациюЛьготныеСтавкиУСН(ОбъектНалогообложения, ДокументРезультат, Области, ПараметрыОтчета)

	ТекстЗаголовка = НСтр("ru='Льготные ставки'");
	ЛьготныеСтавки = ОбъектНалогообложения.ЛьготныеСтавки;
	Области.ЗаголовокРаздела.Параметры.ЗаголовокРаздела = ВРег(ТекстЗаголовка);
	ДокументРезультат.Вывести(Области.ЗаголовокРаздела);
	ДокументРезультат.Вывести(Области.Разделитель);
	
	Если ЛьготныеСтавки.Применяются Тогда
		
		Для каждого ИнформацияПоСтавке Из ЛьготныеСтавки.СтавкиНалога Цикл
			ВывестиИнформациюЛьготнаяСтавкаУСН(
				ИнформацияПоСтавке, ОбъектНалогообложения, ДокументРезультат, Области, ПараметрыОтчета);
		КонецЦикла;
		
	Иначе
		
		Области.НетЛьготнойСтавки.Параметры.Описание = ЛьготныеСтавки.Описание;
		ДокументРезультат.Вывести(Области.НетЛьготнойСтавки);
		ДокументРезультат.Вывести(Области.ОкончаниеРаздела);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ВывестиИнформациюЛьготнаяСтавкаУСН(ИнформацияПоСтавке, ОбъектНалогообложения, ДокументРезультат, Области, ПараметрыОтчета)
	
	ЕстьУсловия = ИнформацияПоСтавке.Условия.Количество() > 0;
	ПоказанНормативныйАкт = Ложь;
	ЕстьСсылкаНаНормативныйАкт = ЗначениеЗаполнено(ИнформацияПоСтавке.СсылкаНаНормативныйАкт);
	
	ТекущаяОбласть = ?(ЕстьУсловия, Области.ЛьготнаяСтавка, Области.ЛьготнаяСтавкаБезУсловий);
	ТекущаяОбласть.Параметры.СтавкаПредставление = СтрШаблон("%1%%", ИнформацияПоСтавке.СтавкаНалога);
	Если Не ЕстьУсловия Тогда
		ТекущаяОбласть.Параметры.Описание = ИнформацияПоСтавке.Описание;
	КонецЕсли;
	ДокументРезультат.Вывести(ТекущаяОбласть);
	
	Если ПараметрыОтчета.ПоказыватьПрименить Тогда
		Если ЕстьУсловия Тогда
			ТекущаяОбласть = Области.ПрименитьСУсловием;
		ИначеЕсли ЕстьСсылкаНаНормативныйАкт Тогда
			ТекущаяОбласть = Области.ПрименитьСоСсылкойНаНормативныйАкт;
		Иначе
			ТекущаяОбласть = Области.ПрименитьСНормативнымАктом;
		КонецЕсли;
		Расшифровка = Новый Структура;
		Расшифровка.Вставить("Действие", "ПрименитьСтавку");
		Расшифровка.Вставить("УСНДоходы", ОбъектНалогообложения.УСНДоходы);
		Расшифровка.Вставить("СтавкаНалога", ИнформацияПоСтавке.СтавкаНалога);
		Расшифровка.Вставить("КодРегиона", ПараметрыОтчета.КодРегиона);
		Расшифровка.Вставить("КодВидаДеятельности", ПараметрыОтчета.КодВидаДеятельности);
		ТекущаяОбласть.Параметры.РасшифровкаПрименить = Расшифровка;
	Иначе
		Если ЕстьУсловия Тогда
			ТекущаяОбласть = Области.Условие;
		ИначеЕсли ЕстьСсылкаНаНормативныйАкт Тогда
			ТекущаяОбласть = Области.СсылкаНаНормативныйАкт;
		Иначе
			ТекущаяОбласть = Области.НормативныйАкт;
		КонецЕсли;
	КонецЕсли;
	
	Если ЕстьУсловия Тогда
		ТекущаяОбласть.Параметры.Условие = ИнформацияПоСтавке.Условия[0];
	Иначе
		Если ЕстьСсылкаНаНормативныйАкт Тогда
			Расшифровка = Новый Структура;
			Расшифровка.Вставить("Действие", "ПерейтиПоСсылке");
			Расшифровка.Вставить("Ссылка", ИнформацияПоСтавке.СсылкаНаНормативныйАкт);
			ТекущаяОбласть.Параметры.РасшифровкаНормативныйАкт = Расшифровка;
		КонецЕсли;
		ТекущаяОбласть.Параметры.НормативныйАкт = ИнформацияПоСтавке.НормативныйАкт;
		ПоказанНормативныйАкт = Истина;
	КонецЕсли;
	ДокументРезультат.Вывести(ТекущаяОбласть);
	
	Для Номер = 1 По ИнформацияПоСтавке.Условия.ВГраница() Цикл
		Области.Условие.Параметры.Условие = ИнформацияПоСтавке.Условия[Номер];
		ДокументРезультат.Вывести(Области.Условие);
	КонецЦикла;
	
	Если НЕ ПоказанНормативныйАкт Тогда
		Если ЕстьСсылкаНаНормативныйАкт Тогда
			ТекущаяОбласть = Области.СсылкаНаНормативныйАкт;
			Расшифровка = Новый Структура;
			Расшифровка.Вставить("Действие", "ПерейтиПоСсылке");
			Расшифровка.Вставить("Ссылка", ИнформацияПоСтавке.СсылкаНаНормативныйАкт);
			ТекущаяОбласть.Параметры.РасшифровкаНормативныйАкт = Расшифровка;
		Иначе
			ТекущаяОбласть = Области.НормативныйАкт;
		КонецЕсли;
		ТекущаяОбласть.Параметры.НормативныйАкт = ИнформацияПоСтавке.НормативныйАкт;
		ДокументРезультат.Вывести(ТекущаяОбласть);
	КонецЕсли;
	
	ДокументРезультат.Вывести(Области.ОкончаниеРаздела);
	
КонецПроцедуры

Процедура ВывестиИнформациюНалоговыеКаникулыУСН(ИнформацияКаникулы, ДокументРезультат, Области, ПараметрыОтчета)
	
	ЭтоЮрЛицо = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ПараметрыОтчета, "ЭтоЮрЛицо", Ложь);
	Если ЭтоЮрЛицо Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗаголовка = НСтр("ru='Налоговые каникулы'");
	Области.ЗаголовокОбъекта.Параметры.НаименованиеНалога = ТекстЗаголовка;
	ДокументРезультат.Вывести(Области.ЗаголовокОбъекта);
	ДокументРезультат.Вывести(Области.Разделитель);
	
	Если ИнформацияКаникулы.Применяются Тогда
		
		ЕстьУсловия = ИнформацияКаникулы.Условия.Количество() > 0;
		ПоказанНормативныйАкт = Ложь;
		ЕстьСсылкаНаНормативныйАкт = ЗначениеЗаполнено(ИнформацияКаникулы.СсылкаНаНормативныйАкт);
		
		Области.ЛьготнаяСтавка.Параметры.СтавкаПредставление = "0%";
		Если Не ЕстьУсловия Тогда
			Области.ЛьготнаяСтавка.Параметры.Описание = ИнформацияКаникулы.Описание;
		КонецЕсли;
		ДокументРезультат.Вывести(Области.ЛьготнаяСтавка);
		
		Если ПараметрыОтчета.ПоказыватьПрименить Тогда
			Если ЕстьУсловия Тогда
				ТекущаяОбласть = Области.ПрименитьСУсловием;
			ИначеЕсли ЕстьСсылкаНаНормативныйАкт Тогда
				ТекущаяОбласть = Области.ПрименитьСоСсылкойНаНормативныйАкт;
			Иначе
				ТекущаяОбласть = Области.ПрименитьСНормативнымАктом;
			КонецЕсли;
			Расшифровка = Новый Структура;
			Расшифровка.Вставить("Действие", "ПрименитьСтавку");
			Расшифровка.Вставить("НалоговыеКаникулы", Истина);
			Расшифровка.Вставить("КодРегиона", ПараметрыОтчета.КодРегиона);
			Расшифровка.Вставить("КодВидаДеятельности", ПараметрыОтчета.КодВидаДеятельности);
			ТекущаяОбласть.Параметры.РасшифровкаПрименить = Расшифровка;
		Иначе
			Если ЕстьУсловия Тогда
				ТекущаяОбласть = Области.Условие;
			ИначеЕсли ЕстьСсылкаНаНормативныйАкт Тогда
				ТекущаяОбласть = Области.СсылкаНаНормативныйАкт;
			Иначе
				ТекущаяОбласть = Области.НормативныйАкт;
			КонецЕсли;
		КонецЕсли;
		
		Если ЕстьУсловия Тогда
			ТекущаяОбласть.Параметры.Условие = ИнформацияКаникулы.Условия[0];
		Иначе
			Если ЕстьСсылкаНаНормативныйАкт Тогда
				Расшифровка = Новый Структура;
				Расшифровка.Вставить("Действие", "ПерейтиПоСсылке");
				Расшифровка.Вставить("Ссылка", ИнформацияКаникулы.СсылкаНаНормативныйАкт);
				ТекущаяОбласть.Параметры.РасшифровкаНормативныйАкт = Расшифровка;
			КонецЕсли;
			ТекущаяОбласть.Параметры.НормативныйАкт = ИнформацияКаникулы.НормативныйАкт;
			ПоказанНормативныйАкт = Истина;
		КонецЕсли;
		ДокументРезультат.Вывести(ТекущаяОбласть);
		
		Для Номер = 1 По ИнформацияКаникулы.Условия.ВГраница() Цикл
			Области.Условие.Параметры.Условие = ИнформацияКаникулы.Условия[Номер];
			ДокументРезультат.Вывести(Области.Условие);
		КонецЦикла;
		
		Если НЕ ПоказанНормативныйАкт Тогда
			Если ЕстьСсылкаНаНормативныйАкт Тогда
				ТекущаяОбласть = Области.СсылкаНаНормативныйАкт;
				Расшифровка = Новый Структура;
				Расшифровка.Вставить("Действие", "ПерейтиПоСсылке");
				Расшифровка.Вставить("Ссылка", ИнформацияКаникулы.СсылкаНаНормативныйАкт);
				ТекущаяОбласть.Параметры.РасшифровкаНормативныйАкт = Расшифровка;
			Иначе
				ТекущаяОбласть = Области.НормативныйАкт;
			КонецЕсли;
			ТекущаяОбласть.Параметры.НормативныйАкт = ИнформацияКаникулы.НормативныйАкт;
			ДокументРезультат.Вывести(ТекущаяОбласть);
		КонецЕсли;
		
	Иначе
		
		Области.НетЛьготнойСтавки.Параметры.Описание = ИнформацияКаникулы.Описание;
		ДокументРезультат.Вывести(Области.НетЛьготнойСтавки);
		
	КонецЕсли;
	
КонецПроцедуры
	
#КонецОбласти

#Область ПСН

Функция ДанныеОтчетаПСН(Параметры)

	Результат = Новый Структура;
	Результат.Вставить("ДокументРезультат");
	Результат.Вставить("ОписаниеОшибки", "");
	
	ОтветСервиса = РегиональныеСтавкиНалогов.ПолучитьСтавкиПСН(Параметры);
	Если ЗначениеЗаполнено(ОтветСервиса.ОписаниеОшибки) Тогда
		Результат.ОписаниеОшибки = ОтветСервиса.ОписаниеОшибки;
		Возврат Результат;
	КонецЕсли;
	
	Если ТипЗнч(ОтветСервиса.Ответ) <> Тип("Структура") Тогда
		Результат.ОписаниеОшибки = НСтр("ru='Ошибка при получении данных сервиса.'");
		Возврат Результат;
	КонецЕсли;
	
	Информация = ОтветСервиса.Ответ;
	
	ДокументРезультат = Новый ТабличныйДокумент;
	Области = ВсеОбластиМакета();
	
	НаименованиеОтчета = НСтр("ru='Ставки налога по патентной системе налогообложения'");
	Области.ЗаголовокОбщий.Параметры.НаименованиеОтчета = НаименованиеОтчета;
	Области.ЗаголовокОбщий.Параметры.НаименованиеРегиона = Параметры.НаименованиеРегиона;
	Области.ЗаголовокОбщий.Параметры.НаименованиеВидаДеятельности = Параметры.НаименованиеВидаДеятельности;
	ДокументРезультат.Вывести(Области.ЗаголовокОбщий);
	ДокументРезультат.Вывести(Области.ОкончаниеРаздела);
	
	Области.ЗаголовокОбъекта.Параметры.НаименованиеНалога = НСтр("ru='Ставки налога'");
	ДокументРезультат.Вывести(Области.ЗаголовокОбъекта);
	ДокументРезультат.Вывести(Области.Разделитель);
	
	ВывестиИнформациюОсновнаяСтавкаПСН(Информация, ДокументРезультат, Области, Параметры);
	
	ВывестиИнформациюЛьготнаяСтавкаПСН(Информация, ДокументРезультат, Области, Параметры);
	
	ВывестиИнформациюНалоговыеКаникулыПСН(Информация, ДокументРезультат, Области, Параметры);
	
	Результат.ДокументРезультат = ДокументРезультат;
	Возврат Результат;
	
КонецФункции

Процедура ВывестиИнформациюОсновнаяСтавкаПСН(Информация, ДокументРезультат, Области, ПараметрыОтчета)
	
	ТекстЗаголовка = НСтр("ru='Основная ставка'");
	Области.ЗаголовокРаздела.Параметры.ЗаголовокРаздела = ВРег(ТекстЗаголовка);
	ДокументРезультат.Вывести(Области.ЗаголовокРаздела);
	ДокументРезультат.Вывести(Области.Разделитель);
	
	ИнформацияПоСтавке = Информация.ОсновнаяСтавка;
	Области.ОсновнаяСтавка.Параметры.СтавкаПредставление = СтрШаблон("%1%%", ИнформацияПоСтавке.СтавкаНалога);
	Области.ОсновнаяСтавка.Параметры.Описание = ИнформацияПоСтавке.Описание;
	ДокументРезультат.Вывести(Области.ОсновнаяСтавка);
	
	Если ПараметрыОтчета.ПоказыватьПрименить 
		И ИнформацияПоСтавке.Применяется Тогда
		Расшифровка = Новый Структура;
		Расшифровка.Вставить("Действие", "ПрименитьСтавку");
		Расшифровка.Вставить("СтавкаНалога", ИнформацияПоСтавке.СтавкаНалога);
		Расшифровка.Вставить("Информация", Информация);
		Расшифровка.Вставить("КодРегиона", ПараметрыОтчета.КодРегиона);
		Расшифровка.Вставить("КодВидаДеятельности", ПараметрыОтчета.КодВидаДеятельности);
		Области.ПрименитьБезУсловий.Параметры.РасшифровкаПрименить = Расшифровка;
		ДокументРезультат.Вывести(Области.ПрименитьБезУсловий);
	КонецЕсли;
	ДокументРезультат.Вывести(Области.ОкончаниеРаздела);
	
КонецПроцедуры

Процедура ВывестиИнформациюЛьготнаяСтавкаПСН(Информация, ДокументРезультат, Области, ПараметрыОтчета)

	ТекстЗаголовка = НСтр("ru='Льготная ставка'");
	Области.ЗаголовокРаздела.Параметры.ЗаголовокРаздела = ВРег(ТекстЗаголовка);
	ДокументРезультат.Вывести(Области.ЗаголовокРаздела);
	ДокументРезультат.Вывести(Области.Разделитель);
	
	ИнформацияПоСтавке = Информация.ЛьготнаяСтавка;
	Если ИнформацияПоСтавке.Применяется Тогда
		
		ЕстьУсловия = ИнформацияПоСтавке.Условия.Количество() > 0;
		ПоказанНормативныйАкт = Ложь;
		ЕстьСсылкаНаНормативныйАкт = ЗначениеЗаполнено(ИнформацияПоСтавке.СсылкаНаНормативныйАкт);
		
		ТекущаяОбласть = ?(ЕстьУсловия, Области.ЛьготнаяСтавка, Области.ЛьготнаяСтавкаБезУсловий);
		ТекущаяОбласть.Параметры.СтавкаПредставление = СтрШаблон("%1%%", ИнформацияПоСтавке.СтавкаНалога);
		Если Не ЕстьУсловия Тогда
			ТекущаяОбласть.Параметры.Описание = ИнформацияПоСтавке.Описание;
		КонецЕсли;
		ДокументРезультат.Вывести(ТекущаяОбласть);
		
		Если ПараметрыОтчета.ПоказыватьПрименить Тогда
			Если ЕстьУсловия Тогда
				ТекущаяОбласть = Области.ПрименитьСУсловием;
			ИначеЕсли ЕстьСсылкаНаНормативныйАкт Тогда
				ТекущаяОбласть = Области.ПрименитьСоСсылкойНаНормативныйАкт;
			Иначе
				ТекущаяОбласть = Области.ПрименитьСНормативнымАктом;
			КонецЕсли;
			Расшифровка = Новый Структура;
			Расшифровка.Вставить("Действие", "ПрименитьСтавку");
			Расшифровка.Вставить("СтавкаНалога", ИнформацияПоСтавке.СтавкаНалога);
			Расшифровка.Вставить("Информация", Информация);
			Расшифровка.Вставить("КодРегиона", ПараметрыОтчета.КодРегиона);
			Расшифровка.Вставить("КодВидаДеятельности", ПараметрыОтчета.КодВидаДеятельности);
			ТекущаяОбласть.Параметры.РасшифровкаПрименить = Расшифровка;
		Иначе
			Если ЕстьУсловия Тогда
				ТекущаяОбласть = Области.Условие;
			ИначеЕсли ЕстьСсылкаНаНормативныйАкт Тогда
				ТекущаяОбласть = Области.СсылкаНаНормативныйАкт;
			Иначе
				ТекущаяОбласть = Области.НормативныйАкт;
			КонецЕсли;
		КонецЕсли;
		
		Если ЕстьУсловия Тогда
			ТекущаяОбласть.Параметры.Условие = ИнформацияПоСтавке.Условия[0];
		Иначе
			Если ЕстьСсылкаНаНормативныйАкт Тогда
				Расшифровка = Новый Структура;
				Расшифровка.Вставить("Действие", "ПерейтиПоСсылке");
				Расшифровка.Вставить("Ссылка", ИнформацияПоСтавке.СсылкаНаНормативныйАкт);
				Расшифровка.Вставить("КодРегиона", ПараметрыОтчета.КодРегиона);
				Расшифровка.Вставить("КодВидаДеятельности", ПараметрыОтчета.КодВидаДеятельности);
				ТекущаяОбласть.Параметры.РасшифровкаНормативныйАкт = Расшифровка;
			КонецЕсли;
			ТекущаяОбласть.Параметры.НормативныйАкт = ИнформацияПоСтавке.НормативныйАкт;
			ПоказанНормативныйАкт = Истина;
		КонецЕсли;
		ДокументРезультат.Вывести(ТекущаяОбласть);
		
		Для Номер = 1 По ИнформацияПоСтавке.Условия.ВГраница() Цикл
			Области.Условие.Параметры.Условие = ИнформацияПоСтавке.Условия[Номер];
			ДокументРезультат.Вывести(Области.Условие);
		КонецЦикла;
		
		Если НЕ ПоказанНормативныйАкт Тогда
			Если ЕстьСсылкаНаНормативныйАкт Тогда
				ТекущаяОбласть = Области.СсылкаНаНормативныйАкт;
				Расшифровка = Новый Структура;
				Расшифровка.Вставить("Действие", "ПерейтиПоСсылке");
				Расшифровка.Вставить("Ссылка", ИнформацияПоСтавке.СсылкаНаНормативныйАкт);
				Расшифровка.Вставить("КодРегиона", ПараметрыОтчета.КодРегиона);
				Расшифровка.Вставить("КодВидаДеятельности", ПараметрыОтчета.КодВидаДеятельности);
				ТекущаяОбласть.Параметры.РасшифровкаНормативныйАкт = Расшифровка;
			Иначе
				ТекущаяОбласть = Области.НормативныйАкт;
			КонецЕсли;
			ТекущаяОбласть.Параметры.НормативныйАкт = ИнформацияПоСтавке.НормативныйАкт;
			ДокументРезультат.Вывести(ТекущаяОбласть);
		КонецЕсли;
		
		ДокументРезультат.Вывести(Области.ОкончаниеРаздела);
		
	Иначе
		
		Области.НетЛьготнойСтавки.Параметры.Описание = ИнформацияПоСтавке.Описание;
		ДокументРезультат.Вывести(Области.НетЛьготнойСтавки);
		ДокументРезультат.Вывести(Области.ОкончаниеРаздела);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ВывестиИнформациюНалоговыеКаникулыПСН(Информация, ДокументРезультат, Области, ПараметрыОтчета)
	
	Области.ЗаголовокОбъекта.Параметры.НаименованиеНалога = НСтр("ru='Налоговые каникулы'");
	ДокументРезультат.Вывести(Области.ЗаголовокОбъекта);
	ДокументРезультат.Вывести(Области.Разделитель);
	
	ИнформацияКаникулы = Информация.НалоговыеКаникулы;
	Если ИнформацияКаникулы.Применяются Тогда
		
		ЕстьУсловия = ИнформацияКаникулы.Условия.Количество() > 0;
		ПоказанНормативныйАкт = Ложь;
		ЕстьСсылкаНаНормативныйАкт = ЗначениеЗаполнено(ИнформацияКаникулы.СсылкаНаНормативныйАкт);
		
		Области.ЛьготнаяСтавка.Параметры.СтавкаПредставление = "0%";
		Если Не ЕстьУсловия Тогда
			Области.ЛьготнаяСтавка.Параметры.Описание = ИнформацияКаникулы.Описание;
		КонецЕсли;
		ДокументРезультат.Вывести(Области.ЛьготнаяСтавка);
		
		Если ПараметрыОтчета.ПоказыватьПрименить Тогда
			Если ЕстьУсловия Тогда
				ТекущаяОбласть = Области.ПрименитьСУсловием;
			ИначеЕсли ЕстьСсылкаНаНормативныйАкт Тогда
				ТекущаяОбласть = Области.ПрименитьСоСсылкойНаНормативныйАкт;
			Иначе
				ТекущаяОбласть = Области.ПрименитьСНормативнымАктом;
			КонецЕсли;
			Расшифровка = Новый Структура;
			Расшифровка.Вставить("Действие", "ПрименитьСтавку");
			Расшифровка.Вставить("НалоговыеКаникулы", Истина);
			Расшифровка.Вставить("Информация", Информация);
			Расшифровка.Вставить("КодРегиона", ПараметрыОтчета.КодРегиона);
			Расшифровка.Вставить("КодВидаДеятельности", ПараметрыОтчета.КодВидаДеятельности);
			ТекущаяОбласть.Параметры.РасшифровкаПрименить = Расшифровка;
		Иначе
			Если ЕстьУсловия Тогда
				ТекущаяОбласть = Области.Условие;
			ИначеЕсли ЕстьСсылкаНаНормативныйАкт Тогда
				ТекущаяОбласть = Области.СсылкаНаНормативныйАкт;
			Иначе
				ТекущаяОбласть = Области.НормативныйАкт;
			КонецЕсли;
		КонецЕсли;
		
		Если ЕстьУсловия Тогда
			ТекущаяОбласть.Параметры.Условие = ИнформацияКаникулы.Условия[0];
		Иначе
			Если ЕстьСсылкаНаНормативныйАкт Тогда
				Расшифровка = Новый Структура;
				Расшифровка.Вставить("Действие", "ПерейтиПоСсылке");
				Расшифровка.Вставить("Ссылка", ИнформацияКаникулы.СсылкаНаНормативныйАкт);
				Расшифровка.Вставить("КодРегиона", ПараметрыОтчета.КодРегиона);
				Расшифровка.Вставить("КодВидаДеятельности", ПараметрыОтчета.КодВидаДеятельности);
				ТекущаяОбласть.Параметры.РасшифровкаНормативныйАкт = Расшифровка;
			КонецЕсли;
			ТекущаяОбласть.Параметры.НормативныйАкт = ИнформацияКаникулы.НормативныйАкт;
			ПоказанНормативныйАкт = Истина;
		КонецЕсли;
		ДокументРезультат.Вывести(ТекущаяОбласть);
		
		Для Номер = 1 По ИнформацияКаникулы.Условия.ВГраница() Цикл
			Области.Условие.Параметры.Условие = ИнформацияКаникулы.Условия[Номер];
			ДокументРезультат.Вывести(Области.Условие);
		КонецЦикла;
		
		Если НЕ ПоказанНормативныйАкт Тогда
			Если ЕстьСсылкаНаНормативныйАкт Тогда
				ТекущаяОбласть = Области.СсылкаНаНормативныйАкт;
				Расшифровка = Новый Структура;
				Расшифровка.Вставить("Действие", "ПерейтиПоСсылке");
				Расшифровка.Вставить("Ссылка", ИнформацияКаникулы.СсылкаНаНормативныйАкт);
				Расшифровка.Вставить("КодРегиона", ПараметрыОтчета.КодРегиона);
				Расшифровка.Вставить("КодВидаДеятельности", ПараметрыОтчета.КодВидаДеятельности);
				ТекущаяОбласть.Параметры.РасшифровкаНормативныйАкт = Расшифровка;
			Иначе
				ТекущаяОбласть = Области.НормативныйАкт;
			КонецЕсли;
			ТекущаяОбласть.Параметры.НормативныйАкт = ИнформацияКаникулы.НормативныйАкт;
			ДокументРезультат.Вывести(ТекущаяОбласть);
		КонецЕсли;
		
	Иначе
		
		Области.НетЛьготнойСтавки.Параметры.Описание = ИнформацияКаникулы.Описание;
		ДокументРезультат.Вывести(Области.НетЛьготнойСтавки);
		
	КонецЕсли;
	
КонецПроцедуры
	
#КонецОбласти

Функция ВсеОбластиМакета()
	
	Результат = Новый Структура;
	
	Макет = ПолучитьМакет("СтавкиНалога");
	Для каждого ОбластьМакета Из Макет.Области Цикл
		Результат.Вставить(ОбластьМакета.Имя, Макет.ПолучитьОбласть(ОбластьМакета.Имя));
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецЕсли
