#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Для Каждого ТекущаяСтрока Из Параметры.СчетаРасчетов Цикл
		НоваяСтрока = СчетаРасчетов.Добавить();
		НоваяСтрока.СчетРасчетов = ТекущаяСтрока.Значение;
		НоваяСтрока.УчаствуетВРасчетах = ТекущаяСтрока.Пометка;
		НоваяСтрока.ЗапретитьИспользоватьВПроводках = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
			ТекущаяСтрока.Значение,
			"ЗапретитьИспользоватьВПроводках");
	КонецЦикла;
	
	Элементы.СчетаРасчетов.РасширеннаяПодсказка.Заголовок = ПодсказкаТаблицыСчетовРасчета();
	
	УстановитьУсловноеОформление();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСчетаРасчетов

&НаКлиенте
Процедура СчетаРасчетовУчаствуетВРасчетахПриИзменении(Элемент)
	
	Если Элементы.СчетаРасчетов.ТекущиеДанные.ЗапретитьИспользоватьВПроводках Тогда
		СчетаРасчетовУчаствуетВРасчетахПриИзмененииНаСервере();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура УстановитьВсе(Команда)
	
	Для Каждого СтрокаТаблицы Из СчетаРасчетов Цикл
		СтрокаТаблицы.УчаствуетВРасчетах = Истина;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьВсе(Команда)
	
	Для Каждого СтрокаТаблицы Из СчетаРасчетов Цикл
		СтрокаТаблицы.УчаствуетВРасчетах = Ложь;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОК(Команда)
	
	ПараметрыВыбора = Новый СписокЗначений;
	Для Каждого ТекущаяСтрока Из СчетаРасчетов Цикл
		ПараметрыВыбора.Добавить(ТекущаяСтрока.СчетРасчетов, , ТекущаяСтрока.УчаствуетВРасчетах);
	КонецЦикла;
	
	ОповеститьОВыборе(ПараметрыВыбора);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ПодсказкаТаблицыСчетовРасчета()
	
	ТекстПодсказки = НСтр("ru = 'В таблице приведены счета учета расчетов, по которым формируется отчет.'");
	
	Возврат ТекстПодсказки;
	
КонецФункции

&НаСервере
Процедура СчетаРасчетовУчаствуетВРасчетахПриИзмененииНаСервере()
	
	ТекущиеДанные = СчетаРасчетов.НайтиПоИдентификатору(Элементы.СчетаРасчетов.ТекущаяСтрока);
	
	Если ТекущиеДанные <> Неопределено Тогда
		
		Счет = ТекущиеДанные.СчетРасчетов;
		
		Для Каждого СтрокаТаблицы Из СчетаРасчетов Цикл
			
			Если СтрокаТаблицы.СчетРасчетов = Счет Тогда
				Продолжить;
			КонецЕсли;
			
			Если БухгалтерскийУчетПовтИсп.СчетВИерархии(СтрокаТаблицы.СчетРасчетов, Счет) Тогда
				СтрокаТаблицы.УчаствуетВРасчетах = ТекущиеДанные.УчаствуетВРасчетах;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();

	ЭлементУО = УсловноеОформление.Элементы.Добавить();

	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "СчетаРасчетовУчаствуетВРасчетах");
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "СчетаРасчетовСчетРасчетов");
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "СчетаРасчетовСчетРасчетовНаименование");
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "СчетаРасчетовОтступ");

	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"СчетаРасчетов.ЗапретитьИспользоватьВПроводках", ВидСравненияКомпоновкиДанных.Равно, Истина);

	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветФона", WebЦвета.СветлоЖелтый);

КонецПроцедуры

#КонецОбласти