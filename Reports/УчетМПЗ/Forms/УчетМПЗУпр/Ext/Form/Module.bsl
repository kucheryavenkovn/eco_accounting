
&НаСервере
Процедура Команда1НаСервере()
	ДействияФормыУчетМПЗСформировать();
КонецПроцедуры

&НаКлиенте
Процедура Команда1(Команда)
	Команда1НаСервере();
КонецПроцедуры

&НаСервере
Процедура ДействияФормыУчетМПЗСформировать()
	//{{КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПРОЦЕДУРА_ВЫЗОВА(УчетМПЗ)
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	//ТабДок = ЭлементыФормы.ПолеТабличногоДокумента;
	
	Счета=Новый Массив;
	Если Отчет.ВыводитьТМЦ Тогда
		//Счета=ПланыСчетов.Хозрасчетный.НайтиПоКоду("10");
		Счета.Добавить(ПланыСчетов.Хозрасчетный.НайтиПоКоду("10.01"));
		Счета.Добавить(ПланыСчетов.Хозрасчетный.НайтиПоКоду("10.02"));
		Счета.Добавить(ПланыСчетов.Хозрасчетный.НайтиПоКоду("10.03"));
		Счета.Добавить(ПланыСчетов.Хозрасчетный.НайтиПоКоду("10.04"));
		Счета.Добавить(ПланыСчетов.Хозрасчетный.НайтиПоКоду("10.05"));
		Счета.Добавить(ПланыСчетов.Хозрасчетный.НайтиПоКоду("10.06"));
		Счета.Добавить(ПланыСчетов.Хозрасчетный.НайтиПоКоду("10.07"));
		Счета.Добавить(ПланыСчетов.Хозрасчетный.НайтиПоКоду("10.08"));
		Счета.Добавить(ПланыСчетов.Хозрасчетный.НайтиПоКоду("10.09"));
		Счета.Добавить(ПланыСчетов.Хозрасчетный.НайтиПоКоду("10.10"));
		Счета.Добавить(ПланыСчетов.Хозрасчетный.НайтиПоКоду("10.МО"));
		
	КонецЕсли;
	Если Отчет.ВыводитьПродукция Тогда
		Счета.Добавить(ПланыСчетов.Хозрасчетный.НайтиПоКоду("43"));
	КонецЕсли;	
	
	УчетМПЗ(отчет.КонПериода, отчет.НачПериода, отчет.Организация, отчет.Склад, Счета, ПланыСчетов.Хозрасчетный.НайтиПоКоду(43), отчет.ТМЦ);

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПРОЦЕДУРА_ВЫЗОВА
КонецПроцедуры

Процедура УчетМПЗ(КонПериода, НачПериода, Организация, Склад, Счета, СчетаПрод, ТМЦ) Экспорт
	//{{КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ(УчетМПЗ)
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
    Если Не Отчет.ГрКоличество ТОгда
	Макет = ПолучитьМакетНаСервере("УчетМПЗ");
	Иначе
	Макет =  ПолучитьМакетНаСервере("УчетМПЗ1");
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	""Материалы, Товары"" КАК ВидПродукции,
	|	ХозрасчетныйОстаткиИОбороты.Субконто1 КАК Номенклатура,
	|	ХозрасчетныйОстаткиИОбороты.Субконто2 КАК Склад,
	|	ХозрасчетныйОстаткиИОбороты.Регистратор КАК Регистратор,
	|	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстаток) КАК СуммаНачальныйОстаток,
	|	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаОборотДт) КАК СуммаОборотДт,
	|	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаОборотКт) КАК СуммаОборотКт,
	|	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстаток) КАК СуммаКонечныйОстаток,
	|	СУММА(ХозрасчетныйОстаткиИОбороты.КоличествоНачальныйОстаток) КАК КоличествоНачальныйОстаток,
	|	СУММА(ХозрасчетныйОстаткиИОбороты.КоличествоОборотДт) КАК КоличествоОборотДт,
	|	СУММА(ХозрасчетныйОстаткиИОбороты.КоличествоОборотКт) КАК КоличествоОборотКт,
	|	СУММА(ХозрасчетныйОстаткиИОбороты.КоличествоКонечныйОстаток) КАК КоличествоКонечныйОстаток
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(
	|			&НачПериода,
	|			&КонПериода,
	|			Регистратор,
	|			ДвиженияИГраницыПериода,
	|			Счет В ИЕРАРХИИ (&Счета),
	|			,
	|			Организация = &Организация
	|				И Субконто1 В ИЕРАРХИИ (&ТМЦ)
	|				И Субконто2 В ИЕРАРХИИ (&Склад)) КАК ХозрасчетныйОстаткиИОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОстаткиИОбороты.Субконто1,
	|	ХозрасчетныйОстаткиИОбороты.Субконто2,
	|	ХозрасчетныйОстаткиИОбороты.Регистратор
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура,
	|	ВидПродукции,
	|	Регистратор
	|ИТОГИ
	|	МАКСИМУМ(Регистратор),
	|	СУММА(СуммаНачальныйОстаток),
	|	СУММА(СуммаОборотДт),
	|	СУММА(СуммаОборотКт),
	|	СУММА(СуммаКонечныйОстаток),
	|	СУММА(КоличествоНачальныйОстаток),
	|	СУММА(КоличествоОборотДт),
	|	СУММА(КоличествоОборотКт),
	|	СУММА(КоличествоКонечныйОстаток)
	|ПО
	|	ОБЩИЕ,
	|	ВидПродукции,
	|	Склад,
	|	Номенклатура"+?(отчет.Иерархия,"ИЕРАРХИЯ","")+"
	|АВТОУПОРЯДОЧИВАНИЕ";

	Запрос.УстановитьПараметр("КонПериода", КОнецДня(отчет.КонПериода));
	Запрос.УстановитьПараметр("НачПериода", НАчалоДня(отчет.НачПериода));
	Запрос.УстановитьПараметр("Организация", отчет.Организация);
	Запрос.УстановитьПараметр("Склад", отчет.Склад);
	Запрос.УстановитьПараметр("Счета", Счета);
	Запрос.УстановитьПараметр("СчетаПрод", СчетаПрод);
	Запрос.УстановитьПараметр("ТМЦ", отчет.ТМЦ);

	Результат = Запрос.Выполнить();

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьЗаголовок.Параметры.Заголовок="Отчет по ТМЦ за период с "+Формат(НачПериода,"ДФ=dd.MM.yyyy")+" по "+ Формат(КонПериода,"ДФ=dd.MM.yyyy");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьОбщийИтог = Макет.ПолучитьОбласть("ОбщиеИтоги");
	ОбластьВидПродукции = Макет.ПолучитьОбласть("ВидПродукции");
	ОбластьСклад = Макет.ПолучитьОбласть("Склад");
	ОбластьНоменклатура = Макет.ПолучитьОбласть("Номенклатура");
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");

	отчет.ТабДок.Очистить();
	отчет.ТабДок.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_УчетМПЗ";
	отчет.ТабДок.Вывести(ОбластьЗаголовок);
	отчет.ТабДок.Вывести(ОбластьШапкаТаблицы);
	отчет.ТабДок.НачатьАвтогруппировкуСтрок();

	ВыборкаОбщийИтог = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	ВыборкаОбщийИтог.Следующий();		// Общий итог
	ОбластьОбщийИтог.Параметры.Заполнить(ВыборкаОбщийИтог);
	отчет.ТабДок.Вывести(ОбластьОбщийИтог, ВыборкаОбщийИтог.Уровень());

	ВыборкаВидПродукции = ВыборкаОбщийИтог.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	Пока ВыборкаВидПродукции.Следующий() Цикл
		ОбластьВидПродукции.Параметры.Заполнить(ВыборкаВидПродукции);
		//Если ГРВид Тогда
		отчет.ТабДок.Вывести(ОбластьВидПродукции, ВыборкаВидПродукции.Уровень());
        //КонецЕсли;
		ВыборкаСклад = ВыборкаВидПродукции.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
   
		Пока ВыборкаСклад.Следующий() Цикл
			ОбластьСклад.Параметры.Заполнить(ВыборкаСклад);
			//Если ГрСклад Тогда
			отчет.ТабДок.Вывести(ОбластьСклад, ВыборкаСклад.Уровень());
            //КонецЕсли;
			ВыборкаНоменклатура = ВыборкаСклад.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

			Пока ВыборкаНоменклатура.Следующий() Цикл
				ОбластьНоменклатура.Параметры.Заполнить(ВыборкаНоменклатура);
				отчет.ТабДок.Вывести(ОбластьНоменклатура, ВыборкаНоменклатура.Уровень());

				ВыборкаДетали = ВыборкаНоменклатура.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

				Пока ВыборкаДетали.Следующий() Цикл
					ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетали);
					Попытка
					
						ОбластьДетальныхЗаписей.Параметры.Контрагент = ВыборкаДетали.Регистратор.Контрагент;
					
					Исключение
					
					КонецПопытки;
					Если отчет.ГрДокументы Тогда
						Если ЗначениеЗаполнено(ВыборкаДетали.Регистратор) Тогда
					отчет.ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетали.Уровень());
					КонецЕсли;
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
    отчет.ТабДок.ФиксацияСверху      = 5;
	отчет.ТабДок.ЗакончитьАвтогруппировкуСтрок();
	отчет.ТабДок.Вывести(ОбластьПодвалТаблицы);
	отчет.ТабДок.Вывести(ОбластьПодвал);

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ
КонецПроцедуры

&НаСервере 
Функция ПолучитьМакетНаСервере(МК) 
	ОтчетОбъект = РеквизитФормыВЗначение("Отчет"); 
	Макет = ОтчетОбъект.ПолучитьМакет(МК); 
Возврат Макет; 
КонецФункции


&НаСервере
Процедура ПриОткрытииНаСервере()
	//ВыводитьПродукция=Истина;
	Отчет.ВыводитьТМЦ=Истина;
	//ОтчетГРВид=Истина;
	//ГрСклад=Истина;
	Отчет.ГрДокументы=Истина;
	Отчет.ГрКоличество=Истина;
	Отчет.НачПериода=ТекущаяДата();
	Отчет.КонПериода=ТекущаяДата();
	Отчет.Организация=Справочники.Организации.НайтиПоКоду("000000001");
	Отчет.ТМЦ=Справочники.Номенклатура.НайтиПоКоду("00000000564");	
	//Вставить содержимое обработчика
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии1(Отказ)
	ПриОткрытииНаСервере();
КонецПроцедуры
