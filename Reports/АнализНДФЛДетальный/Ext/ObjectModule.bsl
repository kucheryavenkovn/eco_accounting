#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	НастройкиОтчета = КомпоновщикНастроек.ПолучитьНастройки();
	
	СтандартнаяОбработка = Ложь;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ВнешниеХозяйственныеОперации.УчетНДФЛВХО") Тогда
		МодульУчетНДФЛВХО = ОбщегоНазначения.ОбщийМодуль("УчетНДФЛВХО");
		Для Каждого НаборДанных Из СхемаКомпоновкиДанных.НаборыДанных Цикл
			МодульУчетНДФЛВХО.ЗаменитьВЗапросеПеречислениеНДФЛВБюджет(НаборДанных.Запрос);
		КонецЦикла;
	Иначе
		Для Каждого НаборДанных Из СхемаКомпоновкиДанных.НаборыДанных Цикл
			НаборДанных.Запрос = СтрЗаменить(НаборДанных.Запрос, "&ПеречислениеНДФЛВБюджет", "НЕОПРЕДЕЛЕНО");
		КонецЦикла;
	КонецЕсли;
	
	ПериодНалоговый
		= НастройкиОтчета.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ПериодНалоговый"));
		
	Если ПериодНалоговый.Использование Тогда
		КонецНалоговогоПериода
			= НастройкиОтчета.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("КонецНалоговогоПериода"));
		Если ПериодНалоговый.Значение.ДатаОкончания = Дата('00010101') Тогда
			КонецНалоговогоПериода.Значение = МаксимальнаяДата();
		Иначе
			КонецНалоговогоПериода.Значение = ПериодНалоговый.Значение.ДатаОкончания;
		КонецЕсли;
		КонецНалоговогоПериода.Использование = Истина;
	КонецЕсли;
	
	ПериодРасчета
		= НастройкиОтчета.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ПериодРасчета"));
		
	Если ПериодРасчета.Использование Тогда
		КонецПериодаРасчета
			= НастройкиОтчета.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("КонецПериодаРасчета"));
		Если ПериодРасчета.Значение.ДатаОкончания = Дата('00010101') Тогда
			КонецПериодаРасчета.Значение = МаксимальнаяДата();
		Иначе
			КонецПериодаРасчета.Значение = ПериодРасчета.Значение.ДатаОкончания;
		КонецЕсли;
		КонецПериодаРасчета.Использование = Истина;
	КонецЕсли;
	
	
	ДокументРезультат.Очистить();
	               
	МакетКомпоновки = ЗарплатаКадрыОтчеты.МакетКомпоновкиДанных(СхемаКомпоновкиДанных, НастройкиОтчета, ДанныеРасшифровки);
	
	// Создадим и инициализируем процессор компоновки.
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, , ДанныеРасшифровки, Истина);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	
	// Обозначим начало вывода
	ПроцессорВывода.Вывести(ПроцессорКомпоновки, Истина);
	
	ДопСвойства = КомпоновщикНастроек.ПользовательскиеНастройки.ДополнительныеСвойства;
	ДопСвойства.Вставить("ОтчетПустой", ОтчетыСервер.ОтчетПустой(ЭтотОбъект, ПроцессорКомпоновки));
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция МаксимальнаяДата()
	Возврат Дата(3999, 12, 31, 23, 59, 59);
КонецФункции

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли