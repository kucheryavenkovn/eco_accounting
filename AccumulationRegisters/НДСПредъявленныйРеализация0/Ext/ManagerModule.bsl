
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

// Обработчик обновления 3.0.78
// Функция для обработчика обновления.
// Обрабатывает остатки по регистру НДС предъявленный реализация 0, в которых не заполнено измерение Поставщик
// и заполняет значением из регистра НДС предъявленный 
Процедура ЗаполнитьПоставщикаПриОбновлении() Экспорт
	
		Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НДСПредъявленныйРеализация0ОстаткиИОбороты.СчетФактура КАК СчетФактура,
	|	НДСПредъявленныйРеализация0ОстаткиИОбороты.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ ОстаткиПоСФ
	|ИЗ
	|	РегистрНакопления.НДСПредъявленныйРеализация0.ОстаткиИОбороты(
	|			,
	|			,
	|			Регистратор,
	|			,
	|			Поставщик = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|				ИЛИ Поставщик = НЕОПРЕДЕЛЕНО) КАК НДСПредъявленныйРеализация0ОстаткиИОбороты
	|ГДЕ
	|	(НДСПредъявленныйРеализация0ОстаткиИОбороты.НДСКонечныйОстаток <> 0
	|			ИЛИ НДСПредъявленныйРеализация0ОстаткиИОбороты.СуммаБезНДСКонечныйОстаток <> 0)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиПоСФ.СчетФактура КАК СчетФактура,
	|	МАКСИМУМ(НДСПредъявленный.Поставщик) КАК Поставщик,
	|	ОстаткиПоСФ.Регистратор КАК Регистратор
	|ИЗ
	|	ОстаткиПоСФ КАК ОстаткиПоСФ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.НДСПредъявленный КАК НДСПредъявленный
	|		ПО (НДСПредъявленный.СчетФактура = ОстаткиПоСФ.СчетФактура)
	|ГДЕ
	|	НДСПредъявленный.Активность = ИСТИНА
	|	И НЕ(НДСПредъявленный.Поставщик = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|				ИЛИ НДСПредъявленный.Поставщик = НЕОПРЕДЕЛЕНО)
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиПоСФ.СчетФактура,
	|	ОстаткиПоСФ.Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОстаткиПоСФ.Регистратор КАК Регистратор
	|ИЗ
	|	ОстаткиПоСФ КАК ОстаткиПоСФ";
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	ДанныеПоСФ = РезультатыЗапроса[1].Выгрузить();
	ДанныеПоРегистраторам = РезультатыЗапроса[2].Выгрузить();
	
	Для каждого Строка Из ДанныеПоРегистраторам Цикл
		НаборЗаписейНДСПредъявленныйРеализация0 = РегистрыНакопления.НДСПредъявленныйРеализация0.СоздатьНаборЗаписей();
		НаборЗаписейНДСПредъявленныйРеализация0.Отбор.Регистратор.Установить(Строка.Регистратор);
		НаборЗаписейНДСПредъявленныйРеализация0.Прочитать();
		
		Для каждого СтрокаЗаписей Из НаборЗаписейНДСПредъявленныйРеализация0 Цикл
			СтруктураОтбора = Новый Структура();
			СтруктураОтбора.Вставить("СчетФактура", СтрокаЗаписей.СчетФактура);
			СтруктураОтбора.Вставить("Регистратор", СтрокаЗаписей.Регистратор);
			ДанныеПоПоставщику = ДанныеПоСФ.НайтиСтроки(СтруктураОтбора);
			Если ДанныеПоПоставщику.Количество() > 0 Тогда
				СтрокаПоставщик = ДанныеПоПоставщику[0];
				СтрокаЗаписей.Поставщик = СтрокаПоставщик.Поставщик;
			КонецЕсли;
		КонецЦикла;
		Попытка
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(НаборЗаписейНДСПредъявленныйРеализация0, Истина);
		Исключение
			
			ШаблонСообщения = НСтр("ru = 'Не выполнено обновление записей регистра накопления ""НДС предъявленый реализация 0""
			|%1'");
			ТекстСообщения = СтрШаблон(ШаблонСообщения, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(
			ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
			УровеньЖурналаРегистрации.Ошибка,
			Метаданные.РегистрыНакопления.НДСПредъявленныйРеализация0,,
			ТекстСообщения);
		КонецПопытки;
	КонецЦикла;

КонецПроцедуры

// Обработчик обновления 3.0.78
// Функция для обработчика обновления.
// Обрабатывает движения по регистру НДС предъявленный реализация 0, в которых не заполнено измерение Поставщик
// и заполняет значением из регистра НДС предъявленный 
Процедура ЗаполнитьПоставщикаПриОбновленииОтложенно(Параметры) Экспорт
	
	Параметры.ОбработкаЗавершена = Ложь;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 1000
	|	НДСПредъявленныйРеализация0.СчетФактура КАК СчетФактура,
	|	НДСПредъявленныйРеализация0.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ ОстаткиПоСФ
	|ИЗ
	|	РегистрНакопления.НДСПредъявленныйРеализация0 КАК НДСПредъявленныйРеализация0
	|ГДЕ
	|	(НДСПредъявленныйРеализация0.Поставщик = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ИЛИ НДСПредъявленныйРеализация0.Поставщик = НЕОПРЕДЕЛЕНО)
	|	И НДСПредъявленныйРеализация0.Активность = ИСТИНА
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиПоСФ.СчетФактура КАК СчетФактура,
	|	МАКСИМУМ(НДСПредъявленный.Поставщик) КАК Поставщик,
	|	ОстаткиПоСФ.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ ОстаткиПоСФСПоставщиком
	|ИЗ
	|	ОстаткиПоСФ КАК ОстаткиПоСФ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.НДСПредъявленный КАК НДСПредъявленный
	|		ПО (НДСПредъявленный.СчетФактура = ОстаткиПоСФ.СчетФактура)
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиПоСФ.СчетФактура,
	|	ОстаткиПоСФ.Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиПоСФСПоставщиком.СчетФактура КАК СчетФактура,
	|	ОстаткиПоСФСПоставщиком.Поставщик КАК Поставщик,
	|	ОстаткиПоСФСПоставщиком.Регистратор КАК Регистратор
	|ИЗ
	|	ОстаткиПоСФСПоставщиком КАК ОстаткиПоСФСПоставщиком
	|ГДЕ
	|	НЕ(ОстаткиПоСФСПоставщиком.Поставщик = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|				ИЛИ ОстаткиПоСФСПоставщиком.Поставщик = НЕОПРЕДЕЛЕНО)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиПоСФСПоставщиком.Регистратор КАК Регистратор
	|ИЗ
	|	ОстаткиПоСФСПоставщиком КАК ОстаткиПоСФСПоставщиком
	|ГДЕ
	|	НЕ(ОстаткиПоСФСПоставщиком.Поставщик = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|				ИЛИ ОстаткиПоСФСПоставщиком.Поставщик = НЕОПРЕДЕЛЕНО)";
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	ДанныеПоСФ = РезультатыЗапроса[2].Выгрузить();
	ДанныеПоРегистраторам = РезультатыЗапроса[3].Выгрузить();
	
	Если ДанныеПоСФ.Количество() = 0 Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	
	Для каждого Строка Из ДанныеПоРегистраторам Цикл
		НачатьТранзакцию();
		Попытка
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.НДСПредъявленныйРеализация0.НаборЗаписей");
			ЭлементБлокировки.УстановитьЗначение("Регистратор", Строка.Регистратор);
			Блокировка.Заблокировать();
			
			НаборЗаписейНДСПредъявленныйРеализация0 = РегистрыНакопления.НДСПредъявленныйРеализация0.СоздатьНаборЗаписей();
			НаборЗаписейНДСПредъявленныйРеализация0.Отбор.Регистратор.Установить(Строка.Регистратор);
			НаборЗаписейНДСПредъявленныйРеализация0.Прочитать();
			Для каждого СтрокаЗаписей Из НаборЗаписейНДСПредъявленныйРеализация0 Цикл
				
				СтруктураОтбора = Новый Структура();
				СтруктураОтбора.Вставить("СчетФактура", СтрокаЗаписей.СчетФактура);
				СтруктураОтбора.Вставить("Регистратор", СтрокаЗаписей.Регистратор);
				ДанныеПоПоставщику = ДанныеПоСФ.НайтиСтроки(СтруктураОтбора);
				Если ДанныеПоПоставщику.Количество() > 0 Тогда
					СтрокаПоставщик = ДанныеПоПоставщику[0];
					СтрокаЗаписей.Поставщик = СтрокаПоставщик.Поставщик;
				КонецЕсли;
				
			КонецЦикла;
			
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(НаборЗаписейНДСПредъявленныйРеализация0, Истина);
			
			ЗафиксироватьТранзакцию()
		Исключение
			ОтменитьТранзакцию();
			ШаблонСообщения = НСтр("ru = 'Не выполнено обновление записей регистра накопления ""НДС предъявленый реализация 0""
			|%1'");
			ТекстСообщения = СтрШаблон(ШаблонСообщения, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(
			ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
			УровеньЖурналаРегистрации.Ошибка,
			Метаданные.РегистрыНакопления.НДСПредъявленныйРеализация0,,
			ТекстСообщения);
		КонецПопытки;
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
