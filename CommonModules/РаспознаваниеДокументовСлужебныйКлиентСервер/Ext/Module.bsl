#Область СлужебныйПрограммныйИнтерфейс

#Область МодельРаспознанногоДокумента

// Описание реквизита модели распознанного документа.
// Если не найден - при указании СоздаватьЕслиНеНайдено = Истина будет добавлен с пустым значением.
//
Функция РеквизитДокумента(Объект, ИмяРеквизита, СоздаватьЕслиНеНайдено = Истина) Экспорт
	
	Отбор = Новый Структура;
	Отбор.Вставить("ИмяРеквизита", ИмяРеквизита);
	НайденныеСтроки = Объект.РеквизитыДокумента.НайтиСтроки(Отбор);
	
	Если НайденныеСтроки.Количество() > 0 Тогда
		Возврат НайденныеСтроки[0];
	КонецЕсли;
	
	Если Не СоздаватьЕслиНеНайдено Тогда 
		Возврат Неопределено;
	КонецЕсли;
	
	НоваяСтрока = Объект.РеквизитыДокумента.Добавить();
	НоваяСтрока.ИмяРеквизита = ИмяРеквизита;
	
	Возврат НоваяСтрока;
	
КонецФункции

// Значение реквизита модели распознанного документа.
// Если не найден - не будет добавлен и будет возвращено значение по умолчанию.
//
Функция ЗначениеРеквизитаДокумента(Объект, ИмяРеквизита, ЗначениеПоУмолчанию = Неопределено) Экспорт
	
	Реквизит = РеквизитДокумента(Объект, ИмяРеквизита, Ложь);
	
	Если Реквизит = Неопределено Или Не ЗначениеЗаполнено(Реквизит.Значение) Тогда 
		Возврат ЗначениеПоУмолчанию;
	КонецЕсли;
	
	Возврат Реквизит.Значение;
	
КонецФункции

// Устанавливает значение реквизита модели распознанного документа.
// Если не найден - будет добавлен с указанным значением.
//
Процедура УстановитьЗначениеРеквизитаДокумента(Объект, ИмяРеквизита, Значение) Экспорт
	
	Реквизит = РеквизитДокумента(Объект, ИмяРеквизита);
	Реквизит.Значение = Значение;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область НечеткийПоиск

Функция ПолучитьСписокДляВыбораПользователем(РаспознанныйТекст, Варианты = Неопределено, КартинкаСоздание = 1) Экспорт 
	
	СписокДляВыбора = Новый СписокЗначений;
	
	Если КартинкаСоздание = 1 Тогда
		ТекстРаспознано = НСтр("ru = 'Создать: '");
		Картинка = БиблиотекаКартинок.ДобавитьЭлементСписка;
	Иначе
		ТекстРаспознано = НСтр("ru = 'Распознано: '");
		Если КартинкаСоздание = 2 Тогда 
			Картинка = БиблиотекаКартинок.Заменить;
		Иначе
			Картинка = Неопределено;
		КонецЕсли;
	КонецЕсли;
	
	ТекстРаспознано = Новый ФорматированнаяСтрока(ТекстРаспознано, Новый Шрифт(,,,Истина));
	СписокДляВыбора.Добавить(РаспознанныйТекст, Новый ФорматированнаяСтрока(
		ТекстРаспознано, """", РаспознанныйТекст, """"), Ложь, Картинка);
	
	Если Варианты = Неопределено Тогда
		Возврат СписокДляВыбора;
	КонецЕсли;
	
	Для Каждого Вариант Из Варианты Цикл
		ПараметрыВыбора = Новый Структура();
		ПараметрыВыбора.Вставить("Значение", Вариант.Значение);
		ПараметрыВыбора.Вставить("Уверенность", Вариант.Уверенность);
		
		ПредставлениеЗначения = Строка(Вариант.Значение);
		
		ЕстьДополнительноеЗначение = Ложь;
		
#Если Клиент Тогда
		ЕстьДополнительноеЗначение = 
			ТипЗнч(Вариант) = Тип("ДанныеФормыЭлементКоллекции")
			И Вариант.Свойство("ДополнительноеЗначение");
#Иначе
		ЕстьДополнительноеЗначение = 
			ТипЗнч(Вариант) = Тип("СтрокаТаблицыЗначений")
			И Вариант.Владелец().Колонки.Найти("ДополнительноеЗначение") <> Неопределено;
#КонецЕсли
		
		Если ЕстьДополнительноеЗначение
			И ЗначениеЗаполнено(Вариант.ДополнительноеЗначение) Тогда
			
			ПредставлениеЗначения = ПредставлениеЗначения + " (" + Строка(Вариант.ДополнительноеЗначение) + ")";
		КонецЕсли;
		
		Уверенность = Новый ФорматированнаяСтрока("(" + НСтр("ru = 'увер. '") + Вариант.Уверенность + "%)", Новый Шрифт(,,,Истина));
		ПредставлениеЗначения = Новый ФорматированнаяСтрока(ПредставлениеЗначения, " ", Уверенность);
		СписокДляВыбора.Добавить(ПараметрыВыбора, ПредставлениеЗначения);
	КонецЦикла;
	
	Возврат СписокДляВыбора;
	
КонецФункции

#КонецОбласти

#КонецОбласти