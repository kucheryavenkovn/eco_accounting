
Процедура РассчитатьСумму(СтрокаТабличнойЧасти, ПараметрыОбъекта) Экспорт
	
	Если ПараметрыОбъекта.Свойство("ЭтоДепозит") Тогда
		СтрокаТабличнойЧасти.Сумма = СтрокаТабличнойЧасти.Цена * СтрокаТабличнойЧасти.Количество;
	ИначеЕсли ЗначениеЗаполнено(СтрокаТабличнойЧасти.Номенклатура) И АР_ОбщиеПроцедуры.ЗначениеРеквизитаОбъекта(СтрокаТабличнойЧасти.Номенклатура, "АР_ПостояннаяЧастьОплаты") Тогда
		РассчитатьСтрокуНачисления(СтрокаТабличнойЧасти, ПараметрыОбъекта.НачалоПериода);
	Иначе
		СтрокаТабличнойЧасти.Сумма = СтрокаТабличнойЧасти.СтавкаСпособаНачисления * СтрокаТабличнойЧасти.Количество;
	КонецЕсли;
	
КонецПроцедуры

Процедура РассчитатьСтрокуНачисления(Стр, НачалоПериода)
	
	КонецПериода = НачалоПериода + (Стр.КоличествоДней - 1) * 86400;
	ПериодНачисления = АР_ОбщиеПроцедуры.ЗначениеРеквизитаОбъекта(Стр.СпособНачисления, "ПериодНачисления");
	
	Коэффициент = АР_ОбщиеПроцедуры.ПолучитьКоэффициентПересчетаДней(НачалоПериода, КонецПериода, ПериодНачисления);
	
	Стр.Сумма = Стр.СтавкаСпособаНачисления * Стр.Количество * Коэффициент;
	
КонецПроцедуры

//////////////////////////////////////////////////////////////////
//  Работа с планировками

Функция ПолучитьКоннекторExcel() Экспорт
	
	Возврат Новый COMОбъект("Excel.Application");
	
КонецФункции

Функция НайтиЛист(ИмяЛиста, Книга)
	
	Для Каждого Стр Из Книга.Sheets Цикл
		Если СокрЛП(Стр.Name) = ИмяЛиста Тогда
			Возврат Стр;	
		КонецЕсли;
	КонецЦикла;
	
КонецФункции

Функция НайтиОбласть(ИмяОбласти, Лист)
	
	Для Каждого Стр Из Лист.Shapes Цикл
		Если СокрЛП(Стр.Name) = ИмяОбласти Тогда
			Возврат Стр;	
		КонецЕсли;
	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции

Функция ЭтоГрафическийОбъект(Область) Экспорт
	
	// описание типов ShapeType https://msdn.microsoft.com/en-us/library/aa432678(v=office.12).aspx
	// google MsoShapeType Enumeration
	//
	// описание типов AutoShapeType https://msdn.microsoft.com/en-us/library/aa432469(v=office.12).aspx
	// google MsoAutoShapeType Enumeration
	Возврат Область.Type = 5 
		ИЛИ	(Область.Type = 1 И Область.AutoShapeType >= 0 И НЕ ЭтоВыноска(Область))
	
КонецФункции

Функция ЭтоТекстоваяОбласть(Область) Экспорт
	
	// описание типов ShapeType https://msdn.microsoft.com/en-us/library/aa432678(v=office.12).aspx
	// google MsoShapeType Enumeration
	//
	// описание типов AutoShapeType https://msdn.microsoft.com/en-us/library/aa432469(v=office.12).aspx
	// google MsoAutoShapeType Enumeration
	Возврат Область.Type = 17 ИЛИ ЭтоВыноска(Область);
	
КонецФункции
	
Функция ЭтоВыноска(Область, ТолькоСтарыеВыноски = Ложь) Экспорт
	
	// описание типов ShapeType https://msdn.microsoft.com/en-us/library/aa432678(v=office.12).aspx
	// google MsoShapeType Enumeration
	//
	// описание типов AutoShapeType https://msdn.microsoft.com/en-us/library/aa432469(v=office.12).aspx
	// google MsoAutoShapeType Enumeration
	Возврат ?(ТолькоСтарыеВыноски, Ложь, Область.Type = 2)
			ИЛИ	(Область.Type = 1 И Область.AutoShapeType >= 105 И Область.AutoShapeType <= 108);
	
КонецФункции

Функция ДоступнаЗаливка(Объект) Экспорт 
	
	Если Объект.Type = 5 И Объект.Fill.Type < 0 И Объект.Nodes.Count > 0 Тогда
		
		ПерваяТочка = Объект.Nodes.Item(1).Points;
		ПоследняяТочка = Объект.Nodes.Item(Объект.Nodes.Count).Points;
		
		Н = 0; К = 0;
		Для Каждого Координата1 Из ПерваяТочка Цикл
			Для Каждого Координата2 Из ПоследняяТочка Цикл
				Если Н = К И НЕ Координата1 = Координата2 Тогда
					Возврат Ложь;
				КонецЕсли;	
				К = К + 1;
			КонецЦикла;
			Н = Н + 1;
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции
	
Функция ПрименитьОформлениеТекста(ОбластьТекста, ОбъектТекст) Экспорт
	
	Возврат Не ЗначениеЗаполнено(ОбластьТекста);
	
КонецФункции

Процедура ЗаполнитьРеквизиты(Ссылка, Excel)
	
	Если НЕ (ТипЗнч(Ссылка) = Тип("ДокументСсылка.АР_ЗаключениеДоговораАренды")
		ИЛИ ТипЗнч(Ссылка) = Тип("ДокументСсылка.АР_ДополнительноеСоглашение")) Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Попытка
		
		Лист = НайтиЛист("Реквизиты", Excel);
		КоличествоСтрок = Лист.Cells(1, 1).SpecialCells(11).Row;
		
		Для К = 1 По КоличествоСтрок Цикл
			
			Формула = СокрЛП(Лист.Cells(К, 2).Value);
			
			Если НЕ ЗначениеЗаполнено(Формула) Тогда
				Продолжить;
			КонецЕсли;
			
			Значение = АР_ОбщиеПроцедуры.ПолучитьЗначениеРеквизита(Ссылка, Формула,, АР_ОбщиеПроцедуры.ЗначениеРеквизитаОбъекта(Ссылка, "Дата"));
			
			Если ЗначениеЗаполнено(Значение) Тогда
				Лист.Cells(К, 3).Value = Строка(Значение);
			КонецЕсли;
			
		КонецЦикла;
		
	Исключение
	КонецПопытки;
	
КонецПроцедуры

Функция ОтобразитьНаПланировкеОбъект(Планировка) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Планировка.ФайлПланировки) Тогда
		Сообщить("Не выбран файл планировки");
		Возврат Неопределено
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Планировка.Лист) Тогда
		Сообщить("Не выбран лист");
		Возврат Неопределено
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Планировка.ГрОбъект) Тогда
		Сообщить("Не выбран графический объект");
		Возврат Неопределено
	КонецЕсли;
	
	ЭтоВебКлиент = Ложь;
	
	#Если ВебКлиент	Тогда
	ЭтоВебКлиент = Истина;	
	#КонецЕсли

	ОбрабатыватьШаблоныИПланировкиНаКлиенте = НЕ ЭтоВебКлиент И АР_ОбщиеПроцедуры.ПолучитьЗначениеКонстанты("АР_ОбрабатыватьШаблоныИПланировкиНаКлиенте");
	
	Если НЕ ОбрабатыватьШаблоныИПланировкиНаКлиенте Тогда
		ПолноеИмяФайла = АР_ОбщиеПроцедуры.ПолучитьПутьКФайлуПланировки(Планировка.ФайлПланировки);
		Файл = Новый Файл(ПолноеИмяФайла);
		Расширение = Файл.Расширение;
		ИмяИсходногоФайла = ПолноеИмяФайла;
	Иначе
		ИмяИсходногоФайла = АР_ОбщиеПроцедуры.ЗначениеРеквизитаОбъекта(Планировка.ФайлПланировки, "ИмяФайла");
		Файл = Новый Файл(ИмяИсходногоФайла);
		Расширение = Файл.Расширение;
		ДанныеФайла = АР_ОбщиеПроцедуры.ПолучитьДанныеФайлаПланировки(Планировка.ФайлПланировки);
		ПолноеИмяФайла = "";
		#Если НЕ ВебКлиент Тогда
		ПолноеИмяФайла = ПолучитьИмяВременногоФайла(Расширение);
		#КонецЕсли
		Если ЗначениеЗаполнено(ДанныеФайла.СсылкаНаДвоичныеДанныеФайла) Тогда
			ДвоичныеДанные = ПолучитьИзВременногоХранилища(ДанныеФайла.СсылкаНаДвоичныеДанныеФайла);
			ДвоичныеДанные.Записать(ПолноеИмяФайла);
		Иначе
			ТекстОшибки = "Файл планировки """ + СокрЛП(ИмяИсходногоФайла) + """ не существует!"; 
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
			Возврат Неопределено;
		КонецЕсли;
	КонецЕсли;
	
	Попытка
		
		ИмяЛиста = СокрЛП(Планировка.Лист);
		ГрОбъект = СокрЛП(Планировка.ГрОбъект);
		ОбластьТекста = СокрЛП(Планировка.ОбластьТекста);
		
		Excel = АР_ОбщиеПроцедурыКлиентСервер.ПолучитьКоннекторExcel();
		
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			"Ошибка открытия файла %1",
			ИмяИсходногоФайла
		);
		
		Файл = Новый Файл(ПолноеИмяФайла);
		Если НЕ Файл.Существует() Тогда
			ТекстОшибки = "Файл планировки """ + СокрЛП(ИмяИсходногоФайла) + """ не существует!"; 
			ВызватьИсключение ТекстОшибки;
		КонецЕсли;
		
		Книга = Excel.Workbooks.Open(ПолноеИмяФайла,, Истина);
		
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			"В файле %1 не найден лист ""%2""",
			ИмяИсходногоФайла, 
			ИмяЛиста
		);
		
		Лист = НайтиЛист(ИмяЛиста, Excel);
		Если Лист = Неопределено Тогда
			ВызватьИсключение ТекстОшибки;	
		КонецЕсли;
		ТекстОшибки = "";
		
		Лист.Activate();
		
		// Сделаем невидимыми выноски и текст в надписях уберем, заполним объекты по умолчанию
		Для Каждого Объект Из Лист.Shapes Цикл
			
			Если ЭтоТекстоваяОбласть(Объект) Тогда
				
				Если ЭтоВыноска(Объект) Тогда
					Объект.Line.Visible = Ложь;
					Объект.Fill.Visible = Ложь;
				КонецЕсли;
				Попытка
					Объект.TextEffect.Text = "";
				Исключение
					Объект.OLEFormat.Object.Text = "";
				КонецПопытки;
				
			ИначеЕсли ЭтоГрафическийОбъект(Объект) Тогда
				
				Если ДоступнаЗаливка(Объект) Тогда
					Объект.Fill.Visible = -1;
					Объект.Fill.Solid();
					Объект.Fill.ForeColor.SchemeColor = 43;
					Объект.Fill.Transparency = 0.5;
				КонецЕсли;
				Объект.Line.Weight = 0.75;
				Объект.Line.DashStyle = 1;
				Объект.Line.Style = 1;
				Объект.Line.Transparency = 0;
				Объект.Line.Visible = -1;
				Объект.Line.ForeColor.SchemeColor = 64;
				Объект.Line.BackColor.RGB = АР_ОбщиеПроцедуры.ПолучитьЦвет("255, 255, 255");
				
			КонецЕсли;
				
		КонецЦикла;
		
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			"В файле %1 на листе ""%2"" не найден объект ""%3""",
			ИмяИсходногоФайла, 
			ИмяЛиста,
			ГрОбъект
		);
		ОбъектШаблона = НайтиОбласть(ГрОбъект, Лист);
		Если ОбъектШаблона = Неопределено Тогда
			ВызватьИсключение ТекстОшибки;	
		КонецЕсли;
		ТекстОшибки = "";
		
		ОбъектШаблона.Select();
		
		// Заштрихуем выделенный объект
		Excel.Selection.ShapeRange.Line.Weight = 0.75;
		Excel.Selection.ShapeRange.Line.DashStyle = 1;
		Excel.Selection.ShapeRange.Line.Style = 1;
		Excel.Selection.ShapeRange.Line.Transparency = 0;
		Excel.Selection.ShapeRange.Line.Visible = -1;
		Excel.Selection.ShapeRange.Line.ForeColor.SchemeColor = 64;
		Excel.Selection.ShapeRange.Line.BackColor.RGB = АР_ОбщиеПроцедуры.ПолучитьЦвет("255, 255, 255");
		Excel.Selection.ShapeRange.Fill.Visible = -1;
		Excel.Selection.ShapeRange.Fill.ForeColor.RGB = АР_ОбщиеПроцедуры.ПолучитьЦвет("145, 145, 145");
		Excel.Selection.ShapeRange.Fill.BackColor.RGB = АР_ОбщиеПроцедуры.ПолучитьЦвет("255, 255, 255");
		Excel.Selection.ShapeRange.Fill.Transparency = 0;
		Excel.Selection.ShapeRange.Fill.Patterned(54);
		
		Если ЗначениеЗаполнено(ОбластьТекста) Тогда
			ОбъектТекст = НайтиОбласть(ОбластьТекста, Лист);
		Иначе
			ОбъектТекст = Лист.Shapes.AddTextbox(1, ОбъектШаблона.Left, ОбъектШаблона.Top, ОбъектШаблона.Width, ОбъектШаблона.Height);
		КонецЕсли;
		
		Текст = СокрЛП(Планировка.Наименование);
		Попытка  // Это Excel 2007
			Если ПрименитьОформлениеТекста(ОбластьТекста, ОбъектТекст) Тогда
				ОбъектТекст.TextEffect.FontName = "Arial CYR";
				ОбъектТекст.TextEffect.FontSize = 10;
				ОбъектТекст.TextEffect.FontBold = True;
			КонецЕсли;
			ОбъектТекст.TextEffect.Text = Текст;
			ОбъектТекст.Fill.Visible = Ложь;
			Если ЭтоВыноска(ОбъектТекст) Тогда
				ОбъектТекст.Line.Visible = Истина;
			Иначе
				ОбъектТекст.Line.Visible = Ложь;
			КонецЕсли;
		Исключение 
			Попытка // Это Excel 2003
				Если ПрименитьОформлениеТекста(ОбластьТекста, ОбъектТекст) Тогда
					ОбъектТекст.OLEFormat.Object.Font.Name = "Arial CYR";
					ОбъектТекст.OLEFormat.Object.Font.Size = 10;
					ОбъектТекст.OLEFormat.Object.Font.Bold = True;
				КонецЕсли;
				ОбъектТекст.OLEFormat.Object.Text = Текст;
				ОбъектТекст.Fill.Visible = Ложь;
				Если ЭтоВыноска(ОбъектТекст) Тогда
					ОбъектТекст.Line.Visible = Истина;
				Иначе
					ОбъектТекст.Line.Visible = Ложь;
				КонецЕсли;
			Исключение
			КонецПопытки;
		КонецПопытки;
		
		Excel.DisplayAlerts = Ложь;
		
		Если НЕ ОбрабатыватьШаблоныИПланировкиНаКлиенте Тогда
			ИмяВременногоФайла = "";
			#Если НЕ ВебКлиент Тогда
			ИмяВременногоФайла = ПолучитьИмяВременногоФайла(Расширение);
			#КонецЕсли
			Книга.SaveAs(ИмяВременногоФайла);
			Книга.Close();
			Excel.Quit();
			Возврат ИмяВременногоФайла;
		Иначе
			ИмяВременногоФайла = "";
			#Если НЕ ВебКлиент Тогда
			ИмяВременногоФайла = ПолучитьИмяВременногоФайла(Расширение);
			#КонецЕсли
			Книга.SaveAs(ИмяВременногоФайла);
			Книга.Close();
			Excel.Quit();
			ДвоичныеДанные = Новый ДвоичныеДанные(ИмяВременногоФайла);
			АдресХранилища = ПоместитьВоВременноеХранилище(ДвоичныеДанные, Новый УникальныйИдентификатор);
			Возврат АдресХранилища;
		КонецЕсли;
		
	Исключение
		
		СообщениеОбОшибке = ?(ЗначениеЗаполнено(ТекстОшибки), ТекстОшибки, ОписаниеОшибки());
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СообщениеОбОшибке);
		
		Попытка
			Excel.Quit();
		Исключение
		КонецПопытки;
		
		Возврат Неопределено
		
	КонецПопытки;
	
КонецФункции

Функция ПолучитьОписаниеФайлаПланировки(ФайлПланировки, ИскатьНадписиДляОбъектов = Ложь) Экспорт
	
	ПланировкаИнициализирована = Истина;
	
	ЭтоВебКлиент = Ложь;
	
	#Если ВебКлиент	Тогда
	ЭтоВебКлиент = Истина;	
	#КонецЕсли

	ОбрабатыватьШаблоныИПланировкиНаКлиенте = НЕ ЭтоВебКлиент И АР_ОбщиеПроцедуры.ПолучитьЗначениеКонстанты("АР_ОбрабатыватьШаблоныИПланировкиНаКлиенте");
	
	Если НЕ ОбрабатыватьШаблоныИПланировкиНаКлиенте Тогда
		ПолноеИмяФайла = АР_ОбщиеПроцедуры.ПолучитьПутьКФайлуПланировки(ФайлПланировки);
		Файл = Новый Файл(ПолноеИмяФайла);
		Расширение = Файл.Расширение;
		ИмяИсходногоФайла = ПолноеИмяФайла;
	Иначе
		ИмяИсходногоФайла = АР_ОбщиеПроцедуры.ЗначениеРеквизитаОбъекта(ФайлПланировки, "ИмяФайла");
		Файл = Новый Файл(ИмяИсходногоФайла);
		Расширение = Файл.Расширение;
		ДанныеФайла = АР_ОбщиеПроцедуры.ПолучитьДанныеФайлаПланировки(ФайлПланировки);
		ПолноеИмяФайла = "";
		#Если НЕ ВебКлиент Тогда
		ПолноеИмяФайла = ПолучитьИмяВременногоФайла(Расширение);
		#КонецЕсли
		Если ЗначениеЗаполнено(ДанныеФайла.СсылкаНаДвоичныеДанныеФайла) Тогда
			ДвоичныеДанные = ПолучитьИзВременногоХранилища(ДанныеФайла.СсылкаНаДвоичныеДанныеФайла);
			ДвоичныеДанные.Записать(ПолноеИмяФайла);
		КонецЕсли;
	КонецЕсли;
	
	МассивЛистов = Новый Массив;
	МассивДанныхТаблицыОбъектов = Новый Массив;
	МассивДанныхТаблицыТекстОбъектов = Новый Массив;
	
	Описание = Новый Структура("ПланировкаИнициализирована, МассивЛистов, МассивДанныхТаблицыОбъектов, МассивДанныхТаблицыТекстОбъектов", Ложь, МассивЛистов, МассивДанныхТаблицыОбъектов, МассивДанныхТаблицыТекстОбъектов);
	
	Excel = Неопределено;
	ТекстОшибки = "";
	
	Попытка
		
		Excel = АР_ОбщиеПроцедурыКлиентСервер.ПолучитьКоннекторExcel();
		
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			"Ошибка открытия файла %1",
			ПолноеИмяФайла
		);
		
		Файл = Новый Файл(ПолноеИмяФайла);
		Если НЕ Файл.Существует() Тогда
			ТекстОшибки = "Файл планировки """ + СокрЛП(ИмяИсходногоФайла) + """ не существует!"; 
			ВызватьИсключение ТекстОшибки;
		КонецЕсли;
		
		Книга = Excel.Workbooks.Open(ПолноеИмяФайла,, Истина);
		
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			"Ошибка доступа к страницам файла %1",
			ПолноеИмяФайла
		);
		Для Каждого Лист Из Книга.Sheets Цикл
			
			ИмяЛиста = СокрЛП(Лист.Name);
			Лист.Activate();
			
			МассивЛистов.Добавить(ИмяЛиста);	
			
			Для Каждого Область Из Лист.Shapes Цикл
				Если ЭтоГрафическийОбъект(Область) Тогда
					Если ДоступнаЗаливка(Область) Тогда
						Структура = Новый Структура("Лист, ГрОбъект, ТекстОбласть");
						Структура.Лист = ИмяЛиста;
						Структура.ГрОбъект = СокрЛП(Область.Name);
						Структура.ТекстОбласть = "";
						МассивДанныхТаблицыОбъектов.Добавить(Структура);
					КонецЕсли;
				КонецЕсли;	
				Если ЭтоТекстоваяОбласть(Область) Тогда
					Структура = Новый Структура("Лист, ТекстОбласть");
					Структура.Лист = ИмяЛиста;
					Структура.ТекстОбласть = СокрЛП(Область.Name);
					МассивДанныхТаблицыТекстОбъектов.Добавить(Структура);
				КонецЕсли;
			КонецЦикла;
			
		КонецЦикла;
		
		Если ИскатьНадписиДляОбъектов Тогда
			Для Каждого ИмяЛиста Из МассивЛистов Цикл
				Лист = НайтиЛист(ИмяЛиста, Excel);
				Для Каждого СтруктураДанныхОбъекта Из МассивДанныхТаблицыОбъектов Цикл
					Если СтруктураДанныхОбъекта.Лист = ИмяЛиста Тогда
						Объект = НайтиОбласть(СтруктураДанныхОбъекта.ГрОбъект, Лист);
						Для Каждого СтруктураТекстОбластей Из МассивДанныхТаблицыТекстОбъектов Цикл
							Если СтруктураТекстОбластей.Лист = ИмяЛиста Тогда
								ТекстОбласть = НайтиОбласть(СтруктураТекстОбластей.ТекстОбласть, Лист);
								ОбластиВложены = Объект.Left <= ТекстОбласть.Left 
												И Объект.Top <= ТекстОбласть.Top
												И Объект.Left + Объект.Width >= ТекстОбласть.Left + ТекстОбласть.Width 
												И Объект.Top + Объект.Height >= ТекстОбласть.Top + ТекстОбласть.Height;
								Если ОбластиВложены Тогда
									СтруктураДанныхОбъекта.ТекстОбласть = СтруктураТекстОбластей.ТекстОбласть;	
								КонецЕсли;
							КонецЕсли;
						КонецЦикла;
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
		КонецЕсли;
		
		ИмяВременногоФайла = "";
		#Если НЕ ВебКлиент Тогда
		ИмяВременногоФайла = ПолучитьИмяВременногоФайла(Расширение);
		#КонецЕсли
		Excel.DisplayAlerts = Ложь;
		Книга.SaveAs(ИмяВременногоФайла);
		Книга.Close();
		Книга = Неопределено;
		Excel.Quit();
		
	Исключение
		СообщениеОбОшибке = ?(ЗначениеЗаполнено(ТекстОшибки), ТекстОшибки, ОписаниеОшибки());
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СообщениеОбОшибке);
		Попытка
			Excel.Quit();
		Исключение
		КонецПопытки;
		
		ПланировкаИнициализирована = Ложь;
		
	КонецПопытки;
	
	Описание.Вставить("ПланировкаИнициализирована", ПланировкаИнициализирована);
	Описание.Вставить("МассивЛистов", МассивЛистов);
	Описание.Вставить("МассивДанныхТаблицыОбъектов", МассивДанныхТаблицыОбъектов);
	Описание.Вставить("МассивДанныхТаблицыТекстОбъектов", МассивДанныхТаблицыТекстОбъектов);
	
	Возврат Описание;
	
КонецФункции

// предполагается запуск только с клиента
Функция ПечатьПланировок(ДанныеПланировок, СсылкаНаОбъект) Экспорт
	
	МассивВозврата = Новый Массив;
	
	Если ДанныеПланировок.Количество() = 0 Тогда
		Сообщить("Отображение объектов на плане отсутствует!");
	Иначе
		
		Excel = Новый COMОбъект("Excel.Application");
		
		Для Каждого СтруктураФайлов Из ДанныеПланировок Цикл
			
			ИмяИсходногоФайла = АР_ОбщиеПроцедуры.ЗначениеРеквизитаОбъекта(СтруктураФайлов.ФайлПланировки, "ИмяФайла");
			СохранятьКак = АР_ОбщиеПроцедурыКлиентСервер.ПолучитьИмяФайлаПланировки(СтруктураФайлов.ФайлПланировки, "Печать планировок");
			ДанныеФайла = АР_ОбщиеПроцедуры.ПолучитьДанныеФайлаПланировки(СтруктураФайлов.ФайлПланировки);
			Файл = Новый Файл(СохранятьКак);
			ФайлШаблона = ПолучитьРабочийКаталог() + Файл.Имя;
			Если ЗначениеЗаполнено(ДанныеФайла.СсылкаНаДвоичныеДанныеФайла) Тогда
				ДвоичныеДанные = ПолучитьИзВременногоХранилища(ДанныеФайла.СсылкаНаДвоичныеДанныеФайла);
				ДвоичныеДанные.Записать(ФайлШаблона);
			КонецЕсли;
			
			Файл = Новый Файл(ФайлШаблона);
			Если Не Файл.Существует() Тогда
				Сообщить("Файл планировки """ + СокрЛП(ИмяИсходногоФайла) + """ не существует!", СтатусСообщения.Важное); 
				Продолжить;
			КонецЕсли;
			
			Если Excel = Неопределено Тогда
				Excel = Новый COMОбъект("Excel.Application");
			КонецЕсли;
			
			Excel.DisplayAlerts = Ложь;
			
			Шаблон = Excel.Workbooks.Open(СокрЛП(ФайлШаблона),, Истина); 
			ПолноеИмяФайла = "";
			#Если НЕ ВебКлиент Тогда
			ПолноеИмяФайла = ПолучитьИмяВременногоФайла(Файл.Расширение);
			#КонецЕсли
			Excel.DisplayAlerts = Ложь;
			Шаблон.SaveAs(ПолноеИмяФайла);
			
			ПервыйЛист = СтруктураФайлов.ПервыйЛист;
			
			Для Каждого СтруктураЛиста Из СтруктураФайлов.МассивЛистов Цикл
				
				Попытка
					План = НайтиЛист(СокрЛП(СтруктураЛиста.Лист), Excel);
					Если План = Неопределено Тогда
						Сообщить("Лист """ + СокрЛП(СтруктураЛиста.Лист) + """ не найден");
						Продолжить;	
					КонецЕсли;
					План.Select();
					План.Activate();
					
					// Сделаем невидимыми выноски и текст в надписях уберем, заполним объекты по умолчанию
					Для Каждого Объект Из План.Shapes Цикл
						
						Если ЭтоТекстоваяОбласть(Объект) Тогда
							
							Если ЭтоВыноска(Объект) Тогда
								Объект.Line.Visible = Ложь;
								Объект.Fill.Visible = Ложь;
							КонецЕсли;
							Попытка
								Объект.TextEffect.Text = "";
							Исключение
								Объект.OLEFormat.Object.Text = "";
							КонецПопытки;
							
						ИначеЕсли ЭтоГрафическийОбъект(Объект) Тогда
							
							Если ДоступнаЗаливка(Объект) Тогда
								Объект.Fill.Visible = -1;
								Объект.Fill.Solid();
								Объект.Fill.ForeColor.SchemeColor = 43;
								Объект.Fill.Transparency = 0.5;
							КонецЕсли;
							Объект.Line.Weight = 0.75;
							Объект.Line.DashStyle = 1;
							Объект.Line.Style = 1;
							Объект.Line.Transparency = 0;
							Объект.Line.Visible = -1;
							Объект.Line.ForeColor.SchemeColor = 64;
							Объект.Line.BackColor.RGB = АР_ОбщиеПроцедуры.ПолучитьЦвет("255, 255, 255");
							
						КонецЕсли;
							
					КонецЦикла;
				Исключение
					Продолжить;
				КонецПопытки;  				
				
				Для Каждого СтруктураОбъектов Из СтруктураЛиста.МассивОбъектов Цикл
					
					Попытка
						ТекстОшибки = "Объект """ + СтруктураОбъектов.ГрОбъект + """ на листе """ + СтруктураЛиста.Лист + """ не найден";
						Объект = НайтиОбласть(СтруктураОбъектов.ГрОбъект, Excel.ActiveSheet);
						Если Объект = Неопределено Тогда
							ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
							Продолжить;
						КонецЕсли;
						ТекстОшибки = "";
						Объект.Select();
						// Заштрихуем выделенный объект
						Excel.Selection.ShapeRange.Line.Weight = 0.75;
						Excel.Selection.ShapeRange.Line.DashStyle = 1;
						Excel.Selection.ShapeRange.Line.Style = 1;
						Excel.Selection.ShapeRange.Line.Transparency = 0;
						Excel.Selection.ShapeRange.Line.Visible = -1;
						Excel.Selection.ShapeRange.Line.ForeColor.SchemeColor = 64;
						Excel.Selection.ShapeRange.Line.BackColor.RGB = АР_ОбщиеПроцедуры.ПолучитьЦвет("255, 255, 255");
						Excel.Selection.ShapeRange.Fill.Visible = -1;
						Excel.Selection.ShapeRange.Fill.ForeColor.RGB = АР_ОбщиеПроцедуры.ПолучитьЦвет("145, 145, 145");
						Excel.Selection.ShapeRange.Fill.BackColor.RGB = АР_ОбщиеПроцедуры.ПолучитьЦвет("255, 255, 255");
						Excel.Selection.ShapeRange.Fill.Transparency = 0;
						Excel.Selection.ShapeRange.Fill.Patterned(54);
						Если ЗначениеЗаполнено(СтруктураОбъектов.ОбластьТекста) Тогда
							ОбъектТекст = НайтиОбласть(СтруктураОбъектов.ОбластьТекста, Excel.ActiveSheet);
							Если ОбъектТекст = Неопределено Тогда
								ТекстОшибки = "Для объекта """ + СтруктураОбъектов.ОбъектАренды + """ на листе """ + СтруктураЛиста.Лист + """ не найдена область текста """ + СтруктураОбъектов.ОбластьТекста + """";
								ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
								Продолжить;
							КонецЕсли;
						Иначе
							ОбъектТекст = Excel.ActiveSheet.Shapes.AddTextbox(1, Объект.Left, Объект.Top, Объект.Width, Объект.Height);
						КонецЕсли;
						
						Текст = СокрЛП(СтруктураОбъектов.ОбъектАренды);
						Попытка  // Это Excel 2007
							Если ПрименитьОформлениеТекста(СтруктураОбъектов.ОбластьТекста, ОбъектТекст) Тогда
								ОбъектТекст.TextEffect.FontName = "Arial CYR";
								ОбъектТекст.TextEffect.FontSize = 10;
								ОбъектТекст.TextEffect.FontBold = True;
							КонецЕсли;
							ВысотаИсходная = ОбъектТекст.Height;
							ОбъектТекст.TextEffect.Text = Текст;
							Если ЭтоВыноска(ОбъектТекст, Истина) Тогда
								ОбъектТекст.TextFrame2.VerticalAnchor = 1;
								ОбъектТекст.TextFrame2.AutoSize = 0;
								ОбъектТекст.TextFrame2.AutoSize = 1;
								ВысотаНовая = ОбъектТекст.Height;
								Если ЭтоВыноска(ОбъектТекст) Тогда
									Сдвиг = (ВысотаНовая-ВысотаИсходная)*(0.5+ОбъектТекст.Adjustments.Item(2));
									ОбъектТекст.Top = ОбъектТекст.Top - Сдвиг;
								КонецЕсли;
								ОбъектТекст.TextFrame2.AutoSize = 0;
								ОбъектТекст.TextFrame2.AutoSize = 1;
								ОбъектТекст.Select();
								Excel.Selection.ShapeRange.ScaleHeight(1.02, Ложь, 0);
							КонецЕсли;
							ОбъектТекст.Fill.Visible = Ложь;
							Если ЭтоВыноска(ОбъектТекст) Тогда
								ОбъектТекст.Line.Visible = Истина;
							Иначе
								ОбъектТекст.Line.Visible = Ложь;
							КонецЕсли;
						Исключение 
							Попытка // Это Excel 2003
								Если ПрименитьОформлениеТекста(СтруктураОбъектов.ОбластьТекста, ОбъектТекст) Тогда
									ОбъектТекст.OLEFormat.Object.Font.Name = "Arial CYR";
									ОбъектТекст.OLEFormat.Object.Font.Size = 10;
									ОбъектТекст.OLEFormat.Object.Font.Bold = True;
								КонецЕсли;
								ОбъектТекст.OLEFormat.Object.Text = Текст;
								ОбъектТекст.Fill.Visible = Ложь;
								Если ЭтоВыноска(ОбъектТекст) Тогда
									ОбъектТекст.Line.Visible = Истина;
								Иначе
									ОбъектТекст.Line.Visible = Ложь;
								КонецЕсли;
							Исключение
								Продолжить;
							КонецПопытки;
						КонецПопытки;
					Исключение
						СообщениеОбОшибке = ?(ЗначениеЗаполнено(ТекстОшибки), ТекстОшибки, ОписаниеОшибки());
						ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СообщениеОбОшибке);
						ТекстОшибки = "";
						Продолжить;
					КонецПопытки; 			
				КонецЦикла;
			КонецЦикла;
			
			ЗаполнитьРеквизиты(СсылкаНаОбъект, Шаблон);
			
			// Установим лист с планировкой открытым по-умолчанию
			Попытка
				Лист = НайтиЛист(ПервыйЛист, Excel);
				Лист.Select();
			Исключение
			КонецПопытки; 
			
			ИмяВременногоФайла = "";
			#Если НЕ ВебКлиент Тогда
			ИмяВременногоФайла = ПолучитьИмяВременногоФайла(Файл.Расширение);
			#КонецЕсли
			Excel.DisplayAlerts = Ложь;
			Шаблон.SaveAs(ИмяВременногоФайла);
			Шаблон.Close();
			Excel.Quit();
			ДвоичныеДанные = Новый ДвоичныеДанные(ИмяВременногоФайла);
			АдресХранилища = ПоместитьВоВременноеХранилище(ДвоичныеДанные, Новый УникальныйИдентификатор);
			
			НоваяСтруктураДанных = Новый Структура;
			НоваяСтруктураДанных.Вставить("АдресХранилища", АдресХранилища);
			НоваяСтруктураДанных.Вставить("ФайлПланировки", СтруктураФайлов.ФайлПланировки);
			
			МассивВозврата.Добавить(НоваяСтруктураДанных);
			
		КонецЦикла;
	КонецЕсли;
	
	Возврат МассивВозврата;
	
КонецФункции	

Процедура ЗакрытьКнигуЭксель(Книга) Экспорт
 
	Excel = Книга.Application();
	Книга.Save();
	Книга.Close();

	Книга = Неопределено; 
	Если Excel.Workbooks.Count() = 0 Тогда
		Excel.Quit();
		Excel = Неопределено;
	КонецЕсли;

КонецПроцедуры

Функция ПечатьЗанятыхПлощадей(ДанныеПланировок) Экспорт
	
	ЭтоВебКлиент = Ложь;
	
	#Если ВебКлиент	Тогда
	ЭтоВебКлиент = Истина;	
	#КонецЕсли

	ОбрабатыватьШаблоныИПланировкиНаКлиенте = НЕ ЭтоВебКлиент И АР_ОбщиеПроцедуры.ПолучитьЗначениеКонстанты("АР_ОбрабатыватьШаблоныИПланировкиНаКлиенте");
	
	МассивВозврата = Новый Массив;
	
	Если ДанныеПланировок.Количество() = 0 Тогда
		Сообщить("Нет данных для отображения!");
	Иначе
		
		Excel = Новый COMОбъект("Excel.Application");
		
		Для Каждого СтруктураФайлов Из ДанныеПланировок Цикл
			
			Если НЕ ОбрабатыватьШаблоныИПланировкиНаКлиенте Тогда
				ФайлШаблона = АР_ОбщиеПроцедуры.ПолучитьПутьКФайлуПланировки(СтруктураФайлов.ФайлПланировки);
				ИмяИсходногоФайла = ФайлШаблона;
				Файл = Новый Файл(ИмяИсходногоФайла);
				Расширение = Файл.Расширение;
			Иначе
				ИмяИсходногоФайла = АР_ОбщиеПроцедуры.ЗначениеРеквизитаОбъекта(СтруктураФайлов.ФайлПланировки, "ИмяФайла");
				Файл = Новый Файл(ИмяИсходногоФайла);
				Расширение = Файл.Расширение;
				ДанныеФайла = АР_ОбщиеПроцедуры.ПолучитьДанныеФайлаПланировки(СтруктураФайлов.ФайлПланировки);
				ФайлШаблона = "";
				#Если НЕ ВебКлиент Тогда
				ФайлШаблона = ПолучитьИмяВременногоФайла(Расширение);
				#КонецЕсли
				Если ЗначениеЗаполнено(ДанныеФайла.СсылкаНаДвоичныеДанныеФайла) Тогда
					ДвоичныеДанные = ПолучитьИзВременногоХранилища(ДанныеФайла.СсылкаНаДвоичныеДанныеФайла);
					ДвоичныеДанные.Записать(ФайлШаблона);
				Иначе
					Сообщить("Файл планировки """ + СокрЛП(ИмяИсходногоФайла) + """ не существует!", СтатусСообщения.Важное); 
					Продолжить;
				КонецЕсли;
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(ФайлШаблона) Тогда
				Продолжить;
			КонецЕсли;
			
			Файл = Новый Файл(ФайлШаблона);
			Если Не Файл.Существует() Тогда
				Сообщить("Файл планировки """ + СокрЛП(ИмяИсходногоФайла) + """ не существует!", СтатусСообщения.Важное); 
				Продолжить;
			КонецЕсли;
			Книга = Excel.Workbooks.Open(СокрЛП(ФайлШаблона),, Истина); 
			//ПолноеИмяФайла = АР_ОбщиеПроцедурыКлиентСервер.ПолучитьИмяФайлаПланировки(ВыборкаПоФайлам.ФайлПланировки, "Занятость площадей");
			ПолноеИмяФайла = "";
			#Если НЕ ВебКлиент Тогда
			ПолноеИмяФайла = ПолучитьИмяВременногоФайла(Расширение);
			#КонецЕсли
			Excel.DisplayAlerts = Ложь;
			Книга.SaveAs(ПолноеИмяФайла);
			
			ПервыйЛист = СтруктураФайлов.ПервыйЛист;
			ТекстОшибки = "";
			
			ЛистОписание = НайтиЛист("Описание", Excel);
			Если ЛистОписание = Неопределено Тогда
				ЛистОписание = Excel.Sheets.Add();
				ЛистОписание.Name = "Описание";
				ЛистОписание.Visible = Ложь;
			КонецЕсли;
			
			НомерСтрокиОписание = 1;
			
			Для Каждого СтруктураЛиста Из СтруктураФайлов.МассивЛистов Цикл
				
				Попытка
					Лист = НайтиЛист(СокрЛП(СтруктураЛиста.Лист), Excel);
					Если Лист = Неопределено Тогда
						Сообщить("Лист """ + СокрЛП(СтруктураЛиста.Лист) + """ не найден");	
						Продолжить;
					КонецЕсли;
					Лист.Select();
					//Excel.Application.Run("ВсеПоУмолчанию"); 
				Исключение
					Продолжить;
				КонецПопытки;  				
				
				
				// Сделаем невидимыми выноски и текст в надписях уберем
				Ном = 1;
				Пока Ном < Лист.Shapes().Count() + 1 Цикл
					ОбъектТекст = Лист.Shapes(Ном); 
					Если ЭтоТекстоваяОбласть(ОбъектТекст) Тогда
						Если ЭтоВыноска(ОбъектТекст) Тогда
							ОбъектТекст.Line.Visible = Ложь;
							ОбъектТекст.Fill.Visible = Ложь;
						КонецЕсли;
						Попытка
							ОбъектТекст.TextEffect.Text = "";
						Исключение
							ОбъектТекст.OLEFormat.Object.Text = "";
						КонецПопытки;
					КонецЕсли;
					Ном = Ном + 1;							
				КонецЦикла;
				
				Для Каждого СтруктураОбъектов Из СтруктураЛиста.МассивОбъектов Цикл
					
					СкрылиВыноску = Ложь;
					Попытка
						ТекстОшибки = "Для объекта """ + СтруктураОбъектов.ОбъектАренды + """ на листе """ + СтруктураЛиста.Лист + """ не найден графический объект """ + СтруктураОбъектов.ГрОбъект + """";
						Объект = НайтиОбласть(СтруктураОбъектов.ГрОбъект, Excel.ActiveSheet);
						Если Объект = Неопределено Тогда
							ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
							Продолжить;
						КонецЕсли;
						
						ТекстОписания = ?(СтруктураФайлов.ВыводитьИнформациюВоВсплывающихОкнах, СтруктураОбъектов.ТекстОписания, "");
						ДобавитьСтрокуОписания(ЛистОписание, НомерСтрокиОписание, СтруктураОбъектов.ГрОбъект, СтруктураОбъектов.ГрОбъект, ТекстОписания, СтруктураОбъектов, СтруктураЛиста.Лист);
						
						ТекстОшибки = "";
						Если ЗначениеЗаполнено(СтруктураОбъектов.Статус) И ДоступнаЗаливка(Объект) Тогда
							Объект.Fill.Visible = Истина;
							Объект.Fill.ForeColor.RGB = АР_ОбщиеПроцедуры.ПолучитьЦвет(СтруктураОбъектов.ЦветСтатуса);
						КонецЕсли;
						// Добавим справочную информацию
						Текст = СтруктураОбъектов.Описание;
						Если ЗначениеЗаполнено(СтруктураОбъектов.ОбластьТекста) Тогда
							ОбъектТекст = НайтиОбласть(СтруктураОбъектов.ОбластьТекста, Excel.ActiveSheet);
							Если ОбъектТекст = Неопределено Тогда
								ТекстОшибки = "Для объекта """ + СтруктураОбъектов.ОбъектАренды + """ на листе """ + СтруктураЛиста.Лист + """ не найдена область текста """ + СтруктураОбъектов.ОбластьТекста + """";
								ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
								Продолжить;
							ИначеЕсли СтруктураФайлов.ВыводитьИнформациюВоВсплывающихОкнах И ЭтоВыноска(ОбъектТекст) Тогда
								ОбъектТекст = Excel.ActiveSheet.Shapes.AddTextbox(1, Объект.Left, Объект.Top, Объект.Width, Объект.Height);
								СкрылиВыноску = Истина;
							КонецЕсли;
						Иначе
							ОбъектТекст = Excel.ActiveSheet.Shapes.AddTextbox(1, Объект.Left, Объект.Top, Объект.Width, Объект.Height);
						КонецЕсли;
						ДобавитьСтрокуОписания(ЛистОписание, НомерСтрокиОписание, ОбъектТекст.Name, СтруктураОбъектов.ГрОбъект, ТекстОписания, СтруктураОбъектов, СтруктураЛиста.Лист);
					Исключение
						СообщениеОбОшибке = ?(ЗначениеЗаполнено(ТекстОшибки), ТекстОшибки, ОписаниеОшибки());
						ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СообщениеОбОшибке);
						ТекстОшибки = "";
						Продолжить;
					КонецПопытки;  		
					 
					Попытка  // Это Excel 2007
						Если ПрименитьОформлениеТекста(СтруктураОбъектов.ОбластьТекста, ОбъектТекст) ИЛИ СкрылиВыноску Тогда
							ОбъектТекст.TextEffect.FontName = "Arial CYR";
							ОбъектТекст.TextEffect.FontSize = 10;
							ОбъектТекст.TextEffect.FontBold = True;
						КонецЕсли;
						ВысотаИсходная = ОбъектТекст.Height;
						ОбъектТекст.TextEffect.Text = Текст;
						Если ЭтоВыноска(ОбъектТекст, Истина) Тогда
							ОбъектТекст.TextFrame2.VerticalAnchor = 1;
							ОбъектТекст.TextFrame2.AutoSize = 0;
							ОбъектТекст.TextFrame2.AutoSize = 1;
							ВысотаНовая = ОбъектТекст.Height;
							Если ЭтоВыноска(ОбъектТекст) Тогда
								Сдвиг = (ВысотаНовая-ВысотаИсходная)*(0.5+ОбъектТекст.Adjustments.Item(2));
								ОбъектТекст.Top = ОбъектТекст.Top - Сдвиг;
							КонецЕсли;
							ОбъектТекст.TextFrame2.AutoSize = 0;
							ОбъектТекст.TextFrame2.AutoSize = 1;
							ОбъектТекст.Select();
							Excel.Selection.ShapeRange.ScaleHeight(1.02, Ложь, 0);
						КонецЕсли;
						ОбъектТекст.Fill.Visible = Ложь;
						Если ЭтоВыноска(ОбъектТекст) И ЗначениеЗаполнено(Текст) Тогда
							ОбъектТекст.Line.Visible = Истина;
						Иначе
							ОбъектТекст.Line.Visible = Ложь;
						КонецЕсли;
					Исключение 
						Попытка // Это Excel 2003
							Если ПрименитьОформлениеТекста(СтруктураОбъектов.ОбластьТекста, ОбъектТекст) ИЛИ СкрылиВыноску Тогда
								ОбъектТекст.OLEFormat.Object.Font.Name = "Arial CYR";
								ОбъектТекст.OLEFormat.Object.Font.Size = 10;
								ОбъектТекст.OLEFormat.Object.Font.Bold = True;
							КонецЕсли;
							ОбъектТекст.OLEFormat.Object.Text = Текст;
							ОбъектТекст.Fill.Visible = Ложь;
							Если ЭтоВыноска(ОбъектТекст) И ЗначениеЗаполнено(Текст) Тогда
								ОбъектТекст.Line.Visible = Истина;
							Иначе
								ОбъектТекст.Line.Visible = Ложь;
							КонецЕсли;
						Исключение
							Продолжить;
						КонецПопытки;
					КонецПопытки;
					
				КонецЦикла;
			КонецЦикла;
			
			// Формируем легенду
			Попытка
				ЛистЛегенда = Excel.Sheets("Легенда");
			Исключение
				ЛистЛегенда = Excel.Sheets.Add();
				ЛистЛегенда.Name = "Легенда";
				ЛистЛегенда.Cells(1, 1).Value  = "Статус";
				ЛистЛегенда.Cells(1, 1).Font.Bold = Истина;
				ЛистЛегенда.Cells(1, 1).ColumnWidth = 18;
				ЛистЛегенда.Cells(1, 2).Value = "Цвет";
				ЛистЛегенда.Cells(1, 2).Font.Bold = Истина;
			КонецПопытки;
			Ном = 1;
			Для Каждого ЭлементСтатуса Из СтруктураФайлов.МассивСтатусов Цикл
				Если ЗначениеЗаполнено(ЭлементСтатуса.Статус) Тогда
					Ном = Ном + 1;
					ЛистЛегенда.Cells(Ном, 1).Value  = ЭлементСтатуса.Статус;
					ЛистЛегенда.Cells(Ном, 2).Interior.Color = ЭлементСтатуса.Цвет;
				КонецЕсли;
			КонецЦикла;
			
			// Установим лист с планировкой открытым по-умолчанию
			Попытка
				Лист = НайтиЛист(ПервыйЛист, Excel);
				Лист.Select();
			Исключение
			КонецПопытки; 
			Книга.Save();
			
			Если НЕ ОбрабатыватьШаблоныИПланировкиНаКлиенте Тогда
				Книга.Close();
				Книга = Неопределено;
				
				Файл = Новый Файл(ПолноеИмяФайла);
				Если Файл.Существует() Тогда
					ДвоичныеДанные = Новый ДвоичныеДанные(ПолноеИмяФайла);
					СсылкаНаДвоичныеДанныеФайла = ПоместитьВоВременноеХранилище(ДвоичныеДанные, Новый УникальныйИдентификатор);
					
					НоваяСтруктураДанных = Новый Структура;
					НоваяСтруктураДанных.Вставить("СсылкаНаДвоичныеДанныеФайла", СсылкаНаДвоичныеДанныеФайла);
					НоваяСтруктураДанных.Вставить("ФайлПланировки", СтруктураФайлов.ФайлПланировки);
					
					МассивВозврата.Добавить(НоваяСтруктураДанных);
				КонецЕсли;
			Иначе
				
				СохранятьКак = АР_ОбщиеПроцедурыКлиентСервер.ПолучитьИмяФайлаПланировки(СтруктураФайлов.ФайлПланировки, "Занятость площадей");
				Excel.DisplayAlerts = Ложь;
				Книга.SaveAs(СохранятьКак);
				Книга.Close();
				Книга = Неопределено;
				#Если Клиент Тогда
				АР_ОбщиеПроцедурыКлиент.УстановитьМакросыВФайлПланировки(СохранятьКак);	
				#КонецЕсли
				ЗапуститьПриложение(СохранятьКак);
				
			КонецЕсли;
		КонецЦикла;
		Если Excel.Workbooks.Count() = 0 Тогда
			Excel.Quit();
		КонецЕсли;
	КонецЕсли;	
	
	Возврат МассивВозврата;
	
КонецФункции

Процедура ДобавитьСтрокуОписания(ЛистОписание, НомерСтрокиОписание, НаименованиеОбъекта, ГрафическийОбъект, ТекстОписания, СтруктураОбъектов, ИмяЛиста)
	
	ЛистОписание.Cells(НомерСтрокиОписание, 1).NumberFormat = "@";	
	ЛистОписание.Cells(НомерСтрокиОписание, 2).NumberFormat = "@";	
	ЛистОписание.Cells(НомерСтрокиОписание, 3).NumberFormat = "@";
	ЛистОписание.Cells(НомерСтрокиОписание, 4).NumberFormat = "@";
	ЛистОписание.Cells(НомерСтрокиОписание, 5).NumberFormat = "@";
	ЛистОписание.Cells(НомерСтрокиОписание, 6).NumberFormat = "@";
	
	ЛистОписание.Cells(НомерСтрокиОписание, 1).Value = НаименованиеОбъекта;	
	ЛистОписание.Cells(НомерСтрокиОписание, 2).Value = ГрафическийОбъект;	
	ЛистОписание.Cells(НомерСтрокиОписание, 3).Value = ТекстОписания;
	ЛистОписание.Cells(НомерСтрокиОписание, 4).Value = СтруктураОбъектов.НавигационнаяСсылка;
	ЛистОписание.Cells(НомерСтрокиОписание, 5).Value = СтруктураОбъектов.Заголовоксистемы;
	ЛистОписание.Cells(НомерСтрокиОписание, 6).Value = ИмяЛиста;
	
	НомерСтрокиОписание = НомерСтрокиОписание + 1;
	
КонецПроцедуры

Функция ПолучитьИмяФайлаПланировки(Планировка, Префикс = "Печать планировок") Экспорт
	
	Наименование = АР_ОбщиеПроцедуры.ЗначениеРеквизитаОбъекта(Планировка, "Наименование");
	
	ЗаменяемыеСимволы = "\/:*?<>|""";
	Для Индекс = 1 По СтрДлина(ЗаменяемыеСимволы) Цикл
		Наименование = СтрЗаменить(Наименование, Сред(ЗаменяемыеСимволы, Индекс, 1), "_");
	КонецЦикла;
	
	ИмяФайла = АР_ОбщиеПроцедуры.ЗначениеРеквизитаОбъекта(Планировка, "ИмяФайла");
	Файл = Новый Файл(ИмяФайла);	
	#Если ВебКлиент Тогда
	Возврат Префикс + " " + Наименование + Файл.Расширение;	
	#КонецЕсли
	
	ДанныеФайла = АР_ОбщиеПроцедуры.ПолучитьДанныеФайлаПланировки(Планировка);
	
	
	ПолноеИмяФайла = "";	
	#Если НЕ ВебКлиент Тогда
	ПолноеИмяФайла = ПолучитьИмяВременногоФайла(Файл.Расширение);
	#КонецЕсли
	Если ЗначениеЗаполнено(ДанныеФайла.СсылкаНаДвоичныеДанныеФайла) Тогда
		ДвоичныеДанные = ПолучитьИзВременногоХранилища(ДанныеФайла.СсылкаНаДвоичныеДанныеФайла);
		ДвоичныеДанные.Записать(ПолноеИмяФайла);
	КонецЕсли;
	
	Файл = Новый Файл(ПолноеИмяФайла);	
	ОписаниеФайла = Новый Структура("Имя, Расширение", Файл.ИмяБезРасширения, Файл.Расширение);
	
	ШаблонМаскиФайла = Префикс + " " + Наименование + " (%1)" + ОписаниеФайла.Расширение;
	ШаблонНомера = "*";
	Каталог = ПолучитьРабочийКаталог();
	
	МаскаФайла = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонМаскиФайла, ШаблонНомера);
	НайденныеФайлы = НайтиФайлы(Каталог, МаскаФайла);
	НовыйНомер = НайденныеФайлы.Количество() + 1;
	
	Пока Истина Цикл
		Файл = Новый Файл(Каталог + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонМаскиФайла, НовыйНомер));
		Если Файл.Существует() Тогда
			НовыйНомер = НовыйНомер + 1;
		Иначе
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Каталог + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонМаскиФайла, НовыйНомер);
	
КонецФункции

Процедура ОчиститьВременныеФайлыПросмотраПланировок() Экспорт
	
	МассивМасок = Новый Массив;
	МассивМасок.Добавить("Печать планировок *");
	МассивМасок.Добавить("Занятость площадей *");
	МассивМасок.Добавить("Расположение объекта *");
	
	Для Каждого Маска Из МассивМасок Цикл
		Попытка
			УдалитьФайлы(ПолучитьРабочийКаталог(), Маска);
		Исключение
		КонецПопытки;
	КонецЦикла;
	
	//АР_ОбщиеПроцедуры.ОчиститьВременныеФайлыПросмотраПланировок();
	
КонецПроцедуры

Функция ПолучитьРабочийКаталог()
	
	#Если Клиент Тогда
		Каталог = РаботаСФайламиСлужебныйКлиент.РабочийКаталогПользователя();		
	#Иначе
		Каталог = КаталогВременныхФайлов();
	#КонецЕсли
	Возврат Каталог;
	
КонецФункции

//////////////////////////////////////////////////////////////////
// Печать шаблонов Word

Процедура ЗаполнитьКолонтитул(НомерСекции, НомерКолонтитула, WD, WordDoc, СсылкаНаОбъект, ИспользоватьМенеджерЛицензий)
	
	ЧислоПолей = WordDoc.Sections(НомерСекции).Headers(НомерКолонтитула).Range.Fields.Count;
	Для Инд = 1 По ЧислоПолей Цикл
		Ном = ЧислоПолей - Инд + 1;
		Если Ном > ЧислоПолей Тогда 
			Продолжить 
		КонецЕсли;
		WordDoc.Sections(НомерСекции).Headers(НомерКолонтитула).Range.Fields(Ном).Select(); 
		ИмяРеквизита = WD.Selection.Text;
		Если ПустаяСтрока(ИмяРеквизита) Тогда
			WD.ActiveWindow.View.ShowFieldCodes = -1;
			WD.Selection.Delete();
			WD.ActiveWindow.View.ShowFieldCodes = 0;
			Продолжить;
		КонецЕсли;                                  
		Значение = АР_ОбщиеПроцедуры.ПолучитьЗначениеРеквизитаДляWord(СсылкаНаОбъект, ИмяРеквизита, ИспользоватьМенеджерЛицензий);
		Если Значение <> Неопределено Тогда
			Wd.ActiveWindow.View.ShowFieldCodes = -1;
			Wd.Selection.Text = Строка(Значение);
			Wd.ActiveWindow.View.ShowFieldCodes = 0;
		КонецЕсли;
	КонецЦикла;

	ЧислоПолей = WordDoc.Sections(НомерСекции).Footers(НомерКолонтитула).Range.Fields.Count;
	Для Инд = 1 По ЧислоПолей Цикл
		Ном = ЧислоПолей - Инд + 1;
		Если Ном > ЧислоПолей Тогда 
			Продолжить 
		КонецЕсли;
		WordDoc.Sections(НомерСекции).Footers(НомерКолонтитула).Range.Fields(Ном).Select(); 
		ИмяРеквизита = WD.Selection.Text;
		Если ПустаяСтрока(ИмяРеквизита) Тогда
			WD.ActiveWindow.View.ShowFieldCodes = -1;
			WD.Selection.Delete();
			WD.ActiveWindow.View.ShowFieldCodes = 0;
			Продолжить;
		КонецЕсли;                                  
		Значение = АР_ОбщиеПроцедуры.ПолучитьЗначениеРеквизитаДляWord(СсылкаНаОбъект, ИмяРеквизита, ИспользоватьМенеджерЛицензий);
		Если Значение <> Неопределено Тогда
			Wd.ActiveWindow.View.ShowFieldCodes = -1;
			Wd.Selection.Text = Строка(Значение);
			Wd.ActiveWindow.View.ShowFieldCodes = 0;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

Функция ПечатьШаблонаВорд(Шаблон, СсылкаНаОбъект, мИспользоватьМенеджерЛицензий) Экспорт
	
	Перем ПолноеИмяФайла; 
	
	Если Не мИспользоватьМенеджерЛицензий Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если Не АР_ОбщиеПроцедуры.СохранитьФайл(Шаблон, ПолноеИмяФайла) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ЭтоВебКлиент = Ложь;
	
	#Если ВебКлиент	Тогда
	ЭтоВебКлиент = Истина;	
	#КонецЕсли

	ОбрабатыватьШаблоныИПланировкиНаКлиенте = НЕ ЭтоВебКлиент И АР_ОбщиеПроцедуры.ПолучитьЗначениеКонстанты("АР_ОбрабатыватьШаблоныИПланировкиНаКлиенте");
	
	Если ОбрабатыватьШаблоныИПланировкиНаКлиенте Тогда
		ДанныеФайла = АР_ОбщиеПроцедуры.ПолучитьДанныеФайлаШаблона(ПолноеИмяФайла);
		Файл = Новый Файл(ПолноеИмяФайла);
		ПолноеИмяФайла = ПолучитьРабочийКаталог() + Файл.Имя;
		ДвоичныеДанные = ПолучитьИзВременногоХранилища(ДанныеФайла.СсылкаНаДвоичныеДанныеФайла);
		ДвоичныеДанные.Записать(ПолноеИмяФайла);
	КонецЕсли;
		
	WD = Новый COMOBject("Word.Application");
	Попытка
		WordDoc = WD.Documents.Open(ПолноеИмяФайла,,0);
	Исключение
		Возврат Неопределено;
	КонецПопытки;
	
	WordDoc = WD.ActiveDocument;
	wdWord = 2;
	wdExtend = 1;
	wdWindowStateMaximize = 1;
	WD.ActiveWindow.View.ShowFieldCodes = 0;
	NumOfFields = WordDoc.Fields.Count;
	
	// Колонтитулы
	Для Сч = 1 по WordDoc.Sections.Count Цикл
		ЗаполнитьКолонтитул(Сч, 1, WD, WordDoc, СсылкаНаОбъект, мИспользоватьМенеджерЛицензий);
		ЗаполнитьКолонтитул(Сч, 2, WD, WordDoc, СсылкаНаОбъект, мИспользоватьМенеджерЛицензий);
		ЗаполнитьКолонтитул(Сч, 3, WD, WordDoc, СсылкаНаОбъект, мИспользоватьМенеджерЛицензий);
	КонецЦикла;	
	
	//Шапка
	Для Инд = 1 по WordDoc.Fields.Count Цикл
		Ном = NumOfFields - Инд + 1;
		Если Ном > WordDoc.Fields.Count Тогда 
			Продолжить 
		КонецЕсли;
		WordDoc.Fields(Ном).Select(); 
		ИмяРеквизита = WD.Selection.Text;
		Если ПустаяСтрока(ИмяРеквизита) Тогда
			WD.ActiveWindow.View.ShowFieldCodes = -1;
			WD.Selection.Delete();
			WD.ActiveWindow.View.ShowFieldCodes = 0;
			Продолжить;
		КонецЕсли;                                  
		Значение = АР_ОбщиеПроцедуры.ПолучитьЗначениеРеквизитаДляWord(СсылкаНаОбъект, ИмяРеквизита, мИспользоватьМенеджерЛицензий);
		Если Значение <> Неопределено Тогда
			Wd.ActiveWindow.View.ShowFieldCodes = -1;
			Wd.Selection.Text = Строка(Значение);
			Wd.ActiveWindow.View.ShowFieldCodes = 0;
		КонецЕсли;
	КонецЦикла;	
	
	// Табличная часть
	ВсегоТЧ = АР_ОбщиеПроцедуры.ПолучитьКоличествоТЧ(СсылкаНаОбъект);
	Для WordDocTableNuber = 1 По WordDoc.Tables.Count() Цикл
		TC = WordDoc.Tables(WordDocTableNuber);
		
		// Обходим все строки таблицы в документе Ворд
		НомерСтрокиДок = 1;
		Попытка
			СтрокаТаблицы = TC.Rows(НомерСтрокиДок);
		Исключение
			// Есть строки объединеные по вертикали
			Продолжить;
		КонецПопытки;
		//Для Каждого СтрокаТаблицы Из TC.Rows Цикл
		Пока НомерСтрокиДок <= TC.Rows.Count() Цикл
			СтрокаТаблицы = TC.Rows(НомерСтрокиДок);
			// Ищем реквизит ТЧ
			НашлиРеквизитТЧ = Ложь;
			КоличествоПолей = СтрокаТаблицы.Range.Fields.Count;
			Если КоличествоПолей > 0 Тогда
				Для Инд = 1 По КоличествоПолей Цикл
					Ном = КоличествоПолей - Инд + 1;
					СтрокаТаблицы.Range.Fields(Ном).Select(); 
					ИмяРеквизита = WD.Selection.Text;						
					Если ПустаяСтрока(ИмяРеквизита) Тогда
						Продолжить;
					КонецЕсли;  
					СтруктураТабЧасти = Новый Структура("Ссылка, ИмяТабЧасти, ИмяРеквизита");
					НашлиРеквизитТЧ = АР_ОбщиеПроцедуры.ОбъектСодержитТЧ(СсылкаНаОбъект, ИмяРеквизита, СтруктураТабЧасти);
					ИмяТЧ = СтруктураТабЧасти.ИмяТабЧасти;
					Если НашлиРеквизитТЧ Тогда
						Прервать;
					КонецЕсли;
				КонецЦикла;					
			КонецЕсли;
			
			Если Не НашлиРеквизитТЧ Тогда
				НомерСтрокиДок = НомерСтрокиДок + 1;
				Продолжить;
			КонецЕсли;
			
			// Добавляем пустые строки по количеству строк в ТЧ документа
			ПерваяСтрока = Истина;
			КоличествоСтрокТЧ = АР_ОбщиеПроцедуры.ПолучитьКоличествоСтрокТЧ(СтруктураТабЧасти.Ссылка, ИмяТЧ);
			Если КоличествоСтрокТЧ = 0 Тогда
				Если TC.Rows.Count() = 1 Тогда
				Иначе
					СтрокаТаблицы.Range.Cut();
				КонецЕсли;
			Иначе
				Для Сч = 1 По КоличествоСтрокТЧ Цикл
					Если ПерваяСтрока Тогда
						ПерваяСтрока = Ложь;
						СтрокаТаблицы.Range.Copy();
					Иначе	
						СтрокаТаблицы.Range.Paste();
					КонецЕсли;	
				КонецЦикла;
			КонецЕсли;
			
			// Обход таблицы документа по столбцам и заполняем строки
			Для Сч = 1 По КоличествоСтрокТЧ Цикл
				НомерСтрокиТЧ = НомерСтрокиДок + Сч - 1;
				СтрокаТаблицы = TC.Rows(НомерСтрокиТЧ);
				КоличествоПолей = СтрокаТаблицы.Range.Fields.Count;
				Если КоличествоПолей > 0 Тогда
					Для Инд = 1 По КоличествоПолей Цикл
						Ном = КоличествоПолей - Инд + 1;
						СтрокаТаблицы.Range.Fields(Ном).Select(); 
						ИмяРеквизита = WD.Selection.Text;						
						Если ПустаяСтрока(ИмяРеквизита) Тогда
							Продолжить;
						КонецЕсли;                                  
						СтруктураТабЧасти = Новый Структура("Ссылка, ИмяТабЧасти, ИмяРеквизита");
						НашлиРеквизитТЧ = АР_ОбщиеПроцедуры.ОбъектСодержитТЧ(СсылкаНаОбъект, ИмяРеквизита, СтруктураТабЧасти);
						Если НашлиРеквизитТЧ Тогда // Это реквзит ТЧ
							Значение = АР_ОбщиеПроцедуры.ПолучитьЗначениеРеквизитаТЧДляWord(СтруктураТабЧасти.Ссылка, ИмяТЧ, Сч, СтруктураТабЧасти.ИмяРеквизита, мИспользоватьМенеджерЛицензий);
							Если Значение <> Неопределено Тогда
								Wd.ActiveWindow.View.ShowFieldCodes = -1;
								Wd.Selection.Text = Строка(Значение);
								Wd.ActiveWindow.View.ShowFieldCodes = 0;
							КонецЕсли;
						Иначе // Это реквизит документа
							Значение = АР_ОбщиеПроцедуры.ПолучитьЗначениеРеквизитаДляWord(СсылкаНаОбъект, ИмяРеквизита, мИспользоватьМенеджерЛицензий);
							Если Значение <> Неопределено Тогда
								Wd.ActiveWindow.View.ShowFieldCodes = -1;
								Wd.Selection.Text = Строка(Значение);
								Wd.ActiveWindow.View.ShowFieldCodes = 0;
							КонецЕсли;
						КонецЕсли;
					КонецЦикла;					
				КонецЕсли;
			КонецЦикла;
			
			НомерСтрокиДок = НомерСтрокиДок + ?(КоличествоСтрокТЧ = 0, 1, КоличествоСтрокТЧ);
			
		КонецЦикла;
	КонецЦикла;	

	Если НЕ ОбрабатыватьШаблоныИПланировкиНаКлиенте Тогда
		WordDoc.Save();
		WordDoc.Close();
		WordDoc = Неопределено;
		Попытка
			Если WD.Documents.Count = 0 Тогда
				WD.Quit(0);
			КонецЕсли;
			WD = Неопределено;
		Исключение
			WD = Неопределено;
		КонецПопытки;
		Возврат ПолноеИмяФайла;
	Иначе
		СохранятьКак = АР_ОбщиеПроцедурыКлиентСервер.ПолучитьИмяФайлаШаблона(Шаблон, ПолноеИмяФайла);
		WordDoc.SaveAs(СохранятьКак);
		WordDoc.Close();
		WordDoc = Неопределено;	
		Попытка
			Если WD.Documents.Count = 0 Тогда
				WD.Quit(0);
			КонецЕсли;
			WD = Неопределено;
		Исключение
			WD = Неопределено;
		КонецПопытки;
		
		#Если Сервер Тогда
		Возврат СохранятьКак;	
		#КонецЕсли
	
		#Если Клиент Тогда
		Файл = Новый Файл(СохранятьКак);
		Если Файл.Существует() Тогда
			ДвоичныеДанные = Новый ДвоичныеДанные(СохранятьКак);
			СсылкаНаДвоичныеДанныеФайла = ПоместитьВоВременноеХранилище(ДвоичныеДанные, Новый УникальныйИдентификатор);
			
			ДанныеФайла = Новый Структура;
			ДанныеФайла.Вставить("СсылкаНаДвоичныеДанныеФайла", СсылкаНаДвоичныеДанныеФайла);
			ДанныеФайла.Вставить("ИмяФайла", Файл.Имя);
			ДанныеФайла.Вставить("Шаблон", Шаблон);
			
			ДополнительныеПараметры = Новый Структура;
			ДополнительныеПараметры.Вставить("ДанныеФайла", ДанныеФайла);
			ДополнительныеПараметры.Вставить("СсылкаНаОбъект", СсылкаНаОбъект);
			ДополнительныеПараметры.Вставить("СохранятьКак", СохранятьКак);
			ДополнительныеПараметры.Вставить("ПолноеИмяФайла", СохранятьКак);
			Попытка
				//Приложение = WD;
				//Если Приложение.Documents.Count = 0 Тогда
					ШаблонCOM = ПолучитьCOMОбъект(СохранятьКак);
					Приложение = ШаблонCOM.Application;
					ШаблонCOM = Неопределено;	
				//КонецЕсли;
			Исключение
				Приложение = Неопределено;
			КонецПопытки;
			ДополнительныеПараметры.Вставить("Приложение", Приложение);
			
			ЗапуститьПриложение(СохранятьКак);
			
			ДокументНеНужноСохранять = ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.АР_ЗаявкаНаОбслуживание")
				ИЛИ ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.АР_ВыполнениеРаботПоОбслуживанию")
				ИЛИ ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.АР_ВводПараметровЭксплуатацииОбъектов");
				
			Если АР_ОбщиеПроцедуры.ПредлагатьСохранятьДокументWord() И НЕ ДокументНеНужноСохранять Тогда
				ОписаниеОповещения = Новый ОписаниеОповещения("ПечатьШаблонаВордСохранениеФайлаВБазе", АР_ОбщиеПроцедурыКлиент, ДополнительныеПараметры);
				ПоказатьВопрос(ОписаниеОповещения, НСтр("ru='Вы желаете сохранить сформированный документ в базе?'"), РежимДиалогаВопрос.ДаНет);
			КонецЕсли;
		КонецЕсли;
		#КонецЕсли
		
	КонецЕсли;
	
КонецФункции	

Функция ПолучитьИмяФайлаШаблона(Шаблон, ПолноеИмяФайла, Префикс = "Шаблон") Экспорт
	
	ШаблонИмяФайла = АР_ОбщиеПроцедуры.ЗначениеРеквизитаОбъекта(Шаблон, "ИмяФайла");
	ШаблонНаименование = АР_ОбщиеПроцедуры.ЗначениеРеквизитаОбъекта(Шаблон, "Наименование");
	
	Файл = Новый Файл(ПолноеИмяФайла);	
	ИмяФайла = ?(ЗначениеЗаполнено(ШаблонИмяФайла), ШаблонИмяФайла, ШаблонНаименование);
	ИмяФайла = СтрЗаменить(ИмяФайла, Файл.Расширение, "");
	
	ЗаменяемыеСимволы = "\/:*?<>|""";
	Для Индекс = 1 По СтрДлина(ЗаменяемыеСимволы) Цикл
		ИмяФайла = СтрЗаменить(ИмяФайла, Сред(ЗаменяемыеСимволы, Индекс, 1), "_");
	КонецЦикла;
	
	#Если ВебКлиент Тогда
	Возврат Префикс + " " + ИмяФайла + Файл.Расширение;
	#КонецЕсли
	
	ШаблонМаскиФайла = Префикс + " " + ИмяФайла + " (%1)" + Файл.Расширение;
	ШаблонНомера = "*";
	
	Каталог = ПолучитьРабочийКаталог();
	
	МаскаФайла = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонМаскиФайла, ШаблонНомера);
	НайденныеФайлы = НайтиФайлы(Каталог, МаскаФайла);
	НовыйНомер = НайденныеФайлы.Количество() + 1;
	
	Пока Истина Цикл
		Файл = Новый Файл(Каталог + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонМаскиФайла, НовыйНомер));
		Если Файл.Существует() Тогда
			НовыйНомер = НовыйНомер + 1;
		Иначе
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Каталог + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонМаскиФайла, НовыйНомер);
	
КонецФункции

Процедура ОчиститьВременныеФайлыШаблонов() Экспорт
	
	МассивМасок = Новый Массив;
	МассивМасок.Добавить("Шаблон *");
	МассивМасок.Добавить("Редактирование шаблона *");
	
	Для Каждого Маска Из МассивМасок Цикл
		Попытка
			УдалитьФайлы(ПолучитьРабочийКаталог(), Маска);
		Исключение
		КонецПопытки;
	КонецЦикла;
	
	//АР_ОбщиеПроцедуры.ОчиститьВременныеФайлыШаблонов();
	
КонецПроцедуры
