#Область ПрограммныйИнтерфейс

// Проверяет предавались ли мероприятия документа в ПФР и если передавались - переводит форму
// в режим ТолькоПросмотр = Истина
//
// Параметры:
//		УправляемаяФорма	- ФормаКлиентскогоПриложения
//		ТекущийОбъект		- ДокументОбъект
//
Процедура ПриЧтенииНаСервере(УправляемаяФорма, ТекущийОбъект) Экспорт
	
	ЭлектронныеТрудовыеКнижкиКлиентСервер.УстановитьОтображениеНомеровДокумента(УправляемаяФорма);
	
	Если УправляемаяФорма.Элементы.Найти("ГруппаИндикатораЭТК") <> Неопределено Тогда
		УправляемаяФорма.Элементы.ГруппаИндикатораЭТК.Видимость  = Ложь;
	КонецЕсли;
	
	Если ТекущийОбъект.Проведен Тогда
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		
		Запрос.УстановитьПараметр("Регистратор", ТекущийОбъект.Ссылка);
		Запрос.Текст =
			"ВЫБРАТЬ
			|	МероприятияТрудовойДеятельности.ИдМероприятия КАК ИдМероприятия,
			|	МероприятияТрудовойДеятельности.Отменено КАК Отменено
			|ПОМЕСТИТЬ ВТИдМероприятий
			|ИЗ
			|	РегистрСведений.МероприятияТрудовойДеятельности КАК МероприятияТрудовойДеятельности
			|ГДЕ
			|	МероприятияТрудовойДеятельности.Регистратор = &Регистратор
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ ПЕРВЫЕ 1
			|	ИдМероприятий.ИдМероприятия КАК ИдМероприятия
			|ИЗ
			|	ВТИдМероприятий КАК ИдМероприятий";
		
		УстановитьПривилегированныйРежим(Истина);
		РезультатЗапроса = Запрос.Выполнить();
		УстановитьПривилегированныйРежим(Ложь);
		
		Если Не РезультатЗапроса.Пустой() Тогда
			
			Запрос.Текст =
				"ВЫБРАТЬ ПЕРВЫЕ 1
				|	ИдМероприятий.ИдМероприятия КАК ИдМероприятия
				|ИЗ
				|	ВТИдМероприятий КАК ИдМероприятий
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.МероприятияТрудовойДеятельностиПереданные КАК МероприятияТрудовойДеятельностиПереданные
				|		ПО ИдМероприятий.ИдМероприятия = МероприятияТрудовойДеятельностиПереданные.ИдМероприятия
				|			И ИдМероприятий.Отменено = МероприятияТрудовойДеятельностиПереданные.Отменено";
			
			УстановитьПривилегированныйРежим(Истина);
			РезультатЗапроса = Запрос.Выполнить();
			УстановитьПривилегированныйРежим(Ложь);
			
			Если УправляемаяФорма.Элементы.Найти("ГруппаИндикатораЭТК") <> Неопределено Тогда
				ПравоРедактирования = ПравоДоступа("Изменение", ТекущийОбъект.Метаданные());
				УправляемаяФорма.Элементы.ГруппаИндикатораЭТК.Видимость                = НЕ РезультатЗапроса.Пустой();
				УправляемаяФорма.Элементы.ГруппаБаннерСКнопкой.Видимость               = ПравоРедактирования;
				УправляемаяФорма.Элементы.ГруппаБаннерСТекстомРедактирование.Видимость = ПравоРедактирования;
				УправляемаяФорма.Элементы.ГруппаБаннерСТекстомПросмотр.Видимость       = НЕ ПравоРедактирования;
				УправляемаяФорма.Элементы.ИзменитьДокументЭТК.Доступность              = ПравоРедактирования
						И НЕ ДатыЗапретаИзменения.ИзменениеЗапрещено(ТекущийОбъект);
				УчетЗарплаты.УправлениеДоступностьюКадровыхРеквизитов(УправляемаяФорма, РезультатЗапроса.Пустой());
				Возврат;
			КонецЕсли;
		
			Если Не РезультатЗапроса.Пустой() Тогда
				
				ГруппаИндикатора = УправляемаяФорма.Элементы.Найти("ГруппаИндикатораЭТК");
				Если ГруппаИндикатора = Неопределено Тогда
					
					ГруппаИндикатора = УправляемаяФорма.Элементы.Вставить("ГруппаИндикатораЭТК", Тип("ГруппаФормы"), УправляемаяФорма, УправляемаяФорма.ПодчиненныеЭлементы.Получить(0));
					ГруппаИндикатора.Вид                      = ВидГруппыФормы.ОбычнаяГруппа;
					ГруппаИндикатора.ОтображатьЗаголовок      = Ложь;
					ГруппаИндикатора.Группировка              = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
					ГруппаИндикатора.РастягиватьПоГоризонтали = Истина;
					ГруппаИндикатора.ЦветФона                 = ЦветаСтиля.ФонУправляющегоПоля;
					
					КартинкаВнимание = УправляемаяФорма.Элементы.Добавить("КартинкаВниманиеЭТК", Тип("ДекорацияФормы"), ГруппаИндикатора);
					КартинкаВнимание.Вид = ВидДекорацииФормы.Картинка;
					КартинкаВнимание.Картинка = БиблиотекаКартинок.Внимание48;
					КартинкаВнимание.РазмерКартинки = РазмерКартинки.РеальныйРазмер;
					
					ТекстВнимание = УправляемаяФорма.Элементы.Добавить("ТекстВниманиеЭТК", Тип("ДекорацияФормы"), ГруппаИндикатора);
					ТекстВнимание.Вид = ВидДекорацииФормы.Надпись;
					ТекстВнимание.Заголовок = НСтр("ru = 'Записи трудовой книжки переданы в ПФР.
						|Редактирование документа может привести к отмене одних записей и добавлению новых.'");
					
				КонецЕсли;
				
				Если ПравоДоступа("Изменение", ТекущийОбъект.Метаданные())
					И ПравоДоступа("Изменение", Метаданные.РегистрыСведений.МероприятияТрудовойДеятельности) Тогда
					
					Если ТекущийОбъект.Метаданные().Имя = "РегистрацияТрудовойДеятельности" Тогда
						ИзменениеЗапрещено = Ложь;
					Иначе
						ИзменениеЗапрещено = ДатыЗапретаИзменения.ИзменениеЗапрещено(ТекущийОбъект);
					КонецЕсли;
					
					Если Не ИзменениеЗапрещено Тогда
						
						УправляемаяФорма.ТолькоПросмотр = Истина;
						ИзменитьДокумент = УправляемаяФорма.Команды.Найти("ИзменитьДокументЭТК");
						Если ИзменитьДокумент = Неопределено Тогда
							
							ИзменитьДокумент = УправляемаяФорма.Команды.Добавить("ИзменитьДокументЭТК");
							ИзменитьДокумент.Заголовок = НСтр("ru = 'Изменить документ'");
							ИзменитьДокумент.Действие = "Подключаемый_ИзменитьДокумент";
							
							КнопкаИзменитьДокумент = УправляемаяФорма.Элементы.Добавить("КнопкаИзменитьДокументЭТК", Тип("КнопкаФормы"), УправляемаяФорма.КоманднаяПанель);
							КнопкаИзменитьДокумент.Вид = ВидКнопкиФормы.КнопкаКоманднойПанели;
							КнопкаИзменитьДокумент.ИмяКоманды = "ИзменитьДокументЭТК";
							КнопкаИзменитьДокумент.ТолькоВоВсехДействиях = Истина;
							
						КонецЕсли;
						
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Заполняет наименование документа по его виду
//
// Параметры:
//		ОбъектДокумента		- ДокументОбъект
//		ВидДокумента		- Строка, имя документа метаданных
//
Процедура ЗаполнитьНаименованиеДокумента(ОбъектДокумента, ВидДокумента) Экспорт
	
	ОбъектДокумента.НаименованиеДокумента = НаименованиеДокументаПоВидуДокументаСобытия(
		ОбъектДокумента.Организация, ВидДокумента);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#Область Печать

// Определяет объекты, в которых есть процедура ДобавитьКомандыПечати().
// Подробнее см. УправлениеПечатьюПереопределяемый.
//
// Параметры:
//  СписокОбъектов - Массив - список менеджеров объектов.
//
Процедура ПриОпределенииОбъектовСКомандамиПечати(СписокОбъектов) Экспорт
	
	СписокОбъектов.Добавить(Документы.ЗаявленияОПредоставленииСведенийОТрудовойДеятельности);
	СписокОбъектов.Добавить(Документы.ОтзывЗаявленийОПредоставленииСведенийОТрудовойДеятельности);
	СписокОбъектов.Добавить(Документы.РегистрацияТрудовойДеятельности);
	СписокОбъектов.Добавить(Документы.СведенияОТрудовойДеятельностиРаботникаСТД_Р);
	
КонецПроцедуры

#КонецОбласти

#Область Свойства

// См. УправлениеСвойствамиПереопределяемый.ПриПолученииПредопределенныхНаборовСвойств.
Процедура ПриПолученииПредопределенныхНаборовСвойств(Наборы) Экспорт
	
	УправлениеСвойствамиБЗК.ЗарегистрироватьНаборСвойств(Наборы, "b080f311-2352-47c8-8abf-a4affae1a6de", Метаданные.Документы.ЗаявленияОПредоставленииСведенийОТрудовойДеятельности);
	УправлениеСвойствамиБЗК.ЗарегистрироватьНаборСвойств(Наборы, "4e929634-8155-4b2a-a71b-ac3e643872fc", Метаданные.Документы.ОтзывЗаявленийОПредоставленииСведенийОТрудовойДеятельности);
	УправлениеСвойствамиБЗК.ЗарегистрироватьНаборСвойств(Наборы, "ec98596f-96dc-495d-aff2-800fd4d225be", Метаданные.Документы.РегистрацияТрудовойДеятельности);
	УправлениеСвойствамиБЗК.ЗарегистрироватьНаборСвойств(Наборы, "3ac677dd-eb15-47eb-bfd5-8a1d7522f5e4", Метаданные.Документы.СведенияОТрудовойДеятельностиРаботникаСТД_Р);
	
КонецПроцедуры

#КонецОбласти

#Область УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииСписковСОграничениемДоступа(Списки) Экспорт
	
	Списки.Вставить(Метаданные.Документы.ЗаявленияОПредоставленииСведенийОТрудовойДеятельности, Истина);
	Списки.Вставить(Метаданные.Справочники.ЗаявленияОПредоставленииСведенийОТрудовойДеятельностиПрисоединенныеФайлы, Истина);
	
	Списки.Вставить(Метаданные.Документы.ОтзывЗаявленийОПредоставленииСведенийОТрудовойДеятельности, Истина);
	Списки.Вставить(Метаданные.Справочники.ОтзывЗаявленийОПредоставленииСведенийОТрудовойДеятельностиПрисоединенныеФайлы, Истина);
	
	Списки.Вставить(Метаданные.Документы.РегистрацияТрудовойДеятельности, Истина);
	Списки.Вставить(Метаданные.Справочники.РегистрацияТрудовойДеятельностиПрисоединенныеФайлы, Истина);
	
	Списки.Вставить(Метаданные.Документы.СведенияОТрудовойДеятельностиРаботникаСТД_Р, Истина);
	Списки.Вставить(Метаданные.Справочники.СведенияОТрудовойДеятельностиРаботникаСТД_РПрисоединенныеФайлы, Истина);
	
	Списки.Вставить(Метаданные.РегистрыСведений.МероприятияТрудовойДеятельности, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.МероприятияТрудовойДеятельностиПрочие, Истина);
	
	Списки.Вставить(Метаданные.РегистрыСведений.ЗаявленияОВеденииТрудовыхКнижек, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.ЗаявленияОВеденииТрудовыхКнижекОтозванные, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.ЗаявленияОВеденииТрудовыхКнижекПереданные, Истина);
	
	Списки.Вставить(Метаданные.ЖурналыДокументов.ЭлектронныеТрудовыеКнижки, Истина);
	
КонецПроцедуры

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииВидовОграниченийПравОбъектовМетаданных.
Процедура ПриЗаполненииВидовОграниченийПравОбъектовМетаданных(Описание) Экспорт
	
	Описание = Описание + "
		|Справочник.ЗаявленияОПредоставленииСведенийОТрудовойДеятельностиПрисоединенныеФайлы.Чтение.ГруппыФизическихЛиц
		|Справочник.ЗаявленияОПредоставленииСведенийОТрудовойДеятельностиПрисоединенныеФайлы.Чтение.Организации
		|Справочник.ЗаявленияОПредоставленииСведенийОТрудовойДеятельностиПрисоединенныеФайлы.Изменение.ГруппыФизическихЛиц
		|Справочник.ЗаявленияОПредоставленииСведенийОТрудовойДеятельностиПрисоединенныеФайлы.Изменение.Организации
		
		|Документ.ЗаявленияОПредоставленииСведенийОТрудовойДеятельности.Чтение.ГруппыФизическихЛиц
		|Документ.ЗаявленияОПредоставленииСведенийОТрудовойДеятельности.Чтение.Организации
		|Документ.ЗаявленияОПредоставленииСведенийОТрудовойДеятельности.Изменение.ГруппыФизическихЛиц
		|Документ.ЗаявленияОПредоставленииСведенийОТрудовойДеятельности.Изменение.Организации
		
		|Справочник.ОтзывЗаявленийОПредоставленииСведенийОТрудовойДеятельностиПрисоединенныеФайлы.Чтение.ГруппыФизическихЛиц
		|Справочник.ОтзывЗаявленийОПредоставленииСведенийОТрудовойДеятельностиПрисоединенныеФайлы.Чтение.Организации
		|Справочник.ОтзывЗаявленийОПредоставленииСведенийОТрудовойДеятельностиПрисоединенныеФайлы.Изменение.ГруппыФизическихЛиц
		|Справочник.ОтзывЗаявленийОПредоставленииСведенийОТрудовойДеятельностиПрисоединенныеФайлы.Изменение.Организации
		
		|Документ.ОтзывЗаявленийОПредоставленииСведенийОТрудовойДеятельности.Чтение.ГруппыФизическихЛиц
		|Документ.ОтзывЗаявленийОПредоставленииСведенийОТрудовойДеятельности.Чтение.Организации
		|Документ.ОтзывЗаявленийОПредоставленииСведенийОТрудовойДеятельности.Изменение.ГруппыФизическихЛиц
		|Документ.ОтзывЗаявленийОПредоставленииСведенийОТрудовойДеятельности.Изменение.Организации
		
		|Справочник.РегистрацияТрудовойДеятельностиПрисоединенныеФайлы.Чтение.ГруппыФизическихЛиц
		|Справочник.РегистрацияТрудовойДеятельностиПрисоединенныеФайлы.Чтение.Организации
		|Справочник.РегистрацияТрудовойДеятельностиПрисоединенныеФайлы.Изменение.ГруппыФизическихЛиц
		|Справочник.РегистрацияТрудовойДеятельностиПрисоединенныеФайлы.Изменение.Организации
		
		|Документ.РегистрацияТрудовойДеятельности.Чтение.ГруппыФизическихЛиц
		|Документ.РегистрацияТрудовойДеятельности.Чтение.Организации
		|Документ.РегистрацияТрудовойДеятельности.Изменение.ГруппыФизическихЛиц
		|Документ.РегистрацияТрудовойДеятельности.Изменение.Организации
		
		|Справочник.СведенияОТрудовойДеятельностиРаботникаСТД_РПрисоединенныеФайлы.Чтение.ГруппыФизическихЛиц
		|Справочник.СведенияОТрудовойДеятельностиРаботникаСТД_РПрисоединенныеФайлы.Чтение.Организации
		|Справочник.СведенияОТрудовойДеятельностиРаботникаСТД_РПрисоединенныеФайлы.Изменение.ГруппыФизическихЛиц
		|Справочник.СведенияОТрудовойДеятельностиРаботникаСТД_РПрисоединенныеФайлы.Изменение.Организации
		
		|Документ.СведенияОТрудовойДеятельностиРаботникаСТД_Р.Чтение.ГруппыФизическихЛиц
		|Документ.СведенияОТрудовойДеятельностиРаботникаСТД_Р.Чтение.Организации
		|Документ.СведенияОТрудовойДеятельностиРаботникаСТД_Р.Изменение.ГруппыФизическихЛиц
		|Документ.СведенияОТрудовойДеятельностиРаботникаСТД_Р.Изменение.Организации
		
		|РегистрСведений.МероприятияТрудовойДеятельности.Чтение.ГруппыФизическихЛиц
		|РегистрСведений.МероприятияТрудовойДеятельности.Чтение.Организации
		
		|РегистрСведений.МероприятияТрудовойДеятельностиПрочие.Чтение.ГруппыФизическихЛиц
		|РегистрСведений.МероприятияТрудовойДеятельностиПрочие.Чтение.Организации
		|РегистрСведений.МероприятияТрудовойДеятельностиПрочие.Изменение.ГруппыФизическихЛиц
		|РегистрСведений.МероприятияТрудовойДеятельностиПрочие.Изменение.Организации
	
		|РегистрСведений.ЗаявленияОВеденииТрудовыхКнижек.Чтение.ГруппыФизическихЛиц
		|РегистрСведений.ЗаявленияОВеденииТрудовыхКнижек.Чтение.Организации
		
		|РегистрСведений.ЗаявленияОВеденииТрудовыхКнижекОтозванные.Чтение.ГруппыФизическихЛиц
		|РегистрСведений.ЗаявленияОВеденииТрудовыхКнижекОтозванные.Чтение.Организации
		
		|РегистрСведений.ЗаявленияОВеденииТрудовыхКнижекПереданные.Чтение.ГруппыФизическихЛиц
		|РегистрСведений.ЗаявленияОВеденииТрудовыхКнижекПереданные.Чтение.Организации";
	
КонецПроцедуры

#КонецОбласти

// Возвращает структуру с описание трудовой деятельности сотрудника в заданном периоде.
// Данные отбираются кратно месяцу т.е. с начала месяца начала периода и по конец месяца окончания периода.
//
// Параметры:
//		Сотрудник				- Массив, СправочникСсылка.Сотрудники
//		НачалоПериода			- Дата, если не задана то возвращает данные, начиная с даты приема
//		ОкончаниеПериода		- Дата, если не задана то возвращает все учтенные данные
//		ИсключаемыйРегистратор	- ДокументСсылка
//
// Возвращаемое значение;
//		Структура		- по строке таблицы значений см. ПустаяТаблицаДанныхТрудовойДеятельности
//		Неопределено	- Если данных о трудовой деятельности нет
//
Функция ДанныеТрудовойДеятельностиСотрудника(ТолькоРазрешенные, ФизическоеЛицо, Организация, НачалоПериода = Неопределено, ОкончаниеПериода = Неопределено, ИсключаемыйРегистратор = Неопределено) Экспорт
	
	ДанныеСотрудников = ДанныеТрудовойДеятельностиСотрудников(
		ТолькоРазрешенные, Организация, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ФизическоеЛицо), НачалоПериода, ОкончаниеПериода, , ИсключаемыйРегистратор);
	
	Если ДанныеСотрудников.Количество() > 0 Тогда
		Возврат ОбщегоНазначения.ТаблицаЗначенийВМассив(ДанныеСотрудников)[0];
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

// Возвращает массив структур с описание трудовой деятельности сотрудников в заданном периоде.
// Данные отбираются кратно месяцу т.е. с начала месяца начала периода и по конец месяца окончания периода.
//
// Параметры:
//		Сотрудники			- Массив, состоящий из СправочникСсылка.Сотрудники
//		НачалоПериода		- Дата, если не задана то возвращает данные, начиная с даты приема
//		ОкончаниеПериода	- Дата, если не задана то возвращает все учтенные данные
//
// Возвращаемое значение;
//		ТаблицаЗначений		- см.ПустаяТаблицаДанныхТрудовойДеятельности
//
Функция ДанныеТрудовойДеятельностиСотрудников(ТолькоРазрешенные, Организация, ФизическоеЛицо = Неопределено, НачалоПериода = Неопределено, ОкончаниеПериода = Неопределено, МероприятияВсехСотрудников = Ложь, ИсключаемыйРегистратор = Неопределено) Экспорт
	
	ПолучитьДанныеОТрудовойДеятельности = ПолучитьФункциональнуюОпцию("ИспользоватьНачислениеЗарплаты")
		ИЛИ СервисЭлектронныхТрудовыхКнижек.ИспользуетсяСервисЭлектронныхТрудовыхКнижек();
	
	Если НЕ ПолучитьДанныеОТрудовойДеятельности Тогда
		
		Если ТипЗнч(ФизическоеЛицо) = Тип("СправочникСсылка.ФизическиеЛица") Тогда
			ДобавляемыеФизическиеЛица = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ФизическоеЛицо);
		Иначе
			
			Если ФизическоеЛицо = Неопределено Тогда
				
				Запрос = Новый Запрос;
				Запрос.Текст =
					"ВЫБРАТЬ
					|	ФизическиеЛица.Ссылка КАК Ссылка
					|ИЗ
					|	Справочник.ФизическиеЛица КАК ФизическиеЛица
					|ГДЕ
					|	НЕ ФизическиеЛица.ЭтоГруппа";
				
				ДобавляемыеФизическиеЛица = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
				
			Иначе
				ДобавляемыеФизическиеЛица = ФизическоеЛицо;
			КонецЕсли;
			
		КонецЕсли;
		
		КадровыеДанные = КадровыйУчет.КадровыеДанныеФизическихЛиц(Истина, ДобавляемыеФизическиеЛица, "Фамилия, Имя, Отчество, СтраховойНомерПФР, ДатаРождения");
		
		ДанныеСотрудников = Новый Массив;
		Для Каждого КадровыеДанныеФизическогоЛица Из КадровыеДанные Цикл
			
			ТаблицаДанных = ПустаяТаблицаДанныхТрудовойДеятельности();
			
			ДанныеСотрудника = ТаблицаДанных.Добавить();
			ЗаполнитьЗначенияСвойств(ДанныеСотрудника, КадровыеДанныеФизическогоЛица);
			ДанныеСотрудников.Добавить(ДанныеСотрудника);
			
		КонецЦикла;
		
		Возврат ДанныеСотрудников;
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ДатаНачалаУчета", ДатаНачалаУчета());
	
	Если ФизическоеЛицо <> Неопределено Тогда
		Запрос.УстановитьПараметр("ФизическоеЛицо", ФизическоеЛицо);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(НачалоПериода)
		Или ЗначениеЗаполнено(ОкончаниеПериода) Тогда
		
		Запрос.УстановитьПараметр("НачалоПериода", ?(ЗначениеЗаполнено(НачалоПериода), НачалоМесяца(НачалоПериода), ДатаНачалаУчета()));
		Запрос.УстановитьПараметр("ОкончаниеПериода", ?(ЗначениеЗаполнено(ОкончаниеПериода), ОкончаниеПериода, '39991231'));
		Запрос.УстановитьПараметр("ГоловнаяОрганизация", ЗарплатаКадры.ГоловнаяОрганизация(Организация));
		
		Запрос.Текст =
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	&Организация КАК Организация,
			|	Сотрудники.Ссылка КАК Сотрудник,
			|	Сотрудники.ФизическоеЛицо КАК ФизическоеЛицо,
			|	&НачалоПериода КАК НачалоПериода,
			|	ВЫБОР
			|		КОГДА &ОкончаниеПериода < ТекущиеКадровыеДанныеСотрудников.ДатаПриема
			|			ТОГДА ТекущиеКадровыеДанныеСотрудников.ДатаПриема
			|		ИНАЧЕ &ОкончаниеПериода
			|	КОНЕЦ КАК ОкончаниеПериода
			|ПОМЕСТИТЬ ВТСотрудникиПериодыДанных
			|ИЗ
			|	Справочник.Сотрудники КАК Сотрудники
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТекущиеКадровыеДанныеСотрудников КАК ТекущиеКадровыеДанныеСотрудников
			|		ПО Сотрудники.Ссылка = ТекущиеКадровыеДанныеСотрудников.Сотрудник
			|ГДЕ
			|	Сотрудники.ФизическоеЛицо В(&ФизическоеЛицо)
			|	И Сотрудники.Ссылка = Сотрудники.ГоловнойСотрудник
			|	И Сотрудники.ГоловнаяОрганизация = &ГоловнаяОрганизация
			|	И (ТекущиеКадровыеДанныеСотрудников.ДатаУвольнения = ДАТАВРЕМЯ(1, 1, 1)
			|			ИЛИ ТекущиеКадровыеДанныеСотрудников.ДатаУвольнения >= &ДатаНачалаУчета)";
		
		ЗарплатаКадрыОбщиеНаборыДанных.УстановитьВыборкуТолькоРазрешенныхДанных(Запрос.Текст, ТолькоРазрешенные);
		
		Если ФизическоеЛицо = Неопределено Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "Сотрудники.ФизическоеЛицо В(&ФизическоеЛицо)", "(ИСТИНА)");
		КонецЕсли;
		
		Запрос.Выполнить();
		
	Иначе
		
		Отборы = Новый Массив;
		ЗарплатаКадрыОбщиеНаборыДанных.ДобавитьВКоллекциюОтбор(Отборы, "ГоловнаяОрганизация", "=", ЗарплатаКадры.ГоловнаяОрганизация(Организация));
		
		Если ФизическоеЛицо <> Неопределено Тогда
			ЗарплатаКадрыОбщиеНаборыДанных.ДобавитьВКоллекциюОтбор(Отборы, "ФизическоеЛицо", "В", ФизическоеЛицо);
		КонецЕсли;
		
		КадровыйУчет.СоздатьВТТекущиеКадровыеДанныеСотрудников(Запрос.МенеджерВременныхТаблиц, ТолькоРазрешенные, Отборы, "ДатаПриема,ДатаУвольнения");
		
		Запрос.Текст =
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	&Организация КАК Организация,
			|	ТекущиеКадровыеДанныеСотрудников.Сотрудник КАК Сотрудник,
			|	ТекущиеКадровыеДанныеСотрудников.ФизическоеЛицо КАК ФизическоеЛицо,
			|	ВЫБОР
			|		КОГДА ТекущиеКадровыеДанныеСотрудников.ДатаПриема < ДАТАВРЕМЯ(2020, 1, 1)
			|			ТОГДА ДАТАВРЕМЯ(2020, 1, 1)
			|		ИНАЧЕ НАЧАЛОПЕРИОДА(ТекущиеКадровыеДанныеСотрудников.ДатаПриема, МЕСЯЦ)
			|	КОНЕЦ КАК НачалоПериода,
			|	ВЫБОР
			|		КОГДА ТекущиеКадровыеДанныеСотрудников.ДатаУвольнения = ДАТАВРЕМЯ(1, 1, 1)
			|			ТОГДА ДАТАВРЕМЯ(3999, 12, 31)
			|		ИНАЧЕ КОНЕЦПЕРИОДА(ТекущиеКадровыеДанныеСотрудников.ДатаУвольнения, МЕСЯЦ)
			|	КОНЕЦ КАК ОкончаниеПериода
			|ПОМЕСТИТЬ ВТСотрудникиПериодыДанных
			|ИЗ
			|	ВТТекущиеКадровыеДанныеСотрудников КАК ТекущиеКадровыеДанныеСотрудников
			|ГДЕ
			|	ТекущиеКадровыеДанныеСотрудников.Сотрудник = ТекущиеКадровыеДанныеСотрудников.Сотрудник.ГоловнойСотрудник
			|	И (ТекущиеКадровыеДанныеСотрудников.ДатаУвольнения = ДАТАВРЕМЯ(1, 1, 1)
			|			ИЛИ ТекущиеКадровыеДанныеСотрудников.ДатаУвольнения >= &ДатаНачалаУчета)";
		
		ЗарплатаКадрыОбщиеНаборыДанных.УстановитьВыборкуТолькоРазрешенныхДанных(Запрос.Текст, ТолькоРазрешенные);
		
		Запрос.Выполнить();
		
	КонецЕсли;
	
	Возврат ДанныеТрудовойДеятельностиСотрудниковПоТаблицеОтборов(Запрос.МенеджерВременныхТаблиц, ТолькоРазрешенные, Организация, МероприятияВсехСотрудников, ИсключаемыйРегистратор);
	
КонецФункции

// Возвращает массив структур с описание трудовой деятельности сотрудников заданной организации
// в заданном периоде. Данные отбираются кратно месяцу т.е. с начала месяца начала периода и по
// конец месяца окончания периода.
//
// Параметры:
//		Организация			- СправочникСсылка.Организации
//		НачалоПериода		- Дата, если не задана то возвращает данные, начиная с даты приема
//		ОкончаниеПериода	- Дата, если не задана то возвращает все учтенные данные
//
// Возвращаемое значение;
//		ТаблицаЗначений		- см. ПустаяТаблицаДанныхТрудовойДеятельности
//
Функция ДанныеТрудовойДеятельностиСотрудниковОрганизации(ТолькоРазрешенные, Организация, НачалоПериода, ОкончаниеПериода, МероприятияВсехСотрудников = Ложь, ИсключаемыйРегистратор = Неопределено) Экспорт
	
	ПараметрыПолучения = КадровыйУчет.ПараметрыПолученияСотрудниковОрганизацийПоСпискуФизическихЛиц();
	ПараметрыПолучения.Организация = Организация;
	
	Возврат ДанныеТрудовойДеятельностиСотрудников(
		ТолькоРазрешенные, Организация, , НачалоПериода, ОкончаниеПериода, МероприятияВсехСотрудников, ИсключаемыйРегистратор);
	
КонецФункции

Функция ВывестиМакетыДокументов(ВыборкаДанныхДляПечати, ПутьКМакету, ОбъектыПечати) Экспорт
	
	ДокументРезультат = Новый ТабличныйДокумент;
	ДокументРезультат.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	ЧастиПутиКМакету = СтрРазделить(ПутьКМакету, ".");
	ДокументРезультат.КлючПараметровПечати = ЧастиПутиКМакету[ЧастиПутиКМакету.Количество() - 1];
	
	Макет = УправлениеПечатью.МакетПечатнойФормы(ПутьКМакету);
	
	Пока ВыборкаДанныхДляПечати.СледующийПоЗначениюПоля("Ссылка") Цикл
		
		НомерСтрокиНачало = ДокументРезультат.ВысотаТаблицы + 1;
		
		Пока ВыборкаДанныхДляПечати.СледующийПоЗначениюПоля("ФизическоеЛицо") Цикл
			
			Если ДокументРезультат.ВысотаТаблицы > 0 Тогда
				ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			
			Шапка = Макет.ПолучитьОбласть("Шапка");
			Шапка.Параметры.Заполнить(ВыборкаДанныхДляПечати);
			Шапка.Параметры.ДатаРождения = ЗарплатаКадрыОтчеты.ФорматДатыЧислоВКавычкахМесяцПрописью(Шапка.Параметры.ДатаРождения, Ложь);
			
			Если ЗначениеЗаполнено(Шапка.Параметры.ИНН)
				И СтрДлина(Шапка.Параметры.ИНН) = 10 Тогда
				
				Шапка.Параметры.ИНН = Шапка.Параметры.ИНН + "--";
				
			КонецЕсли;
			
			Подвал = Макет.ПолучитьОбласть("Подвал");
			Подвал.Параметры.Заполнить(ВыборкаДанныхДляПечати);
			
			ДополнительныеПараметры = Новый Структура("ДатаСведений",
				ЗарплатаКадрыОтчеты.ФорматДатыЧислоВКавычкахМесяцПрописью(ВыборкаДанныхДляПечати.Дата, Истина));
			
			Подвал.Параметры.Заполнить(ДополнительныеПараметры);
			
			ДокументРезультат.Вывести(Шапка);
			
			ОбластиСтрок = Новый Массив;
			НомерСтрокиФормы = 1;
			Пока ВыборкаДанныхДляПечати.Следующий() Цикл
				
				Если Не ЗначениеЗаполнено(ВыборкаДанныхДляПечати.ВидМероприятия) Тогда
					Продолжить;
				КонецЕсли;
				
				Строка = Макет.ПолучитьОбласть("Строка");
				
				Строка.Параметры.Заполнить(ВыборкаДанныхДляПечати);
				Строка.Параметры.НомерСтрокиФормы = НомерСтрокиФормы;
				
				Строка.Параметры.ТрудоваяФункция = ПредставлениеВыполняемойФункции(ВыборкаДанныхДляПечати);
				
				Строка.Параметры.ВидМероприятия = ПредставлениеВидаМероприятия(ВыборкаДанныхДляПечати);
				
				Строка.Параметры.НомерДокументаОснования = ПредставлениеНомераДокументаОснования(ВыборкаДанныхДляПечати);
				
				Если ЗначениеЗаполнено(Строка.Параметры.ОснованиеУвольнения) Тогда
					Строка.Параметры.ОснованиеУвольнения = ПредставлениеПричиныУвольнения(ВыборкаДанныхДляПечати);
				КонецЕсли;
				
				ОбластиСтрок.Добавить(Строка);
				НомерСтрокиФормы = НомерСтрокиФормы + 1;
				
			КонецЦикла;
			
			Для Каждого Строка Из ОбластиСтрок Цикл
				
				МассивОбластей = Новый Массив;
				МассивОбластей.Добавить(Строка);
				Если Строка = ОбластиСтрок[ОбластиСтрок.Количество() - 1] Тогда
					МассивОбластей.Добавить(Подвал);
				КонецЕсли;
				
				Если Не ДокументРезультат.ПроверитьВывод(МассивОбластей) Тогда
					ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
					ДокументРезультат.Вывести(Макет.ПолучитьОбласть("ШапкаТаблицы"));
				КонецЕсли;
				
				ДокументРезультат.Вывести(Строка);
				
			КонецЦикла;
			
			ДокументРезультат.Вывести(Подвал);
			
		КонецЦикла;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ДокументРезультат, НомерСтрокиНачало, ОбъектыПечати, ВыборкаДанныхДляПечати.Ссылка);
		
	КонецЦикла;
	
	Возврат ДокументРезультат;
	
КонецФункции

Процедура НаименованиеДокументаПриИзмененииНаСервере(Организация, ВидДокумента, НаименованиеДокумента) Экспорт
	
	НаименованияДокументов = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("ЭлектронныеТрудовыеКнижки", "НаименованияДокументов");
	Если НаименованияДокументов = Неопределено Тогда
		НаименованияДокументов = Новый Соответствие;
	КонецЕсли;
	
	НаименованияДокументовОрганизации = НаименованияДокументов.Получить(Организация);
	Если НаименованияДокументовОрганизации = Неопределено Тогда
		НаименованияДокументовОрганизации = Новый Структура;
	КонецЕсли;
	
	НаименованияДокументовОрганизации.Вставить(ВидДокумента, НаименованиеДокумента);
	НаименованияДокументов.Вставить(Организация, НаименованияДокументовОрганизации);
	
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить("ЭлектронныеТрудовыеКнижки", "НаименованияДокументов", НаименованияДокументов);
	
КонецПроцедуры

Функция НаименованиеДокументаПоВидуДокументаСобытия(Организация, ВидДокумента) Экспорт
	
	НаименованиеДокумента = "";
	
	Если ЗначениеЗаполнено(Организация) Тогда
		
		НаименованияДокументов = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("ЭлектронныеТрудовыеКнижки", "НаименованияДокументов");
		Если НаименованияДокументов <> Неопределено Тогда
			
			НаименованияДокументовОрганизации = НаименованияДокументов.Получить(Организация);
			Если НаименованияДокументовОрганизации <> Неопределено Тогда
				
				Если НаименованияДокументовОрганизации.Свойство(ВидДокумента) Тогда
					
					Если ЗначениеЗаполнено(НаименованияДокументовОрганизации[ВидДокумента]) Тогда
						НаименованиеДокумента = НаименованияДокументовОрганизации[ВидДокумента];
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(НаименованиеДокумента) Тогда
		НаименованиеДокумента = НаименованиеДокументаОснования();
	КонецЕсли;
	
	Возврат НаименованиеДокумента
	
КонецФункции

Процедура СформироватьДвиженияЗаявленийОВеденииТрудовыхКнижек(ЗаявленияОВеденииТрудовыхКнижек, ДанныеДляПроведения) Экспорт
	
	СформироватьДвижения(ЗаявленияОВеденииТрудовыхКнижек, ДанныеДляПроведения, Ложь);
	
КонецПроцедуры

Процедура СформироватьДвиженияЗаявленийОВеденииТрудовыхКнижекПереданных(ЗаявленияОВеденииТрудовыхКнижекПереданные, ДанныеДляПроведения) Экспорт
	
	СформироватьДвижения(ЗаявленияОВеденииТрудовыхКнижекПереданные, ДанныеДляПроведения, Ложь);
	
КонецПроцедуры

Процедура СформироватьДвиженияЗаявленийОВеденииТрудовыхКнижекОтозванные(ЗаявленияОВеденииТрудовыхКнижекОтозванные, ДанныеДляПроведения) Экспорт
	
	СформироватьДвижения(ЗаявленияОВеденииТрудовыхКнижекОтозванные, ДанныеДляПроведения, Ложь);
	
КонецПроцедуры

Процедура СформироватьДвиженияМероприятийТрудовойДеятельности(МероприятияТрудовойДеятельности, ДанныеДляПроведения, ДополнитьСведениямиОЗанятости = Ложь, Записать = Ложь) Экспорт
	
	Если ДанныеДляПроведения <> Неопределено И ДополнитьСведениямиОЗанятости Тогда
		
		ИменаДоступныхПолей = ЭлектронныеТрудовыеКнижкиКлиентСервер.ИменаДоступныхПолейВидовМероприятий();
		
		ТаблицаСотрудников = Новый ТаблицаЗначений;
		ТаблицаСотрудников.Колонки.Добавить("Сотрудник", Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
		ТаблицаСотрудников.Колонки.Добавить("Период", Новый ОписаниеТипов("Дата"));
		Для Каждого ДанныеСотрудника Из ДанныеДляПроведения Цикл
			СтрокаТаблицыСотрудников = ТаблицаСотрудников.Добавить();
			СтрокаТаблицыСотрудников.Период = ДанныеСотрудника.ДатаМероприятия;
			СтрокаТаблицыСотрудников.Сотрудник = ДанныеСотрудника.Сотрудник;
		КонецЦикла;
		
		КадровыеДанныеСотрудников = КадровыйУчет.КадровыеДанныеСотрудниковПоТаблицеЗначений(
			Ложь, ТаблицаСотрудников, "ВидЗанятости,Должность");
		
		Для Каждого ДанныеСотрудника Из ДанныеДляПроведения Цикл
			
			СтруктураПоиска = Новый Структура;
			СтруктураПоиска.Вставить("Сотрудник", ДанныеСотрудника.Сотрудник);
			СтруктураПоиска.Вставить("Период", ДанныеСотрудника.ДатаМероприятия);
			
			КадровыеДанныеСотрудника = КадровыеДанныеСотрудников.НайтиСтроки(СтруктураПоиска);
			Если КадровыеДанныеСотрудника.Количество() > 0 Тогда
				
				Если КадровыеДанныеСотрудника[0].ВидЗанятости <> Перечисления.ВидыЗанятости.ОсновноеМестоРаботы Тогда
					ДанныеСотрудника.ЯвляетсяСовместителем = Истина;
				КонецЕсли;
				
				ДоступныеПоля = ИменаДоступныхПолей.Получить(ДанныеСотрудника.ВидМероприятия);
				Если ДоступныеПоля <> Неопределено И СтрНайти(ДоступныеПоля, "Должность") > 0 Тогда
					
					Если Не ЗначениеЗаполнено(ДанныеСотрудника.Должность) Тогда
						ДанныеСотрудника.Должность = КадровыеДанныеСотрудника[0].Должность;
						СвойстваДолжности = ЭлектронныеТрудовыеКнижкиПовтИсп.СвойстваДолжности(ДанныеСотрудника.Должность);
						ДанныеСотрудника.ПредставлениеДолжности = СвойстваДолжности.Представление;
						ДанныеСотрудника.КодПоРееструДолжностей = СвойстваДолжности.КодПоРееструДолжностей;
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	СформироватьДвижения(МероприятияТрудовойДеятельности, ДанныеДляПроведения, Записать);
	
КонецПроцедуры

Процедура СформироватьДвиженияМероприятийТрудовойДеятельностиПереданных(МероприятияТрудовойДеятельностиПереданные, ДанныеДляПроведения, Записать = Ложь) Экспорт
	
	СформироватьДвижения(МероприятияТрудовойДеятельностиПереданные, ДанныеДляПроведения, Записать);
	
КонецПроцедуры

#Область ОбновлениеИнформационнойБазы

// Добавляет в список Обработчики процедуры-обработчики обновления,
// необходимые данной подсистеме.
//
// Параметры:
//   Обработчики - ТаблицаЗначений - см. описание функции НоваяТаблицаОбработчиковОбновления
//                                   общего модуля ОбновлениеИнформационнойБазы.
// 
Процедура ЗарегистрироватьОбработчикиОбновления(Обработчики) Экспорт
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.13.107";
	Обработчик.Процедура = "ЭлектронныеТрудовыеКнижки.ЗаполнитьСотрудниковЗаявленийОПредоставленииСведенийОТрудовойДеятельности";
	Обработчик.РежимВыполнения = ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ОсновнойРежимВыполненияОбновления();
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("d698366a-3da0-4f01-b101-3bb7976c09f6");
	Обработчик.Комментарий = НСтр("ru = 'Заполнение сотрудников заявлений о способе ведения трудовых книжек.'");
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.13.107";
	Обработчик.Процедура = "Документы.СведенияОТрудовойДеятельностиРаботниковСЗВ_ТД.ЗаполнитьЯвляетсяСовместителемВМероприятиях";
	Обработчик.РежимВыполнения = ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ОсновнойРежимВыполненияОбновления();
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("d7f331d3-da7e-4550-be93-41c93879ac9a");
	Обработчик.Комментарий = НСтр("ru = 'Заполнение признаков совместителя в таблице мероприятий.'");
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.13.114";
	Обработчик.Процедура = "Документы.СведенияОТрудовойДеятельностиРаботниковСЗВ_ТД.ЗаполнитьИдМероприятий";
	Обработчик.РежимВыполнения = ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ОсновнойРежимВыполненияОбновления();
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("dfc7e172-e0f0-4afe-b658-e371ea43d6c1");
	Обработчик.Комментарий = НСтр("ru = 'Заполнение идентификаторов мероприятий трудовой деятельности.'");
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.13.115";
	Обработчик.Процедура = "РегистрыСведений.МероприятияТрудовойДеятельности.СформироватьНаборыЗаписейМероприятияТрудовойДеятельности";
	Обработчик.РежимВыполнения = ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ОсновнойРежимВыполненияОбновления();
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("45142c16-05e8-4a57-8bcb-689b9486800a");
	Обработчик.Комментарий = НСтр("ru = 'Заполнение движений в регистре сведений ""Мероприятия трудовой деятельности"".'");
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.13.116";
	Обработчик.Процедура = "Документы.СведенияОТрудовойДеятельностиРаботникаСТД_Р.ЗаполнитьИдМероприятий";
	Обработчик.РежимВыполнения = ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ОсновнойРежимВыполненияОбновления();
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("a6f2293c-ac91-4936-a02b-98fd98e325de");
	Обработчик.Комментарий = НСтр("ru = 'Заполнение идентификаторов мероприятий трудовой деятельности.'");
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.13.143";
	Обработчик.Процедура = "ЭлектронныеТрудовыеКнижки.ЗаполнитьПредставленияОбъектовМероприятияТрудовойДеятельности";
	Обработчик.РежимВыполнения = ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ОсновнойРежимВыполненияОбновления();
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("c7a103b8-8f50-4969-8a79-5ac349d7d744");
	Обработчик.Комментарий = НСтр("ru = 'Заполнение представлений мероприятий трудовой деятельности.'");
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.13.143";
	Обработчик.Процедура = "Документы.СведенияОТрудовойДеятельностиРаботниковСЗВ_ТД.ЗаполнитьСотрудниковМероприятий";
	Обработчик.РежимВыполнения = ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ОсновнойРежимВыполненияОбновления();
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("5fe97e2a-87cb-4823-9851-d4a32bfc8c25");
	Обработчик.Комментарий = НСтр("ru = 'Заполнение сотрудников мероприятий сведений о трудовой деятельности.'");
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.13.179";
	Обработчик.Процедура = "Документы.СведенияОТрудовойДеятельностиРаботниковСЗВ_ТД.ЗаполнитьВДвиженияхПризнакПринятоВПФР";
	Обработчик.РежимВыполнения = ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ОсновнойРежимВыполненияОбновления();
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("4f3b2aa5-e393-4281-ba78-958ad711ed1d");
	Обработчик.Комментарий = НСтр("ru = 'Формирует движения мероприятий трудовой деятельности с признаком переданности в ПФР.'");
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.13.180";
	Обработчик.Процедура = "Документы.РегистрацияТрудовойДеятельности.ОтменитьЗадвоенныеМероприятияКадровыхПриказов";
	Обработчик.РежимВыполнения = ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ОсновнойРежимВыполненияОбновления();
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("2516d9d9-9b9a-4788-857e-4c6e99203b29");
	Обработчик.Комментарий = НСтр("ru = 'Отменяет задвоенные мероприятия трудовой деятельности кадровых приказов.'");
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.13.182";
	Обработчик.Процедура = "Документы.СведенияОТрудовойДеятельностиРаботниковСЗВ_ТД.УдалениеСтрокБезСотрудников";
	Обработчик.РежимВыполнения = ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ОсновнойРежимВыполненияОбновления();
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("989a1bd2-6f95-43b4-a53f-ad64b9a909e7");
	Обработчик.Комментарий = НСтр("ru = 'Удаление строк мероприятия трудовой деятельности без сотрудников.'");
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.13.184";
	Обработчик.Процедура = "РегистрыСведений.МероприятияТрудовойДеятельности.ВосстановлениеПереданныхИдентификаторов";
	Обработчик.РежимВыполнения = ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ОсновнойРежимВыполненияОбновления();
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("50a67062-8e02-42f9-af19-7fb0e7c46886");
	Обработчик.Комментарий = НСтр("ru = 'Восстановление идентификаторов мероприятия трудовой деятельности кадровых приказов.'");
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.13.216";
	Обработчик.Процедура = "Документы.СведенияОТрудовойДеятельностиРаботниковСЗВ_ТД.ЗаполнениеПризнакаПринятоВПФРВСтрокахСотрудников";
	Обработчик.РежимВыполнения = ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ОсновнойРежимВыполненияОбновления();
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("6f8f40fc-dc0d-4c9d-bd1d-cdbf445ec01a");
	Обработчик.Комментарий = НСтр("ru = 'Заполнение признака ""Принято в ПФР"" в строках сотрудников.'");
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.14.79";
	Обработчик.Процедура = "Документы.СведенияОТрудовойДеятельностиРаботниковСЗВ_ТД.ОбновитьДвиженияПереданныхМероприятийНеПринятыхВПФР";
	Обработчик.РежимВыполнения = ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ОсновнойРежимВыполненияОбновления();
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("6b9f6b82-3a2c-44ec-9ad0-7cdc35dfa64a");
	Обработчик.Комментарий = НСтр("ru = 'Обновляет движения документов, принятых в ПФР.'");
	
КонецПроцедуры

Процедура ЗаполнитьСотрудниковЗаявленийОПредоставленииСведенийОТрудовойДеятельности(ПараметрыОбновления = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 1000
		|	ЗаявленияОПредоставленииСведенийОТрудовойДеятельностиСотрудники.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.ЗаявленияОПредоставленииСведенийОТрудовойДеятельности.Сотрудники КАК ЗаявленияОПредоставленииСведенийОТрудовойДеятельностиСотрудники
		|ГДЕ
		|	ЗаявленияОПредоставленииСведенийОТрудовойДеятельностиСотрудники.УдалитьСотрудник <> ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)
		|	И ЗаявленияОПредоставленииСведенийОТрудовойДеятельностиСотрудники.Сотрудник = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)";
	
	Если ПараметрыОбновления = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ПЕРВЫЕ 1000","");
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество() = 0 Тогда
		СформироватьДвиженияЗаявленийОСпособеВеденияТрудовыхКнижек(ПараметрыОбновления);
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Ложь);
	
	Пока Выборка.Следующий() Цикл
		
		Если Не ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ПодготовитьОбновлениеДанных(ПараметрыОбновления, "Документ.ЗаявленияОПредоставленииСведенийОТрудовойДеятельности", "Ссылка", Выборка.Ссылка) Тогда
			Продолжить;
		КонецЕсли;
		
		ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
		Сотрудники = ОбщегоНазначения.ВыгрузитьКолонку(ДокументОбъект.Сотрудники, "УдалитьСотрудник");
		ФизическиеЛица = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(Сотрудники, "ФизическоеЛицо");
		
		Для Каждого СтрокаСотрудника Из ДокументОбъект.Сотрудники Цикл 
			СтрокаСотрудника.Сотрудник = ФизическиеЛица[СтрокаСотрудника.УдалитьСотрудник];
		КонецЦикла;
		
		ДокументОбъект.ДополнительныеСвойства.Вставить("ОтключитьПроверкуДатыЗапретаИзменения", Истина);
		
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДокументОбъект);
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ЗавершитьОбновлениеДанных(ПараметрыОбновления);
		
	КонецЦикла;
	
	Если ПараметрыОбновления = Неопределено Тогда
		СформироватьДвиженияЗаявленийОСпособеВеденияТрудовыхКнижек(ПараметрыОбновления);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьПредставленияОбъектовМероприятияТрудовойДеятельности(ПараметрыОбновления = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	
	Если ПараметрыОбновления = Неопределено Тогда
		МассивОбновленных = Новый Массив;
	Иначе
		
		Если ПараметрыОбновления.Свойство("МассивОбновленных") Тогда
			МассивОбновленных = ПараметрыОбновления.МассивОбновленных;
		Иначе
			МассивОбновленных = Новый Массив;
			ПараметрыОбновления.Вставить("МассивОбновленных", МассивОбновленных);
		КонецЕсли;
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("МассивОбновленных", МассивОбновленных);
	
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 1000
		|	МероприятияТрудовойДеятельности.Регистратор КАК Регистратор
		|ИЗ
		|	РегистрСведений.МероприятияТрудовойДеятельности КАК МероприятияТрудовойДеятельности
		|ГДЕ
		|	НЕ МероприятияТрудовойДеятельности.Регистратор В (&МассивОбновленных)
		|	И (МероприятияТрудовойДеятельности.Должность <> ЗНАЧЕНИЕ(Справочник.Должности.ПустаяСсылка)
		|				И МероприятияТрудовойДеятельности.ПредставлениеДолжности = """"
		|			ИЛИ МероприятияТрудовойДеятельности.Подразделение <> ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
		|				И МероприятияТрудовойДеятельности.ПредставлениеПодразделения = """"
		|			ИЛИ НЕ МероприятияТрудовойДеятельности.ОснованиеУвольнения В (НЕОПРЕДЕЛЕНО, ЗНАЧЕНИЕ(Справочник.ОснованияУвольнения.ПустаяСсылка))
		|				И МероприятияТрудовойДеятельности.ОснованиеУвольненияСтатья = """")";
	
	Если ПараметрыОбновления = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ПЕРВЫЕ 1000","");
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество() = 0 Тогда
		ЗаполнитьПредставленияОбъектовМероприятияТрудовойДеятельностиПрочие(ПараметрыОбновления);
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Ложь);
	
	Пока Выборка.Следующий() Цикл
		
		МассивОбновленных.Добавить(Выборка.Регистратор);
		
		Если Не ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ПодготовитьОбновлениеДанных(
			ПараметрыОбновления, "РегистрСведений.МероприятияТрудовойДеятельности.НаборЗаписей", "Регистратор", Выборка.Регистратор) Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		НаборЗаписей = РегистрыСведений.МероприятияТрудовойДеятельности.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(Выборка.Регистратор);
		НаборЗаписей.Прочитать();
		
		ЗаполнитьПредставленияКоллекцииМероприятий(НаборЗаписей);
		
		ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей);
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ЗавершитьОбновлениеДанных(ПараметрыОбновления);
		
	КонецЦикла;
	
	Если ПараметрыОбновления = Неопределено Тогда
		ЗаполнитьПредставленияОбъектовМероприятияТрудовойДеятельностиПрочие(ПараметрыОбновления);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

Функция ЗаявленияСотрудниковОВеденииТрудовыхКнижек(ТолькоРазрешенные, Организация, ДатаСведений, ФизическиеЛица = Неопределено, ИсключаемыйРегистратор = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("ДатаСведений", НачалоДня(ДатаСведений));
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	&ДатаСведений КАК Период,
		|	&Организация КАК Организация,
		|	ФизическиеЛица.Ссылка КАК ФизическоеЛицо
		|ПОМЕСТИТЬ ВТСотрудникиПериоды
		|ИЗ
		|	Справочник.ФизическиеЛица КАК ФизическиеЛица
		|ГДЕ
		|	&УсловияОтборов";
	
	УсловияОтборов = Новый Массив;
	Если ФизическиеЛица <> Неопределено Тогда
		Запрос.УстановитьПараметр("ФизическиеЛица", ФизическиеЛица);
		УсловияОтборов.Добавить("ФизическиеЛица.Ссылка В (&ФизическиеЛица)");
	КонецЕсли;
	
	Если УсловияОтборов.Количество() = 0 Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловияОтборов", "(ИСТИНА)");
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловияОтборов", СтрСоединить(УсловияОтборов, Символы.ПС + "И "));
	КонецЕсли;
	
	ЗарплатаКадрыОбщиеНаборыДанных.УстановитьВыборкуТолькоРазрешенныхДанных(Запрос.Текст, ТолькоРазрешенные);
	Запрос.Выполнить();
	
	ПараметрыПостроения = ПараметрыПостроенияВТЗаявленияСотрудников();
	Результат = СоздатьВТЗаявленияСотрудников(Запрос.МенеджерВременныхТаблиц, ТолькоРазрешенные, ПараметрыПостроения, "", ИсключаемыйРегистратор);
	
	Возврат Результат.Выгрузить();
	
КонецФункции

#Область КадровыеДанныеСотрудников

Функция ДобавитьПолеСведенийЗаявленийОВеденииТрудовойКнижки(ИмяПоля, ТекстыОписанияПолей, ИсточникиДанных) Экспорт
	
	ДобавленоПолеСведений = Ложь;
	Если НеобходимыСведенияЗаявленийОВеденииТрудовойКнижки(ИмяПоля) Тогда
		
		ДобавленоПолеСведений = Истина;
		ИсточникиДанных.Вставить("СведенияЗаявленийОВеденииТрудовойКнижки", Истина);
		
		Если ПолучитьФункциональнуюОпцию("ИспользоватьКадровыйУчет") Тогда
			КадровыйУчет.ДобавитьВКоллекциюИмяКадровыхДанных(ИсточникиДанных, "КадроваяИсторияСотрудников", "Организация");
		Иначе
			КадровыйУчет.ДобавитьВКоллекциюИмяКадровыхДанных(ИсточникиДанных, "ПостоянныеКадровыеДанныеСотрудников", "Организация");
		КонецЕсли;
		
		ПутьКДанным = ПутьКДаннымСведенийЗаявленийОВеденииТрудовойКнижки(ИмяПоля);
		ТекстыОписанияПолей.Добавить(ПутьКДанным + " КАК " + ИмяПоля);
		
	КонецЕсли;
	
	Возврат ДобавленоПолеСведений;
	
КонецФункции

Процедура ДобавитьТекстЗапросаВТСведенийЗаявленийОВеденииТрудовойКнижки(Запрос, ТолькоРазрешенные, ОписательВременнойТаблицыОтборов, ПоляОтбораПериодическихДанных, ИсточникиДанных) Экспорт
	
	Если ИсточникиДанных.Получить("СведенияЗаявленийОВеденииТрудовойКнижки") = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЧастиЗапроса = Новый Массив;
	
	ПараметрыПостроения = ПараметрыПостроенияВТЗаявленияСотрудников();
	Если ПолучитьФункциональнуюОпцию("ИспользоватьКадровыйУчет") Тогда
		
		ПараметрыПостроения.ИмяВТСотрудникиПериоды = ИсточникиДанных.Получить("ИмяВТСведенияКадровойИсторииСотрудников");
		
	Иначе
		
		ТекстЗапроса =
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
			|	ТаблицаОтбора.Период КАК Период,
			|	ТаблицаОтбора.Сотрудник КАК Сотрудник,
			|	ТекущиеКадровыеДанныеСотрудников.ФизическоеЛицо КАК ФизическоеЛицо,
			|	ТекущиеКадровыеДанныеСотрудников.ТекущаяОрганизация КАК Организация
			|ПОМЕСТИТЬ ВТОтборовСведенияЗаявленийОВеденииТрудовойКнижки
			|ИЗ
			|	ВТТаблицаОтбора КАК ТаблицаОтбора
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ТекущиеКадровыеДанныеСотрудников КАК ТекущиеКадровыеДанныеСотрудников
			|		ПО ТаблицаОтбора.Сотрудник = ТекущиеКадровыеДанныеСотрудников.Сотрудник";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ТаблицаОтбора.Период", "ТаблицаОтбора." + ОписательВременнойТаблицыОтборов.ИмяПоляПериод);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ТаблицаОтбора.Сотрудник", "ТаблицаОтбора." + ОписательВременнойТаблицыОтборов.ИмяПоляСотрудник);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВТТаблицаОтбора", ОписательВременнойТаблицыОтборов.ИмяВременнойТаблицыОтборовСотрудников);
		
		ЧастиЗапроса.Добавить(ТекстЗапроса);
		
		КадровыйУчет.ДобавитьВКоллекциюИмяКадровыхДанных(ИсточникиДанных, "ВТКУничтожению", "ВТОтборовСведенияЗаявленийОВеденииТрудовойКнижки");
		
		ПараметрыПостроения.ИмяВТСотрудникиПериоды = "ВТОтборовСведенияЗаявленийОВеденииТрудовойКнижки";
		
	КонецЕсли;
	
	ЗапросВТ = ЗапросВТЗаявленияСотрудников(ТолькоРазрешенные, ПараметрыПостроения, , , ПоляОтбораПериодическихДанных);
	ЧастиЗапроса.Добавить(ЗапросВТ.Текст);
	ЗарплатаКадрыОбщиеНаборыДанных.СкопироватьПараметрыЗапроса(Запрос, ЗапросВТ);
	
	ТекстЗапросаСведений = СтрСоединить(ЧастиЗапроса, ЗарплатаКадрыОбщиеНаборыДанных.РазделительЗапросов());
	
	ТаблицыЗапроса = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(Запрос.Текст, ";", , Истина);
	ТаблицыЗапроса.Вставить(ТаблицыЗапроса.Количество() - 1, ТекстЗапросаСведений);
	Запрос.Текст = СтрСоединить(ТаблицыЗапроса, ЗарплатаКадрыОбщиеНаборыДанных.РазделительЗапросов());
	
	ЧастиЗапроса = Новый Массив;
	ЧастиЗапроса.Добавить(Запрос.Текст);
	Если ПолучитьФункциональнуюОпцию("ИспользоватьКадровыйУчет") Тогда
		
		ЧастиЗапроса.Добавить(
			"		{ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаявленияСотрудников КАК СведенияЗаявленийОВеденииТрудовойКнижки
				|		ПО КадроваяИсторияСотрудников.Период = СведенияЗаявленийОВеденииТрудовойКнижки.Период
				|			И КадроваяИсторияСотрудников.Организация = СведенияЗаявленийОВеденииТрудовойКнижки.Организация
				|			И КадроваяИсторияСотрудников.ФизическоеЛицо = СведенияЗаявленийОВеденииТрудовойКнижки.ФизическоеЛицо
				|			И (СведенияЗаявленийОВеденииТрудовойКнижки.ТекущееЗаявление)}");
		
	Иначе
		
		ЧастиЗапроса.Добавить(
			"		{ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаявленияСотрудников КАК СведенияЗаявленийОВеденииТрудовойКнижки
				|		ПО ТаблицаОтборов." + ОписательВременнойТаблицыОтборов.ИмяПоляПериод + " = СведенияЗаявленийОВеденииТрудовойКнижки.Период
				|			И ТекущиеКадровыеДанныеСотрудников.ТекущаяОрганизация = СведенияЗаявленийОВеденииТрудовойКнижки.Организация
				|			И ТекущиеКадровыеДанныеСотрудников.ФизическоеЛицо = СведенияЗаявленийОВеденииТрудовойКнижки.ФизическоеЛицо
				|			И (СведенияЗаявленийОВеденииТрудовойКнижки.ТекущееЗаявление)}");
		
	КонецЕсли;
	
	Запрос.Текст = СтрСоединить(ЧастиЗапроса, Символы.ПС);
	
	КадровыйУчет.ДобавитьВКоллекциюИмяКадровыхДанных(ИсточникиДанных, "ВТКУничтожению", "ВТЗаявленияСотрудников");
	
КонецПроцедуры

Функция ДобавитьПолеСведенийОМероприятияхТрудовойДеятельности(ИмяПоля, ТекстыОписанияПолей, ИсточникиДанных) Экспорт
	
	ДобавленоПолеСведений = Ложь;
	Если НеобходимыСведенияОМероприятияхТрудовойДеятельности(ИмяПоля) Тогда
		
		ДобавленоПолеСведений = Истина;
		ИсточникиДанных.Вставить("СведенияОМероприятияхТрудовойДеятельности", Истина);
		
		ПутьКДанным = ПутьКДаннымСведенийОМероприятияхТрудовойДеятельности(ИмяПоля);
		ТекстыОписанияПолей.Добавить(ПутьКДанным + " КАК " + ИмяПоля);
		
	КонецЕсли;
	
	Возврат ДобавленоПолеСведений;
	
КонецФункции

Процедура ДобавитьТекстЗапросаВТСведенийОМероприятияхТрудовойДеятельности(Запрос, ТолькоРазрешенные, ОписательВременнойТаблицыОтборов, ПоляОтбораПериодическихДанных, ИсточникиДанных) Экспорт
	
	Если ИсточникиДанных.Получить("СведенияОМероприятияхТрудовойДеятельности") = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЧастиЗапроса = Новый Массив;
	
	ТекстЗапроса =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ТаблицаОтбора.Период КАК Период,
		|	ТаблицаОтбора.Сотрудник КАК Сотрудник,
		|	ИСТИНА КАК Передавались
		|ПОМЕСТИТЬ ВТСведенияОМероприятияхТрудовойДеятельностиПредварительно
		|ИЗ
		|	ВТТаблицаОтбора КАК ТаблицаОтбора
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.МероприятияТрудовойДеятельности КАК МероприятияТрудовойДеятельности
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.МероприятияТрудовойДеятельностиПереданные КАК МероприятияТрудовойДеятельностиПереданные
		|			ПО МероприятияТрудовойДеятельности.ИдМероприятия = МероприятияТрудовойДеятельностиПереданные.ИдМероприятия
		|		ПО ТаблицаОтбора.Сотрудник = МероприятияТрудовойДеятельности.Сотрудник
		|ГДЕ
		|	&УсловияОтбора
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СведенияОМероприятияхТрудовойДеятельностиПредварительно.Период КАК Период,
		|	СведенияОМероприятияхТрудовойДеятельностиПредварительно.Сотрудник КАК Сотрудник,
		|	СведенияОМероприятияхТрудовойДеятельностиПредварительно.Передавались КАК Передавались
		|ПОМЕСТИТЬ ВТСведенияОМероприятияхТрудовойДеятельности
		|ИЗ
		|	ВТСведенияОМероприятияхТрудовойДеятельностиПредварительно КАК СведенияОМероприятияхТрудовойДеятельностиПредварительно";
	
	Если ТипЗнч(ПоляОтбораПериодическихДанных) = Тип("Структура")
		И ПоляОтбораПериодическихДанных.Свойство("МероприятияТрудовойДеятельностиПереданные") Тогда
		
		УсловияОтбора = Новый Массив;
		
		СчетчикПараметров = 0;
		Для Каждого ОписаниеУсловия Из ПоляОтбораПериодическихДанных.МероприятияТрудовойДеятельностиПереданные Цикл
			
			ПараметрУсловия = "ПараметрМероприятияТрудовойДеятельностиПереданные" + СчетчикПараметров;
			Запрос.УстановитьПараметр(ПараметрУсловия, ОписаниеУсловия.ПравоеЗначение);
			ТекстУсловия = "МероприятияТрудовойДеятельностиПереданные." + ОписаниеУсловия.ЛевоеЗначение + " " + ОписаниеУсловия.ВидСравнения + " (&" + ПараметрУсловия + ")";
			
			УсловияОтбора.Добавить(ТекстУсловия);
			
			СчетчикПараметров = СчетчикПараметров + 1;
			
		КонецЦикла;
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловияОтбора", СтрСоединить(УсловияОтбора, Символы.ПС + " И "));
		
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловияОтбора", "ИСТИНА");
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ТаблицаОтбора.Период", "ТаблицаОтбора." + ОписательВременнойТаблицыОтборов.ИмяПоляПериод);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ТаблицаОтбора.Сотрудник", "ТаблицаОтбора." + ОписательВременнойТаблицыОтборов.ИмяПоляСотрудник);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВТТаблицаОтбора", ОписательВременнойТаблицыОтборов.ИмяВременнойТаблицыОтборовСотрудников);
	
	ЧастиЗапроса.Добавить(ТекстЗапроса);
	ЧастиЗапроса.Добавить(ЗарплатаКадрыОбщиеНаборыДанных.РазделительЗапросов());
	ЧастиЗапроса.Добавить(Запрос.Текст);
	
	ЧастиЗапроса.Добавить(
		"		{ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОМероприятияхТрудовойДеятельности КАК СведенияОМероприятияхТрудовойДеятельности
			|		ПО ТаблицаОтборов." + ОписательВременнойТаблицыОтборов.ИмяПоляПериод + " = СведенияОМероприятияхТрудовойДеятельности.Период
			|			И ТаблицаОтборов." + ОписательВременнойТаблицыОтборов.ИмяПоляСотрудник + " = СведенияОМероприятияхТрудовойДеятельности.Сотрудник}");
	
	Запрос.Текст = СтрСоединить(ЧастиЗапроса, Символы.ПС);
	
	КадровыйУчет.ДобавитьВКоллекциюИмяКадровыхДанных(ИсточникиДанных, "ВТКУничтожению", "ВТСведенияОМероприятияхТрудовойДеятельностиПредварительно");
	КадровыйУчет.ДобавитьВКоллекциюИмяКадровыхДанных(ИсточникиДанных, "ВТКУничтожению", "ВТСведенияОМероприятияхТрудовойДеятельности");
	
КонецПроцедуры

Процедура ЗаполнитьПоляПредставленийКадровыхДанныхСотрудников(ДополнительныеПоляПредставлений, ПутьКПолямСотрудника, ПутьКПолямЛичныхДанных) Экспорт
	
	ОписаниеПоля = ДополнительныеПоляПредставлений.Добавить();
	ОписаниеПоля.ИмяПоля = "ЗаявленияОПредоставленииСведенийОТрудовойДеятельности";
	ОписаниеПоля.ПустоеЗначениеНаЯзыкеЗапросов = "ЗНАЧЕНИЕ(Документ.ЗаявленияОПредоставленииСведенийОТрудовойДеятельности.ПустаяСсылка)";
	ОписаниеПоля.ПутьПоляСКД = ПутьКПолямСотрудника + ".ЗаявлениеОВеденииТрудовойКнижки.Заявление";
	
	ОписаниеПоля = ДополнительныеПоляПредставлений.Добавить();
	ОписаниеПоля.ИмяПоля = "ЗаявленияОПредоставленииСведенийОТрудовойДеятельностиВид";
	ОписаниеПоля.ПустоеЗначениеНаЯзыкеЗапросов = "ЗНАЧЕНИЕ(Перечисление.ВидыЗаявленийОПредоставленииСведенийОТрудовойДеятельности.ПустаяСсылка)";
	ОписаниеПоля.ПутьПоляСКД = ПутьКПолямСотрудника + ".ЗаявлениеОВеденииТрудовойКнижки.Вид";
	
	ОписаниеПоля = ДополнительныеПоляПредставлений.Добавить();
	ОписаниеПоля.ИмяПоля = "ЗаявленияОПредоставленииСведенийОТрудовойДеятельностиПередано";
	ОписаниеПоля.ПустоеЗначениеНаЯзыкеЗапросов = "Истина";
	ОписаниеПоля.ПутьПоляСКД = ПутьКПолямСотрудника + ".ЗаявлениеОВеденииТрудовойКнижки.Передано";
	
	ОписаниеПоля = ДополнительныеПоляПредставлений.Добавить();
	ОписаниеПоля.ИмяПоля = "ЗаявленияОПредоставленииСведенийОТрудовойДеятельностиОтозвано";
	ОписаниеПоля.ПустоеЗначениеНаЯзыкеЗапросов = "Истина";
	ОписаниеПоля.ПутьПоляСКД = ПутьКПолямСотрудника + ".ЗаявлениеОВеденииТрудовойКнижки.Отозвано";
	
КонецПроцедуры

#КонецОбласти

Функция СотрудникиНеВыбравшиеСпособВеденияТрудовойКнижки(Организация, ДатаСведений) Экспорт
	
	СотрудникиБезЗаявления = Новый Массив;
	
	ПараметрыПолучения = КадровыйУчет.ПараметрыПолученияСотрудниковОрганизацийПоСпискуФизическихЛиц();
	ПараметрыПолучения.Организация = Организация;
	ПараметрыПолучения.НачалоПериода = НачалоДня(ДатаСведений);
	ПараметрыПолучения.ОкончаниеПериода = КонецДня(ПараметрыПолучения.НачалоПериода);
	ПараметрыПолучения.КадровыеДанные = "ЗаявленияОПредоставленииСведенийОТрудовойДеятельности";
	
	ВидыЗанятости = Новый Массив;
	ВидыЗанятости.Добавить(Перечисления.ВидыЗанятости.ОсновноеМестоРаботы);
	ВидыЗанятости.Добавить(Перечисления.ВидыЗанятости.Совместительство);
	
	ЗарплатаКадрыОбщиеНаборыДанных.ДобавитьВКоллекциюОтбор(
		ПараметрыПолучения.Отборы, "ВидЗанятости", "В", ВидыЗанятости);
	
	УстановитьОтборПараметровПолученияСотрудниковОрганизации(ПараметрыПолучения);
	
	СотрудникиОрганизации = КадровыйУчет.СотрудникиОрганизации(Истина, ПараметрыПолучения);
	СотрудникиОрганизации.Сортировать("ФизическоеЛицо");
	
	Для Каждого ДанныеСотрудника Из СотрудникиОрганизации Цикл
		Если Не ЗначениеЗаполнено(ДанныеСотрудника.ЗаявленияОПредоставленииСведенийОТрудовойДеятельности) Тогда
			СотрудникиБезЗаявления.Добавить(ДанныеСотрудника.ФизическоеЛицо);
		КонецЕсли;
	КонецЦикла;
	
	Возврат ОбщегоНазначенияКлиентСервер.СвернутьМассив(СотрудникиБезЗаявления);
	
КонецФункции

Функция МероприятияПоСпискуИдентификаторов(ИдМероприятий) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ИдМероприятий", ИдМероприятий);
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	МероприятияТрудовойДеятельности.Сотрудник КАК СотрудникЗаписи,
		|	МероприятияТрудовойДеятельности.ФизическоеЛицо КАК ФизическоеЛицо,
		|	МероприятияТрудовойДеятельности.Организация КАК Организация,
		|	МероприятияТрудовойДеятельности.ИдМероприятия КАК ИдМероприятия,
		|	МероприятияТрудовойДеятельности.Отменено КАК Отменено,
		|	МероприятияТрудовойДеятельности.Сотрудник КАК Сотрудник,
		|	МероприятияТрудовойДеятельности.ДатаМероприятия КАК ДатаМероприятия,
		|	МероприятияТрудовойДеятельности.ВидМероприятия КАК ВидМероприятия,
		|	МероприятияТрудовойДеятельности.Подразделение КАК Подразделение,
		|	МероприятияТрудовойДеятельности.Должность КАК Должность,
		|	МероприятияТрудовойДеятельности.РазрядКатегория КАК РазрядКатегория,
		|	МероприятияТрудовойДеятельности.КодПоРееструДолжностей КАК КодПоРееструДолжностей,
		|	МероприятияТрудовойДеятельности.ТрудоваяФункция КАК ТрудоваяФункция,
		|	МероприятияТрудовойДеятельности.НаименованиеДокументаОснования КАК НаименованиеДокументаОснования,
		|	МероприятияТрудовойДеятельности.ДатаДокументаОснования КАК ДатаДокументаОснования,
		|	МероприятияТрудовойДеятельности.СерияДокументаОснования КАК СерияДокументаОснования,
		|	МероприятияТрудовойДеятельности.НомерДокументаОснования КАК НомерДокументаОснования,
		|	МероприятияТрудовойДеятельности.ОснованиеУвольнения КАК ОснованиеУвольнения,
		|	МероприятияТрудовойДеятельности.ДатаС КАК ДатаС,
		|	МероприятияТрудовойДеятельности.ДатаПо КАК ДатаПо,
		|	МероприятияТрудовойДеятельности.ДатаОтмены КАК ДатаОтмены,
		|	МероприятияТрудовойДеятельности.ЯвляетсяСовместителем КАК ЯвляетсяСовместителем,
		|	ЕСТЬNULL(МероприятияТрудовойДеятельностиПереданные.Сведения, МероприятияТрудовойДеятельности.Сведения) КАК Сведения,
		|	ЕСТЬNULL(МероприятияТрудовойДеятельностиПереданные.ПредставлениеДолжности, МероприятияТрудовойДеятельности.ПредставлениеДолжности) КАК ПредставлениеДолжности,
		|	ЕСТЬNULL(МероприятияТрудовойДеятельностиПереданные.ПредставлениеПодразделения, МероприятияТрудовойДеятельности.ПредставлениеПодразделения) КАК ПредставлениеПодразделения,
		|	ЕСТЬNULL(МероприятияТрудовойДеятельностиПереданные.ОснованиеУвольненияТекстОснования, МероприятияТрудовойДеятельности.ОснованиеУвольненияТекстОснования) КАК ОснованиеУвольненияТекстОснования,
		|	ЕСТЬNULL(МероприятияТрудовойДеятельностиПереданные.ОснованиеУвольненияСтатья, МероприятияТрудовойДеятельности.ОснованиеУвольненияСтатья) КАК ОснованиеУвольненияСтатья,
		|	ЕСТЬNULL(МероприятияТрудовойДеятельностиПереданные.ОснованиеУвольненияЧасть, МероприятияТрудовойДеятельности.ОснованиеУвольненияЧасть) КАК ОснованиеУвольненияЧасть,
		|	ЕСТЬNULL(МероприятияТрудовойДеятельностиПереданные.ОснованиеУвольненияПункт, МероприятияТрудовойДеятельности.ОснованиеУвольненияПункт) КАК ОснованиеУвольненияПункт,
		|	ЕСТЬNULL(МероприятияТрудовойДеятельностиПереданные.ОснованиеУвольненияПодПункт, МероприятияТрудовойДеятельности.ОснованиеУвольненияПодПункт) КАК ОснованиеУвольненияПодПункт,
		|	ЕСТЬNULL(МероприятияТрудовойДеятельностиПереданные.ОписаниеДолжности, МероприятияТрудовойДеятельности.ОписаниеДолжности) КАК ОписаниеДолжности
		|ИЗ
		|	РегистрСведений.МероприятияТрудовойДеятельности КАК МероприятияТрудовойДеятельности
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МероприятияТрудовойДеятельностиПереданные КАК МероприятияТрудовойДеятельностиПереданные
		|		ПО МероприятияТрудовойДеятельности.ИдМероприятия = МероприятияТрудовойДеятельностиПереданные.ИдМероприятия
		|			И (НЕ МероприятияТрудовойДеятельностиПереданные.Отменено)
		|ГДЕ
		|	МероприятияТрудовойДеятельности.ИдМероприятия В(&ИдМероприятий)";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция МероприятияТрудовойДеятельностиСТД_Р(МенеджерВременныхТаблиц, ТолькоРазрешенные, ТолькоПереданные) Экспорт
	
	Запрос = ЗапросВТМероприятияТрудовойДеятельностиСотрудников(ТолькоРазрешенные, "", ТолькоПереданные);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст = Запрос.Текст + "
		|УПОРЯДОЧИТЬ ПО
		|	ДатаПорядка,
		|	ДатаОтмены,
		|	ВидМероприятияПорядок,
		|	ЯвляетсяСовместителем";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция НаименованиеДокументаОснования() Экспорт
	
	Возврат НСтр("ru = 'Приказ'");
	
КонецФункции

Функция ЗаписьДвиженияМероприятияТрудовойДеятельности(ДанныеМероприятия, СформироватьНомерНаПечать = Истина) Экспорт
	
	СтруктураЗаписи = ПустаяСтруктураЗаписиОТрудовойДеятельности();
	
	ЗаполнитьЗначенияСвойств(СтруктураЗаписи, ДанныеМероприятия);
	СтруктураЗаписи.ДатаМероприятия = НачалоДня(СтруктураЗаписи.ДатаМероприятия);
	
	Если СформироватьНомерНаПечать Тогда
		
		СтруктураЗаписи.НомерДокументаОснования = ЗарплатаКадрыОтчеты.НомерНаПечать(
			ДанныеМероприятия.Номер, ДанныеМероприятия.НомерПриказа);
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(СтруктураЗаписи.ДатаОтмены) Тогда
		
		Если ЭлектронныеТрудовыеКнижкиПовтИсп.НеЗаполнятьПодразделенияВМероприятияхТрудовойДеятельности(СтруктураЗаписи.Организация) Тогда
			СтруктураЗаписи.Подразделение = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
		КонецЕсли;
		
		ЗаполнитьПредставленияЗаписиМероприятия(СтруктураЗаписи);
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(СтруктураЗаписи.НаименованиеДокументаОснования) Тогда
		СтруктураЗаписи.НаименованиеДокументаОснования = НаименованиеДокументаОснования();
	КонецЕсли;
	
	Возврат СтруктураЗаписи;
	
КонецФункции

Функция ЗаписьДвиженияМероприятияТрудовойДеятельностиПереданные(ДанныеМероприятия) Экспорт
	
	СтруктураЗаписи = Новый Структура("Регистратор");
	
	Для Каждого Измерение Из Метаданные.РегистрыСведений.МероприятияТрудовойДеятельностиПереданные.Измерения Цикл
		СтруктураЗаписи.Вставить(Измерение.Имя);
	КонецЦикла;
	
	Для Каждого Ресурс Из Метаданные.РегистрыСведений.МероприятияТрудовойДеятельностиПереданные.Ресурсы Цикл
		СтруктураЗаписи.Вставить(Ресурс.Имя);
	КонецЦикла;
	
	ЗаполнитьЗначенияСвойств(СтруктураЗаписи, ДанныеМероприятия);
	
	Возврат СтруктураЗаписи;
	
КонецФункции

Функция ДатаНачалаУчета() Экспорт
	
	Возврат '20200101';
	
КонецФункции

Процедура УстановитьУсловноеОформлениеТаблицыРедактированияМероприятий(УправляемаяФорма, ДатаОтменыРедактируется, ФормаОбъекта = Истина) Экспорт
	
	УсловноеОформление = УправляемаяФорма.УсловноеОформление;
	Элементы = УправляемаяФорма.Элементы;
	
	Если ФормаОбъекта Тогда
		ПутьКТаблицеМероприятия = "Объект.Мероприятия";
	Иначе
		ПутьКТаблицеМероприятия = "Мероприятия";
	КонецЕсли;
	
	// Строки мероприятия которых не меняются, можно изменить только дату отмены
	ЭлементОформления = УсловноеОформление.Элементы.Добавить();
	ЭлементОформления.Использование = Истина;
	
	ЭлементОтбора = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.Использование		= Истина;
	ЭлементОтбора.ЛевоеЗначение		= Новый ПолеКомпоновкиДанных(ПутьКТаблицеМероприятия + ".ДатаОтмены");
	ЭлементОтбора.ВидСравнения		= ВидСравненияКомпоновкиДанных.Заполнено;
	ЭлементОтбора.ПравоеЗначение	= Истина;
	
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ТекстЗапрещеннойЯчейкиЦвет);
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	
	КоллекцииЭлементов = Новый Массив;
	КоллекцииЭлементов.Добавить(Элементы.Мероприятия.ПодчиненныеЭлементы);
	Для Каждого ЭлементФормы Из Элементы.Мероприятия.ПодчиненныеЭлементы Цикл
		
		Если ТипЗнч(ЭлементФормы) = Тип("ГруппаФормы") Тогда
			КоллекцииЭлементов.Добавить(ЭлементФормы.ПодчиненныеЭлементы);
		КонецЕсли;
		
	КонецЦикла;
	
	Для Каждого КоллекцияЭлементов Из КоллекцииЭлементов Цикл
		
		Для Каждого ЭлементФормы Из КоллекцияЭлементов Цикл
			
			Если ДатаОтменыРедактируется И ЭлементФормы.Имя = "МероприятияДатаОтмены" Тогда
				Продолжить;
			КонецЕсли;
			
			Если ТипЗнч(ЭлементФормы) <> Тип("ПолеФормы") Тогда
				Продолжить;
			КонецЕсли;
			
			ОформляемоеПоле = ЭлементОформления.Поля.Элементы.Добавить();
			ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных(ЭлементФормы.Имя);
			ОформляемоеПоле.Использование = Истина;
			
		КонецЦикла;
		
	КонецЦикла;
	
	// Вывод значения ИдМероприятия в поле редактирования идентификатора
	ЭлементОформления = УсловноеОформление.Элементы.Добавить();
	ЭлементОформления.Использование = Истина;
	
	ЭлементОтбора = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.Использование		= Истина;
	ЭлементОтбора.ЛевоеЗначение		= Новый ПолеКомпоновкиДанных(ПутьКТаблицеМероприятия + ".ИдМероприятия");
	ЭлементОтбора.ВидСравнения		= ВидСравненияКомпоновкиДанных.Заполнено;
	
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("Текст", Новый ПолеКомпоновкиДанных(ПутьКТаблицеМероприятия + ".ИдМероприятия"));
	
	ОформляемоеПоле = ЭлементОформления.Поля.Элементы.Добавить();
	ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("МероприятияИдентификатор");
	ОформляемоеПоле.Использование = Истина;
	
	// Видимость полей в зависимости от видов мероприятий документа
	ДоступныеПоляВидов = ЭлектронныеТрудовыеКнижкиКлиентСервер.ИменаДоступныхПолейВидовМероприятий();
	ВсеНастраиваемыеПоля = Новый Массив;
	
	Для Каждого ОписаниеПолейВидов Из ДоступныеПоляВидов Цикл
		
		ИменаПолей = СтрРазделить(ОписаниеПолейВидов.Значение, ",");
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ВсеНастраиваемыеПоля, ИменаПолей, Истина);
		
	КонецЦикла;
	
	Для Каждого ОписаниеПолейВидов Из ДоступныеПоляВидов Цикл
		
		ЭлементОформленияВидимость = УсловноеОформление.Элементы.Добавить();
		ЭлементОформленияВидимость.Использование = Истина;
		
		ЭлементОтбора = ЭлементОформленияВидимость.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.Использование		= Истина;
		ЭлементОтбора.ЛевоеЗначение		= Новый ПолеКомпоновкиДанных(ПутьКТаблицеМероприятия + ".ВидМероприятия");
		ЭлементОтбора.ВидСравнения		= ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.ПравоеЗначение	= ОписаниеПолейВидов.Ключ;
		
		ЭлементОформленияВидимость.Оформление.УстановитьЗначениеПараметра("Отображать", Истина);
		
		ЭлементОформленияНеВидимость = УсловноеОформление.Элементы.Добавить();
		ЭлементОформленияНеВидимость.Использование = Истина;
		
		ЭлементОтбора = ЭлементОформленияНеВидимость.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.Использование		= Истина;
		ЭлементОтбора.ЛевоеЗначение		= Новый ПолеКомпоновкиДанных(ПутьКТаблицеМероприятия + ".ВидМероприятия");
		ЭлементОтбора.ВидСравнения		= ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.ПравоеЗначение	= ОписаниеПолейВидов.Ключ;
		
		ЭлементОформленияНеВидимость.Оформление.УстановитьЗначениеПараметра("Отображать", Ложь);
		
		ИменаПолей = СтрРазделить(ОписаниеПолейВидов.Значение, ",");
		Для Каждого ИмяПоля Из ВсеНастраиваемыеПоля Цикл
			
			Если ИменаПолей.Найти(ИмяПоля) <> Неопределено Тогда
				
				ОформляемоеПоле = ЭлементОформленияВидимость.Поля.Элементы.Добавить();
				ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("Мероприятия" + ИмяПоля);
				ОформляемоеПоле.Использование = Истина;
				
			Иначе
				
				ОформляемоеПоле = ЭлементОформленияНеВидимость.Поля.Элементы.Добавить();
				ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("Мероприятия" + ИмяПоля);
				ОформляемоеПоле.Использование = Истина;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	// Если вид мероприятия не заполнен, то и все поля недоступны для заполнения
	ЭлементОформленияВидимость = УсловноеОформление.Элементы.Добавить();
	ЭлементОформленияВидимость.Использование = Истина;
	
	ЭлементОтбора = ЭлементОформленияВидимость.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.Использование		= Истина;
	ЭлементОтбора.ЛевоеЗначение		= Новый ПолеКомпоновкиДанных(ПутьКТаблицеМероприятия + ".ВидМероприятия");
	ЭлементОтбора.ВидСравнения		= ВидСравненияКомпоновкиДанных.НеЗаполнено;
	
	ЭлементОформленияВидимость.Оформление.УстановитьЗначениеПараметра("Отображать", Ложь);
	
	ИменаПолей = СтрРазделить(ОписаниеПолейВидов.Значение, ",");
	Для Каждого ИмяПоля Из ВсеНастраиваемыеПоля Цикл
		
		ОформляемоеПоле = ЭлементОформленияВидимость.Поля.Элементы.Добавить();
		ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("Мероприятия" + ИмяПоля);
		ОформляемоеПоле.Использование = Истина;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура УстановитьУсловноеОформлениеПредставленияДолжностиТаблицыМероприятий(УправляемаяФорма, ФормаОбъекта = Истина) Экспорт
	
	УсловноеОформление = УправляемаяФорма.УсловноеОформление;
	Элементы = УправляемаяФорма.Элементы;
	
	Если ФормаОбъекта Тогда
		ПутьКТаблицеМероприятия = "Объект.Мероприятия";
	Иначе
		ПутьКТаблицеМероприятия = "Мероприятия";
	КонецЕсли;
	
	// Если заполнено ОписаниеДолжности выводится поле ОписаниеДолжности и скрывается поле ПредставлениеДолжности
	ЭлементОформления = УсловноеОформление.Элементы.Добавить();
	ЭлементОформления.Использование = Истина;
	
	ЭлементОтбора = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.Использование		= Истина;
	ЭлементОтбора.ЛевоеЗначение		= Новый ПолеКомпоновкиДанных(ПутьКТаблицеМероприятия + ".ОписаниеДолжности");
	ЭлементОтбора.ВидСравнения		= ВидСравненияКомпоновкиДанных.Заполнено;
	ЭлементОтбора.ПравоеЗначение	= Истина;
	
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("Видимость", Истина);
	
	ОформляемоеПоле = ЭлементОформления.Поля.Элементы.Добавить();
	ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("МероприятияОписаниеДолжности");
	ОформляемоеПоле.Использование = Истина;

	ЭлементОформления = УсловноеОформление.Элементы.Добавить();
	ЭлементОформления.Использование = Истина;
	
	ЭлементОтбора = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.Использование		= Истина;
	ЭлементОтбора.ЛевоеЗначение		= Новый ПолеКомпоновкиДанных(ПутьКТаблицеМероприятия + ".ОписаниеДолжности");
	ЭлементОтбора.ВидСравнения		= ВидСравненияКомпоновкиДанных.Заполнено;
	ЭлементОтбора.ПравоеЗначение	= Истина;
	
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	
	ОформляемоеПоле = ЭлементОформления.Поля.Элементы.Добавить();
	ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("МероприятияПредставлениеДолжности");
	ОформляемоеПоле.Использование = Истина;
	
	// И наоборот, скрывается поле ОписаниеДолжности и выводится поле ПредставлениеДолжности
	ЭлементОформления = УсловноеОформление.Элементы.Добавить();
	ЭлементОформления.Использование = Истина;
	
	ЭлементОтбора = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.Использование		= Истина;
	ЭлементОтбора.ЛевоеЗначение		= Новый ПолеКомпоновкиДанных(ПутьКТаблицеМероприятия + ".ОписаниеДолжности");
	ЭлементОтбора.ВидСравнения		= ВидСравненияКомпоновкиДанных.НеЗаполнено;
	ЭлементОтбора.ПравоеЗначение	= Истина;
	
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	
	ОформляемоеПоле = ЭлементОформления.Поля.Элементы.Добавить();
	ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("МероприятияОписаниеДолжности");
	ОформляемоеПоле.Использование = Истина;

	ЭлементОформления = УсловноеОформление.Элементы.Добавить();
	ЭлементОформления.Использование = Истина;
	
	ЭлементОтбора = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.Использование		= Истина;
	ЭлементОтбора.ЛевоеЗначение		= Новый ПолеКомпоновкиДанных(ПутьКТаблицеМероприятия + ".ОписаниеДолжности");
	ЭлементОтбора.ВидСравнения		= ВидСравненияКомпоновкиДанных.НеЗаполнено;
	ЭлементОтбора.ПравоеЗначение	= Истина;
	
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("Видимость", Истина);
	
	ОформляемоеПоле = ЭлементОформления.Поля.Элементы.Добавить();
	ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("МероприятияПредставлениеДолжности");
	ОформляемоеПоле.Использование = Истина;
	
КонецПроцедуры

Функция РазрядКатегорияВидимость() Экспорт
	
	Возврат ЭлектронныеТрудовыеКнижкиВнутренний.РазрядКатегорияВидимость();
	
КонецФункции

Функция КодПоРееструДолжностейВидимость() Экспорт
	
	Возврат ЭлектронныеТрудовыеКнижкиВнутренний.КодПоРееструДолжностейВидимость();
	
КонецФункции

Процедура УстановитьОтборПараметровПолученияСотрудниковОрганизации(ПараметрыПолучения) Экспорт
	
	ЭлектронныеТрудовыеКнижкиВнутренний.УстановитьОтборПараметровПолученияСотрудниковОрганизации(ПараметрыПолучения);
	
КонецПроцедуры

Функция ИменаКадровыхДанныхСотрудниковДляНачалаУчета() Экспорт
	
	Возврат ЭлектронныеТрудовыеКнижкиВнутренний.ИменаКадровыхДанныхСотрудниковДляНачалаУчета();
	
КонецФункции

Процедура ДополнитьМероприятияЭТКДаннымиРеестраКадровыхПриказов(ДанныеСотрудниковБезМероприятий) Экспорт
	
	ЭлектронныеТрудовыеКнижкиВнутренний.ДополнитьМероприятияЭТКДаннымиРеестраКадровыхПриказов(ДанныеСотрудниковБезМероприятий);
	
КонецПроцедуры

Процедура УточнитьЗапросПолученияДанныхНаНачалоУчета(Запрос) Экспорт
	
	ЭлектронныеТрудовыеКнижкиВнутренний.УточнитьЗапросПолученияДанныхНаНачалоУчета(Запрос);
	
КонецПроцедуры

Функция МероприятияСотрудникаДо2020Года(Сотрудник, Организация) Экспорт
	
	Возврат ЭлектронныеТрудовыеКнижкиВнутренний.МероприятияСотрудникаДо2020Года(Сотрудник, Организация);
	
КонецФункции

#Область РаботаСXMLФайлами

Функция ДанныеXMLФайла(АдресДанныхФайла, ИмяФайла) Экспорт
	
	ФайлСведений = ПолучитьИзВременногоХранилища(АдресДанныхФайла);
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла("xml");
	ФайлСведений.Записать(ИмяВременногоФайла);
	
	Попытка
		ЧтениеXML = Новый ЧтениеXML;
		ЧтениеXML.ОткрытьФайл(ИмяВременногоФайла);
		ДеревоXML = ФабрикаXDTO.ПрочитатьXML(ЧтениеXML);
		ЧтениеXML.Закрыть();
	Исключение
		ВызватьИсключение СтрШаблон(НСтр("ru = 'Не удалось прочитать файл (%1).'"), ИмяФайла);
	КонецПопытки;
	
	Попытка
		УдалитьФайлы(ИмяВременногоФайла);
	Исключение
		
		ЗаписьЖурналаРегистрации(
			НСтр("ru = 'Чтение файлов СЗВ-ТД и файлов протоколов приема к ним'", ОбщегоНазначения.КодОсновногоЯзыка()),
			УровеньЖурналаРегистрации.Ошибка, , , ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		
	КонецПопытки;

	Возврат ДеревоXML;
	
КонецФункции

Функция ПолучитьСвойствоXDTO(ДеревоXML, Путь) Экспорт
	
	СписокСвойств = СтрРазделить(Путь, "/");
	
	ОбъектДерева = ОбъектСвойстваXDTO(ДеревоXML, СписокСвойств[0]);
	Если ОбъектДерева = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	СписокСвойств.Удалить(0);
	Для Каждого ИмяСвойства Из СписокСвойств Цикл
		
		Свойство = ОбъектДерева.Свойства().Получить(ИмяСвойства);
		Если Свойство = Неопределено Тогда
			ОбъектДерева = Неопределено;
			Прервать;
		КонецЕсли;
		
		ОбъектДерева = ОбъектДерева[Свойство.Имя];
		
	КонецЦикла;
	
	Если ТипЗнч(ОбъектДерева) = Тип("ЗначениеXDTO") Тогда
		Возврат ОбъектДерева.Значение;
	КонецЕсли;
	
	Возврат ОбъектДерева;
	
КонецФункции

Функция ОбъектСвойстваXDTO(ДеревоXML, ИмяСвойства) Экспорт
	
	Для Каждого Свойство Из ДеревоXML.Свойства() Цикл
		
		ОбъектДерева = ДеревоXML[Свойство.Имя];
		Если Свойство.Имя = ИмяСвойства Тогда
			Возврат ОбъектДерева;
		КонецЕсли;
		
		Если ТипЗнч(ОбъектДерева) = Тип("ОбъектXDTO") Тогда
			ПодчиненноеСвойство = ОбъектСвойстваXDTO(ОбъектДерева, ИмяСвойства);
			Если ПодчиненноеСвойство <> Неопределено Тогда
				Возврат ПодчиненноеСвойство
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции

Функция КоллекцияОбъектовXDTO(ДеревоXDTO, ИмяКоллекции) Экспорт
	
	Если ДеревоXDTO = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если ТипЗнч(ДеревоXDTO[ИмяКоллекции]) = Тип("СписокXDTO") Тогда
		
		КоллекцияОбъектов = Новый Массив;
		Для Каждого ЭлементСписка Из ДеревоXDTO[ИмяКоллекции] Цикл
			
			Если ЭлементСписка.Свойства().Получить(ИмяКоллекции) <> Неопределено Тогда
				ОбщегоНазначенияКлиентСервер.ДополнитьМассив(КоллекцияОбъектов, КоллекцияОбъектовXDTO(ЭлементСписка, ИмяКоллекции));
			Иначе
				КоллекцияОбъектов.Добавить(ЭлементСписка);
			КонецЕсли;
			
		КонецЦикла;
		
	Иначе
		
		Если ДеревоXDTO[ИмяКоллекции].Свойства().Получить(ИмяКоллекции) <> Неопределено Тогда
			КоллекцияОбъектов = КоллекцияОбъектовXDTO(ДеревоXDTO[ИмяКоллекции], ИмяКоллекции);
		Иначе
			КоллекцияОбъектов = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ДеревоXDTO[ИмяКоллекции]);
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат КоллекцияОбъектов;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПустаяТаблицаДанныхТрудовойДеятельности()
	
	ТаблицаДанных = Новый ТаблицаЗначений;
	ТаблицаДанных.Колонки.Добавить("ФизическоеЛицо", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
	ТаблицаДанных.Колонки.Добавить("Фамилия", Новый ОписаниеТипов("Строка"));
	ТаблицаДанных.Колонки.Добавить("Имя", Новый ОписаниеТипов("Строка"));
	ТаблицаДанных.Колонки.Добавить("Отчество", Новый ОписаниеТипов("Строка"));
	ТаблицаДанных.Колонки.Добавить("СтраховойНомерПФР", Новый ОписаниеТипов("Строка"));
	ТаблицаДанных.Колонки.Добавить("ДатаРождения", Новый ОписаниеТипов("Дата"));
	ТаблицаДанных.Колонки.Добавить("ЯвляетсяСовместителем", Новый ОписаниеТипов("Булево"));
	ТаблицаДанных.Колонки.Добавить("ЗаявлениеОПродолжении", Новый ОписаниеТипов("ДокументСсылка.ЗаявленияОПредоставленииСведенийОТрудовойДеятельности"));
	ТаблицаДанных.Колонки.Добавить("ЗаявлениеОПродолженииДата", Новый ОписаниеТипов("Дата"));
	ТаблицаДанных.Колонки.Добавить("ЗаявлениеОПродолженииОтмена", Новый ОписаниеТипов("Булево"));
	ТаблицаДанных.Колонки.Добавить("ЗаявлениеОПредоставлении", Новый ОписаниеТипов("ДокументСсылка.ЗаявленияОПредоставленииСведенийОТрудовойДеятельности"));
	ТаблицаДанных.Колонки.Добавить("ЗаявлениеОПредоставленииДата", Новый ОписаниеТипов("Дата"));
	ТаблицаДанных.Колонки.Добавить("ЗаявлениеОПредоставленииОтмена", Новый ОписаниеТипов("Булево"));
	ТаблицаДанных.Колонки.Добавить("ТрудоваяДеятельность", Новый ОписаниеТипов("Массив"));
	
	Возврат ТаблицаДанных;
	
КонецФункции

Функция ПустаяСтруктураЗаписиОТрудовойДеятельности() Экспорт
	
	СтруктураЗаписи = Новый Структура("Регистратор,СотрудникЗаписи");
	
	Для Каждого Измерение Из Метаданные.РегистрыСведений.МероприятияТрудовойДеятельности.Измерения Цикл
		СтруктураЗаписи.Вставить(Измерение.Имя);
	КонецЦикла;
	
	Для Каждого Ресурс Из Метаданные.РегистрыСведений.МероприятияТрудовойДеятельности.Ресурсы Цикл
		СтруктураЗаписи.Вставить(Ресурс.Имя);
	КонецЦикла;
	
	Для Каждого Реквизит Из Метаданные.РегистрыСведений.МероприятияТрудовойДеятельности.Реквизиты Цикл
		СтруктураЗаписи.Вставить(Реквизит.Имя);
	КонецЦикла;
	
	Возврат СтруктураЗаписи;
	
КонецФункции

Функция ДанныеТрудовойДеятельностиСотрудниковПоТаблицеОтборов(МенеджерВременныхТаблиц, ТолькоРазрешенные, Организация, МероприятияВсехСотрудников = Ложь, ИсключаемыйРегистратор = Неопределено)
	
	ДанныеСотрудников = ПустаяТаблицаДанныхТрудовойДеятельности();
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	ИспользуетсяСервисЭлектронныхТрудовыхКнижек = СервисЭлектронныхТрудовыхКнижек.ИспользуетсяСервисЭлектронныхТрудовыхКнижек();
	
	КадровыеДанные = "Организация,ДатаУвольнения,Фамилия,Имя,Отчество,СтраховойНомерПФР,ДатаРождения,ДатаПриема,ВидЗанятости,МероприятияТрудовойДеятельностиПередавались";
	Если ИспользуетсяСервисЭлектронныхТрудовыхКнижек Тогда
		КадровыеДанные = КадровыеДанные + ",ГоловнаяОрганизация";
	КонецЕсли;
	
	ПоляОтбораПериодическихДанных = Новый Структура;
	
	Если ЗначениеЗаполнено(ИсключаемыйРегистратор) Тогда
		
		ОтборМероприятияТрудовойДеятельностиПереданные = Новый Массив;
		ЗарплатаКадрыОбщиеНаборыДанных.ДобавитьВКоллекциюОтбор(
			ОтборМероприятияТрудовойДеятельностиПереданные, "Регистратор", "<>", ИсключаемыйРегистратор);
		
		ПоляОтбораПериодическихДанных.Вставить("МероприятияТрудовойДеятельностиПереданные", ОтборМероприятияТрудовойДеятельностиПереданные);
		
		ОтборЗаявленияОВеденииТрудовыхКнижекПереданные = Новый Массив;
		ЗарплатаКадрыОбщиеНаборыДанных.ДобавитьВКоллекциюОтбор(
			ОтборЗаявленияОВеденииТрудовыхКнижекПереданные, "Регистратор", "<>", ИсключаемыйРегистратор);
		
		ПоляОтбораПериодическихДанных.Вставить("ЗаявленияОВеденииТрудовыхКнижекПереданные", ОтборЗаявленияОВеденииТрудовыхКнижекПереданные);
		
	КонецЕсли;
	
	Описатель = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеСотрудников(
		Запрос.МенеджерВременныхТаблиц, "ВТСотрудникиПериодыДанных", "Сотрудник,ОкончаниеПериода");
	
	КадровыйУчет.СоздатьВТКадровыеДанныеСотрудников(Описатель, ТолькоРазрешенные, КадровыеДанные, ПоляОтбораПериодическихДанных);
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.Текст =
		"ВЫБРАТЬ
		|	КадровыеДанные.ФизическоеЛицо КАК ФизическоеЛицо,
		|	КадровыеДанные.Период КАК Период,
		|	КадровыеДанные.Сотрудник КАК Сотрудник,
		|	КадровыеДанные.Фамилия КАК Фамилия,
		|	КадровыеДанные.Имя КАК Имя,
		|	КадровыеДанные.Отчество КАК Отчество,
		|	КадровыеДанные.ДатаРождения КАК ДатаРождения,
		|	КадровыеДанные.ДатаПриема КАК ДатаПриема,
		|	КадровыеДанные.СтраховойНомерПФР КАК СтраховойНомерПФР,
		|	КадровыеДанные.ВидЗанятости КАК ВидЗанятости,
		|	КадровыеДанные.МероприятияТрудовойДеятельностиПередавались КАК МероприятияТрудовойДеятельностиПередавались,
		|	ВЫБОР
		|		КОГДА КадровыеДанные.ВидЗанятости ЕСТЬ NULL
		|			ТОГДА 9999999999
		|		ИНАЧЕ РАЗНОСТЬДАТ(ВЫБОР
		|					КОГДА КадровыеДанные.ДатаУвольнения = ДАТАВРЕМЯ(1, 1, 1)
		|						ТОГДА ДАТАВРЕМЯ(2100, 1, 1)
		|					ИНАЧЕ КадровыеДанные.ДатаУвольнения
		|				КОНЕЦ, ДАТАВРЕМЯ(2100, 1, 1), ДЕНЬ) * 100 + КадровыеДанные.ВидЗанятости.Порядок
		|	КОНЕЦ КАК ПриоритетРабочегоМеста
		|ПОМЕСТИТЬ ВТПриоритетыСотрудников
		|ИЗ
		|	ВТКадровыеДанныеСотрудников КАК КадровыеДанные
		|ГДЕ
		|	ЕСТЬNULL(КадровыеДанные.Организация, &Организация) = &Организация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КадровыеДанные.ФизическоеЛицо КАК ФизическоеЛицо,
		|	МАКСИМУМ(КадровыеДанные.Период) КАК Период,
		|	МАКСИМУМ(КадровыеДанные.МероприятияТрудовойДеятельностиПередавались) КАК МероприятияТрудовойДеятельностиПередавались,
		|	МИНИМУМ(КадровыеДанные.ПриоритетРабочегоМеста) КАК ПриоритетРабочегоМеста
		|ПОМЕСТИТЬ ВТПриоритетыФизическихЛиц
		|ИЗ
		|	ВТПриоритетыСотрудников КАК КадровыеДанные
		|
		|СГРУППИРОВАТЬ ПО
		|	КадровыеДанные.ФизическоеЛицо
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПриоритетыФизическихЛиц.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ПриоритетыФизическихЛиц.Период КАК Период,
		|	ПриоритетыСотрудников.МероприятияТрудовойДеятельностиПередавались КАК МероприятияТрудовойДеятельностиПередавались,
		|	ПриоритетыСотрудников.Фамилия КАК Фамилия,
		|	ПриоритетыСотрудников.Имя КАК Имя,
		|	ПриоритетыСотрудников.Отчество КАК Отчество,
		|	ПриоритетыСотрудников.ДатаРождения КАК ДатаРождения,
		|	ПриоритетыСотрудников.ДатаПриема КАК ДатаПриема,
		|	ПриоритетыСотрудников.СтраховойНомерПФР КАК СтраховойНомерПФР,
		|	ПриоритетыСотрудников.ВидЗанятости КАК ВидЗанятости
		|ПОМЕСТИТЬ ВТДанныеФизическихЛиц
		|ИЗ
		|	ВТПриоритетыСотрудников КАК ПриоритетыСотрудников
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПриоритетыФизическихЛиц КАК ПриоритетыФизическихЛиц
		|		ПО ПриоритетыСотрудников.ФизическоеЛицо = ПриоритетыФизическихЛиц.ФизическоеЛицо
		|			И ПриоритетыСотрудников.ПриоритетРабочегоМеста = ПриоритетыФизическихЛиц.ПриоритетРабочегоМеста";
	
	Если ИспользуетсяСервисЭлектронныхТрудовыхКнижек Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "КадровыеДанные.Организация = &Организация", "КадровыеДанные.ГоловнаяОрганизация = &Организация");
	КонецЕсли;
	
	Запрос.Выполнить();
	
	ПараметрыПостроения = ПараметрыПостроенияВТЗаявленияСотрудников();
	ПараметрыПостроения.ИмяВТСотрудникиПериоды = "ВТСотрудникиПериодыДанных";
	ПараметрыПостроения.ИмяПоляПериод = "ОкончаниеПериода";
	
	СоздатьВТЗаявленияСотрудников(Запрос.МенеджерВременныхТаблиц, ТолькоРазрешенные, ПараметрыПостроения, "ВТВсеЗаявленияСотрудников", ИсключаемыйРегистратор);
	
	Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	СотрудникиПериодыДанных.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ЗаявленияНаВедениеБумажнойТрудовойКнижки.Заявление КАК ЗаявлениеОПродолжении,
		|	ЗаявленияНаВедениеБумажнойТрудовойКнижки.Дата КАК ЗаявлениеОПродолженииДата,
		|	ЗаявленияНаВедениеБумажнойТрудовойКнижки.Передано КАК ЗаявлениеОПродолженииПередано,
		|	ЗаявленияНаВедениеБумажнойТрудовойКнижки.Отозвано КАК ЗаявлениеОПродолженииОтозвано,
		|	ЗаявленияНаВедениеБумажнойТрудовойКнижки.ДатаПередачиОтзыва КАК ЗаявлениеОПродолженииДатаПередачиОтзыва,
		|	ЗаявленияНаВедениеЭлектроннойТрудовойКнижки.Заявление КАК ЗаявлениеОПредоставлении,
		|	ЗаявленияНаВедениеЭлектроннойТрудовойКнижки.Дата КАК ЗаявлениеОПредоставленииДата,
		|	ЗаявленияНаВедениеЭлектроннойТрудовойКнижки.Передано КАК ЗаявлениеОПредоставленииПередано,
		|	ЗаявленияНаВедениеЭлектроннойТрудовойКнижки.Отозвано КАК ЗаявлениеОПредоставленииОтозвано,
		|	ЗаявленияНаВедениеЭлектроннойТрудовойКнижки.ДатаПередачиОтзыва КАК ЗаявлениеОПредоставленииДатаПередачиОтзыва
		|ПОМЕСТИТЬ ВТЗаявленияСотрудников
		|ИЗ
		|	ВТСотрудникиПериодыДанных КАК СотрудникиПериодыДанных
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВсеЗаявленияСотрудников КАК ЗаявленияНаВедениеБумажнойТрудовойКнижки
		|		ПО СотрудникиПериодыДанных.ОкончаниеПериода = ЗаявленияНаВедениеБумажнойТрудовойКнижки.Период
		|			И СотрудникиПериодыДанных.Организация = ЗаявленияНаВедениеБумажнойТрудовойКнижки.Организация
		|			И СотрудникиПериодыДанных.ФизическоеЛицо = ЗаявленияНаВедениеБумажнойТрудовойКнижки.ФизическоеЛицо
		|			И (ЗаявленияНаВедениеБумажнойТрудовойКнижки.ВидЗаявления = ЗНАЧЕНИЕ(Перечисление.ВидыЗаявленийОПредоставленииСведенийОТрудовойДеятельности.ВедениеБумажнойТрудовойКнижки))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВсеЗаявленияСотрудников КАК ЗаявленияНаВедениеЭлектроннойТрудовойКнижки
		|		ПО СотрудникиПериодыДанных.ОкончаниеПериода = ЗаявленияНаВедениеЭлектроннойТрудовойКнижки.Период
		|			И СотрудникиПериодыДанных.Организация = ЗаявленияНаВедениеЭлектроннойТрудовойКнижки.Организация
		|			И СотрудникиПериодыДанных.ФизическоеЛицо = ЗаявленияНаВедениеЭлектроннойТрудовойКнижки.ФизическоеЛицо
		|			И (ЗаявленияНаВедениеЭлектроннойТрудовойКнижки.ВидЗаявления = ЗНАЧЕНИЕ(Перечисление.ВидыЗаявленийОПредоставленииСведенийОТрудовойДеятельности.СведенияОТрудовойДеятельностиВЭлектроннойФорме))
		|ГДЕ
		|	НЕ ЕСТЬNULL(ЗаявленияНаВедениеЭлектроннойТрудовойКнижки.Заявление, ЗаявленияНаВедениеБумажнойТрудовойКнижки.Заявление) ЕСТЬ NULL";
	
	ЗарплатаКадрыОбщиеНаборыДанных.УстановитьВыборкуТолькоРазрешенныхДанных(Запрос.Текст, ТолькоРазрешенные);
	Запрос.Выполнить();
	
	СоздатьВТКПередачеМероприятияТрудовойДеятельности(Запрос.МенеджерВременныхТаблиц, ТолькоРазрешенные, , ИсключаемыйРегистратор);
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	КадровыеДанные.ФизическоеЛицо КАК ФизическоеЛицо,
		|	КПередачеМероприятияТрудовойДеятельности.СотрудникЗаписи КАК СотрудникЗаписи,
		|	КПередачеМероприятияТрудовойДеятельности.ИдМероприятия КАК ИдМероприятия,
		|	КадровыеДанные.Фамилия КАК Фамилия,
		|	КадровыеДанные.Имя КАК Имя,
		|	КадровыеДанные.Отчество КАК Отчество,
		|	КадровыеДанные.ДатаРождения КАК ДатаРождения,
		|	КадровыеДанные.ДатаПриема КАК ДатаПриема,
		|	КадровыеДанные.СтраховойНомерПФР КАК СтраховойНомерПФР,
		|	ВЫБОР
		|		КОГДА КПередачеМероприятияТрудовойДеятельности.ЯвляетсяСовместителем ЕСТЬ NULL
		|			ТОГДА ВЫБОР
		|					КОГДА ЕСТЬNULL(КадровыеДанныеСотрудников.ВидЗанятости, КадровыеДанные.ВидЗанятости) В (ЗНАЧЕНИЕ(Перечисление.ВидыЗанятости.Совместительство), ЗНАЧЕНИЕ(Перечисление.ВидыЗанятости.ВнутреннееСовместительство))
		|						ТОГДА ИСТИНА
		|					ИНАЧЕ ЛОЖЬ
		|				КОНЕЦ
		|		ИНАЧЕ КПередачеМероприятияТрудовойДеятельности.ЯвляетсяСовместителем
		|	КОНЕЦ КАК ЯвляетсяСовместителем,
		|	ЕСТЬNULL(КадровыеДанныеСотрудников.МероприятияТрудовойДеятельностиПередавались, ЛОЖЬ) КАК МероприятияТрудовойДеятельностиПередавались,
		|	КПередачеМероприятияТрудовойДеятельности.Регистратор КАК Регистратор,
		|	ЗаявленияСотрудников.ЗаявлениеОПродолжении КАК ЗаявлениеОПродолжении,
		|	ЕСТЬNULL(ЗаявленияСотрудников.ЗаявлениеОПродолженииДата, ДАТАВРЕМЯ(1, 1, 1)) КАК ЗаявлениеОПродолженииДата,
		|	ЕСТЬNULL(ЗаявленияСотрудников.ЗаявлениеОПродолженииПередано, ИСТИНА) КАК ЗаявлениеОПродолженииПередано,
		|	ЕСТЬNULL(ЗаявленияСотрудников.ЗаявлениеОПродолженииОтозвано, ЛОЖЬ) КАК ЗаявлениеОПродолженииОтмена,
		|	ЗаявленияСотрудников.ЗаявлениеОПродолженииДатаПередачиОтзыва КАК ЗаявлениеОПродолженииДатаПередачиОтзыва,
		|	ЗаявленияСотрудников.ЗаявлениеОПредоставлении КАК ЗаявлениеОПредоставлении,
		|	ЕСТЬNULL(ЗаявленияСотрудников.ЗаявлениеОПредоставленииДата, ДАТАВРЕМЯ(1, 1, 1)) КАК ЗаявлениеОПредоставленииДата,
		|	ЕСТЬNULL(ЗаявленияСотрудников.ЗаявлениеОПредоставленииПередано, ИСТИНА) КАК ЗаявлениеОПредоставленииПередано,
		|	ЕСТЬNULL(ЗаявленияСотрудников.ЗаявлениеОПредоставленииОтозвано, ЛОЖЬ) КАК ЗаявлениеОПредоставленииОтмена,
		|	ЗаявленияСотрудников.ЗаявлениеОПредоставленииДатаПередачиОтзыва КАК ЗаявлениеОПредоставленииДатаПередачиОтзыва,
		|	КПередачеМероприятияТрудовойДеятельности.ДатаМероприятия КАК ДатаМероприятия,
		|	КПередачеМероприятияТрудовойДеятельности.ВидМероприятия КАК ВидМероприятия,
		|	КПередачеМероприятияТрудовойДеятельности.Сведения КАК Сведения,
		|	КПередачеМероприятияТрудовойДеятельности.Подразделение КАК Подразделение,
		|	КПередачеМероприятияТрудовойДеятельности.Должность КАК Должность,
		|	КПередачеМероприятияТрудовойДеятельности.РазрядКатегория КАК РазрядКатегория,
		|	КПередачеМероприятияТрудовойДеятельности.КодПоРееструДолжностей КАК КодПоРееструДолжностей,
		|	КПередачеМероприятияТрудовойДеятельности.ТрудоваяФункция КАК ТрудоваяФункция,
		|	КПередачеМероприятияТрудовойДеятельности.НаименованиеДокументаОснования КАК НаименованиеДокументаОснования,
		|	КПередачеМероприятияТрудовойДеятельности.ДатаДокументаОснования КАК ДатаДокументаОснования,
		|	КПередачеМероприятияТрудовойДеятельности.СерияДокументаОснования КАК СерияДокументаОснования,
		|	КПередачеМероприятияТрудовойДеятельности.НомерДокументаОснования КАК НомерДокументаОснования,
		|	КПередачеМероприятияТрудовойДеятельности.ОснованиеУвольнения КАК ОснованиеУвольнения,
		|	КПередачеМероприятияТрудовойДеятельности.ДатаС КАК ДатаС,
		|	КПередачеМероприятияТрудовойДеятельности.ДатаПо КАК ДатаПо,
		|	КПередачеМероприятияТрудовойДеятельности.ДатаОтмены КАК ДатаОтмены,
		|	КПередачеМероприятияТрудовойДеятельности.ПредставлениеДолжности КАК ПредставлениеДолжности,
		|	КПередачеМероприятияТрудовойДеятельности.ПредставлениеПодразделения КАК ПредставлениеПодразделения,
		|	КПередачеМероприятияТрудовойДеятельности.ОснованиеУвольненияТекстОснования КАК ОснованиеУвольненияТекстОснования,
		|	КПередачеМероприятияТрудовойДеятельности.ОснованиеУвольненияСтатья КАК ОснованиеУвольненияСтатья,
		|	КПередачеМероприятияТрудовойДеятельности.ОснованиеУвольненияЧасть КАК ОснованиеУвольненияЧасть,
		|	КПередачеМероприятияТрудовойДеятельности.ОснованиеУвольненияПункт КАК ОснованиеУвольненияПункт,
		|	КПередачеМероприятияТрудовойДеятельности.ОснованиеУвольненияПодПункт КАК ОснованиеУвольненияПодПункт,
		|	КПередачеМероприятияТрудовойДеятельности.ОписаниеДолжности КАК ОписаниеДолжности
		|ИЗ
		|	ВТДанныеФизическихЛиц КАК КадровыеДанные
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКПередачеМероприятияТрудовойДеятельности КАК КПередачеМероприятияТрудовойДеятельности
		|			ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеСотрудников КАК КадровыеДанныеСотрудников
		|			ПО КПередачеМероприятияТрудовойДеятельности.СотрудникЗаписи = КадровыеДанныеСотрудников.Сотрудник
		|		ПО КадровыеДанные.ФизическоеЛицо = КПередачеМероприятияТрудовойДеятельности.ФизическоеЛицо
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаявленияСотрудников КАК ЗаявленияСотрудников
		|		ПО КадровыеДанные.ФизическоеЛицо = ЗаявленияСотрудников.ФизическоеЛицо
		|
		|УПОРЯДОЧИТЬ ПО
		|	Фамилия,
		|	ФизическоеЛицо,
		|	ЯвляетсяСовместителем,
		|	ДатаМероприятия,
		|	ДатаОтмены УБЫВ";
	
	ИменаОбщедоступныхПолей = ЭлектронныеТрудовыеКнижкиКлиентСервер.ДоступныеПоляВсехВидовМероприятий();
	ИменаДоступныхПолей = ЭлектронныеТрудовыеКнижкиКлиентСервер.ИменаДоступныхПолейВидовМероприятий();
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.СледующийПоЗначениюПоля("ФизическоеЛицо") Цикл
		
		ДанныеСотрудника = ДанныеСотрудников.Добавить();
		ЗаполнитьЗначенияСвойств(ДанныеСотрудника, Выборка, ,
			"ЗаявлениеОПродолжении,ЗаявлениеОПродолженииДата,ЗаявлениеОПродолженииОтмена,ЗаявлениеОПредоставлении,ЗаявлениеОПредоставленииДата,ЗаявлениеОПредоставленииОтмена");
		
		Если Выборка.ЗаявлениеОПродолженииДата > Выборка.ЗаявлениеОПредоставленииДата Тогда
			
			ДанныеСотрудника.ЗаявлениеОПродолженииДата = Выборка.ЗаявлениеОПродолженииДата;
			Если Не Выборка.ЗаявлениеОПродолженииПередано
					И Не Выборка.ЗаявлениеОПродолженииОтмена
				Или Выборка.ЗаявлениеОПродолженииПередано
					И Выборка.ЗаявлениеОПродолженииОтмена
					И Не ЗначениеЗаполнено(Выборка.ЗаявлениеОПродолженииДатаПередачиОтзыва) Тогда
				
				ДанныеСотрудника.ЗаявлениеОПродолжении = Выборка.ЗаявлениеОПродолжении;
				ДанныеСотрудника.ЗаявлениеОПродолженииОтмена = Выборка.ЗаявлениеОПродолженииОтмена;
				ДанныеСотрудника.ЗаявлениеОПредоставлении = Выборка.ЗаявлениеОПредоставлении;
				ДанныеСотрудника.ЗаявлениеОПредоставленииОтмена = Выборка.ЗаявлениеОПредоставленииОтмена;
				
			КонецЕсли;
			
		Иначе
			
			ДанныеСотрудника.ЗаявлениеОПредоставленииДата = Выборка.ЗаявлениеОПредоставленииДата;
			Если Не Выборка.ЗаявлениеОПредоставленииПередано
					И Не Выборка.ЗаявлениеОПредоставленииОтмена
				Или Выборка.ЗаявлениеОПредоставленииПередано
					И Выборка.ЗаявлениеОПредоставленииОтмена
					И Не ЗначениеЗаполнено(Выборка.ЗаявлениеОПредоставленииДатаПередачиОтзыва)Тогда
					
				ДанныеСотрудника.ЗаявлениеОПредоставлении = Выборка.ЗаявлениеОПредоставлении;
				ДанныеСотрудника.ЗаявлениеОПредоставленииОтмена = Выборка.ЗаявлениеОПредоставленииОтмена;
				
			КонецЕсли;
			
		КонецЕсли;
		
		ТолькоДанныеПредыдущихПериодов = Не Выборка.МероприятияТрудовойДеятельностиПередавались;
		ЕстьДанныеДоНачалаУчета = Ложь;
		Пока Выборка.Следующий() Цикл
			Если ЗначениеЗаполнено(Выборка.ВидМероприятия) Тогда
				ЗаписьОДеятельности = ПустаяСтруктураЗаписиОТрудовойДеятельности();
				ЗаполнитьЗначенияСвойств(ЗаписьОДеятельности, Выборка, ИменаОбщедоступныхПолей + "," + ИменаДоступныхПолей.Получить(Выборка.ВидМероприятия));
				Если Не ЗначениеЗаполнено(ЗаписьОДеятельности.НаименованиеДокументаОснования) Тогда
					ЗаписьОДеятельности.НаименованиеДокументаОснования = НаименованиеДокументаОснования();
				КонецЕсли;
				Если ЗаписьОДеятельности.ДатаМероприятия >= ДатаНачалаУчета()
					Или ЗаписьОДеятельности.ДатаОтмены >= ДатаНачалаУчета() Тогда
					ТолькоДанныеПредыдущихПериодов = Ложь;
				Иначе
					ЕстьДанныеДоНачалаУчета = Истина;
				КонецЕсли;
				ДанныеСотрудника.ТрудоваяДеятельность.Добавить(ЗаписьОДеятельности);
			КонецЕсли;
		КонецЦикла;
		
		Если Не МероприятияВсехСотрудников Тогда
			
			Если Не ЗначениеЗаполнено(ДанныеСотрудника.ЗаявлениеОПредоставлении)
				И Не ЗначениеЗаполнено(ДанныеСотрудника.ЗаявлениеОПродолжении)
				И ТолькоДанныеПредыдущихПериодов Тогда
				
				ДанныеСотрудников.Удалить(ДанныеСотрудника);
				ДанныеСотрудника = Неопределено;
				
			КонецЕсли;
			
		КонецЕсли;
		
		Если ДанныеСотрудника <> Неопределено Тогда
			
			Если Не Выборка.МероприятияТрудовойДеятельностиПередавались
				И Не ЕстьДанныеДоНачалаУчета
				И Выборка.ДатаПриема < ДатаНачалаУчета() Тогда
				
				ОбщегоНазначения.СообщитьПользователю(
					СтрШаблон(НСтр("ru = 'По сотруднику %1 отсутствуют мероприятия до 2020 года (требуется последнее мероприятие ""ПРИЕМ"" или ""ПЕРЕВОД"")'"), Выборка.ФизическоеЛицо));
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ДанныеСотрудников;
	
КонецФункции

Функция ПредставлениеВыполняемойФункции(ВыборкаДанных)
	
	ПредставлениеФункции = "";
	
	СоставПредставления = Новый Массив;
	Если ВыборкаДанных.ВидМероприятия = Перечисления.ВидыМероприятийТрудовойДеятельности.Прием
		Или ВыборкаДанных.ВидМероприятия = Перечисления.ВидыМероприятийТрудовойДеятельности.Перевод
		Или ВыборкаДанных.ВидМероприятия = Перечисления.ВидыМероприятийТрудовойДеятельности.УстановлениеВторойПрофессии Тогда
		
		Если ЗначениеЗаполнено(ВыборкаДанных.ОписаниеДолжности) Тогда
			СоставПредставления.Добавить(ВыборкаДанных.ОписаниеДолжности);
		ИначеЕсли ЗначениеЗаполнено(ВыборкаДанных.ПредставлениеДолжности) Тогда
			
			ПредставлениеДолжности = СокрЛП(ВыборкаДанных.ПредставлениеДолжности);
			
			Если ЗначениеЗаполнено(ВыборкаДанных.КодПоРееструДолжностей) Тогда
				ПредставлениеДолжности = ПредставлениеДолжности + ", " + СокрЛП(ВыборкаДанных.КодПоРееструДолжностей);
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ВыборкаДанных.РазрядКатегория) Тогда
				ПредставлениеДолжности = ПредставлениеДолжности + ", " + ЭлектронныеТрудовыеКнижкиПовтИсп.ПредставлениеРазрядаКатегории(ВыборкаДанных.РазрядКатегория);
			КонецЕсли;
			
			СоставПредставления.Добавить(ПредставлениеДолжности);
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ВыборкаДанных.ТрудоваяФункцияОписание) Тогда
			СоставПредставления.Добавить(ВыборкаДанных.ТрудоваяФункцияОписание);
		КонецЕсли;
		
	КонецЕсли;
		
	Если ВыборкаДанных.ВидМероприятия = Перечисления.ВидыМероприятийТрудовойДеятельности.Прием
		Или ВыборкаДанных.ВидМероприятия = Перечисления.ВидыМероприятийТрудовойДеятельности.Перевод
		Или ВыборкаДанных.ВидМероприятия = Перечисления.ВидыМероприятийТрудовойДеятельности.Увольнение Тогда
		
		Если ЗначениеЗаполнено(ВыборкаДанных.ПредставлениеПодразделения) Тогда
			СоставПредставления.Добавить(ВыборкаДанных.ПредставлениеПодразделения);
		КонецЕсли;
		
	КонецЕсли;
		
	Если ЗначениеЗаполнено(ВыборкаДанных.Сведения) Тогда
		СоставПредставления.Добавить(ВыборкаДанных.Сведения);
	КонецЕсли;
	
	Если ВыборкаДанных.ЯвляетсяСовместителем Тогда
		СоставПредставления.Добавить(НСтр("ru = 'По совместительству'"));
	КонецЕсли;
		
	Если ВыборкаДанных.ВидМероприятия = Перечисления.ВидыМероприятийТрудовойДеятельности.ЗапретЗаниматьДолжность Тогда
		
		Если ЗначениеЗаполнено(ВыборкаДанных.ДатаС) Тогда
			
			СоставПредставления.Добавить(
				СтрШаблон(НСтр("ru = 'С %1 по %2'"),
				ВыборкаДанных.ДатаС,
				ВыборкаДанных.ДатаПо));
			
		КонецЕсли;
		
	КонецЕсли;
	
	ПредставлениеФункции = СтрСоединить(СоставПредставления, ". ");
	
	Если Не ПустаяСтрока(ПредставлениеФункции) Тогда
		ПредставлениеФункции = ПредставлениеФункции + ".";
	КонецЕсли;
	
	Возврат ПредставлениеФункции;
	
КонецФункции

Функция ПредставлениеПричиныУвольнения(СвойстваОснованияУвольнения, ДляКадровогоПриказа = Ложь) Экспорт
	
	НормативныйДокумент = КадровыйУчет.НормативныйДокументОснованияУвольненияВРодительномПадеже(СвойстваОснованияУвольнения.ОснованиеУвольнения);
	
	ЧастиПредставленияПунктаСтатьи = Новый Массив;
	Если ЗначениеЗаполнено(СвойстваОснованияУвольнения.ОснованиеУвольненияПодпункт) Тогда
		ЧастиПредставленияПунктаСтатьи.Добавить(ПредставлениеЧастиПунктаСтатьи(
			СвойстваОснованияУвольнения.ОснованиеУвольненияПодпункт, Нстр("ru = 'Подпункт'")));
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СвойстваОснованияУвольнения.ОснованиеУвольненияПункт) Тогда
		ЧастиПредставленияПунктаСтатьи.Добавить(ПредставлениеЧастиПунктаСтатьи(
			СвойстваОснованияУвольнения.ОснованиеУвольненияПункт, Нстр("ru = 'Пункт'")));
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СвойстваОснованияУвольнения.ОснованиеУвольненияЧасть) Тогда
		ЧастиПредставленияПунктаСтатьи.Добавить(ПредставлениеЧастиПунктаСтатьи(
			СвойстваОснованияУвольнения.ОснованиеУвольненияЧасть, Нстр("ru = 'Часть'")));
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СвойстваОснованияУвольнения.ОснованиеУвольненияСтатья) Тогда
		ЧастиПредставленияПунктаСтатьи.Добавить(ПредставлениеЧастиПунктаСтатьи(
			СвойстваОснованияУвольнения.ОснованиеУвольненияСтатья, Нстр("ru = 'Статья'")));
	КонецЕсли;
	
	ПредставлениеПунктаСтатьи = СтрСоединить(ЧастиПредставленияПунктаСтатьи, " ");
	
	ПредставлениеПричины = СокрЛП(СвойстваОснованияУвольнения.ОснованиеУвольненияТекстОснования);
	Если Не ПустаяСтрока(ПредставлениеПричины) И Не ПустаяСтрока(ПредставлениеПунктаСтатьи) Тогда
		ПредставлениеПричины = ПредставлениеПричины + ", ";
	КонецЕсли;
	
	ПредставлениеПричины = ПредставлениеПричины + ПредставлениеПунктаСтатьи;
	
	Если Не ПустаяСтрока(ПредставлениеПричины) И Не ПустаяСтрока(НормативныйДокумент) Тогда
		
		Если ДляКадровогоПриказа Тогда
			ПредставлениеПричины = ПредставлениеПричины + " ";
		Иначе
			ПредставлениеПричины = ПредставлениеПричины + ", ";
		КонецЕсли;
		
	КонецЕсли;
	
	ПредставлениеПричины = ПредставлениеПричины + НормативныйДокумент;
	
	Возврат ПредставлениеПричины;
	
КонецФункции

Функция ПредставлениеЧастиПунктаСтатьи(ЧастьПунктаСтатьи, ПредставлениеПункта)
	
	Если СтрНайти(ВРег(ЧастьПунктаСтатьи), ВРег(НСтр("ru = 'Абзац'"))) = 0 Тогда
		Возврат ПредставлениеПункта + " " + ЧастьПунктаСтатьи;
	КонецЕсли;
	
	Возврат ЧастьПунктаСтатьи;
	
КонецФункции

Функция ПредставлениеНомераДокументаОснования(ВыборкаДанных)
	
	Возврат ВыборкаДанных.НомерДокументаОснования + ?(ЗначениеЗаполнено(ВыборкаДанных.СерияДокументаОснования), " ", "") + ВыборкаДанных.СерияДокументаОснования;
	
КонецФункции

Функция ПредставлениеВидаМероприятия(Выборка)
	
	ПредставлениеВида = ВРег(Выборка.ВидМероприятия);
	Если Выборка.ЯвляетсяСовместителем Тогда
		ПредставлениеВида = ПредставлениеВида + " " + НСтр("ru = 'по совместительству'");
	КонецЕсли;
	
	Возврат ПредставлениеВида;
	
КонецФункции

Функция ПараметрыПостроенияВТЗаявленияСотрудников()
	
	ПараметрыПостроения = Новый Структура;
	ПараметрыПостроения.Вставить("ИмяВТСотрудникиПериоды", "ВТСотрудникиПериоды");
	ПараметрыПостроения.Вставить("ИмяПоляОрганизация", "Организация");
	ПараметрыПостроения.Вставить("ИмяПоляФизическоеЛицо", "ФизическоеЛицо");
	ПараметрыПостроения.Вставить("ИмяПоляПериод", "Период");
	
	Возврат ПараметрыПостроения;
	
КонецФункции

Функция СоздатьВТЗаявленияСотрудников(МенеджерВременныхТаблиц, ТолькоРазрешенные, ПараметрыПостроения, ИмяВТСотрудникиПериоды = "ВТСотрудникиПериоды", ИсключаемыйРегистратор = Неопределено)
	
	Запрос = ЗапросВТЗаявленияСотрудников(ТолькоРазрешенные, ПараметрыПостроения, ИмяВТСотрудникиПериоды, ИсключаемыйРегистратор);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Возврат Запрос.Выполнить();
	
КонецФункции

Функция ЗапросВТЗаявленияСотрудников(ТолькоРазрешенные, ПараметрыПостроения, ИмяВТЗаявленияСотрудников = "ВТЗаявленияСотрудников", ИсключаемыйРегистратор = Неопределено, ПоляОтбораПериодическихДанных = Неопределено)
	
	Запрос = Новый Запрос;
	
	ОписаниеФильтра = ЗарплатаКадрыОбщиеНаборыДанных.ОписаниеФильтраДляСоздатьВТИмяРегистра(
		ПараметрыПостроения.ИмяВТСотрудникиПериоды, "Организация,ФизическоеЛицо");
	
	ОписаниеФильтра.СоответствиеИзмеренийРегистраИзмерениямФильтра.Вставить(
		"Организация", ПараметрыПостроения.ИмяПоляОрганизация);
	
	ОписаниеФильтра.СоответствиеИзмеренийРегистраИзмерениямФильтра.Вставить(
		"ФизическоеЛицо", ПараметрыПостроения.ИмяПоляФизическоеЛицо);
	
	ОписаниеФильтра.СоответствиеИзмеренийРегистраИзмерениямФильтра.Вставить(
		"Период", ПараметрыПостроения.ИмяПоляПериод);
	
	ПараметрыПостроенияСреза = ЗарплатаКадрыОбщиеНаборыДанных.ПараметрыПостроенияДляСоздатьВТИмяРегистраСрез();
	Если ЗначениеЗаполнено(ИсключаемыйРегистратор) Тогда
		
		ЗарплатаКадрыОбщиеНаборыДанных.ДобавитьВКоллекциюОтбор(
			ПараметрыПостроенияСреза.Отборы, "Регистратор", "<>", ИсключаемыйРегистратор);
		
	КонецЕсли;
	
	Запрос =
		ЗарплатаКадрыОбщиеНаборыДанных.ЗапросВТИмяРегистраСрез(
			"ЗаявленияОВеденииТрудовыхКнижек",
			ТолькоРазрешенные,
			ОписаниеФильтра,
			ПараметрыПостроенияСреза,
			Истина);
	
	ТекстЗапросаВТЗаявленияСотрудников =
		"ВЫБРАТЬ
		|	СотрудникиПериоды.Период КАК Период,
		|	СотрудникиПериоды.Организация КАК Организация,
		|	СотрудникиПериоды.ФизическоеЛицо КАК ФизическоеЛицо,
		|	МАКСИМУМ(ЗаявленияОВеденииТрудовыхКнижекСрезПоследних.ПериодЗаписи) КАК ТекущийПериодЗаписи
		|ПОМЕСТИТЬ ВТПериодыЗаписиЗаявленийОВеденииТрудовыхКнижек
		|ИЗ
		|	ВТСотрудникиПериоды КАК СотрудникиПериоды
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаявленияОВеденииТрудовыхКнижекСрезПоследних КАК ЗаявленияОВеденииТрудовыхКнижекСрезПоследних
		|		ПО СотрудникиПериоды.Период = ЗаявленияОВеденииТрудовыхКнижекСрезПоследних.Период
		|			И СотрудникиПериоды.Организация = ЗаявленияОВеденииТрудовыхКнижекСрезПоследних.Организация
		|			И СотрудникиПериоды.ФизическоеЛицо = ЗаявленияОВеденииТрудовыхКнижекСрезПоследних.ФизическоеЛицо
		|
		|СГРУППИРОВАТЬ ПО
		|	СотрудникиПериоды.Период,
		|	СотрудникиПериоды.Организация,
		|	СотрудникиПериоды.ФизическоеЛицо
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	СотрудникиПериоды.Период КАК Период,
		|	ЗаявленияОВеденииТрудовыхКнижекСрезПоследних.ПериодЗаписи КАК ПериодЗаписи,
		|	ЗаявленияОВеденииТрудовыхКнижекСрезПоследних.Регистратор КАК Регистратор,
		|	ЗаявленияОВеденииТрудовыхКнижекСрезПоследних.ПериодЗаписи КАК Дата,
		|	СотрудникиПериоды.Организация КАК Организация,
		|	СотрудникиПериоды.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ЗаявленияОВеденииТрудовыхКнижекСрезПоследних.ВидЗаявления КАК ВидЗаявления,
		|	ЗаявленияОВеденииТрудовыхКнижекСрезПоследних.Заявление КАК Заявление,
		|	ВЫБОР
		|		КОГДА ЗаявленияОВеденииТрудовыхКнижекСрезПоследних.Заявление ЕСТЬ NULL
		|			ТОГДА NULL
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЗаявленияОВеденииТрудовыхКнижекПереданныеСрезПоследних.Заявление ЕСТЬ NULL
		|					ТОГДА ЛОЖЬ
		|				ИНАЧЕ ИСТИНА
		|			КОНЕЦ
		|	КОНЕЦ КАК Передано,
		|	ЗаявленияОВеденииТрудовыхКнижекПереданныеСрезПоследних.ДатаПередачи КАК ДатаПередачи,
		|	ВЫБОР
		|		КОГДА ЗаявленияОВеденииТрудовыхКнижекСрезПоследних.Заявление ЕСТЬ NULL
		|			ТОГДА NULL
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЗаявленияОВеденииТрудовыхКнижекОтозванные.Заявление ЕСТЬ NULL
		|					ТОГДА ЛОЖЬ
		|				ИНАЧЕ ИСТИНА
		|			КОНЕЦ
		|	КОНЕЦ КАК Отозвано,
		|	ЗаявленияОВеденииТрудовыхКнижекОтозванные.ДатаОтзыва КАК ДатаОтзыва,
		|	ЗаявленияОВеденииТрудовыхКнижекПереданныеОтозванные.ДатаПередачи КАК ДатаПередачиОтзыва,
		|	ВЫБОР
		|		КОГДА ПериодыЗаписиЗаявленийОВеденииТрудовыхКнижек.ТекущийПериодЗаписи ЕСТЬ NULL
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ТекущееЗаявление
		|ПОМЕСТИТЬ ВТЗаявленияСотрудников
		|ИЗ
		|	ВТСотрудникиПериоды КАК СотрудникиПериоды
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаявленияОВеденииТрудовыхКнижекСрезПоследних КАК ЗаявленияОВеденииТрудовыхКнижекСрезПоследних
		|			{ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗаявленияОВеденииТрудовыхКнижекПереданные КАК ЗаявленияОВеденииТрудовыхКнижекПереданныеСрезПоследних
		|			ПО ЗаявленияОВеденииТрудовыхКнижекСрезПоследних.Организация = ЗаявленияОВеденииТрудовыхКнижекПереданныеСрезПоследних.Организация
		|				И ЗаявленияОВеденииТрудовыхКнижекСрезПоследних.ФизическоеЛицо = ЗаявленияОВеденииТрудовыхКнижекПереданныеСрезПоследних.ФизическоеЛицо
		|				И ЗаявленияОВеденииТрудовыхКнижекСрезПоследних.Заявление = ЗаявленияОВеденииТрудовыхКнижекПереданныеСрезПоследних.Заявление
		|				И (НЕ ЕСТЬNULL(ЗаявленияОВеденииТрудовыхКнижекПереданныеСрезПоследних.Отозвано, ИСТИНА))}
		|			{ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗаявленияОВеденииТрудовыхКнижекОтозванные КАК ЗаявленияОВеденииТрудовыхКнижекОтозванные
		|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗаявленияОВеденииТрудовыхКнижекПереданные КАК ЗаявленияОВеденииТрудовыхКнижекПереданныеОтозванные
		|				ПО ЗаявленияОВеденииТрудовыхКнижекОтозванные.Организация = ЗаявленияОВеденииТрудовыхКнижекПереданныеОтозванные.Организация
		|					И ЗаявленияОВеденииТрудовыхКнижекОтозванные.ФизическоеЛицо = ЗаявленияОВеденииТрудовыхКнижекПереданныеОтозванные.ФизическоеЛицо
		|					И ЗаявленияОВеденииТрудовыхКнижекОтозванные.Заявление = ЗаявленияОВеденииТрудовыхКнижекПереданныеОтозванные.Заявление
		|					И (ЕСТЬNULL(ЗаявленияОВеденииТрудовыхКнижекПереданныеОтозванные.Отозвано, ЛОЖЬ))
		|			ПО ЗаявленияОВеденииТрудовыхКнижекСрезПоследних.Организация = ЗаявленияОВеденииТрудовыхКнижекОтозванные.Организация
		|				И ЗаявленияОВеденииТрудовыхКнижекСрезПоследних.ФизическоеЛицо = ЗаявленияОВеденииТрудовыхКнижекОтозванные.ФизическоеЛицо
		|				И ЗаявленияОВеденииТрудовыхКнижекСрезПоследних.Заявление = ЗаявленияОВеденииТрудовыхКнижекОтозванные.Заявление}
		|			{ЛЕВОЕ СОЕДИНЕНИЕ ВТПериодыЗаписиЗаявленийОВеденииТрудовыхКнижек КАК ПериодыЗаписиЗаявленийОВеденииТрудовыхКнижек
		|			ПО ЗаявленияОВеденииТрудовыхКнижекСрезПоследних.Период = ПериодыЗаписиЗаявленийОВеденииТрудовыхКнижек.Период
		|				И ЗаявленияОВеденииТрудовыхКнижекСрезПоследних.Организация = ПериодыЗаписиЗаявленийОВеденииТрудовыхКнижек.Организация
		|				И ЗаявленияОВеденииТрудовыхКнижекСрезПоследних.ФизическоеЛицо = ПериодыЗаписиЗаявленийОВеденииТрудовыхКнижек.ФизическоеЛицо
		|				И ЗаявленияОВеденииТрудовыхКнижекСрезПоследних.ПериодЗаписи = ПериодыЗаписиЗаявленийОВеденииТрудовыхКнижек.ТекущийПериодЗаписи}
		|		ПО СотрудникиПериоды.Период = ЗаявленияОВеденииТрудовыхКнижекСрезПоследних.Период
		|			И СотрудникиПериоды.Организация = ЗаявленияОВеденииТрудовыхКнижекСрезПоследних.Организация
		|			И СотрудникиПериоды.ФизическоеЛицо = ЗаявленияОВеденииТрудовыхКнижекСрезПоследних.ФизическоеЛицо
		|ГДЕ
		|	&УсловияОтбора";
	
	Если ТипЗнч(ПоляОтбораПериодическихДанных) = Тип("Структура")
		И ПоляОтбораПериодическихДанных.Свойство("ЗаявленияОВеденииТрудовыхКнижекПереданные") Тогда
		
		УсловияОтбора = Новый Массив;
		
		СчетчикПараметров = 0;
		Для Каждого ОписаниеУсловия Из ПоляОтбораПериодическихДанных.ЗаявленияОВеденииТрудовыхКнижекПереданные Цикл
			
			ПараметрУсловия = "ПараметрЗаявленияОВеденииТрудовыхКнижекПереданные" + СчетчикПараметров;
			Запрос.УстановитьПараметр(ПараметрУсловия, ОписаниеУсловия.ПравоеЗначение);
			
			ТекстУсловия = "ЗаявленияОВеденииТрудовыхКнижекПереданныеСрезПоследних." + ОписаниеУсловия.ЛевоеЗначение + " " + ОписаниеУсловия.ВидСравнения + " (&" + ПараметрУсловия + ")";
			УсловияОтбора.Добавить(ТекстУсловия);
			
			ТекстУсловия = СтрЗаменить(ТекстУсловия, "ЗаявленияОВеденииТрудовыхКнижекПереданныеСрезПоследних", "ЗаявленияОВеденииТрудовыхКнижекПереданныеОтозванные");
			УсловияОтбора.Добавить(ТекстУсловия);
			
			СчетчикПараметров = СчетчикПараметров + 1;
			
		КонецЦикла;
		
		ТекстЗапросаВТЗаявленияСотрудников = СтрЗаменить(ТекстЗапросаВТЗаявленияСотрудников, "&УсловияОтбора", СтрСоединить(УсловияОтбора, Символы.ПС + " И "));
		
	Иначе
		ТекстЗапросаВТЗаявленияСотрудников = СтрЗаменить(ТекстЗапросаВТЗаявленияСотрудников, "&УсловияОтбора", "ИСТИНА");
	КонецЕсли;
	
	ТекстЗапросаВТЗаявленияСотрудников = СтрЗаменить(ТекстЗапросаВТЗаявленияСотрудников, "ВТСотрудникиПериоды",
		ПараметрыПостроения.ИмяВТСотрудникиПериоды);
	ТекстЗапросаВТЗаявленияСотрудников = СтрЗаменить(ТекстЗапросаВТЗаявленияСотрудников, "СотрудникиПериоды.Организация",
		"СотрудникиПериоды." + ПараметрыПостроения.ИмяПоляОрганизация);
	ТекстЗапросаВТЗаявленияСотрудников = СтрЗаменить(ТекстЗапросаВТЗаявленияСотрудников, "СотрудникиПериоды.ФизическоеЛицо",
		"СотрудникиПериоды." + ПараметрыПостроения.ИмяПоляФизическоеЛицо);
	ТекстЗапросаВТЗаявленияСотрудников = СтрЗаменить(ТекстЗапросаВТЗаявленияСотрудников, "СотрудникиПериоды.Период",
		"СотрудникиПериоды." + ПараметрыПостроения.ИмяПоляПериод);
	
	ЗарплатаКадрыОбщиеНаборыДанных.ОбъединитьТекстыЗапросов(Запрос.Текст, ТекстЗапросаВТЗаявленияСотрудников);
	
	ЗарплатаКадрыОбщиеНаборыДанных.ЗаменитьИмяСоздаваемойВременнойТаблицы(Запрос.Текст, "ВТЗаявленияСотрудников", ИмяВТЗаявленияСотрудников);
	ЗарплатаКадрыОбщиеНаборыДанных.УстановитьВыборкуТолькоРазрешенныхДанных(Запрос.Текст, ТолькоРазрешенные);
	
	Если Не ПустаяСтрока(ИмяВТЗаявленияСотрудников) Тогда
		
		ИменаВременныхТаблицКУничтожению = Новый Массив;
		ИменаВременныхТаблицКУничтожению.Добавить("ВТЗаявленияОВеденииТрудовыхКнижекСрезПоследних");
		ИменаВременныхТаблицКУничтожению.Добавить("ВТПериодыЗаписиЗаявленийОВеденииТрудовыхКнижек");
		
		ЗарплатаКадрыОбщиеНаборыДанных.ДобавитьЗапросыУничтоженияВременныхТаблиц(Запрос.Текст, ИменаВременныхТаблицКУничтожению);
		
	КонецЕсли;
	
	Возврат Запрос;
	
КонецФункции

#Область КадровыеДанныеСотрудников

Функция НеобходимыСведенияЗаявленийОВеденииТрудовойКнижки(Знач ИмяПоля)
	
	ИмяПоля = ВРег(ИмяПоля);
	
	Возврат ИмяПоля = ВРег("ЗаявленияОПредоставленииСведенийОТрудовойДеятельности")
		Или ИмяПоля = ВРег("ЗаявленияОПредоставленииСведенийОТрудовойДеятельностиДата")
		Или ИмяПоля = ВРег("ЗаявленияОПредоставленииСведенийОТрудовойДеятельностиВид")
		Или ИмяПоля = ВРег("ЗаявленияОПредоставленииСведенийОТрудовойДеятельностиПередано")
		Или ИмяПоля = ВРег("ЗаявленияОПредоставленииСведенийОТрудовойДеятельностиОтозвано")
	
КонецФункции

Функция ПутьКДаннымСведенийЗаявленийОВеденииТрудовойКнижки(Знач ИмяПоля)
	
	ИмяПоляВВерхнемРегистре = ВРег(ИмяПоля);
	
	ПутьКДанным = "";
	
	Если ИмяПоляВВерхнемРегистре = ВРег("ЗаявленияОПредоставленииСведенийОТрудовойДеятельности") Тогда
		ПутьКДанным = "	СведенияЗаявленийОВеденииТрудовойКнижки.Заявление";
	ИначеЕсли ИмяПоляВВерхнемРегистре = ВРег("ЗаявленияОПредоставленииСведенийОТрудовойДеятельностиДата") Тогда
		ПутьКДанным = "	СведенияЗаявленийОВеденииТрудовойКнижки.Дата";
	ИначеЕсли ИмяПоляВВерхнемРегистре = ВРег("ЗаявленияОПредоставленииСведенийОТрудовойДеятельностиВид") Тогда
		ПутьКДанным = "	СведенияЗаявленийОВеденииТрудовойКнижки.ВидЗаявления";
	ИначеЕсли ИмяПоляВВерхнемРегистре = ВРег("ЗаявленияОПредоставленииСведенийОТрудовойДеятельностиПередано") Тогда
		ПутьКДанным = "	СведенияЗаявленийОВеденииТрудовойКнижки.Передано";
	ИначеЕсли ИмяПоляВВерхнемРегистре = ВРег("ЗаявленияОПредоставленииСведенийОТрудовойДеятельностиОтозвано") Тогда
		ПутьКДанным = "	СведенияЗаявленийОВеденииТрудовойКнижки.Отозвано";
	КонецЕсли;

	Возврат ПутьКДанным;
	
КонецФункции

Функция НеобходимыСведенияОМероприятияхТрудовойДеятельности(Знач ИмяПоля)
	
	ИмяПоля = ВРег(ИмяПоля);
	
	Возврат ИмяПоля = ВРег("МероприятияТрудовойДеятельностиПередавались")
	
КонецФункции

Функция ПутьКДаннымСведенийОМероприятияхТрудовойДеятельности(Знач ИмяПоля)
	
	ИмяПоляВВерхнемРегистре = ВРег(ИмяПоля);
	
	ПутьКДанным = "";
	
	Если ИмяПоляВВерхнемРегистре = ВРег("МероприятияТрудовойДеятельностиПередавались") Тогда
		ПутьКДанным = "	ЕСТЬNULL(СведенияОМероприятияхТрудовойДеятельности.Передавались, ЛОЖЬ)";
	КонецЕсли;

	Возврат ПутьКДанным;
	
КонецФункции

#КонецОбласти

Процедура СформироватьДвижения(НаборЗаписей, ДанныеДляПроведения, Записать)
	
	Если ДанныеДляПроведения <> Неопределено
		И ДанныеДляПроведения.Количество() > 0 Тогда
		
		Для Каждого СтрокаДанных Из ДанныеДляПроведения Цикл
			ЗаполнитьЗначенияСвойств(НаборЗаписей.Добавить(), СтрокаДанных);
		КонецЦикла;
		
		НаборЗаписей.Записывать =
			НаборЗаписей.Количество() > 0;
		
	КонецЕсли;
	
	Если Записать И НаборЗаписей.Записывать Тогда
		НаборЗаписей.Записать();
		НаборЗаписей.Записывать = Ложь;
	КонецЕсли;
	
КонецПроцедуры

Процедура СоздатьВТКПередачеМероприятияТрудовойДеятельности(МенеджерВременныхТаблиц, ТолькоРазрешенные, ИмяВТКПередачеМероприятияТрудовойДеятельности = "ВТКПередачеМероприятияТрудовойДеятельности", ИсключаемыйРегистратор = Неопределено)
	
	Запрос = ЗапросВТКПередачеМероприятияТрудовойДеятельности(ТолькоРазрешенные, ИмяВТКПередачеМероприятияТрудовойДеятельности, ИсключаемыйРегистратор);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
КонецПроцедуры

Функция ЗапросВТМероприятияТрудовойДеятельности(ТолькоРазрешенные, ИмяВТМероприятияТрудовойДеятельности, ИсключаемыйРегистратор = Неопределено)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаНачалаУчета", ДатаНачалаУчета());
	
	Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	МероприятияТрудовойДеятельностиПрочие.ФизическоеЛицо КАК ФизическоеЛицо,
		|	МероприятияТрудовойДеятельностиПрочие.Организация КАК Организация,
		|	МероприятияТрудовойДеятельностиПрочие.ИдМероприятия КАК ИдМероприятия,
		|	МероприятияТрудовойДеятельностиПрочие.Отменено КАК Отменено,
		|	МероприятияТрудовойДеятельностиПрочие.Сотрудник КАК Сотрудник,
		|	МероприятияТрудовойДеятельностиПрочие.ДатаМероприятия КАК ДатаМероприятия,
		|	МероприятияТрудовойДеятельностиПрочие.ВидМероприятия КАК ВидМероприятия,
		|	МероприятияТрудовойДеятельностиПрочие.Сведения КАК Сведения,
		|	МероприятияТрудовойДеятельностиПрочие.Подразделение КАК Подразделение,
		|	МероприятияТрудовойДеятельностиПрочие.Должность КАК Должность,
		|	МероприятияТрудовойДеятельностиПрочие.РазрядКатегория КАК РазрядКатегория,
		|	МероприятияТрудовойДеятельностиПрочие.КодПоРееструДолжностей КАК КодПоРееструДолжностей,
		|	МероприятияТрудовойДеятельностиПрочие.ТрудоваяФункция КАК ТрудоваяФункция,
		|	МероприятияТрудовойДеятельностиПрочие.НаименованиеДокументаОснования КАК НаименованиеДокументаОснования,
		|	МероприятияТрудовойДеятельностиПрочие.ДатаДокументаОснования КАК ДатаДокументаОснования,
		|	МероприятияТрудовойДеятельностиПрочие.СерияДокументаОснования КАК СерияДокументаОснования,
		|	МероприятияТрудовойДеятельностиПрочие.НомерДокументаОснования КАК НомерДокументаОснования,
		|	МероприятияТрудовойДеятельностиПрочие.ОснованиеУвольнения КАК ОснованиеУвольнения,
		|	МероприятияТрудовойДеятельностиПрочие.ДатаС КАК ДатаС,
		|	МероприятияТрудовойДеятельностиПрочие.ДатаПо КАК ДатаПо,
		|	МероприятияТрудовойДеятельностиПрочие.ДатаОтмены КАК ДатаОтмены,
		|	МероприятияТрудовойДеятельностиПрочие.ЯвляетсяСовместителем КАК ЯвляетсяСовместителем,
		|	ЕСТЬNULL(МероприятияТрудовойДеятельностиПереданные.ПредставлениеДолжности, МероприятияТрудовойДеятельностиПрочие.ПредставлениеДолжности) КАК ПредставлениеДолжности,
		|	ЕСТЬNULL(МероприятияТрудовойДеятельностиПереданные.ПредставлениеПодразделения, МероприятияТрудовойДеятельностиПрочие.ПредставлениеПодразделения) КАК ПредставлениеПодразделения,
		|	ЕСТЬNULL(МероприятияТрудовойДеятельностиПереданные.ОснованиеУвольненияТекстОснования, МероприятияТрудовойДеятельностиПрочие.ОснованиеУвольненияТекстОснования) КАК ОснованиеУвольненияТекстОснования,
		|	ЕСТЬNULL(МероприятияТрудовойДеятельностиПереданные.ОснованиеУвольненияСтатья, МероприятияТрудовойДеятельностиПрочие.ОснованиеУвольненияСтатья) КАК ОснованиеУвольненияСтатья,
		|	ЕСТЬNULL(МероприятияТрудовойДеятельностиПереданные.ОснованиеУвольненияЧасть, МероприятияТрудовойДеятельностиПрочие.ОснованиеУвольненияЧасть) КАК ОснованиеУвольненияЧасть,
		|	ЕСТЬNULL(МероприятияТрудовойДеятельностиПереданные.ОснованиеУвольненияПункт, МероприятияТрудовойДеятельностиПрочие.ОснованиеУвольненияПункт) КАК ОснованиеУвольненияПункт,
		|	ЕСТЬNULL(МероприятияТрудовойДеятельностиПереданные.ОснованиеУвольненияПодПункт, МероприятияТрудовойДеятельностиПрочие.ОснованиеУвольненияПодПункт) КАК ОснованиеУвольненияПодПункт,
		|	ЕСТЬNULL(МероприятияТрудовойДеятельностиПереданные.ОписаниеДолжности, МероприятияТрудовойДеятельностиПрочие.ОписаниеДолжности) КАК ОписаниеДолжности,
		|	ВЫБОР
		|		КОГДА МероприятияТрудовойДеятельностиПереданныеОтмененные.ИдМероприятия ЕСТЬ NULL
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ПереданоОтменено
		|ПОМЕСТИТЬ ВТПрочиеМероприятияТрудовойДеятельности
		|ИЗ
		|	ВТСотрудникиПериодыДанных КАК СотрудникиПериодыДанных
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.МероприятияТрудовойДеятельностиПрочие КАК МероприятияТрудовойДеятельностиПрочие
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МероприятияТрудовойДеятельностиПереданные КАК МероприятияТрудовойДеятельностиПереданные
		|			ПО МероприятияТрудовойДеятельностиПрочие.ИдМероприятия = МероприятияТрудовойДеятельностиПереданные.ИдМероприятия
		|				И (НЕ МероприятияТрудовойДеятельностиПереданные.Отменено)
		|				И (&ИсключаемыйРегистраторПереданныхМероприятийТрудовойДеятельности)
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МероприятияТрудовойДеятельностиПереданные КАК МероприятияТрудовойДеятельностиПереданныеОтмененные
		|			ПО МероприятияТрудовойДеятельностиПрочие.ИдМероприятия = МероприятияТрудовойДеятельностиПереданныеОтмененные.ИдМероприятия
		|				И МероприятияТрудовойДеятельностиПрочие.Отменено = МероприятияТрудовойДеятельностиПереданныеОтмененные.Отменено
		|				И (&ИсключаемыйРегистраторПереданныхОтмененныхМероприятийТрудовойДеятельности)
		|		ПО СотрудникиПериодыДанных.ФизическоеЛицо = МероприятияТрудовойДеятельностиПрочие.ФизическоеЛицо
		|			И СотрудникиПериодыДанных.Организация = МероприятияТрудовойДеятельностиПрочие.Организация
		|			И СотрудникиПериодыДанных.Сотрудник = МероприятияТрудовойДеятельностиПрочие.Сотрудник
		|ГДЕ
		|	НЕ МероприятияТрудовойДеятельностиПереданные.ИдМероприятия ЕСТЬ NULL
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	МероприятияТрудовойДеятельности.Регистратор КАК Регистратор,
		|	МероприятияТрудовойДеятельности.ФизическоеЛицо КАК ФизическоеЛицо,
		|	МероприятияТрудовойДеятельности.Организация КАК Организация,
		|	МероприятияТрудовойДеятельности.ИдМероприятия КАК ИдМероприятия,
		|	МероприятияТрудовойДеятельности.Отменено КАК Отменено,
		|	МероприятияТрудовойДеятельности.Сотрудник КАК Сотрудник,
		|	МероприятияТрудовойДеятельности.ДатаМероприятия КАК ДатаМероприятия,
		|	МероприятияТрудовойДеятельности.ВидМероприятия КАК ВидМероприятия,
		|	МероприятияТрудовойДеятельности.Сведения КАК Сведения,
		|	МероприятияТрудовойДеятельности.Подразделение КАК Подразделение,
		|	МероприятияТрудовойДеятельности.Должность КАК Должность,
		|	МероприятияТрудовойДеятельности.РазрядКатегория КАК РазрядКатегория,
		|	МероприятияТрудовойДеятельности.КодПоРееструДолжностей КАК КодПоРееструДолжностей,
		|	МероприятияТрудовойДеятельности.ТрудоваяФункция КАК ТрудоваяФункция,
		|	МероприятияТрудовойДеятельности.НаименованиеДокументаОснования КАК НаименованиеДокументаОснования,
		|	МероприятияТрудовойДеятельности.ДатаДокументаОснования КАК ДатаДокументаОснования,
		|	МероприятияТрудовойДеятельности.СерияДокументаОснования КАК СерияДокументаОснования,
		|	МероприятияТрудовойДеятельности.НомерДокументаОснования КАК НомерДокументаОснования,
		|	МероприятияТрудовойДеятельности.ОснованиеУвольнения КАК ОснованиеУвольнения,
		|	МероприятияТрудовойДеятельности.ДатаС КАК ДатаС,
		|	МероприятияТрудовойДеятельности.ДатаПо КАК ДатаПо,
		|	МероприятияТрудовойДеятельности.ДатаОтмены КАК ДатаОтмены,
		|	МероприятияТрудовойДеятельности.ЯвляетсяСовместителем КАК ЯвляетсяСовместителем,
		|	ВЫБОР
		|		КОГДА МероприятияТрудовойДеятельности.ДатаОтмены = ДАТАВРЕМЯ(1, 1, 1)
		|			ТОГДА МероприятияТрудовойДеятельности.ДатаМероприятия
		|		ИНАЧЕ МероприятияТрудовойДеятельности.ДатаОтмены
		|	КОНЕЦ КАК ДатаПорядка,
		|	ВЫБОР
		|		КОГДА МероприятияТрудовойДеятельностиПереданные.ИдМероприятия ЕСТЬ NULL
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК Передано,
		|	ЕСТЬNULL(МероприятияТрудовойДеятельностиПереданные.ПредставлениеДолжности, МероприятияТрудовойДеятельности.ПредставлениеДолжности) КАК ПредставлениеДолжности,
		|	ЕСТЬNULL(МероприятияТрудовойДеятельностиПереданные.ПредставлениеПодразделения, МероприятияТрудовойДеятельности.ПредставлениеПодразделения) КАК ПредставлениеПодразделения,
		|	ЕСТЬNULL(МероприятияТрудовойДеятельностиПереданные.ОснованиеУвольненияТекстОснования, МероприятияТрудовойДеятельности.ОснованиеУвольненияТекстОснования) КАК ОснованиеУвольненияТекстОснования,
		|	ЕСТЬNULL(МероприятияТрудовойДеятельностиПереданные.ОснованиеУвольненияСтатья, МероприятияТрудовойДеятельности.ОснованиеУвольненияСтатья) КАК ОснованиеУвольненияСтатья,
		|	ЕСТЬNULL(МероприятияТрудовойДеятельностиПереданные.ОснованиеУвольненияЧасть, МероприятияТрудовойДеятельности.ОснованиеУвольненияЧасть) КАК ОснованиеУвольненияЧасть,
		|	ЕСТЬNULL(МероприятияТрудовойДеятельностиПереданные.ОснованиеУвольненияПункт, МероприятияТрудовойДеятельности.ОснованиеУвольненияПункт) КАК ОснованиеУвольненияПункт,
		|	ЕСТЬNULL(МероприятияТрудовойДеятельностиПереданные.ОснованиеУвольненияПодПункт, МероприятияТрудовойДеятельности.ОснованиеУвольненияПодПункт) КАК ОснованиеУвольненияПодПункт,
		|	ЕСТЬNULL(МероприятияТрудовойДеятельностиПереданные.ОписаниеДолжности, МероприятияТрудовойДеятельности.ОписаниеДолжности) КАК ОписаниеДолжности
		|ПОМЕСТИТЬ ВТПредварительноМероприятияТрудовойДеятельности
		|ИЗ
		|	ВТСотрудникиПериодыДанных КАК СотрудникиПериодыДанных
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.МероприятияТрудовойДеятельности КАК МероприятияТрудовойДеятельности
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МероприятияТрудовойДеятельностиПереданные КАК МероприятияТрудовойДеятельностиПереданные
		|			ПО МероприятияТрудовойДеятельности.ИдМероприятия = МероприятияТрудовойДеятельностиПереданные.ИдМероприятия
		|				И МероприятияТрудовойДеятельности.Отменено = МероприятияТрудовойДеятельностиПереданные.Отменено
		|				И (&ИсключаемыйРегистраторПереданныхМероприятийТрудовойДеятельности)
		|		ПО СотрудникиПериодыДанных.ФизическоеЛицо = МероприятияТрудовойДеятельности.ФизическоеЛицо
		|			И СотрудникиПериодыДанных.Организация = МероприятияТрудовойДеятельности.Организация
		|			И СотрудникиПериодыДанных.Сотрудник = МероприятияТрудовойДеятельности.Сотрудник
		|			И (МероприятияТрудовойДеятельности.ДатаМероприятия >= &ДатаНачалаУчета)
		|			И СотрудникиПериодыДанных.ОкончаниеПериода >= МероприятияТрудовойДеятельности.ДатаОтмены
		|ГДЕ
		|	&ИсключаемыйРегистраторМероприятийТрудовойДеятельности
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	МероприятияТрудовойДеятельности.Регистратор КАК Регистратор,
		|	МероприятияТрудовойДеятельности.ФизическоеЛицо КАК ФизическоеЛицо,
		|	МероприятияТрудовойДеятельности.Организация КАК Организация,
		|	МероприятияТрудовойДеятельности.ИдМероприятия КАК ИдМероприятия,
		|	МероприятияТрудовойДеятельности.Отменено КАК Отменено,
		|	МероприятияТрудовойДеятельности.Сотрудник КАК Сотрудник,
		|	МероприятияТрудовойДеятельности.ДатаМероприятия КАК ДатаМероприятия,
		|	МероприятияТрудовойДеятельности.ВидМероприятия КАК ВидМероприятия,
		|	МероприятияТрудовойДеятельности.Сведения КАК Сведения,
		|	МероприятияТрудовойДеятельности.Подразделение КАК Подразделение,
		|	МероприятияТрудовойДеятельности.Должность КАК Должность,
		|	МероприятияТрудовойДеятельности.РазрядКатегория КАК РазрядКатегория,
		|	МероприятияТрудовойДеятельности.КодПоРееструДолжностей КАК КодПоРееструДолжностей,
		|	МероприятияТрудовойДеятельности.ТрудоваяФункция КАК ТрудоваяФункция,
		|	МероприятияТрудовойДеятельности.НаименованиеДокументаОснования КАК НаименованиеДокументаОснования,
		|	МероприятияТрудовойДеятельности.ДатаДокументаОснования КАК ДатаДокументаОснования,
		|	МероприятияТрудовойДеятельности.СерияДокументаОснования КАК СерияДокументаОснования,
		|	МероприятияТрудовойДеятельности.НомерДокументаОснования КАК НомерДокументаОснования,
		|	МероприятияТрудовойДеятельности.ОснованиеУвольнения КАК ОснованиеУвольнения,
		|	МероприятияТрудовойДеятельности.ДатаС КАК ДатаС,
		|	МероприятияТрудовойДеятельности.ДатаПо КАК ДатаПо,
		|	МероприятияТрудовойДеятельности.ДатаОтмены КАК ДатаОтмены,
		|	МероприятияТрудовойДеятельности.ЯвляетсяСовместителем КАК ЯвляетсяСовместителем,
		|	МероприятияТрудовойДеятельности.ДатаПорядка КАК ДатаПорядка,
		|	МероприятияТрудовойДеятельности.ПредставлениеДолжности КАК ПредставлениеДолжности,
		|	МероприятияТрудовойДеятельности.ПредставлениеПодразделения КАК ПредставлениеПодразделения,
		|	МероприятияТрудовойДеятельности.ОснованиеУвольненияТекстОснования КАК ОснованиеУвольненияТекстОснования,
		|	МероприятияТрудовойДеятельности.ОснованиеУвольненияСтатья КАК ОснованиеУвольненияСтатья,
		|	МероприятияТрудовойДеятельности.ОснованиеУвольненияЧасть КАК ОснованиеУвольненияЧасть,
		|	МероприятияТрудовойДеятельности.ОснованиеУвольненияПункт КАК ОснованиеУвольненияПункт,
		|	МероприятияТрудовойДеятельности.ОснованиеУвольненияПодПункт КАК ОснованиеУвольненияПодПункт,
		|	МероприятияТрудовойДеятельности.ОписаниеДолжности КАК ОписаниеДолжности,
		|	МероприятияТрудовойДеятельности.Передано КАК Передано
		|ПОМЕСТИТЬ ВТМероприятияТрудовойДеятельности
		|ИЗ
		|	ВТПредварительноМероприятияТрудовойДеятельности КАК МероприятияТрудовойДеятельности
		|ГДЕ
		|	МероприятияТрудовойДеятельности.Передано
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	МероприятияТрудовойДеятельности.Регистратор,
		|	МероприятияТрудовойДеятельности.ФизическоеЛицо,
		|	МероприятияТрудовойДеятельности.Организация,
		|	МероприятияТрудовойДеятельности.ИдМероприятия,
		|	МероприятияТрудовойДеятельности.Отменено,
		|	МероприятияТрудовойДеятельности.Сотрудник,
		|	МероприятияТрудовойДеятельности.ДатаМероприятия,
		|	МероприятияТрудовойДеятельности.ВидМероприятия,
		|	МероприятияТрудовойДеятельности.Сведения,
		|	МероприятияТрудовойДеятельности.Подразделение,
		|	МероприятияТрудовойДеятельности.Должность,
		|	МероприятияТрудовойДеятельности.РазрядКатегория,
		|	МероприятияТрудовойДеятельности.КодПоРееструДолжностей,
		|	МероприятияТрудовойДеятельности.ТрудоваяФункция,
		|	МероприятияТрудовойДеятельности.НаименованиеДокументаОснования,
		|	МероприятияТрудовойДеятельности.ДатаДокументаОснования,
		|	МероприятияТрудовойДеятельности.СерияДокументаОснования,
		|	МероприятияТрудовойДеятельности.НомерДокументаОснования,
		|	МероприятияТрудовойДеятельности.ОснованиеУвольнения,
		|	МероприятияТрудовойДеятельности.ДатаС,
		|	МероприятияТрудовойДеятельности.ДатаПо,
		|	МероприятияТрудовойДеятельности.ДатаОтмены,
		|	МероприятияТрудовойДеятельности.ЯвляетсяСовместителем,
		|	МероприятияТрудовойДеятельности.ДатаПорядка,
		|	МероприятияТрудовойДеятельности.ПредставлениеДолжности,
		|	МероприятияТрудовойДеятельности.ПредставлениеПодразделения,
		|	МероприятияТрудовойДеятельности.ОснованиеУвольненияТекстОснования,
		|	МероприятияТрудовойДеятельности.ОснованиеУвольненияСтатья,
		|	МероприятияТрудовойДеятельности.ОснованиеУвольненияЧасть,
		|	МероприятияТрудовойДеятельности.ОснованиеУвольненияПункт,
		|	МероприятияТрудовойДеятельности.ОснованиеУвольненияПодПункт,
		|	МероприятияТрудовойДеятельности.ОписаниеДолжности,
		|	МероприятияТрудовойДеятельности.Передано
		|ИЗ
		|	ВТПредварительноМероприятияТрудовойДеятельности КАК МероприятияТрудовойДеятельности
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПредварительноМероприятияТрудовойДеятельности КАК МероприятияТрудовойДеятельностиПереданныеОтмененные
		|		ПО МероприятияТрудовойДеятельности.ИдМероприятия = МероприятияТрудовойДеятельностиПереданныеОтмененные.ИдМероприятия
		|			И (МероприятияТрудовойДеятельностиПереданныеОтмененные.Отменено)
		|			И (НЕ МероприятияТрудовойДеятельностиПереданныеОтмененные.Передано)
		|ГДЕ
		|	НЕ МероприятияТрудовойДеятельности.Передано
		|	И НЕ МероприятияТрудовойДеятельности.Отменено
		|	И МероприятияТрудовойДеятельностиПереданныеОтмененные.ИдМероприятия ЕСТЬ NULL
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	МероприятияТрудовойДеятельности.Регистратор,
		|	МероприятияТрудовойДеятельности.ФизическоеЛицо,
		|	МероприятияТрудовойДеятельности.Организация,
		|	МероприятияТрудовойДеятельности.ИдМероприятия,
		|	МероприятияТрудовойДеятельности.Отменено,
		|	МероприятияТрудовойДеятельности.Сотрудник,
		|	МероприятияТрудовойДеятельности.ДатаМероприятия,
		|	МероприятияТрудовойДеятельности.ВидМероприятия,
		|	МероприятияТрудовойДеятельности.Сведения,
		|	МероприятияТрудовойДеятельности.Подразделение,
		|	МероприятияТрудовойДеятельности.Должность,
		|	МероприятияТрудовойДеятельности.РазрядКатегория,
		|	МероприятияТрудовойДеятельности.КодПоРееструДолжностей,
		|	МероприятияТрудовойДеятельности.ТрудоваяФункция,
		|	МероприятияТрудовойДеятельности.НаименованиеДокументаОснования,
		|	МероприятияТрудовойДеятельности.ДатаДокументаОснования,
		|	МероприятияТрудовойДеятельности.СерияДокументаОснования,
		|	МероприятияТрудовойДеятельности.НомерДокументаОснования,
		|	МероприятияТрудовойДеятельности.ОснованиеУвольнения,
		|	МероприятияТрудовойДеятельности.ДатаС,
		|	МероприятияТрудовойДеятельности.ДатаПо,
		|	МероприятияТрудовойДеятельности.ДатаОтмены,
		|	МероприятияТрудовойДеятельности.ЯвляетсяСовместителем,
		|	МероприятияТрудовойДеятельности.ДатаПорядка,
		|	МероприятияТрудовойДеятельности.ПредставлениеДолжности,
		|	МероприятияТрудовойДеятельности.ПредставлениеПодразделения,
		|	МероприятияТрудовойДеятельности.ОснованиеУвольненияТекстОснования,
		|	МероприятияТрудовойДеятельности.ОснованиеУвольненияСтатья,
		|	МероприятияТрудовойДеятельности.ОснованиеУвольненияЧасть,
		|	МероприятияТрудовойДеятельности.ОснованиеУвольненияПункт,
		|	МероприятияТрудовойДеятельности.ОснованиеУвольненияПодПункт,
		|	МероприятияТрудовойДеятельности.ОписаниеДолжности,
		|	МероприятияТрудовойДеятельности.Передано
		|ИЗ
		|	ВТПредварительноМероприятияТрудовойДеятельности КАК МероприятияТрудовойДеятельности
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПредварительноМероприятияТрудовойДеятельности КАК МероприятияТрудовойДеятельностиПереданныеОтмененные
		|		ПО МероприятияТрудовойДеятельности.ИдМероприятия = МероприятияТрудовойДеятельностиПереданныеОтмененные.ИдМероприятия
		|			И (НЕ МероприятияТрудовойДеятельностиПереданныеОтмененные.Отменено)
		|			И (МероприятияТрудовойДеятельностиПереданныеОтмененные.Передано)
		|ГДЕ
		|	НЕ МероприятияТрудовойДеятельности.Передано
		|	И МероприятияТрудовойДеятельности.Отменено
		|	И НЕ МероприятияТрудовойДеятельностиПереданныеОтмененные.ИдМероприятия ЕСТЬ NULL
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	NULL,
		|	МероприятияТрудовойДеятельностиПрочие.ФизическоеЛицо,
		|	МероприятияТрудовойДеятельностиПрочие.Организация,
		|	МероприятияТрудовойДеятельностиПрочие.ИдМероприятия,
		|	МероприятияТрудовойДеятельностиПрочие.Отменено,
		|	МероприятияТрудовойДеятельностиПрочие.Сотрудник,
		|	МероприятияТрудовойДеятельностиПрочие.ДатаМероприятия,
		|	МероприятияТрудовойДеятельностиПрочие.ВидМероприятия,
		|	МероприятияТрудовойДеятельностиПрочие.Сведения,
		|	МероприятияТрудовойДеятельностиПрочие.Подразделение,
		|	МероприятияТрудовойДеятельностиПрочие.Должность,
		|	МероприятияТрудовойДеятельностиПрочие.РазрядКатегория,
		|	МероприятияТрудовойДеятельностиПрочие.КодПоРееструДолжностей,
		|	МероприятияТрудовойДеятельностиПрочие.ТрудоваяФункция,
		|	МероприятияТрудовойДеятельностиПрочие.НаименованиеДокументаОснования,
		|	МероприятияТрудовойДеятельностиПрочие.ДатаДокументаОснования,
		|	МероприятияТрудовойДеятельностиПрочие.СерияДокументаОснования,
		|	МероприятияТрудовойДеятельностиПрочие.НомерДокументаОснования,
		|	МероприятияТрудовойДеятельностиПрочие.ОснованиеУвольнения,
		|	МероприятияТрудовойДеятельностиПрочие.ДатаС,
		|	МероприятияТрудовойДеятельностиПрочие.ДатаПо,
		|	ДАТАВРЕМЯ(1, 1, 1),
		|	МероприятияТрудовойДеятельностиПрочие.ЯвляетсяСовместителем,
		|	МероприятияТрудовойДеятельностиПрочие.ДатаМероприятия,
		|	МероприятияТрудовойДеятельностиПрочие.ПредставлениеДолжности,
		|	МероприятияТрудовойДеятельностиПрочие.ПредставлениеПодразделения,
		|	МероприятияТрудовойДеятельностиПрочие.ОснованиеУвольненияТекстОснования,
		|	МероприятияТрудовойДеятельностиПрочие.ОснованиеУвольненияСтатья,
		|	МероприятияТрудовойДеятельностиПрочие.ОснованиеУвольненияЧасть,
		|	МероприятияТрудовойДеятельностиПрочие.ОснованиеУвольненияПункт,
		|	МероприятияТрудовойДеятельностиПрочие.ОснованиеУвольненияПодПункт,
		|	МероприятияТрудовойДеятельностиПрочие.ОписаниеДолжности,
		|	ИСТИНА
		|ИЗ
		|	ВТСотрудникиПериодыДанных КАК СотрудникиПериодыДанных
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПрочиеМероприятияТрудовойДеятельности КАК МероприятияТрудовойДеятельностиПрочие
		|		ПО СотрудникиПериодыДанных.ФизическоеЛицо = МероприятияТрудовойДеятельностиПрочие.ФизическоеЛицо
		|			И СотрудникиПериодыДанных.Сотрудник = МероприятияТрудовойДеятельностиПрочие.Сотрудник
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	NULL,
		|	МероприятияТрудовойДеятельностиПрочие.ФизическоеЛицо,
		|	МероприятияТрудовойДеятельностиПрочие.Организация,
		|	МероприятияТрудовойДеятельностиПрочие.ИдМероприятия,
		|	МероприятияТрудовойДеятельностиПрочие.Отменено,
		|	МероприятияТрудовойДеятельностиПрочие.Сотрудник,
		|	МероприятияТрудовойДеятельностиПрочие.ДатаМероприятия,
		|	МероприятияТрудовойДеятельностиПрочие.ВидМероприятия,
		|	МероприятияТрудовойДеятельностиПрочие.Сведения,
		|	МероприятияТрудовойДеятельностиПрочие.Подразделение,
		|	МероприятияТрудовойДеятельностиПрочие.Должность,
		|	МероприятияТрудовойДеятельностиПрочие.РазрядКатегория,
		|	МероприятияТрудовойДеятельностиПрочие.КодПоРееструДолжностей,
		|	МероприятияТрудовойДеятельностиПрочие.ТрудоваяФункция,
		|	МероприятияТрудовойДеятельностиПрочие.НаименованиеДокументаОснования,
		|	МероприятияТрудовойДеятельностиПрочие.ДатаДокументаОснования,
		|	МероприятияТрудовойДеятельностиПрочие.СерияДокументаОснования,
		|	МероприятияТрудовойДеятельностиПрочие.НомерДокументаОснования,
		|	МероприятияТрудовойДеятельностиПрочие.ОснованиеУвольнения,
		|	МероприятияТрудовойДеятельностиПрочие.ДатаС,
		|	МероприятияТрудовойДеятельностиПрочие.ДатаПо,
		|	МероприятияТрудовойДеятельностиПрочие.ДатаОтмены,
		|	МероприятияТрудовойДеятельностиПрочие.ЯвляетсяСовместителем,
		|	МероприятияТрудовойДеятельностиПрочие.ДатаОтмены,
		|	МероприятияТрудовойДеятельностиПрочие.ПредставлениеДолжности,
		|	МероприятияТрудовойДеятельностиПрочие.ПредставлениеПодразделения,
		|	МероприятияТрудовойДеятельностиПрочие.ОснованиеУвольненияТекстОснования,
		|	МероприятияТрудовойДеятельностиПрочие.ОснованиеУвольненияСтатья,
		|	МероприятияТрудовойДеятельностиПрочие.ОснованиеУвольненияЧасть,
		|	МероприятияТрудовойДеятельностиПрочие.ОснованиеУвольненияПункт,
		|	МероприятияТрудовойДеятельностиПрочие.ОснованиеУвольненияПодПункт,
		|	МероприятияТрудовойДеятельностиПрочие.ОписаниеДолжности,
		|	МероприятияТрудовойДеятельностиПрочие.ПереданоОтменено
		|ИЗ
		|	ВТСотрудникиПериодыДанных КАК СотрудникиПериодыДанных
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПрочиеМероприятияТрудовойДеятельности КАК МероприятияТрудовойДеятельностиПрочие
		|		ПО СотрудникиПериодыДанных.ФизическоеЛицо = МероприятияТрудовойДеятельностиПрочие.ФизическоеЛицо
		|			И СотрудникиПериодыДанных.Сотрудник = МероприятияТрудовойДеятельностиПрочие.Сотрудник
		|			И (МероприятияТрудовойДеятельностиПрочие.ДатаОтмены МЕЖДУ &ДатаНачалаУчета И СотрудникиПериодыДанных.ОкончаниеПериода)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТПрочиеМероприятияТрудовойДеятельности
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТПредварительноМероприятияТрудовойДеятельности";
	
	Если ИсключаемыйРегистратор = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ИсключаемыйРегистраторПереданныхМероприятийТрудовойДеятельности", "(ИСТИНА)");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ИсключаемыйРегистраторМероприятийТрудовойДеятельности", "(ИСТИНА)");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ИсключаемыйРегистраторПереданныхОтмененныхМероприятийТрудовойДеятельности", "(ИСТИНА)");
	Иначе
		
		Запрос.УстановитьПараметр("ИсключаемыйРегистратор", ИсключаемыйРегистратор);
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ИсключаемыйРегистраторПереданныхМероприятийТрудовойДеятельности",
			"НЕ МероприятияТрудовойДеятельностиПереданные.Регистратор В (&ИсключаемыйРегистратор)");
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ИсключаемыйРегистраторМероприятийТрудовойДеятельности",
			"НЕ МероприятияТрудовойДеятельности.Регистратор В (&ИсключаемыйРегистратор)");
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ИсключаемыйРегистраторПереданныхОтмененныхМероприятийТрудовойДеятельности",
			"НЕ МероприятияТрудовойДеятельностиПереданныеОтмененные.Регистратор В (&ИсключаемыйРегистратор)");
		
	КонецЕсли;
	
	ЗарплатаКадрыОбщиеНаборыДанных.УстановитьВыборкуТолькоРазрешенныхДанных(Запрос.Текст, ТолькоРазрешенные);
	ЗарплатаКадрыОбщиеНаборыДанных.ЗаменитьИмяСоздаваемойВременнойТаблицы(Запрос.Текст,
		"ВТМероприятияТрудовойДеятельности", ИмяВТМероприятияТрудовойДеятельности);
	
	Возврат Запрос;
	
КонецФункции

Функция ЗапросВТМероприятияТрудовойДеятельностиС01012021(ТолькоРазрешенные, ИмяВТМероприятияТрудовойДеятельности, ИсключаемыйРегистратор = Неопределено)
	
	Запрос = ЗапросВТМероприятияТрудовойДеятельности(ТолькоРазрешенные, "ВТКОбработкеМероприятияТрудовойДеятельности", ИсключаемыйРегистратор);
	
	ТекстЗапросаС01012021 =
		"ВЫБРАТЬ
		|	МероприятияТрудовойДеятельности.Сотрудник КАК Сотрудник,
		|	ДОБАВИТЬКДАТЕ(ВЫБОР
		|			КОГДА МероприятияТрудовойДеятельности.ДатаМероприятия > МероприятияТрудовойДеятельности.ДатаДокументаОснования
		|				ТОГДА МероприятияТрудовойДеятельности.ДатаМероприятия
		|			ИНАЧЕ МероприятияТрудовойДеятельности.ДатаДокументаОснования
		|		КОНЕЦ, ДЕНЬ, 1) КАК ОкончаниеПериода
		|ПОМЕСТИТЬ ВТПериодыПринятыхУволенныхСотрудников
		|ИЗ
		|	ВТКОбработкеМероприятияТрудовойДеятельности КАК МероприятияТрудовойДеятельности
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСотрудникиПериодыДанных КАК СотрудникиПериодыДанных
		|		ПО МероприятияТрудовойДеятельности.Сотрудник = СотрудникиПериодыДанных.Сотрудник
		|			И (ВЫБОР
		|				КОГДА МероприятияТрудовойДеятельности.ДатаМероприятия > МероприятияТрудовойДеятельности.ДатаДокументаОснования
		|					ТОГДА МероприятияТрудовойДеятельности.ДатаМероприятия
		|				ИНАЧЕ МероприятияТрудовойДеятельности.ДатаДокументаОснования
		|			КОНЕЦ > СотрудникиПериодыДанных.ОкончаниеПериода)
		|ГДЕ
		|	МероприятияТрудовойДеятельности.ВидМероприятия В (ЗНАЧЕНИЕ(Перечисление.ВидыМероприятийТрудовойДеятельности.Прием), ЗНАЧЕНИЕ(Перечисление.ВидыМероприятийТрудовойДеятельности.Увольнение))
		|	И НЕ МероприятияТрудовойДеятельности.Отменено
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СотрудникиПериодыДанных.Сотрудник КАК Сотрудник,
		|	СотрудникиПериодыДанных.НачалоПериода КАК НачалоПериода,
		|	ЕСТЬNULL(ПериодыПринятыхУволенныхСотрудников.ОкончаниеПериода, СотрудникиПериодыДанных.ОкончаниеПериода) КАК ОкончаниеПериода
		|ПОМЕСТИТЬ ВТСОкончаниемПериодаСотрудникиПериодыДанных
		|ИЗ
		|	ВТСотрудникиПериодыДанных КАК СотрудникиПериодыДанных
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПериодыПринятыхУволенныхСотрудников КАК ПериодыПринятыхУволенныхСотрудников
		|		ПО СотрудникиПериодыДанных.Сотрудник = ПериодыПринятыхУволенныхСотрудников.Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МероприятияТрудовойДеятельности.Регистратор КАК Регистратор,
		|	МероприятияТрудовойДеятельности.ФизическоеЛицо КАК ФизическоеЛицо,
		|	МероприятияТрудовойДеятельности.Организация КАК Организация,
		|	МероприятияТрудовойДеятельности.ИдМероприятия КАК ИдМероприятия,
		|	МероприятияТрудовойДеятельности.Отменено КАК Отменено,
		|	МероприятияТрудовойДеятельности.Сотрудник КАК Сотрудник,
		|	МероприятияТрудовойДеятельности.ДатаМероприятия КАК ДатаМероприятия,
		|	МероприятияТрудовойДеятельности.ВидМероприятия КАК ВидМероприятия,
		|	МероприятияТрудовойДеятельности.Сведения КАК Сведения,
		|	МероприятияТрудовойДеятельности.Подразделение КАК Подразделение,
		|	МероприятияТрудовойДеятельности.Должность КАК Должность,
		|	МероприятияТрудовойДеятельности.РазрядКатегория КАК РазрядКатегория,
		|	МероприятияТрудовойДеятельности.КодПоРееструДолжностей КАК КодПоРееструДолжностей,
		|	МероприятияТрудовойДеятельности.ТрудоваяФункция КАК ТрудоваяФункция,
		|	МероприятияТрудовойДеятельности.НаименованиеДокументаОснования КАК НаименованиеДокументаОснования,
		|	МероприятияТрудовойДеятельности.ДатаДокументаОснования КАК ДатаДокументаОснования,
		|	МероприятияТрудовойДеятельности.СерияДокументаОснования КАК СерияДокументаОснования,
		|	МероприятияТрудовойДеятельности.НомерДокументаОснования КАК НомерДокументаОснования,
		|	МероприятияТрудовойДеятельности.ОснованиеУвольнения КАК ОснованиеУвольнения,
		|	МероприятияТрудовойДеятельности.ДатаС КАК ДатаС,
		|	МероприятияТрудовойДеятельности.ДатаПо КАК ДатаПо,
		|	МероприятияТрудовойДеятельности.ДатаОтмены КАК ДатаОтмены,
		|	МероприятияТрудовойДеятельности.ЯвляетсяСовместителем КАК ЯвляетсяСовместителем,
		|	МероприятияТрудовойДеятельности.ДатаПорядка КАК ДатаПорядка,
		|	МероприятияТрудовойДеятельности.ПредставлениеДолжности КАК ПредставлениеДолжности,
		|	МероприятияТрудовойДеятельности.ПредставлениеПодразделения КАК ПредставлениеПодразделения,
		|	МероприятияТрудовойДеятельности.ОснованиеУвольненияТекстОснования КАК ОснованиеУвольненияТекстОснования,
		|	МероприятияТрудовойДеятельности.ОснованиеУвольненияСтатья КАК ОснованиеУвольненияСтатья,
		|	МероприятияТрудовойДеятельности.ОснованиеУвольненияЧасть КАК ОснованиеУвольненияЧасть,
		|	МероприятияТрудовойДеятельности.ОснованиеУвольненияПункт КАК ОснованиеУвольненияПункт,
		|	МероприятияТрудовойДеятельности.ОснованиеУвольненияПодПункт КАК ОснованиеУвольненияПодПункт,
		|	МероприятияТрудовойДеятельности.ОписаниеДолжности КАК ОписаниеДолжности,
		|	МероприятияТрудовойДеятельности.Передано КАК Передано
		|ПОМЕСТИТЬ ВТМероприятияТрудовойДеятельности
		|ИЗ
		|	ВТКОбработкеМероприятияТрудовойДеятельности КАК МероприятияТрудовойДеятельности
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСОкончаниемПериодаСотрудникиПериодыДанных КАК СотрудникиПериодыДанных
		|		ПО МероприятияТрудовойДеятельности.Сотрудник = СотрудникиПериодыДанных.Сотрудник
		|			И (ВЫБОР
		|				КОГДА МероприятияТрудовойДеятельности.ДатаМероприятия > МероприятияТрудовойДеятельности.ДатаДокументаОснования
		|					ТОГДА МероприятияТрудовойДеятельности.ДатаМероприятия
		|				ИНАЧЕ МероприятияТрудовойДеятельности.ДатаДокументаОснования
		|			КОНЕЦ <= СотрудникиПериодыДанных.ОкончаниеПериода)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТКОбработкеМероприятияТрудовойДеятельности
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТПериодыПринятыхУволенныхСотрудников
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТСОкончаниемПериодаСотрудникиПериодыДанных";
	
	ЗарплатаКадрыОбщиеНаборыДанных.ЗаменитьИмяСоздаваемойВременнойТаблицы(ТекстЗапросаС01012021,
		"ВТМероприятияТрудовойДеятельности", ИмяВТМероприятияТрудовойДеятельности);
	
	Запрос.Текст =
		Запрос.Текст
		+ ЗарплатаКадрыОбщиеНаборыДанных.РазделительЗапросов()
		+ ТекстЗапросаС01012021;
	
	Возврат Запрос;
	
КонецФункции

Функция ЗапросВТКПередачеМероприятияТрудовойДеятельности(ТолькоРазрешенные, ИмяВТКПередачеМероприятияТрудовойДеятельности, ИсключаемыйРегистратор = Неопределено)
	
	Запрос = ЗапросВТМероприятияДоНачалаУчета(ТолькоРазрешенные, "ВТМероприятияДоНачалаУчета", ИсключаемыйРегистратор);
	ЗапросВТМероприятияТрудовойДеятельности = ЗапросВТМероприятияТрудовойДеятельностиС01012021(ТолькоРазрешенные, "ВТМероприятияТрудовойДеятельности", ИсключаемыйРегистратор);
	ЗарплатаКадрыОбщиеНаборыДанных.ОбъединитьЗапросы(Запрос, ЗапросВТМероприятияТрудовойДеятельности);
	
	Запрос.УстановитьПараметр("НаименованиеДокументаОснования", НаименованиеДокументаОснования());
	
	ТекстЗапросаВТКПередачеМероприятияТрудовойДеятельности =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	МероприятияДоНачалаУчета.Регистратор КАК Регистратор,
		|	МероприятияДоНачалаУчета.ФизическоеЛицо КАК ФизическоеЛицо,
		|	МероприятияДоНачалаУчета.Организация КАК Организация,
		|	МероприятияДоНачалаУчета.ИдМероприятия КАК ИдМероприятия,
		|	МероприятияДоНачалаУчета.Сотрудник КАК СотрудникЗаписи,
		|	МероприятияДоНачалаУчета.ДатаМероприятия КАК ДатаМероприятия,
		|	МероприятияДоНачалаУчета.ВидМероприятия КАК ВидМероприятия,
		|	МероприятияДоНачалаУчета.Сведения КАК Сведения,
		|	МероприятияДоНачалаУчета.Подразделение КАК Подразделение,
		|	МероприятияДоНачалаУчета.Должность КАК Должность,
		|	МероприятияДоНачалаУчета.РазрядКатегория КАК РазрядКатегория,
		|	МероприятияДоНачалаУчета.КодПоРееструДолжностей КАК КодПоРееструДолжностей,
		|	МероприятияДоНачалаУчета.ТрудоваяФункция КАК ТрудоваяФункция,
		|	ВЫБОР
		|		КОГДА МероприятияДоНачалаУчета.НаименованиеДокументаОснования = """"
		|			ТОГДА &НаименованиеДокументаОснования
		|		ИНАЧЕ МероприятияДоНачалаУчета.НаименованиеДокументаОснования
		|	КОНЕЦ КАК НаименованиеДокументаОснования,
		|	МероприятияДоНачалаУчета.ДатаДокументаОснования КАК ДатаДокументаОснования,
		|	МероприятияДоНачалаУчета.СерияДокументаОснования КАК СерияДокументаОснования,
		|	МероприятияДоНачалаУчета.НомерДокументаОснования КАК НомерДокументаОснования,
		|	МероприятияДоНачалаУчета.ОснованиеУвольнения КАК ОснованиеУвольнения,
		|	МероприятияДоНачалаУчета.ДатаС КАК ДатаС,
		|	МероприятияДоНачалаУчета.ДатаПо КАК ДатаПо,
		|	МероприятияДоНачалаУчета.ДатаОтмены КАК ДатаОтмены,
		|	МероприятияДоНачалаУчета.ЯвляетсяСовместителем КАК ЯвляетсяСовместителем,
		|	МероприятияДоНачалаУчета.ПредставлениеДолжности КАК ПредставлениеДолжности,
		|	МероприятияДоНачалаУчета.ПредставлениеПодразделения КАК ПредставлениеПодразделения,
		|	МероприятияДоНачалаУчета.ОснованиеУвольненияТекстОснования КАК ОснованиеУвольненияТекстОснования,
		|	МероприятияДоНачалаУчета.ОснованиеУвольненияСтатья КАК ОснованиеУвольненияСтатья,
		|	МероприятияДоНачалаУчета.ОснованиеУвольненияЧасть КАК ОснованиеУвольненияЧасть,
		|	МероприятияДоНачалаУчета.ОснованиеУвольненияПункт КАК ОснованиеУвольненияПункт,
		|	МероприятияДоНачалаУчета.ОснованиеУвольненияПодПункт КАК ОснованиеУвольненияПодПункт,
		|	МероприятияДоНачалаУчета.ОписаниеДолжности КАК ОписаниеДолжности
		|ПОМЕСТИТЬ ВТКПередачеМероприятияТрудовойДеятельности
		|ИЗ
		|	ВТМероприятияДоНачалаУчета КАК МероприятияДоНачалаУчета
		|ГДЕ
		|	НЕ МероприятияДоНачалаУчета.Передано
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	МероприятияОтчетногоПериода.Регистратор,
		|	МероприятияОтчетногоПериода.ФизическоеЛицо,
		|	МероприятияОтчетногоПериода.Организация,
		|	МероприятияОтчетногоПериода.ИдМероприятия,
		|	МероприятияОтчетногоПериода.Сотрудник,
		|	МероприятияОтчетногоПериода.ДатаМероприятия,
		|	МероприятияОтчетногоПериода.ВидМероприятия,
		|	МероприятияОтчетногоПериода.Сведения,
		|	МероприятияОтчетногоПериода.Подразделение,
		|	МероприятияОтчетногоПериода.Должность,
		|	МероприятияОтчетногоПериода.РазрядКатегория,
		|	МероприятияОтчетногоПериода.КодПоРееструДолжностей,
		|	МероприятияОтчетногоПериода.ТрудоваяФункция,
		|	ВЫБОР
		|		КОГДА МероприятияОтчетногоПериода.НаименованиеДокументаОснования = """"
		|			ТОГДА &НаименованиеДокументаОснования
		|		ИНАЧЕ МероприятияОтчетногоПериода.НаименованиеДокументаОснования
		|	КОНЕЦ,
		|	МероприятияОтчетногоПериода.ДатаДокументаОснования,
		|	МероприятияОтчетногоПериода.СерияДокументаОснования,
		|	МероприятияОтчетногоПериода.НомерДокументаОснования,
		|	МероприятияОтчетногоПериода.ОснованиеУвольнения,
		|	МероприятияОтчетногоПериода.ДатаС,
		|	МероприятияОтчетногоПериода.ДатаПо,
		|	МероприятияОтчетногоПериода.ДатаОтмены,
		|	МероприятияОтчетногоПериода.ЯвляетсяСовместителем,
		|	МероприятияОтчетногоПериода.ПредставлениеДолжности,
		|	МероприятияОтчетногоПериода.ПредставлениеПодразделения,
		|	МероприятияОтчетногоПериода.ОснованиеУвольненияТекстОснования,
		|	МероприятияОтчетногоПериода.ОснованиеУвольненияСтатья,
		|	МероприятияОтчетногоПериода.ОснованиеУвольненияЧасть,
		|	МероприятияОтчетногоПериода.ОснованиеУвольненияПункт,
		|	МероприятияОтчетногоПериода.ОснованиеУвольненияПодПункт,
		|	МероприятияОтчетногоПериода.ОписаниеДолжности
		|ИЗ
		|	ВТМероприятияТрудовойДеятельности КАК МероприятияОтчетногоПериода
		|ГДЕ
		|	НЕ МероприятияОтчетногоПериода.Передано";
	
	ЗарплатаКадрыОбщиеНаборыДанных.УстановитьВыборкуТолькоРазрешенныхДанных(ТекстЗапросаВТКПередачеМероприятияТрудовойДеятельности, ТолькоРазрешенные);
	ЗарплатаКадрыОбщиеНаборыДанных.ЗаменитьИмяСоздаваемойВременнойТаблицы(ТекстЗапросаВТКПередачеМероприятияТрудовойДеятельности, "ВТКПередачеМероприятияТрудовойДеятельности", ИмяВТКПередачеМероприятияТрудовойДеятельности);
	
	Если ЗначениеЗаполнено(ИмяВТКПередачеМероприятияТрудовойДеятельности) Тогда
		ЗарплатаКадрыОбщиеНаборыДанных.ДобавитьЗапросУничтоженияВременнойТаблицы(ТекстЗапросаВТКПередачеМероприятияТрудовойДеятельности, "ВТМероприятияДоНачалаУчета");
		ЗарплатаКадрыОбщиеНаборыДанных.ДобавитьЗапросУничтоженияВременнойТаблицы(ТекстЗапросаВТКПередачеМероприятияТрудовойДеятельности, "ВТМероприятияТрудовойДеятельности");
	КонецЕсли;
	
	ЗарплатаКадрыОбщиеНаборыДанных.ОбъединитьТекстыЗапросов(Запрос.Текст, ТекстЗапросаВТКПередачеМероприятияТрудовойДеятельности);
	
	Возврат Запрос;
	
КонецФункции

Функция ЗапросВТМероприятияТрудовойДеятельностиСотрудников(ТолькоРазрешенные, ИмяВТМероприятияТрудовойДеятельностиСотрудников, ТолькоПереданные, ИсключаемыйРегистратор = Неопределено)
	
	Если ЭлектронныеТрудовыеКнижкиПовтИсп.НастройкиЭлектронныхТрудовыхКнижек().ЗаполнятьСТДРВсемиМероприятиямиДо2020Года Тогда
		Запрос = ЗапросВТВсеМероприятияДоНачалаУчета(ТолькоРазрешенные, "ВТМероприятияДоНачалаУчета", ИсключаемыйРегистратор);
	Иначе
		Запрос = ЗапросВТМероприятияДоНачалаУчета(ТолькоРазрешенные, "ВТМероприятияДоНачалаУчета", ИсключаемыйРегистратор);
	КонецЕсли;
	
	ЗапросВТМероприятияТрудовойДеятельности = ЗапросВТМероприятияТрудовойДеятельности(ТолькоРазрешенные, "ВТМероприятияТрудовойДеятельности", ИсключаемыйРегистратор);
	ЗарплатаКадрыОбщиеНаборыДанных.ОбъединитьЗапросы(Запрос, ЗапросВТМероприятияТрудовойДеятельности);
	
	Запрос.УстановитьПараметр("НаименованиеДокументаОснования", НаименованиеДокументаОснования());
	
	ТекстЗапросаВТМероприятияТрудовойДеятельностиСотрудников =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	МероприятияТрудовойДеятельности.Регистратор КАК Регистратор,
		|	МероприятияТрудовойДеятельности.ФизическоеЛицо КАК ФизическоеЛицо,
		|	МероприятияТрудовойДеятельности.Организация КАК Организация,
		|	МероприятияТрудовойДеятельности.ИдМероприятия КАК ИдМероприятия,
		|	МероприятияТрудовойДеятельности.Отменено КАК Отменено,
		|	МероприятияТрудовойДеятельности.Сотрудник КАК СотрудникЗаписи,
		|	МероприятияТрудовойДеятельности.ДатаМероприятия КАК ДатаМероприятия,
		|	МероприятияТрудовойДеятельности.ВидМероприятия КАК ВидМероприятия,
		|	МероприятияТрудовойДеятельности.ВидМероприятия.Порядок КАК ВидМероприятияПорядок,
		|	МероприятияТрудовойДеятельности.Сведения КАК Сведения,
		|	МероприятияТрудовойДеятельности.Подразделение КАК Подразделение,
		|	МероприятияТрудовойДеятельности.Должность КАК Должность,
		|	МероприятияТрудовойДеятельности.РазрядКатегория КАК РазрядКатегория,
		|	МероприятияТрудовойДеятельности.КодПоРееструДолжностей КАК КодПоРееструДолжностей,
		|	МероприятияТрудовойДеятельности.ТрудоваяФункция КАК ТрудоваяФункция,
		|	ВЫБОР
		|		КОГДА МероприятияТрудовойДеятельности.НаименованиеДокументаОснования = """"
		|			ТОГДА &НаименованиеДокументаОснования
		|		ИНАЧЕ МероприятияТрудовойДеятельности.НаименованиеДокументаОснования
		|	КОНЕЦ КАК НаименованиеДокументаОснования,
		|	МероприятияТрудовойДеятельности.ДатаДокументаОснования КАК ДатаДокументаОснования,
		|	МероприятияТрудовойДеятельности.СерияДокументаОснования КАК СерияДокументаОснования,
		|	МероприятияТрудовойДеятельности.НомерДокументаОснования КАК НомерДокументаОснования,
		|	МероприятияТрудовойДеятельности.ОснованиеУвольнения КАК ОснованиеУвольнения,
		|	МероприятияТрудовойДеятельности.ДатаС КАК ДатаС,
		|	МероприятияТрудовойДеятельности.ДатаПо КАК ДатаПо,
		|	МероприятияТрудовойДеятельности.ДатаОтмены КАК ДатаОтмены,
		|	МероприятияТрудовойДеятельности.ДатаМероприятия КАК ДатаПорядка,
		|	МероприятияТрудовойДеятельности.ЯвляетсяСовместителем КАК ЯвляетсяСовместителем,
		|	МероприятияТрудовойДеятельности.ПредставлениеДолжности КАК ПредставлениеДолжности,
		|	МероприятияТрудовойДеятельности.ПредставлениеПодразделения КАК ПредставлениеПодразделения,
		|	МероприятияТрудовойДеятельности.ОснованиеУвольненияТекстОснования КАК ОснованиеУвольненияТекстОснования,
		|	МероприятияТрудовойДеятельности.ОснованиеУвольненияСтатья КАК ОснованиеУвольненияСтатья,
		|	МероприятияТрудовойДеятельности.ОснованиеУвольненияЧасть КАК ОснованиеУвольненияЧасть,
		|	МероприятияТрудовойДеятельности.ОснованиеУвольненияПункт КАК ОснованиеУвольненияПункт,
		|	МероприятияТрудовойДеятельности.ОснованиеУвольненияПодПункт КАК ОснованиеУвольненияПодПункт,
		|	МероприятияТрудовойДеятельности.ОписаниеДолжности КАК ОписаниеДолжности,
		|	МероприятияТрудовойДеятельности.Передано КАК Передано
		|ПОМЕСТИТЬ ВТМероприятияТрудовойДеятельностиСотрудников
		|ИЗ
		|	ВТМероприятияДоНачалаУчета КАК МероприятияТрудовойДеятельности
		|ГДЕ
		|	&МероприятияТрудовойДеятельностиДоНачалаУчетаПередано
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	МероприятияТрудовойДеятельности.Регистратор,
		|	МероприятияТрудовойДеятельности.ФизическоеЛицо,
		|	МероприятияТрудовойДеятельности.Организация,
		|	МероприятияТрудовойДеятельности.ИдМероприятия,
		|	МероприятияТрудовойДеятельности.Отменено,
		|	МероприятияТрудовойДеятельности.Сотрудник,
		|	МероприятияТрудовойДеятельности.ДатаМероприятия,
		|	МероприятияТрудовойДеятельности.ВидМероприятия,
		|	МероприятияТрудовойДеятельности.ВидМероприятия.Порядок,
		|	МероприятияТрудовойДеятельности.Сведения,
		|	МероприятияТрудовойДеятельности.Подразделение,
		|	МероприятияТрудовойДеятельности.Должность,
		|	МероприятияТрудовойДеятельности.РазрядКатегория,
		|	МероприятияТрудовойДеятельности.КодПоРееструДолжностей,
		|	МероприятияТрудовойДеятельности.ТрудоваяФункция,
		|	ВЫБОР
		|		КОГДА МероприятияТрудовойДеятельности.НаименованиеДокументаОснования = """"
		|			ТОГДА &НаименованиеДокументаОснования
		|		ИНАЧЕ МероприятияТрудовойДеятельности.НаименованиеДокументаОснования
		|	КОНЕЦ,
		|	МероприятияТрудовойДеятельности.ДатаДокументаОснования,
		|	МероприятияТрудовойДеятельности.СерияДокументаОснования,
		|	МероприятияТрудовойДеятельности.НомерДокументаОснования,
		|	МероприятияТрудовойДеятельности.ОснованиеУвольнения,
		|	МероприятияТрудовойДеятельности.ДатаС,
		|	МероприятияТрудовойДеятельности.ДатаПо,
		|	МероприятияТрудовойДеятельности.ДатаОтмены,
		|	ВЫБОР
		|		КОГДА МероприятияТрудовойДеятельности.ДатаОтмены = ДАТАВРЕМЯ(1, 1, 1)
		|			ТОГДА МероприятияТрудовойДеятельности.ДатаМероприятия
		|		ИНАЧЕ МероприятияТрудовойДеятельности.ДатаОтмены
		|	КОНЕЦ,
		|	МероприятияТрудовойДеятельности.ЯвляетсяСовместителем,
		|	МероприятияТрудовойДеятельности.ПредставлениеДолжности,
		|	МероприятияТрудовойДеятельности.ПредставлениеПодразделения,
		|	МероприятияТрудовойДеятельности.ОснованиеУвольненияТекстОснования,
		|	МероприятияТрудовойДеятельности.ОснованиеУвольненияСтатья,
		|	МероприятияТрудовойДеятельности.ОснованиеУвольненияЧасть,
		|	МероприятияТрудовойДеятельности.ОснованиеУвольненияПункт,
		|	МероприятияТрудовойДеятельности.ОснованиеУвольненияПодПункт,
		|	МероприятияТрудовойДеятельности.ОписаниеДолжности,
		|	МероприятияТрудовойДеятельности.Передано
		|ИЗ
		|	ВТМероприятияТрудовойДеятельности КАК МероприятияТрудовойДеятельности
		|ГДЕ
		|	&МероприятияТрудовойДеятельностиПередано";
	
	Если ЭлектронныеТрудовыеКнижкиПовтИсп.НастройкиЭлектронныхТрудовыхКнижек().ЗаполнятьСТДРВсемиМероприятиямиДо2020Года Тогда
		
		ТекстЗапросаВТМероприятияТрудовойДеятельностиСотрудников = СтрЗаменить(ТекстЗапросаВТМероприятияТрудовойДеятельностиСотрудников,
			"&МероприятияТрудовойДеятельностиДоНачалаУчетаПередано", "ИСТИНА");
		
	Иначе
		
		ТекстЗапросаВТМероприятияТрудовойДеятельностиСотрудников = СтрЗаменить(ТекстЗапросаВТМероприятияТрудовойДеятельностиСотрудников,
			"&МероприятияТрудовойДеятельностиДоНачалаУчетаПередано", "МероприятияТрудовойДеятельности.Передано");
		
	КонецЕсли;
	
	Если Не ТолькоПереданные Тогда
		
		ТекстЗапросаВТМероприятияТрудовойДеятельностиСотрудников = СтрЗаменить(ТекстЗапросаВТМероприятияТрудовойДеятельностиСотрудников,
			"&МероприятияТрудовойДеятельностиПередано", "ИСТИНА");
		
	Иначе
		
		ТекстЗапросаВТМероприятияТрудовойДеятельностиСотрудников = СтрЗаменить(ТекстЗапросаВТМероприятияТрудовойДеятельностиСотрудников,
			"&МероприятияТрудовойДеятельностиПередано", "МероприятияТрудовойДеятельности.Передано");
		
	КонецЕсли;
	
	ЗарплатаКадрыОбщиеНаборыДанных.УстановитьВыборкуТолькоРазрешенныхДанных(ТекстЗапросаВТМероприятияТрудовойДеятельностиСотрудников, ТолькоРазрешенные);
	ЗарплатаКадрыОбщиеНаборыДанных.ЗаменитьИмяСоздаваемойВременнойТаблицы(ТекстЗапросаВТМероприятияТрудовойДеятельностиСотрудников,
		"ВТМероприятияТрудовойДеятельностиСотрудников", ИмяВТМероприятияТрудовойДеятельностиСотрудников);
	
	Если ЗначениеЗаполнено(ИмяВТМероприятияТрудовойДеятельностиСотрудников) Тогда
		ЗарплатаКадрыОбщиеНаборыДанных.ДобавитьЗапросУничтоженияВременнойТаблицы(ТекстЗапросаВТМероприятияТрудовойДеятельностиСотрудников, "ВТМероприятияДоНачалаУчета");
		ЗарплатаКадрыОбщиеНаборыДанных.ДобавитьЗапросУничтоженияВременнойТаблицы(ТекстЗапросаВТМероприятияТрудовойДеятельностиСотрудников, "ВТМероприятияТрудовойДеятельности");
	КонецЕсли;
	
	ЗарплатаКадрыОбщиеНаборыДанных.ОбъединитьТекстыЗапросов(Запрос.Текст, ТекстЗапросаВТМероприятияТрудовойДеятельностиСотрудников);
	
	Возврат Запрос;
	
КонецФункции

Функция ЗапросВТВсеМероприятияДоНачалаУчета(ТолькоРазрешенные, ИмяВТВсеМероприятияДоНачалаУчета, ИсключаемыйРегистратор = Неопределено)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаНачалаУчета", ДатаНачалаУчета());
	
	Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	МероприятияТрудовойДеятельности.ФизическоеЛицо КАК ФизическоеЛицо,
		|	МероприятияТрудовойДеятельности.Организация КАК Организация,
		|	МероприятияТрудовойДеятельности.ИдМероприятия КАК ИдМероприятия,
		|	МероприятияТрудовойДеятельности.Отменено КАК Отменено,
		|	МероприятияТрудовойДеятельности.Сотрудник КАК Сотрудник,
		|	МероприятияТрудовойДеятельности.ДатаМероприятия КАК ДатаМероприятия,
		|	МероприятияТрудовойДеятельности.ВидМероприятия КАК ВидМероприятия,
		|	МероприятияТрудовойДеятельности.Сведения КАК Сведения,
		|	МероприятияТрудовойДеятельности.Подразделение КАК Подразделение,
		|	МероприятияТрудовойДеятельности.Должность КАК Должность,
		|	МероприятияТрудовойДеятельности.РазрядКатегория КАК РазрядКатегория,
		|	МероприятияТрудовойДеятельности.КодПоРееструДолжностей КАК КодПоРееструДолжностей,
		|	МероприятияТрудовойДеятельности.ТрудоваяФункция КАК ТрудоваяФункция,
		|	МероприятияТрудовойДеятельности.НаименованиеДокументаОснования КАК НаименованиеДокументаОснования,
		|	МероприятияТрудовойДеятельности.ДатаДокументаОснования КАК ДатаДокументаОснования,
		|	МероприятияТрудовойДеятельности.СерияДокументаОснования КАК СерияДокументаОснования,
		|	МероприятияТрудовойДеятельности.НомерДокументаОснования КАК НомерДокументаОснования,
		|	МероприятияТрудовойДеятельности.ОснованиеУвольнения КАК ОснованиеУвольнения,
		|	МероприятияТрудовойДеятельности.ДатаС КАК ДатаС,
		|	МероприятияТрудовойДеятельности.ДатаПо КАК ДатаПо,
		|	МероприятияТрудовойДеятельности.ДатаОтмены КАК ДатаОтмены,
		|	МероприятияТрудовойДеятельности.ЯвляетсяСовместителем КАК ЯвляетсяСовместителем,
		|	МероприятияТрудовойДеятельности.ПредставлениеДолжности КАК ПредставлениеДолжности,
		|	МероприятияТрудовойДеятельности.ПредставлениеПодразделения КАК ПредставлениеПодразделения,
		|	МероприятияТрудовойДеятельности.ОснованиеУвольненияТекстОснования КАК ОснованиеУвольненияТекстОснования,
		|	МероприятияТрудовойДеятельности.ОснованиеУвольненияСтатья КАК ОснованиеУвольненияСтатья,
		|	МероприятияТрудовойДеятельности.ОснованиеУвольненияЧасть КАК ОснованиеУвольненияЧасть,
		|	МероприятияТрудовойДеятельности.ОснованиеУвольненияПункт КАК ОснованиеУвольненияПункт,
		|	МероприятияТрудовойДеятельности.ОснованиеУвольненияПодПункт КАК ОснованиеУвольненияПодПункт,
		|	МероприятияТрудовойДеятельности.ОписаниеДолжности КАК ОписаниеДолжности
		|ПОМЕСТИТЬ ВТВсеМероприятияПрочиеДоНачалаУчета
		|ИЗ
		|	ВТСотрудникиПериодыДанных КАК СотрудникиПериодыДанных
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.МероприятияТрудовойДеятельностиПрочие КАК МероприятияТрудовойДеятельности
		|		ПО СотрудникиПериодыДанных.ФизическоеЛицо = МероприятияТрудовойДеятельности.ФизическоеЛицо
		|			И СотрудникиПериодыДанных.Организация = МероприятияТрудовойДеятельности.Организация
		|			И СотрудникиПериодыДанных.Сотрудник = МероприятияТрудовойДеятельности.Сотрудник
		|ГДЕ
		|	МероприятияТрудовойДеятельности.ДатаМероприятия < &ДатаНачалаУчета
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	NULL КАК Регистратор,
		|	ВсеМероприятияПрочиеДоНачалаУчета.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ВсеМероприятияПрочиеДоНачалаУчета.Организация КАК Организация,
		|	ВсеМероприятияПрочиеДоНачалаУчета.ИдМероприятия КАК ИдМероприятия,
		|	ЛОЖЬ КАК Отменено,
		|	ВсеМероприятияПрочиеДоНачалаУчета.Сотрудник КАК Сотрудник,
		|	ВсеМероприятияПрочиеДоНачалаУчета.ДатаМероприятия КАК ДатаМероприятия,
		|	ВсеМероприятияПрочиеДоНачалаУчета.ВидМероприятия КАК ВидМероприятия,
		|	ВсеМероприятияПрочиеДоНачалаУчета.Сведения КАК Сведения,
		|	ВсеМероприятияПрочиеДоНачалаУчета.Подразделение КАК Подразделение,
		|	ВсеМероприятияПрочиеДоНачалаУчета.Должность КАК Должность,
		|	ВсеМероприятияПрочиеДоНачалаУчета.РазрядКатегория КАК РазрядКатегория,
		|	ВсеМероприятияПрочиеДоНачалаУчета.КодПоРееструДолжностей КАК КодПоРееструДолжностей,
		|	ВсеМероприятияПрочиеДоНачалаУчета.ТрудоваяФункция КАК ТрудоваяФункция,
		|	ВсеМероприятияПрочиеДоНачалаУчета.НаименованиеДокументаОснования КАК НаименованиеДокументаОснования,
		|	ВсеМероприятияПрочиеДоНачалаУчета.ДатаДокументаОснования КАК ДатаДокументаОснования,
		|	ВсеМероприятияПрочиеДоНачалаУчета.СерияДокументаОснования КАК СерияДокументаОснования,
		|	ВсеМероприятияПрочиеДоНачалаУчета.НомерДокументаОснования КАК НомерДокументаОснования,
		|	ВсеМероприятияПрочиеДоНачалаУчета.ОснованиеУвольнения КАК ОснованиеУвольнения,
		|	ВсеМероприятияПрочиеДоНачалаУчета.ДатаС КАК ДатаС,
		|	ВсеМероприятияПрочиеДоНачалаУчета.ДатаПо КАК ДатаПо,
		|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаОтмены,
		|	ВсеМероприятияПрочиеДоНачалаУчета.ЯвляетсяСовместителем КАК ЯвляетсяСовместителем,
		|	ВсеМероприятияПрочиеДоНачалаУчета.ПредставлениеДолжности КАК ПредставлениеДолжности,
		|	ВсеМероприятияПрочиеДоНачалаУчета.ПредставлениеПодразделения КАК ПредставлениеПодразделения,
		|	ВсеМероприятияПрочиеДоНачалаУчета.ОснованиеУвольненияТекстОснования КАК ОснованиеУвольненияТекстОснования,
		|	ВсеМероприятияПрочиеДоНачалаУчета.ОснованиеУвольненияСтатья КАК ОснованиеУвольненияСтатья,
		|	ВсеМероприятияПрочиеДоНачалаУчета.ОснованиеУвольненияЧасть КАК ОснованиеУвольненияЧасть,
		|	ВсеМероприятияПрочиеДоНачалаУчета.ОснованиеУвольненияПункт КАК ОснованиеУвольненияПункт,
		|	ВсеМероприятияПрочиеДоНачалаУчета.ОснованиеУвольненияПодПункт КАК ОснованиеУвольненияПодПункт,
		|	ВсеМероприятияПрочиеДоНачалаУчета.ОписаниеДолжности КАК ОписаниеДолжности
		|ПОМЕСТИТЬ ВТПредварительноВсеМероприятияДоНачалаУчета
		|ИЗ
		|	ВТВсеМероприятияПрочиеДоНачалаУчета КАК ВсеМероприятияПрочиеДоНачалаУчета
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	NULL,
		|	ВсеМероприятияПрочиеДоНачалаУчета.ФизическоеЛицо,
		|	ВсеМероприятияПрочиеДоНачалаУчета.Организация,
		|	ВсеМероприятияПрочиеДоНачалаУчета.ИдМероприятия,
		|	ИСТИНА,
		|	ВсеМероприятияПрочиеДоНачалаУчета.Сотрудник,
		|	ВсеМероприятияПрочиеДоНачалаУчета.ДатаМероприятия,
		|	ВсеМероприятияПрочиеДоНачалаУчета.ВидМероприятия,
		|	ВсеМероприятияПрочиеДоНачалаУчета.Сведения,
		|	ВсеМероприятияПрочиеДоНачалаУчета.Подразделение,
		|	ВсеМероприятияПрочиеДоНачалаУчета.Должность,
		|	ВсеМероприятияПрочиеДоНачалаУчета.РазрядКатегория,
		|	ВсеМероприятияПрочиеДоНачалаУчета.КодПоРееструДолжностей,
		|	ВсеМероприятияПрочиеДоНачалаУчета.ТрудоваяФункция,
		|	ВсеМероприятияПрочиеДоНачалаУчета.НаименованиеДокументаОснования,
		|	ВсеМероприятияПрочиеДоНачалаУчета.ДатаДокументаОснования,
		|	ВсеМероприятияПрочиеДоНачалаУчета.СерияДокументаОснования,
		|	ВсеМероприятияПрочиеДоНачалаУчета.НомерДокументаОснования,
		|	ВсеМероприятияПрочиеДоНачалаУчета.ОснованиеУвольнения,
		|	ВсеМероприятияПрочиеДоНачалаУчета.ДатаС,
		|	ВсеМероприятияПрочиеДоНачалаУчета.ДатаПо,
		|	ВсеМероприятияПрочиеДоНачалаУчета.ДатаОтмены,
		|	ВсеМероприятияПрочиеДоНачалаУчета.ЯвляетсяСовместителем,
		|	ВсеМероприятияПрочиеДоНачалаУчета.ПредставлениеДолжности,
		|	ВсеМероприятияПрочиеДоНачалаУчета.ПредставлениеПодразделения,
		|	ВсеМероприятияПрочиеДоНачалаУчета.ОснованиеУвольненияТекстОснования,
		|	ВсеМероприятияПрочиеДоНачалаУчета.ОснованиеУвольненияСтатья,
		|	ВсеМероприятияПрочиеДоНачалаУчета.ОснованиеУвольненияЧасть,
		|	ВсеМероприятияПрочиеДоНачалаУчета.ОснованиеУвольненияПункт,
		|	ВсеМероприятияПрочиеДоНачалаУчета.ОснованиеУвольненияПодПункт,
		|	ВсеМероприятияПрочиеДоНачалаУчета.ОписаниеДолжности
		|ИЗ
		|	ВТВсеМероприятияПрочиеДоНачалаУчета КАК ВсеМероприятияПрочиеДоНачалаУчета
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	МероприятияТрудовойДеятельности.Регистратор,
		|	МероприятияТрудовойДеятельности.ФизическоеЛицо,
		|	МероприятияТрудовойДеятельности.Организация,
		|	МероприятияТрудовойДеятельности.ИдМероприятия,
		|	МероприятияТрудовойДеятельности.Отменено,
		|	МероприятияТрудовойДеятельности.Сотрудник,
		|	МероприятияТрудовойДеятельности.ДатаМероприятия,
		|	МероприятияТрудовойДеятельности.ВидМероприятия,
		|	МероприятияТрудовойДеятельности.Сведения,
		|	МероприятияТрудовойДеятельности.Подразделение,
		|	МероприятияТрудовойДеятельности.Должность,
		|	МероприятияТрудовойДеятельности.РазрядКатегория,
		|	МероприятияТрудовойДеятельности.КодПоРееструДолжностей,
		|	МероприятияТрудовойДеятельности.ТрудоваяФункция,
		|	МероприятияТрудовойДеятельности.НаименованиеДокументаОснования,
		|	МероприятияТрудовойДеятельности.ДатаДокументаОснования,
		|	МероприятияТрудовойДеятельности.СерияДокументаОснования,
		|	МероприятияТрудовойДеятельности.НомерДокументаОснования,
		|	МероприятияТрудовойДеятельности.ОснованиеУвольнения,
		|	МероприятияТрудовойДеятельности.ДатаС,
		|	МероприятияТрудовойДеятельности.ДатаПо,
		|	МероприятияТрудовойДеятельности.ДатаОтмены,
		|	МероприятияТрудовойДеятельности.ЯвляетсяСовместителем,
		|	МероприятияТрудовойДеятельности.ПредставлениеДолжности,
		|	МероприятияТрудовойДеятельности.ПредставлениеПодразделения,
		|	МероприятияТрудовойДеятельности.ОснованиеУвольненияТекстОснования,
		|	МероприятияТрудовойДеятельности.ОснованиеУвольненияСтатья,
		|	МероприятияТрудовойДеятельности.ОснованиеУвольненияЧасть,
		|	МероприятияТрудовойДеятельности.ОснованиеУвольненияПункт,
		|	МероприятияТрудовойДеятельности.ОснованиеУвольненияПодПункт,
		|	МероприятияТрудовойДеятельности.ОписаниеДолжности
		|ИЗ
		|	ВТСотрудникиПериодыДанных КАК СотрудникиПериодыДанных
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.МероприятияТрудовойДеятельности КАК МероприятияТрудовойДеятельности
		|		ПО СотрудникиПериодыДанных.ФизическоеЛицо = МероприятияТрудовойДеятельности.ФизическоеЛицо
		|			И СотрудникиПериодыДанных.Организация = МероприятияТрудовойДеятельности.Организация
		|			И СотрудникиПериодыДанных.Сотрудник = МероприятияТрудовойДеятельности.Сотрудник
		|ГДЕ
		|	МероприятияТрудовойДеятельности.ДатаМероприятия < &ДатаНачалаУчета
		|	И &ИсключаемыйРегистраторМероприятийТрудовойДеятельности
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	МероприятияТрудовойДеятельности.Регистратор КАК Регистратор,
		|	МероприятияТрудовойДеятельности.ФизическоеЛицо КАК ФизическоеЛицо,
		|	МероприятияТрудовойДеятельности.Организация КАК Организация,
		|	МероприятияТрудовойДеятельности.ИдМероприятия КАК ИдМероприятия,
		|	МероприятияТрудовойДеятельности.Отменено КАК Отменено,
		|	МероприятияТрудовойДеятельности.Сотрудник КАК Сотрудник,
		|	МероприятияТрудовойДеятельности.ДатаМероприятия КАК ДатаМероприятия,
		|	МероприятияТрудовойДеятельности.ВидМероприятия КАК ВидМероприятия,
		|	МероприятияТрудовойДеятельности.Сведения КАК Сведения,
		|	МероприятияТрудовойДеятельности.Подразделение КАК Подразделение,
		|	МероприятияТрудовойДеятельности.Должность КАК Должность,
		|	МероприятияТрудовойДеятельности.РазрядКатегория КАК РазрядКатегория,
		|	МероприятияТрудовойДеятельности.КодПоРееструДолжностей КАК КодПоРееструДолжностей,
		|	МероприятияТрудовойДеятельности.ТрудоваяФункция КАК ТрудоваяФункция,
		|	МероприятияТрудовойДеятельности.НаименованиеДокументаОснования КАК НаименованиеДокументаОснования,
		|	МероприятияТрудовойДеятельности.ДатаДокументаОснования КАК ДатаДокументаОснования,
		|	МероприятияТрудовойДеятельности.СерияДокументаОснования КАК СерияДокументаОснования,
		|	МероприятияТрудовойДеятельности.НомерДокументаОснования КАК НомерДокументаОснования,
		|	МероприятияТрудовойДеятельности.ОснованиеУвольнения КАК ОснованиеУвольнения,
		|	МероприятияТрудовойДеятельности.ДатаС КАК ДатаС,
		|	МероприятияТрудовойДеятельности.ДатаПо КАК ДатаПо,
		|	МероприятияТрудовойДеятельности.ДатаОтмены КАК ДатаОтмены,
		|	МероприятияТрудовойДеятельности.ЯвляетсяСовместителем КАК ЯвляетсяСовместителем,
		|	ЕСТЬNULL(МероприятияТрудовойДеятельностиПереданные.ПредставлениеДолжности, МероприятияТрудовойДеятельности.ПредставлениеДолжности) КАК ПредставлениеДолжности,
		|	ЕСТЬNULL(МероприятияТрудовойДеятельностиПереданные.ПредставлениеПодразделения, МероприятияТрудовойДеятельности.ПредставлениеПодразделения) КАК ПредставлениеПодразделения,
		|	ЕСТЬNULL(МероприятияТрудовойДеятельностиПереданные.ОснованиеУвольненияТекстОснования, МероприятияТрудовойДеятельности.ОснованиеУвольненияТекстОснования) КАК ОснованиеУвольненияТекстОснования,
		|	ЕСТЬNULL(МероприятияТрудовойДеятельностиПереданные.ОснованиеУвольненияСтатья, МероприятияТрудовойДеятельности.ОснованиеУвольненияСтатья) КАК ОснованиеУвольненияСтатья,
		|	ЕСТЬNULL(МероприятияТрудовойДеятельностиПереданные.ОснованиеУвольненияЧасть, МероприятияТрудовойДеятельности.ОснованиеУвольненияЧасть) КАК ОснованиеУвольненияЧасть,
		|	ЕСТЬNULL(МероприятияТрудовойДеятельностиПереданные.ОснованиеУвольненияПункт, МероприятияТрудовойДеятельности.ОснованиеУвольненияПункт) КАК ОснованиеУвольненияПункт,
		|	ЕСТЬNULL(МероприятияТрудовойДеятельностиПереданные.ОснованиеУвольненияПодПункт, МероприятияТрудовойДеятельности.ОснованиеУвольненияПодПункт) КАК ОснованиеУвольненияПодПункт,
		|	ЕСТЬNULL(МероприятияТрудовойДеятельностиПереданные.ОписаниеДолжности, МероприятияТрудовойДеятельности.ОписаниеДолжности) КАК ОписаниеДолжности,
		|	ВЫБОР
		|		КОГДА МероприятияТрудовойДеятельностиПереданные.ИдМероприятия ЕСТЬ NULL
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК Передано
		|ПОМЕСТИТЬ ВТВсеСОтмененнымиМероприятияДоНачалаУчета
		|ИЗ
		|	ВТПредварительноВсеМероприятияДоНачалаУчета КАК МероприятияТрудовойДеятельности
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МероприятияТрудовойДеятельностиПереданные КАК МероприятияТрудовойДеятельностиПереданные
		|		ПО МероприятияТрудовойДеятельности.ИдМероприятия = МероприятияТрудовойДеятельностиПереданные.ИдМероприятия
		|			И МероприятияТрудовойДеятельности.Отменено = МероприятияТрудовойДеятельностиПереданные.Отменено
		|			И (&ИсключаемыйРегистраторПереданныхМероприятийТрудовойДеятельности)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВсеМероприятияДоНачалаУчета.ИдМероприятия КАК ИдМероприятия
		|ПОМЕСТИТЬ ВТИдентификаторыОтмененныхМероприятий
		|ИЗ
		|	ВТВсеСОтмененнымиМероприятияДоНачалаУчета КАК ВсеМероприятияДоНачалаУчета
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВсеСОтмененнымиМероприятияДоНачалаУчета КАК ВсеМероприятияДоНачалаУчетаОтмененные
		|		ПО ВсеМероприятияДоНачалаУчета.ИдМероприятия = ВсеМероприятияДоНачалаУчетаОтмененные.ИдМероприятия
		|			И (ВсеМероприятияДоНачалаУчетаОтмененные.Отменено)
		|ГДЕ
		|	НЕ ВсеМероприятияДоНачалаУчета.Отменено
		|	И НЕ ВсеМероприятияДоНачалаУчета.Передано
		|	И НЕ ВсеМероприятияДоНачалаУчетаОтмененные.ИдМероприятия ЕСТЬ NULL
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МероприятияДоНачалаУчета.Регистратор КАК Регистратор,
		|	МероприятияДоНачалаУчета.ФизическоеЛицо КАК ФизическоеЛицо,
		|	МероприятияДоНачалаУчета.Организация КАК Организация,
		|	МероприятияДоНачалаУчета.ИдМероприятия КАК ИдМероприятия,
		|	МероприятияДоНачалаУчета.Отменено КАК Отменено,
		|	МероприятияДоНачалаУчета.Сотрудник КАК Сотрудник,
		|	МероприятияДоНачалаУчета.ДатаМероприятия КАК ДатаМероприятия,
		|	МероприятияДоНачалаУчета.ВидМероприятия КАК ВидМероприятия,
		|	МероприятияДоНачалаУчета.Сведения КАК Сведения,
		|	МероприятияДоНачалаУчета.Подразделение КАК Подразделение,
		|	МероприятияДоНачалаУчета.Должность КАК Должность,
		|	МероприятияДоНачалаУчета.РазрядКатегория КАК РазрядКатегория,
		|	МероприятияДоНачалаУчета.КодПоРееструДолжностей КАК КодПоРееструДолжностей,
		|	МероприятияДоНачалаУчета.ТрудоваяФункция КАК ТрудоваяФункция,
		|	МероприятияДоНачалаУчета.НаименованиеДокументаОснования КАК НаименованиеДокументаОснования,
		|	МероприятияДоНачалаУчета.ДатаДокументаОснования КАК ДатаДокументаОснования,
		|	МероприятияДоНачалаУчета.СерияДокументаОснования КАК СерияДокументаОснования,
		|	МероприятияДоНачалаУчета.НомерДокументаОснования КАК НомерДокументаОснования,
		|	МероприятияДоНачалаУчета.ОснованиеУвольнения КАК ОснованиеУвольнения,
		|	МероприятияДоНачалаУчета.ДатаС КАК ДатаС,
		|	МероприятияДоНачалаУчета.ДатаПо КАК ДатаПо,
		|	МероприятияДоНачалаУчета.ДатаОтмены КАК ДатаОтмены,
		|	МероприятияДоНачалаУчета.ЯвляетсяСовместителем КАК ЯвляетсяСовместителем,
		|	МероприятияДоНачалаУчета.ПредставлениеДолжности КАК ПредставлениеДолжности,
		|	МероприятияДоНачалаУчета.ПредставлениеПодразделения КАК ПредставлениеПодразделения,
		|	МероприятияДоНачалаУчета.ОснованиеУвольненияТекстОснования КАК ОснованиеУвольненияТекстОснования,
		|	МероприятияДоНачалаУчета.ОснованиеУвольненияСтатья КАК ОснованиеУвольненияСтатья,
		|	МероприятияДоНачалаУчета.ОснованиеУвольненияЧасть КАК ОснованиеУвольненияЧасть,
		|	МероприятияДоНачалаУчета.ОснованиеУвольненияПункт КАК ОснованиеУвольненияПункт,
		|	МероприятияДоНачалаУчета.ОснованиеУвольненияПодПункт КАК ОснованиеУвольненияПодПункт,
		|	МероприятияДоНачалаУчета.ОписаниеДолжности КАК ОписаниеДолжности,
		|	МероприятияДоНачалаУчета.Передано КАК Передано
		|ПОМЕСТИТЬ ВТВсеМероприятияДоНачалаУчета
		|ИЗ
		|	ВТВсеСОтмененнымиМероприятияДоНачалаУчета КАК МероприятияДоНачалаУчета
		|ГДЕ
		|	НЕ МероприятияДоНачалаУчета.ИдМероприятия В
		|				(ВЫБРАТЬ
		|					ВТИдентификаторыОтмененныхМероприятий.ИдМероприятия
		|				ИЗ
		|					ВТИдентификаторыОтмененныхМероприятий)";
	
	ЗарплатаКадрыОбщиеНаборыДанных.УстановитьВыборкуТолькоРазрешенныхДанных(Запрос.Текст, ТолькоРазрешенные);
	ЗарплатаКадрыОбщиеНаборыДанных.ЗаменитьИмяСоздаваемойВременнойТаблицы(Запрос.Текст, "ВТВсеМероприятияДоНачалаУчета", ИмяВТВсеМероприятияДоНачалаУчета);
	
	Если ИсключаемыйРегистратор = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ИсключаемыйРегистраторПереданныхМероприятийТрудовойДеятельности", "(ИСТИНА)");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ИсключаемыйРегистраторМероприятийТрудовойДеятельности", "(ИСТИНА)");
	Иначе
		
		Запрос.УстановитьПараметр("ИсключаемыйРегистратор", ИсключаемыйРегистратор);
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ИсключаемыйРегистраторПереданныхМероприятийТрудовойДеятельности",
			"НЕ МероприятияТрудовойДеятельностиПереданные.Регистратор В (&ИсключаемыйРегистратор)");
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ИсключаемыйРегистраторМероприятийТрудовойДеятельности",
			"НЕ МероприятияТрудовойДеятельности.Регистратор В (&ИсключаемыйРегистратор)");
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ИмяВТВсеМероприятияДоНачалаУчета) Тогда
		
		ИменаВременныхТаблицКУничтожению = Новый Массив;
		ИменаВременныхТаблицКУничтожению.Добавить("ВТВсеМероприятияПрочиеДоНачалаУчета");
		ИменаВременныхТаблицКУничтожению.Добавить("ВТПредварительноВсеМероприятияДоНачалаУчета");
		ИменаВременныхТаблицКУничтожению.Добавить("ВТВсеСОтмененнымиМероприятияДоНачалаУчета");
		ИменаВременныхТаблицКУничтожению.Добавить("ВТИдентификаторыОтмененныхМероприятий");
		
		ЗарплатаКадрыОбщиеНаборыДанных.ДобавитьЗапросыУничтоженияВременныхТаблиц(Запрос.Текст, ИменаВременныхТаблицКУничтожению);
		
	КонецЕсли;
	
	Возврат Запрос;
	
КонецФункции

Функция ЗапросВТМероприятияДоНачалаУчета(ТолькоРазрешенные, ИмяВТМероприятияДоНачалаУчета, ИсключаемыйРегистратор = Неопределено)
	
	Запрос = ЗапросВТВсеМероприятияДоНачалаУчета(ТолькоРазрешенные, "ВТВсеМероприятияДоНачалаУчета", ИсключаемыйРегистратор);
	
	ТекстЗапросаМероприятияКПередаче =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВсеМероприятияДоНачалаУчета.ИдМероприятия КАК ИдМероприятия
		|ПОМЕСТИТЬ ВТИдентификаторыРанееПереданныхОтмененных
		|ИЗ
		|	ВТВсеМероприятияДоНачалаУчета КАК ВсеМероприятияДоНачалаУчета
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВсеМероприятияДоНачалаУчета КАК ВсеМероприятияДоНачалаУчетаОтмененные
		|		ПО ВсеМероприятияДоНачалаУчета.ФизическоеЛицо = ВсеМероприятияДоНачалаУчетаОтмененные.ФизическоеЛицо
		|			И ВсеМероприятияДоНачалаУчета.Организация = ВсеМероприятияДоНачалаУчетаОтмененные.Организация
		|			И ВсеМероприятияДоНачалаУчета.ИдМероприятия = ВсеМероприятияДоНачалаУчетаОтмененные.ИдМероприятия
		|			И (ВсеМероприятияДоНачалаУчетаОтмененные.Отменено)
		|ГДЕ
		|	ВсеМероприятияДоНачалаУчета.Передано
		|	И НЕ ВсеМероприятияДоНачалаУчетаОтмененные.ИдМероприятия ЕСТЬ NULL
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МероприятияДоНачалаУчета.Сотрудник КАК Сотрудник,
		|	МероприятияДоНачалаУчета.Организация КАК Организация,
		|	МАКСИМУМ(МероприятияДоНачалаУчета.ДатаМероприятия) КАК ДатаМероприятия
		|ПОМЕСТИТЬ ВТДатыПоследнихМероприятийДоНачалаУчета
		|ИЗ
		|	ВТВсеМероприятияДоНачалаУчета КАК МероприятияДоНачалаУчета
		|ГДЕ
		|	МероприятияДоНачалаУчета.ВидМероприятия В (ЗНАЧЕНИЕ(Перечисление.ВидыМероприятийТрудовойДеятельности.Прием), ЗНАЧЕНИЕ(Перечисление.ВидыМероприятийТрудовойДеятельности.Перевод))
		|	И НЕ МероприятияДоНачалаУчета.ИдМероприятия В
		|				(ВЫБРАТЬ
		|					ВТИдентификаторыРанееПереданныхОтмененных.ИдМероприятия
		|				ИЗ
		|					ВТИдентификаторыРанееПереданныхОтмененных)
		|
		|СГРУППИРОВАТЬ ПО
		|	МероприятияДоНачалаУчета.Сотрудник,
		|	МероприятияДоНачалаУчета.Организация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МероприятияДоНачалаУчета.Сотрудник КАК Сотрудник,
		|	МероприятияДоНачалаУчета.Организация КАК Организация,
		|	МероприятияДоНачалаУчета.ДатаМероприятия КАК ДатаМероприятия,
		|	МАКСИМУМ(МероприятияДоНачалаУчета.ИдМероприятия) КАК ИдМероприятия
		|ПОМЕСТИТЬ ВТИдМероприятияПоследнихМероприятийДоНачалаУчета
		|ИЗ
		|	ВТДатыПоследнихМероприятийДоНачалаУчета КАК ДатыПоследнихМероприятийДоНачалаУчета
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТВсеМероприятияДоНачалаУчета КАК МероприятияДоНачалаУчета
		|		ПО ДатыПоследнихМероприятийДоНачалаУчета.Сотрудник = МероприятияДоНачалаУчета.Сотрудник
		|			И ДатыПоследнихМероприятийДоНачалаУчета.ДатаМероприятия = МероприятияДоНачалаУчета.ДатаМероприятия
		|ГДЕ
		|	МероприятияДоНачалаУчета.ВидМероприятия В (ЗНАЧЕНИЕ(Перечисление.ВидыМероприятийТрудовойДеятельности.Прием), ЗНАЧЕНИЕ(Перечисление.ВидыМероприятийТрудовойДеятельности.Перевод))
		|	И НЕ МероприятияДоНачалаУчета.ИдМероприятия В
		|				(ВЫБРАТЬ
		|					ВТИдентификаторыРанееПереданныхОтмененных.ИдМероприятия
		|				ИЗ
		|					ВТИдентификаторыРанееПереданныхОтмененных)
		|
		|СГРУППИРОВАТЬ ПО
		|	МероприятияДоНачалаУчета.Сотрудник,
		|	МероприятияДоНачалаУчета.Организация,
		|	МероприятияДоНачалаУчета.ДатаМероприятия
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	РанееПереданныеОтмененные.Регистратор КАК Регистратор,
		|	РанееПереданныеОтмененные.ФизическоеЛицо КАК ФизическоеЛицо,
		|	РанееПереданныеОтмененные.Организация КАК Организация,
		|	РанееПереданныеОтмененные.ИдМероприятия КАК ИдМероприятия,
		|	РанееПереданныеОтмененные.Отменено КАК Отменено,
		|	РанееПереданныеОтмененные.Сотрудник КАК Сотрудник,
		|	РанееПереданныеОтмененные.ДатаМероприятия КАК ДатаМероприятия,
		|	РанееПереданныеОтмененные.ВидМероприятия КАК ВидМероприятия,
		|	РанееПереданныеОтмененные.Сведения КАК Сведения,
		|	РанееПереданныеОтмененные.Подразделение КАК Подразделение,
		|	РанееПереданныеОтмененные.Должность КАК Должность,
		|	РанееПереданныеОтмененные.РазрядКатегория КАК РазрядКатегория,
		|	РанееПереданныеОтмененные.КодПоРееструДолжностей КАК КодПоРееструДолжностей,
		|	РанееПереданныеОтмененные.ТрудоваяФункция КАК ТрудоваяФункция,
		|	РанееПереданныеОтмененные.НаименованиеДокументаОснования КАК НаименованиеДокументаОснования,
		|	РанееПереданныеОтмененные.ДатаДокументаОснования КАК ДатаДокументаОснования,
		|	РанееПереданныеОтмененные.СерияДокументаОснования КАК СерияДокументаОснования,
		|	РанееПереданныеОтмененные.НомерДокументаОснования КАК НомерДокументаОснования,
		|	РанееПереданныеОтмененные.ОснованиеУвольнения КАК ОснованиеУвольнения,
		|	РанееПереданныеОтмененные.ДатаС КАК ДатаС,
		|	РанееПереданныеОтмененные.ДатаПо КАК ДатаПо,
		|	РанееПереданныеОтмененные.ДатаОтмены КАК ДатаОтмены,
		|	РанееПереданныеОтмененные.ЯвляетсяСовместителем КАК ЯвляетсяСовместителем,
		|	РанееПереданныеОтмененные.ПредставлениеДолжности КАК ПредставлениеДолжности,
		|	РанееПереданныеОтмененные.ПредставлениеПодразделения КАК ПредставлениеПодразделения,
		|	РанееПереданныеОтмененные.ОснованиеУвольненияТекстОснования КАК ОснованиеУвольненияТекстОснования,
		|	РанееПереданныеОтмененные.ОснованиеУвольненияСтатья КАК ОснованиеУвольненияСтатья,
		|	РанееПереданныеОтмененные.ОснованиеУвольненияЧасть КАК ОснованиеУвольненияЧасть,
		|	РанееПереданныеОтмененные.ОснованиеУвольненияПункт КАК ОснованиеУвольненияПункт,
		|	РанееПереданныеОтмененные.ОснованиеУвольненияПодПункт КАК ОснованиеУвольненияПодПункт,
		|	РанееПереданныеОтмененные.ОписаниеДолжности КАК ОписаниеДолжности,
		|	РанееПереданныеОтмененные.Передано КАК Передано
		|ПОМЕСТИТЬ ВТМероприятияДоНачалаУчета
		|ИЗ
		|	ВТВсеМероприятияДоНачалаУчета КАК РанееПереданныеОтмененные
		|ГДЕ
		|	РанееПереданныеОтмененные.ИдМероприятия В
		|			(ВЫБРАТЬ
		|				ВТИдентификаторыРанееПереданныхОтмененных.ИдМероприятия
		|			ИЗ
		|				ВТИдентификаторыРанееПереданныхОтмененных)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	МероприятияДоНачалаУчета.Регистратор,
		|	МероприятияДоНачалаУчета.ФизическоеЛицо,
		|	МероприятияДоНачалаУчета.Организация,
		|	МероприятияДоНачалаУчета.ИдМероприятия,
		|	МероприятияДоНачалаУчета.Отменено,
		|	МероприятияДоНачалаУчета.Сотрудник,
		|	МероприятияДоНачалаУчета.ДатаМероприятия,
		|	МероприятияДоНачалаУчета.ВидМероприятия,
		|	МероприятияДоНачалаУчета.Сведения,
		|	МероприятияДоНачалаУчета.Подразделение,
		|	МероприятияДоНачалаУчета.Должность,
		|	МероприятияДоНачалаУчета.РазрядКатегория,
		|	МероприятияДоНачалаУчета.КодПоРееструДолжностей,
		|	МероприятияДоНачалаУчета.ТрудоваяФункция,
		|	МероприятияДоНачалаУчета.НаименованиеДокументаОснования,
		|	МероприятияДоНачалаУчета.ДатаДокументаОснования,
		|	МероприятияДоНачалаУчета.СерияДокументаОснования,
		|	МероприятияДоНачалаУчета.НомерДокументаОснования,
		|	МероприятияДоНачалаУчета.ОснованиеУвольнения,
		|	МероприятияДоНачалаУчета.ДатаС,
		|	МероприятияДоНачалаУчета.ДатаПо,
		|	МероприятияДоНачалаУчета.ДатаОтмены,
		|	МероприятияДоНачалаУчета.ЯвляетсяСовместителем,
		|	МероприятияДоНачалаУчета.ПредставлениеДолжности,
		|	МероприятияДоНачалаУчета.ПредставлениеПодразделения,
		|	МероприятияДоНачалаУчета.ОснованиеУвольненияТекстОснования,
		|	МероприятияДоНачалаУчета.ОснованиеУвольненияСтатья,
		|	МероприятияДоНачалаУчета.ОснованиеУвольненияЧасть,
		|	МероприятияДоНачалаУчета.ОснованиеУвольненияПункт,
		|	МероприятияДоНачалаУчета.ОснованиеУвольненияПодПункт,
		|	МероприятияДоНачалаУчета.ОписаниеДолжности,
		|	МероприятияДоНачалаУчета.Передано
		|ИЗ
		|	ВТИдМероприятияПоследнихМероприятийДоНачалаУчета КАК ИдМероприятияПоследнихМероприятийДоНачалаУчета
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТВсеМероприятияДоНачалаУчета КАК МероприятияДоНачалаУчета
		|		ПО ИдМероприятияПоследнихМероприятийДоНачалаУчета.Сотрудник = МероприятияДоНачалаУчета.Сотрудник
		|			И ИдМероприятияПоследнихМероприятийДоНачалаУчета.Организация = МероприятияДоНачалаУчета.Организация
		|			И ИдМероприятияПоследнихМероприятийДоНачалаУчета.ИдМероприятия = МероприятияДоНачалаУчета.ИдМероприятия
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	МероприятияДоНачалаУчета.Регистратор,
		|	МероприятияДоНачалаУчета.ФизическоеЛицо,
		|	МероприятияДоНачалаУчета.Организация,
		|	МероприятияДоНачалаУчета.ИдМероприятия,
		|	МероприятияДоНачалаУчета.Отменено,
		|	МероприятияДоНачалаУчета.Сотрудник,
		|	МероприятияДоНачалаУчета.ДатаМероприятия,
		|	МероприятияДоНачалаУчета.ВидМероприятия,
		|	МероприятияДоНачалаУчета.Сведения,
		|	МероприятияДоНачалаУчета.Подразделение,
		|	МероприятияДоНачалаУчета.Должность,
		|	МероприятияДоНачалаУчета.РазрядКатегория,
		|	МероприятияДоНачалаУчета.КодПоРееструДолжностей,
		|	МероприятияДоНачалаУчета.ТрудоваяФункция,
		|	МероприятияДоНачалаУчета.НаименованиеДокументаОснования,
		|	МероприятияДоНачалаУчета.ДатаДокументаОснования,
		|	МероприятияДоНачалаУчета.СерияДокументаОснования,
		|	МероприятияДоНачалаУчета.НомерДокументаОснования,
		|	МероприятияДоНачалаУчета.ОснованиеУвольнения,
		|	МероприятияДоНачалаУчета.ДатаС,
		|	МероприятияДоНачалаУчета.ДатаПо,
		|	МероприятияДоНачалаУчета.ДатаОтмены,
		|	МероприятияДоНачалаУчета.ЯвляетсяСовместителем,
		|	МероприятияДоНачалаУчета.ПредставлениеДолжности,
		|	МероприятияДоНачалаУчета.ПредставлениеПодразделения,
		|	МероприятияДоНачалаУчета.ОснованиеУвольненияТекстОснования,
		|	МероприятияДоНачалаУчета.ОснованиеУвольненияСтатья,
		|	МероприятияДоНачалаУчета.ОснованиеУвольненияЧасть,
		|	МероприятияДоНачалаУчета.ОснованиеУвольненияПункт,
		|	МероприятияДоНачалаУчета.ОснованиеУвольненияПодПункт,
		|	МероприятияДоНачалаУчета.ОписаниеДолжности,
		|	МероприятияДоНачалаУчета.Передано
		|ИЗ
		|	ВТИдМероприятияПоследнихМероприятийДоНачалаУчета КАК ИдМероприятияПоследнихМероприятийДоНачалаУчета
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТВсеМероприятияДоНачалаУчета КАК МероприятияДоНачалаУчета
		|		ПО ИдМероприятияПоследнихМероприятийДоНачалаУчета.Сотрудник = МероприятияДоНачалаУчета.Сотрудник
		|			И ИдМероприятияПоследнихМероприятийДоНачалаУчета.Организация = МероприятияДоНачалаУчета.Организация
		|			И ИдМероприятияПоследнихМероприятийДоНачалаУчета.ДатаМероприятия < МероприятияДоНачалаУчета.ДатаМероприятия
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВсеМероприятияДоНачалаУчета КАК МероприятияДоНачалаУчетаПоследнее
		|		ПО ИдМероприятияПоследнихМероприятийДоНачалаУчета.Сотрудник = МероприятияДоНачалаУчетаПоследнее.Сотрудник
		|			И ИдМероприятияПоследнихМероприятийДоНачалаУчета.Организация = МероприятияДоНачалаУчетаПоследнее.Организация
		|			И ИдМероприятияПоследнихМероприятийДоНачалаУчета.ИдМероприятия = МероприятияДоНачалаУчетаПоследнее.ИдМероприятия
		|ГДЕ
		|	МероприятияДоНачалаУчета.ВидМероприятия В (ЗНАЧЕНИЕ(Перечисление.ВидыМероприятийТрудовойДеятельности.Переименование), ЗНАЧЕНИЕ(Перечисление.ВидыМероприятийТрудовойДеятельности.УстановлениеВторойПрофессии))
		|	И (МероприятияДоНачалаУчета.Передано
		|			ИЛИ МероприятияДоНачалаУчета.Передано = ЕСТЬNULL(МероприятияДоНачалаУчетаПоследнее.Передано, ЛОЖЬ))
		|	И НЕ МероприятияДоНачалаУчета.ИдМероприятия В
		|				(ВЫБРАТЬ
		|					ВТИдентификаторыРанееПереданныхОтмененных.ИдМероприятия
		|				ИЗ
		|					ВТИдентификаторыРанееПереданныхОтмененных)";
	
	ЗарплатаКадрыОбщиеНаборыДанных.УстановитьВыборкуТолькоРазрешенныхДанных(ТекстЗапросаМероприятияКПередаче, ТолькоРазрешенные);
	ЗарплатаКадрыОбщиеНаборыДанных.ЗаменитьИмяСоздаваемойВременнойТаблицы(ТекстЗапросаМероприятияКПередаче, "ВТМероприятияДоНачалаУчета", ИмяВТМероприятияДоНачалаУчета);
	
	Если ИсключаемыйРегистратор = Неопределено Тогда
		ТекстЗапросаМероприятияКПередаче = СтрЗаменить(ТекстЗапросаМероприятияКПередаче, "&ИсключаемыйРегистраторПереданныхМероприятийТрудовойДеятельности", "(ИСТИНА)");
		ТекстЗапросаМероприятияКПередаче = СтрЗаменить(ТекстЗапросаМероприятияКПередаче, "&ИсключаемыйРегистраторМероприятийТрудовойДеятельности", "(ИСТИНА)");
	Иначе
		
		Запрос.УстановитьПараметр("ИсключаемыйРегистратор", ИсключаемыйРегистратор);
		
		ТекстЗапросаМероприятияКПередаче = СтрЗаменить(ТекстЗапросаМероприятияКПередаче, "&ИсключаемыйРегистраторПереданныхМероприятийТрудовойДеятельности",
			"НЕ МероприятияТрудовойДеятельностиПереданные.Регистратор В (&ИсключаемыйРегистратор)");
		
		ТекстЗапросаМероприятияКПередаче = СтрЗаменить(ТекстЗапросаМероприятияКПередаче, "&ИсключаемыйРегистраторМероприятийТрудовойДеятельности",
			"НЕ МероприятияТрудовойДеятельности.Регистратор В (&ИсключаемыйРегистратор)");
		
	КонецЕсли;
	
	Запрос.Текст = ЗарплатаКадрыОбщиеНаборыДанных.ТекстОбъединенногоЗапроса(Запрос.Текст, ТекстЗапросаМероприятияКПередаче);
	
	Если ЗначениеЗаполнено(ИмяВТМероприятияДоНачалаУчета) Тогда
		
		ИменаВременныхТаблицКУничтожению = Новый Массив;
		ИменаВременныхТаблицКУничтожению.Добавить("ВТВсеМероприятияДоНачалаУчета");
		ИменаВременныхТаблицКУничтожению.Добавить("ВТИдентификаторыРанееПереданныхОтмененных");
		ИменаВременныхТаблицКУничтожению.Добавить("ВТДатыПоследнихМероприятийДоНачалаУчета");
		ИменаВременныхТаблицКУничтожению.Добавить("ВТИдМероприятияПоследнихМероприятийДоНачалаУчета");
		
		ЗарплатаКадрыОбщиеНаборыДанных.ДобавитьЗапросыУничтоженияВременныхТаблиц(Запрос.Текст, ИменаВременныхТаблицКУничтожению);
		
	КонецЕсли;
	
	Возврат Запрос;
	
КонецФункции

#Область ОбновлениеИнформационнойБазы

Процедура СформироватьДвиженияЗаявленийОСпособеВеденияТрудовыхКнижек(ПараметрыОбновления)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Если ПараметрыОбновления = Неопределено Тогда
		МассивОбновленных = Новый Массив;
	Иначе
		
		Если ПараметрыОбновления.Свойство("МассивОбновленных") Тогда
			МассивОбновленных = ПараметрыОбновления.МассивОбновленных;
		Иначе
			МассивОбновленных = Новый Массив;
			ПараметрыОбновления.Вставить("МассивОбновленных", МассивОбновленных);
		КонецЕсли;
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("МассивОбновленных", МассивОбновленных);
	
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 1000
		|	ЗаявленияОПредоставленииСведенийОТрудовойДеятельностиСотрудники.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ВТЗаявленияСОтзывами
		|ИЗ
		|	Документ.ЗаявленияОПредоставленииСведенийОТрудовойДеятельности.Сотрудники КАК ЗаявленияОПредоставленииСведенийОТрудовойДеятельностиСотрудники
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтзывЗаявленийОПредоставленииСведенийОТрудовойДеятельности.Сотрудники КАК ОтзывЗаявленийОПредоставленииСведенийОТрудовойДеятельностиСотрудники
		|		ПО ЗаявленияОПредоставленииСведенийОТрудовойДеятельностиСотрудники.Сотрудник = ОтзывЗаявленийОПредоставленииСведенийОТрудовойДеятельностиСотрудники.Сотрудник
		|			И ЗаявленияОПредоставленииСведенийОТрудовойДеятельностиСотрудники.Ссылка = ОтзывЗаявленийОПредоставленииСведенийОТрудовойДеятельностиСотрудники.Заявление
		|			И (ОтзывЗаявленийОПредоставленииСведенийОТрудовойДеятельностиСотрудники.Ссылка.Проведен)
		|ГДЕ
		|	НЕ ЗаявленияОПредоставленииСведенийОТрудовойДеятельностиСотрудники.Ссылка В (&МассивОбновленных)
		|	И ЗаявленияОПредоставленииСведенийОТрудовойДеятельностиСотрудники.УдалитьЗаявлениеОтозвано
		|	И ЗаявленияОПредоставленииСведенийОТрудовойДеятельностиСотрудники.Ссылка.Проведен
		|	И ОтзывЗаявленийОПредоставленииСведенийОТрудовойДеятельностиСотрудники.Ссылка ЕСТЬ NULL
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	ЗаявленияСОтзывами.Ссылка КАК Ссылка
		|ИЗ
		|	ВТЗаявленияСОтзывами КАК ЗаявленияСОтзывами";
	
	Если ПараметрыОбновления = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ПЕРВЫЕ 1000","");
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		СформироватьНаборыЗаписейЗаявленияОВеденииТрудовыхКнижек(ПараметрыОбновления);
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Ложь);
	
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса());
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ЗаявленияОПредоставленииСведенийОТрудовойДеятельностиСотрудники.Ссылка КАК Ссылка,
		|	ЗаявленияОПредоставленииСведенийОТрудовойДеятельностиСотрудники.Ссылка.Дата КАК Дата,
		|	ЗаявленияОПредоставленииСведенийОТрудовойДеятельностиСотрудники.Ссылка.Организация КАК Организация,
		|	ЗаявленияОПредоставленииСведенийОТрудовойДеятельностиСотрудники.Ссылка.Ответственный КАК Ответственный,
		|	МАКСИМУМ(ЗаявленияОПредоставленииСведенийОТрудовойДеятельностиСотрудники.НомерСтроки) КАК НомерСтроки,
		|	ЗаявленияОПредоставленииСведенийОТрудовойДеятельностиСотрудники.Сотрудник КАК Сотрудник
		|ПОМЕСТИТЬ ВТОтозванные
		|ИЗ
		|	ВТЗаявленияСОтзывами КАК ЗаявленияСОтзывами
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаявленияОПредоставленииСведенийОТрудовойДеятельности.Сотрудники КАК ЗаявленияОПредоставленииСведенийОТрудовойДеятельностиСотрудники
		|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтзывЗаявленийОПредоставленииСведенийОТрудовойДеятельности.Сотрудники КАК ОтзывЗаявленийОПредоставленииСведенийОТрудовойДеятельностиСотрудники
		|			ПО ЗаявленияОПредоставленииСведенийОТрудовойДеятельностиСотрудники.Сотрудник = ОтзывЗаявленийОПредоставленииСведенийОТрудовойДеятельностиСотрудники.Сотрудник
		|				И ЗаявленияОПредоставленииСведенийОТрудовойДеятельностиСотрудники.Ссылка = ОтзывЗаявленийОПредоставленииСведенийОТрудовойДеятельностиСотрудники.Заявление
		|				И (ОтзывЗаявленийОПредоставленииСведенийОТрудовойДеятельностиСотрудники.Ссылка.Проведен)
		|		ПО ЗаявленияСОтзывами.Ссылка = ЗаявленияОПредоставленииСведенийОТрудовойДеятельностиСотрудники.Ссылка
		|ГДЕ
		|	ЗаявленияОПредоставленииСведенийОТрудовойДеятельностиСотрудники.УдалитьЗаявлениеОтозвано
		|	И ОтзывЗаявленийОПредоставленииСведенийОТрудовойДеятельностиСотрудники.Ссылка ЕСТЬ NULL
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗаявленияОПредоставленииСведенийОТрудовойДеятельностиСотрудники.Ссылка,
		|	ЗаявленияОПредоставленииСведенийОТрудовойДеятельностиСотрудники.Ссылка.Дата,
		|	ЗаявленияОПредоставленииСведенийОТрудовойДеятельностиСотрудники.Ссылка.Организация,
		|	ЗаявленияОПредоставленииСведенийОТрудовойДеятельностиСотрудники.Ссылка.Ответственный,
		|	ЗаявленияОПредоставленииСведенийОТрудовойДеятельностиСотрудники.Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Отозванные.Ссылка КАК Ссылка,
		|	Отозванные.Дата КАК Дата,
		|	Отозванные.Организация КАК Организация,
		|	Отозванные.Ответственный КАК Ответственный,
		|	Отозванные.НомерСтроки КАК НомерСтроки,
		|	Отозванные.Сотрудник КАК Сотрудник,
		|	&ТекущаяДата КАК ДатаПрименения
		|ПОМЕСТИТЬ ВТДатыПримененияЗаявлений
		|ИЗ
		|	ВТОтозванные КАК Отозванные
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаявленияОПредоставленииСведенийОТрудовойДеятельности.Сотрудники КАК ЗаявленияОПредоставленииСведенийОТрудовойДеятельностиСотрудники
		|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтзывЗаявленийОПредоставленииСведенийОТрудовойДеятельности.Сотрудники КАК ОтзывЗаявленийОПредоставленииСведенийОТрудовойДеятельностиСотрудники
		|			ПО ЗаявленияОПредоставленииСведенийОТрудовойДеятельностиСотрудники.Сотрудник = ОтзывЗаявленийОПредоставленииСведенийОТрудовойДеятельностиСотрудники.Сотрудник
		|				И ЗаявленияОПредоставленииСведенийОТрудовойДеятельностиСотрудники.Ссылка = ОтзывЗаявленийОПредоставленииСведенийОТрудовойДеятельностиСотрудники.Заявление
		|				И (ОтзывЗаявленийОПредоставленииСведенийОТрудовойДеятельностиСотрудники.Ссылка.Проведен)
		|		ПО Отозванные.Сотрудник = ЗаявленияОПредоставленииСведенийОТрудовойДеятельностиСотрудники.Сотрудник
		|			И Отозванные.Дата < ЗаявленияОПредоставленииСведенийОТрудовойДеятельностиСотрудники.Ссылка.Дата
		|			И (ЗаявленияОПредоставленииСведенийОТрудовойДеятельностиСотрудники.Ссылка.Проведен)
		|ГДЕ
		|	ОтзывЗаявленийОПредоставленииСведенийОТрудовойДеятельностиСотрудники.Ссылка ЕСТЬ NULL
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Отозванные.Ссылка,
		|	Отозванные.Дата,
		|	Отозванные.Организация,
		|	Отозванные.Ответственный,
		|	Отозванные.НомерСтроки,
		|	Отозванные.Сотрудник,
		|	МИНИМУМ(СведенияОТрудовойДеятельностиРаботниковСЗВ_ТД.Ссылка.Дата)
		|ИЗ
		|	ВТОтозванные КАК Отозванные
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СведенияОТрудовойДеятельностиРаботниковСЗВ_ТД.Сотрудники КАК СведенияОТрудовойДеятельностиРаботниковСЗВ_ТД
		|		ПО Отозванные.Сотрудник = СведенияОТрудовойДеятельностиРаботниковСЗВ_ТД.Сотрудник
		|			И Отозванные.Ссылка = СведенияОТрудовойДеятельностиРаботниковСЗВ_ТД.ЗаявлениеОПродолжении
		|			И (СведенияОТрудовойДеятельностиРаботниковСЗВ_ТД.ЗаявлениеОПродолженииОтмена)
		|			И (СведенияОТрудовойДеятельностиРаботниковСЗВ_ТД.Ссылка.Проведен)
		|
		|СГРУППИРОВАТЬ ПО
		|	Отозванные.Дата,
		|	Отозванные.Ссылка,
		|	Отозванные.Сотрудник,
		|	Отозванные.НомерСтроки,
		|	Отозванные.Организация,
		|	Отозванные.Ответственный
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Отозванные.Ссылка,
		|	Отозванные.Дата,
		|	Отозванные.Организация,
		|	Отозванные.Ответственный,
		|	Отозванные.НомерСтроки,
		|	Отозванные.Сотрудник,
		|	МИНИМУМ(СведенияОТрудовойДеятельностиРаботниковСЗВ_ТД.Ссылка.Дата)
		|ИЗ
		|	ВТОтозванные КАК Отозванные
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СведенияОТрудовойДеятельностиРаботниковСЗВ_ТД.Сотрудники КАК СведенияОТрудовойДеятельностиРаботниковСЗВ_ТД
		|		ПО Отозванные.Сотрудник = СведенияОТрудовойДеятельностиРаботниковСЗВ_ТД.Сотрудник
		|			И Отозванные.Ссылка = СведенияОТрудовойДеятельностиРаботниковСЗВ_ТД.ЗаявлениеОПредоставлении
		|			И (СведенияОТрудовойДеятельностиРаботниковСЗВ_ТД.ЗаявлениеОПредоставленииОтмена)
		|			И (СведенияОТрудовойДеятельностиРаботниковСЗВ_ТД.Ссылка.Проведен)
		|
		|СГРУППИРОВАТЬ ПО
		|	Отозванные.Дата,
		|	Отозванные.Ссылка,
		|	Отозванные.Сотрудник,
		|	Отозванные.НомерСтроки,
		|	Отозванные.Организация,
		|	Отозванные.Ответственный
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДатыПримененияЗаявлений.Ссылка КАК Ссылка,
		|	ДатыПримененияЗаявлений.Организация КАК Организация,
		|	ДатыПримененияЗаявлений.Ответственный КАК Ответственный,
		|	ДатыПримененияЗаявлений.НомерСтроки КАК НомерСтроки,
		|	ДатыПримененияЗаявлений.Сотрудник КАК Сотрудник,
		|	ЕСТЬNULL(МИНИМУМ(ДатыПримененияЗаявлений.ДатаПрименения), ДатыПримененияЗаявлений.Дата) КАК Дата
		|ИЗ
		|	ВТДатыПримененияЗаявлений КАК ДатыПримененияЗаявлений
		|
		|СГРУППИРОВАТЬ ПО
		|	ДатыПримененияЗаявлений.Ссылка,
		|	ДатыПримененияЗаявлений.Дата,
		|	ДатыПримененияЗаявлений.Организация,
		|	ДатыПримененияЗаявлений.НомерСтроки,
		|	ДатыПримененияЗаявлений.Ответственный,
		|	ДатыПримененияЗаявлений.Сотрудник
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка,
		|	НомерСтроки";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.СледующийПоЗначениюПоля("Ссылка") Цикл
		
		ДокументОтзывОбъект = Документы.ОтзывЗаявленийОПредоставленииСведенийОТрудовойДеятельности.СоздатьДокумент();
		ЗаполнитьЗначенияСвойств(ДокументОтзывОбъект, Выборка, "Дата,Организация,Ответственный");
		
		Пока Выборка.Следующий() Цикл
			
			НоваяСтрокаДокументаОтзыва = ДокументОтзывОбъект.Сотрудники.Добавить();
			НоваяСтрокаДокументаОтзыва.Сотрудник = Выборка.Сотрудник;
			НоваяСтрокаДокументаОтзыва.Заявление = Выборка.Ссылка;
			
		КонецЦикла;
		
		ДокументОтзывОбъект.ДополнительныеСвойства.Вставить("ОтключитьПроверкуДатыЗапретаИзменения", Истина);
		ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ДокументОтзывОбъект, Истина, Истина, РежимЗаписиДокумента.Проведение);
		
	КонецЦикла;
	
	Если ПараметрыОбновления = Неопределено Тогда
		СформироватьНаборыЗаписейЗаявленияОВеденииТрудовыхКнижек(ПараметрыОбновления);
	КонецЕсли;
	
КонецПроцедуры

Процедура СформироватьНаборыЗаписейЗаявленияОВеденииТрудовыхКнижек(ПараметрыОбновления)
	
	Запрос = Новый Запрос;
	Если ПараметрыОбновления = Неопределено Тогда
		МассивОбновленных = Новый Массив;
	Иначе
		
		Если ПараметрыОбновления.Свойство("МассивОбновленных") Тогда
			МассивОбновленных = ПараметрыОбновления.МассивОбновленных;
		Иначе
			МассивОбновленных = Новый Массив;
			ПараметрыОбновления.Вставить("МассивОбновленных", МассивОбновленных);
		КонецЕсли;
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("МассивОбновленных", МассивОбновленных);
	
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 1000
		|	ЗаявленияОПредоставленииСведенийОТрудовойДеятельностиСотрудники.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.ЗаявленияОПредоставленииСведенийОТрудовойДеятельности.Сотрудники КАК ЗаявленияОПредоставленииСведенийОТрудовойДеятельностиСотрудники
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗаявленияОВеденииТрудовыхКнижек КАК ЗаявленияОВеденииТрудовыхКнижек
		|		ПО ЗаявленияОПредоставленииСведенийОТрудовойДеятельностиСотрудники.Ссылка = ЗаявленияОВеденииТрудовыхКнижек.Регистратор
		|ГДЕ
		|	НЕ ЗаявленияОПредоставленииСведенийОТрудовойДеятельностиСотрудники.Ссылка В (&МассивОбновленных)
		|	И ЗаявленияОПредоставленииСведенийОТрудовойДеятельностиСотрудники.Ссылка.Проведен
		|	И ЗаявленияОВеденииТрудовыхКнижек.Регистратор ЕСТЬ NULL";
	
	Если ПараметрыОбновления = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ПЕРВЫЕ 1000","");
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество() = 0 Тогда
		СформироватьНаборыЗаписейЗаявленияОВеденииТрудовыхКнижекОтозванные(ПараметрыОбновления);
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Ложь);
	
	Пока Выборка.Следующий() Цикл
		
		МассивОбновленных.Добавить(Выборка.Ссылка);
		
		Если Не ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ПодготовитьОбновлениеДанных(ПараметрыОбновления, "РегистрСведений.ЗаявленияОВеденииТрудовыхКнижек.НаборЗаписей", "Регистратор", Выборка.Ссылка) Тогда
			Продолжить;
		КонецЕсли;
		
		ДанныеДляПроведения = Документы.ЗаявленияОПредоставленииСведенийОТрудовойДеятельности.ДанныеДляПроведенияДокумента(Выборка.Ссылка);
		НаборЗаписей = РегистрыСведений.ЗаявленияОВеденииТрудовыхКнижек.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(Выборка.Ссылка);
		
		СформироватьДвиженияЗаявленийОВеденииТрудовыхКнижек(НаборЗаписей, ДанныеДляПроведения.ЗаявленияОВеденииТрудовыхКнижек);
		
		НаборЗаписей.ДополнительныеСвойства.Вставить("ОтключитьПроверкуДатыЗапретаИзменения", Истина);
		
		ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей);
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ЗавершитьОбновлениеДанных(ПараметрыОбновления);
		
	КонецЦикла;
	
	Если ПараметрыОбновления = Неопределено Тогда
		СформироватьНаборыЗаписейЗаявленияОВеденииТрудовыхКнижекОтозванные(ПараметрыОбновления);
	КонецЕсли;
	
КонецПроцедуры

Процедура СформироватьНаборыЗаписейЗаявленияОВеденииТрудовыхКнижекОтозванные(ПараметрыОбновления)
	
	Запрос = Новый Запрос;
	Если ПараметрыОбновления = Неопределено Тогда
		МассивОбновленных = Новый Массив;
	Иначе
		
		Если ПараметрыОбновления.Свойство("МассивОбновленных") Тогда
			МассивОбновленных = ПараметрыОбновления.МассивОбновленных;
		Иначе
			МассивОбновленных = Новый Массив;
			ПараметрыОбновления.Вставить("МассивОбновленных", МассивОбновленных);
		КонецЕсли;
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("МассивОбновленных", МассивОбновленных);
	
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 1000
		|	ОтзывЗаявленийОПредоставленииСведенийОТрудовойДеятельности.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.ОтзывЗаявленийОПредоставленииСведенийОТрудовойДеятельности.Сотрудники КАК ОтзывЗаявленийОПредоставленииСведенийОТрудовойДеятельности
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗаявленияОВеденииТрудовыхКнижекОтозванные КАК ЗаявленияОВеденииТрудовыхКнижекОтозванные
		|		ПО ОтзывЗаявленийОПредоставленииСведенийОТрудовойДеятельности.Ссылка = ЗаявленияОВеденииТрудовыхКнижекОтозванные.Регистратор
		|ГДЕ
		|	НЕ ОтзывЗаявленийОПредоставленииСведенийОТрудовойДеятельности.Ссылка В (&МассивОбновленных)
		|	И ОтзывЗаявленийОПредоставленииСведенийОТрудовойДеятельности.Ссылка.Проведен
		|	И ЗаявленияОВеденииТрудовыхКнижекОтозванные.Регистратор ЕСТЬ NULL";
	
	Если ПараметрыОбновления = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ПЕРВЫЕ 1000","");
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество() = 0 Тогда
		СформироватьНаборыЗаписейЗаявленияОВеденииТрудовыхКнижекПереданные(ПараметрыОбновления);
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Ложь);
	
	Пока Выборка.Следующий() Цикл
		
		МассивОбновленных.Добавить(Выборка.Ссылка);
		
		Если Не ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ПодготовитьОбновлениеДанных(ПараметрыОбновления, "РегистрСведений.ЗаявленияОВеденииТрудовыхКнижекОтозванные.НаборЗаписей", "Регистратор", Выборка.Ссылка) Тогда
			Продолжить;
		КонецЕсли;
		
		ДанныеДляПроведения = Документы.ОтзывЗаявленийОПредоставленииСведенийОТрудовойДеятельности.ДанныеДляПроведенияДокумента(Выборка.Ссылка);
		НаборЗаписей = РегистрыСведений.ЗаявленияОВеденииТрудовыхКнижекОтозванные.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(Выборка.Ссылка);
		
		СформироватьДвиженияЗаявленийОВеденииТрудовыхКнижекОтозванные(НаборЗаписей, ДанныеДляПроведения.ЗаявленияОВеденииТрудовыхКнижекОтозванные);
		
		НаборЗаписей.ДополнительныеСвойства.Вставить("ОтключитьПроверкуДатыЗапретаИзменения", Истина);
		
		ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей);
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ЗавершитьОбновлениеДанных(ПараметрыОбновления);
		
	КонецЦикла;
	
	Если ПараметрыОбновления = Неопределено Тогда
		СформироватьНаборыЗаписейЗаявленияОВеденииТрудовыхКнижекПереданные(ПараметрыОбновления);
	КонецЕсли;
	
КонецПроцедуры

Процедура СформироватьНаборыЗаписейЗаявленияОВеденииТрудовыхКнижекПереданные(ПараметрыОбновления)
	
	Запрос = Новый Запрос;
	Если ПараметрыОбновления = Неопределено Тогда
		МассивОбновленных = Новый Массив;
	Иначе
		
		Если ПараметрыОбновления.Свойство("МассивОбновленных") Тогда
			МассивОбновленных = ПараметрыОбновления.МассивОбновленных;
		Иначе
			МассивОбновленных = Новый Массив;
			ПараметрыОбновления.Вставить("МассивОбновленных", МассивОбновленных);
		КонецЕсли;
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("МассивОбновленных", МассивОбновленных);
	
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 1000
		|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТД.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.СведенияОТрудовойДеятельностиРаботниковСЗВ_ТД.Сотрудники КАК СведенияОТрудовойДеятельностиРаботниковСЗВ_ТД
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗаявленияОВеденииТрудовыхКнижекПереданные КАК ЗаявленияОВеденииТрудовыхКнижекПереданные
		|		ПО СведенияОТрудовойДеятельностиРаботниковСЗВ_ТД.Ссылка = ЗаявленияОВеденииТрудовыхКнижекПереданные.Регистратор
		|ГДЕ
		|	НЕ СведенияОТрудовойДеятельностиРаботниковСЗВ_ТД.Ссылка В (&МассивОбновленных)
		|	И СведенияОТрудовойДеятельностиРаботниковСЗВ_ТД.Ссылка.Проведен
		|	И ЗаявленияОВеденииТрудовыхКнижекПереданные.Регистратор ЕСТЬ NULL
		|	И (СведенияОТрудовойДеятельностиРаботниковСЗВ_ТД.ЗаявлениеОПродолжении <> ЗНАЧЕНИЕ(Документ.ЗаявленияОПредоставленииСведенийОТрудовойДеятельности.ПустаяСсылка)
		|			ИЛИ СведенияОТрудовойДеятельностиРаботниковСЗВ_ТД.ЗаявлениеОПродолжении <> ЗНАЧЕНИЕ(Документ.ЗаявленияОПредоставленииСведенийОТрудовойДеятельности.ПустаяСсылка))";
	
	Если ПараметрыОбновления = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ПЕРВЫЕ 1000","");
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество() = 0 Тогда
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Ложь);
	
	Пока Выборка.Следующий() Цикл
		
		МассивОбновленных.Добавить(Выборка.Ссылка);
		
		Если Не ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ПодготовитьОбновлениеДанных(ПараметрыОбновления, "РегистрСведений.ЗаявленияОВеденииТрудовыхКнижекПереданные.НаборЗаписей", "Регистратор", Выборка.Ссылка) Тогда
			Продолжить;
		КонецЕсли;
		
		ДанныеДляПроведения = Документы.СведенияОТрудовойДеятельностиРаботниковСЗВ_ТД.ДанныеДляПроведенияДокумента(Выборка.Ссылка);
		НаборЗаписей = РегистрыСведений.ЗаявленияОВеденииТрудовыхКнижекПереданные.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(Выборка.Ссылка);
		
		СформироватьДвиженияЗаявленийОВеденииТрудовыхКнижекПереданных(НаборЗаписей, ДанныеДляПроведения.ЗаявленияОВеденииТрудовыхКнижекПереданные);
		
		НаборЗаписей.ДополнительныеСвойства.Вставить("ОтключитьПроверкуДатыЗапретаИзменения", Истина);
		
		ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей);
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ЗавершитьОбновлениеДанных(ПараметрыОбновления);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьПредставленияОбъектовМероприятияТрудовойДеятельностиПрочие(ПараметрыОбновления)
	
	Запрос = Новый Запрос;
	
	Если ПараметрыОбновления = Неопределено Тогда
		МассивОбновленных = Новый Массив;
	Иначе
		
		Если ПараметрыОбновления.Свойство("МассивОбновленных") Тогда
			МассивОбновленных = ПараметрыОбновления.МассивОбновленных;
		Иначе
			МассивОбновленных = Новый Массив;
			ПараметрыОбновления.Вставить("МассивОбновленных", МассивОбновленных);
		КонецЕсли;
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("МассивОбновленных", МассивОбновленных);
	
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 1000
		|	МероприятияТрудовойДеятельностиПрочие.ФизическоеЛицо КАК ФизическоеЛицо
		|ИЗ
		|	РегистрСведений.МероприятияТрудовойДеятельностиПрочие КАК МероприятияТрудовойДеятельностиПрочие
		|ГДЕ
		|	НЕ МероприятияТрудовойДеятельностиПрочие.ФизическоеЛицо В (&МассивОбновленных)
		|	И (МероприятияТрудовойДеятельностиПрочие.Должность <> ЗНАЧЕНИЕ(Справочник.Должности.ПустаяСсылка)
		|				И МероприятияТрудовойДеятельностиПрочие.ПредставлениеДолжности = """"
		|			ИЛИ МероприятияТрудовойДеятельностиПрочие.Подразделение <> ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
		|				И МероприятияТрудовойДеятельностиПрочие.ПредставлениеПодразделения = """"
		|			ИЛИ НЕ МероприятияТрудовойДеятельностиПрочие.ОснованиеУвольнения В (НЕОПРЕДЕЛЕНО, ЗНАЧЕНИЕ(Справочник.ОснованияУвольнения.ПустаяСсылка))
		|				И МероприятияТрудовойДеятельностиПрочие.ОснованиеУвольненияСтатья = """")";
	
	Если ПараметрыОбновления = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ПЕРВЫЕ 1000","");
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество() = 0 Тогда
		ЗаполнитьПредставленияОбъектовМероприятияТрудовойДеятельностиПереданные(ПараметрыОбновления);
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Ложь);
	Пока Выборка.Следующий() Цикл
		
		МассивОбновленных.Добавить(Выборка.ФизическоеЛицо);
		
		Если Не ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ПодготовитьОбновлениеДанных(
			ПараметрыОбновления, "РегистрСведений.МероприятияТрудовойДеятельностиПрочие", "ФизическоеЛицо", Выборка.ФизическоеЛицо) Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		НаборЗаписей = РегистрыСведений.МероприятияТрудовойДеятельностиПрочие.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ФизическоеЛицо.Установить(Выборка.ФизическоеЛицо);
		НаборЗаписей.Прочитать();
		
		ЗаполнитьПредставленияКоллекцииМероприятий(НаборЗаписей);
		
		ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей);
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ЗавершитьОбновлениеДанных(ПараметрыОбновления);
		
	КонецЦикла;
	
	Если ПараметрыОбновления = Неопределено Тогда
		ЗаполнитьПредставленияОбъектовМероприятияТрудовойДеятельностиПереданные(ПараметрыОбновления);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьПредставленияОбъектовМероприятияТрудовойДеятельностиПереданные(ПараметрыОбновления)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Если ПараметрыОбновления = Неопределено Тогда
		МассивОбновленных = Новый Массив;
	Иначе
		
		Если ПараметрыОбновления.Свойство("МассивОбновленных") Тогда
			МассивОбновленных = ПараметрыОбновления.МассивОбновленных;
		Иначе
			МассивОбновленных = Новый Массив;
			ПараметрыОбновления.Вставить("МассивОбновленных", МассивОбновленных);
		КонецЕсли;
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("МассивОбновленных", МассивОбновленных);
	
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 1000
		|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.Ссылка КАК Ссылка,
		|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.Ссылка.ДокументПринятВПФР КАК ДокументПринятВПФР
		|ИЗ
		|	Документ.СведенияОТрудовойДеятельностиРаботниковСЗВ_ТД.Мероприятия КАК СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия
		|ГДЕ
		|	НЕ СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.Ссылка В (&МассивОбновленных)
		|	И (СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.Должность <> ЗНАЧЕНИЕ(Справочник.Должности.ПустаяСсылка)
		|				И СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.ПредставлениеДолжности = """"
		|			ИЛИ СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.Подразделение <> ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
		|				И СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.ПредставлениеПодразделения = """"
		|			ИЛИ НЕ СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.ОснованиеУвольнения В (НЕОПРЕДЕЛЕНО, ЗНАЧЕНИЕ(Справочник.ОснованияУвольнения.ПустаяСсылка))
		|				И СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.ОснованиеУвольненияСтатья = """")";
	
	Если ПараметрыОбновления = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ПЕРВЫЕ 1000","");
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество() = 0 Тогда
		ЗаполнитьПризнакиОтмененоСТД_Р(ПараметрыОбновления);
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Ложь);
	
	Пока Выборка.Следующий() Цикл
		
		МассивОбновленных.Добавить(Выборка.Ссылка);
		
		Если Не ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ПодготовитьОбновлениеДанных(
			ПараметрыОбновления, "Документ.СведенияОТрудовойДеятельностиРаботниковСЗВ_ТД", "Ссылка", Выборка.Ссылка) Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
		ЗаполнитьПредставленияКоллекцииМероприятий(ДокументОбъект.Мероприятия, ДокументОбъект.Организация);
		
		Если Выборка.ДокументПринятВПФР Тогда
			
			ДокументОбъект.Движения.МероприятияТрудовойДеятельностиПереданные.Прочитать();
			ТаблицаНабора = ДокументОбъект.Движения.МероприятияТрудовойДеятельностиПереданные.Выгрузить();
			Для Каждого СтрокаМероприятия Из ДокументОбъект.Мероприятия Цикл
				
				Если ЗначениеЗаполнено(СтрокаМероприятия.ДатаОтмены) Тогда
					Продолжить;
				КонецЕсли;
				
				СтрокиДвижений = ТаблицаНабора.НайтиСтроки(Новый Структура("ИдМероприятия,Отменено", СтрокаМероприятия.ИдМероприятия, Ложь));
				Если СтрокиДвижений.Количество() > 0 Тогда
					
					ЗаполнитьЗначенияСвойств(СтрокиДвижений[0], СтрокаМероприятия,
						"ПредставлениеДолжности,ПредставлениеПодразделения,ОснованиеУвольненияСтатья,ОснованиеУвольненияЧасть,ОснованиеУвольненияПункт,ОснованиеУвольненияПодПункт");
					
				КонецЕсли;
				
			КонецЦикла;
			
			ДокументОбъект.Движения.МероприятияТрудовойДеятельностиПереданные.Загрузить(ТаблицаНабора);
			ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(ДокументОбъект.Движения.МероприятияТрудовойДеятельностиПереданные);
			
		КонецЕсли;
		
		ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ДокументОбъект);
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ЗавершитьОбновлениеДанных(ПараметрыОбновления);
		
	КонецЦикла;
	
	Если ПараметрыОбновления = Неопределено Тогда
		ЗаполнитьПризнакиОтмененоСТД_Р(ПараметрыОбновления);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьПризнакиОтмененоСТД_Р(ПараметрыОбновления)
	
	Запрос = Новый Запрос;
	
	Если ПараметрыОбновления = Неопределено Тогда
		МассивОбновленных = Новый Массив;
	Иначе
		
		Если ПараметрыОбновления.Свойство("МассивОбновленных") Тогда
			МассивОбновленных = ПараметрыОбновления.МассивОбновленных;
		Иначе
			МассивОбновленных = Новый Массив;
			ПараметрыОбновления.Вставить("МассивОбновленных", МассивОбновленных);
		КонецЕсли;
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("МассивОбновленных", МассивОбновленных);
	
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 1000
		|	СведенияОТрудовойДеятельностиРаботникаСТД_РМероприятия.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.СведенияОТрудовойДеятельностиРаботникаСТД_Р.Мероприятия КАК СведенияОТрудовойДеятельностиРаботникаСТД_РМероприятия
		|ГДЕ
		|	НЕ СведенияОТрудовойДеятельностиРаботникаСТД_РМероприятия.Ссылка В (&МассивОбновленных)
		|	И НЕ СведенияОТрудовойДеятельностиРаботникаСТД_РМероприятия.Отменено
		|	И СведенияОТрудовойДеятельностиРаботникаСТД_РМероприятия.УдалитьДатаОтмены <> ДАТАВРЕМЯ(1, 1, 1)";
	
	Если ПараметрыОбновления = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ПЕРВЫЕ 1000","");
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество() = 0 Тогда
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Ложь);
	
	Пока Выборка.Следующий() Цикл
		
		МассивОбновленных.Добавить(Выборка.Ссылка);
		
		Если Не ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ПодготовитьОбновлениеДанных(
			ПараметрыОбновления, "Документ.СведенияОТрудовойДеятельностиРаботникаСТД_Р", "Ссылка", Выборка.Ссылка) Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
		
		Для Каждого СтрокаМероприятия Из ДокументОбъект.Мероприятия Цикл
			
			Если ЗначениеЗаполнено(СтрокаМероприятия.УдалитьДатаОтмены) Тогда
				СтрокаМероприятия.Отменено = Истина;
			КонецЕсли;
			
		КонецЦикла;
		
		ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ДокументОбъект);
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ЗавершитьОбновлениеДанных(ПараметрыОбновления);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьПредставленияКоллекцииМероприятий(НаборЗаписей, Организация = Неопределено)
	
	Для Каждого Запись Из НаборЗаписей Цикл
		ЗаполнитьПредставленияЗаписиМероприятия(Запись, Организация);
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьПредставленияЗаписиМероприятия(Запись, Организация = Неопределено)
	
	ИменаДоступныхПолей = ЭлектронныеТрудовыеКнижкиКлиентСервер.ИменаДоступныхПолейВидовМероприятий();
	
	ДоступныеПоля = ИменаДоступныхПолей.Получить(Запись.ВидМероприятия);
	Если ДоступныеПоля <> Неопределено Тогда
		
		Если СтрНайти(ДоступныеПоля, "Должность") > 0 Тогда
			
			Если ЗначениеЗаполнено(Запись.Должность) И ПустаяСтрока(Запись.ПредставлениеДолжности) Тогда
				
				СвойстваДолжности = ЭлектронныеТрудовыеКнижкиПовтИсп.СвойстваДолжности(Запись.Должность);
				Запись.ПредставлениеДолжности = СвойстваДолжности.Представление;
				Запись.КодПоРееструДолжностей = СвойстваДолжности.КодПоРееструДолжностей;
				
			КонецЕсли;
			
		КонецЕсли;
		
		Если СтрНайти(ДоступныеПоля, "Подразделение") > 0 И ЗначениеЗаполнено(Запись.Подразделение) Тогда
			
			Если Организация <> Неопределено Тогда
				НеЗаполнятьПодразделенияВМероприятиях = ЭлектронныеТрудовыеКнижкиПовтИсп.НеЗаполнятьПодразделенияВМероприятияхТрудовойДеятельности(Организация);
			Иначе
				НеЗаполнятьПодразделенияВМероприятиях = ЭлектронныеТрудовыеКнижкиПовтИсп.НеЗаполнятьПодразделенияВМероприятияхТрудовойДеятельности(Запись.Организация);
			КонецЕсли;
			
			Если Не НеЗаполнятьПодразделенияВМероприятиях Тогда
				
				Если ЗначениеЗаполнено(Запись.Подразделение) И ПустаяСтрока(Запись.ПредставлениеПодразделения) Тогда
					
					Запись.ПредставлениеПодразделения =
						ЭлектронныеТрудовыеКнижкиПовтИсп.ПредставлениеПодразделения(Запись.Подразделение);
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
		Если СтрНайти(ДоступныеПоля, "ОснованиеУвольнения") > 0 Тогда
			
			Если ЗначениеЗаполнено(Запись.ОснованиеУвольнения) И ПустаяСтрока(Запись.ОснованиеУвольненияСтатья) Тогда
				
				ЗаполнитьЗначенияСвойств(Запись,
					ЭлектронныеТрудовыеКнижкиПовтИсп.СвойстваОснованияУвольнения(Запись.ОснованиеУвольнения));
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

Функция КодДолжностиПоРееструГосударственнойСлужбы(Должность) Экспорт
	
	Возврат ЭлектронныеТрудовыеКнижкиВнутренний.КодДолжностиПоРееструГосударственнойСлужбы(Должность);
	
КонецФункции

Функция ПредставлениеРазрядаКатегории(РазрядКатегория) Экспорт
	
	Возврат ЭлектронныеТрудовыеКнижкиВнутренний.ПредставлениеРазрядаКатегории(РазрядКатегория);
	
КонецФункции

#КонецОбласти
