
// Функция получает таблицу остатков по взаиморасчетам аренды
Функция ПолучитьОстатокПоАренднымВзаиморасчетам(Реквизиты, ДополнительныеПараметры) Экспорт
	
	СтруктураПараметров = Новый Структура("УслугаАренды, СчетНаАренду, ПериодАренды, ОбъектАренды, Депозит, СпособПогашенияПени, ГраницаОстатков,
	|Период, Регистратор, Организация, Контрагент, ДоговорКонтрагента, НаправлениеДвижения");
	ЗаполнитьЗначенияСвойств(СтруктураПараметров, Реквизиты);
	ЗаполнитьЗначенияСвойств(СтруктураПараметров, ДополнительныеПараметры);
		
	Если Не ЗначениеЗаполнено(СтруктураПараметров.ГраницаОстатков) Тогда
		СтруктураПараметров.ГраницаОстатков = Новый МоментВремени(СтруктураПараметров.Период, СтруктураПараметров.Регистратор);
	КонецЕсли;
	
	Условие = "Организация = &Организация И Контрагент = &Контрагент";
	Если ЗначениеЗаполнено(СтруктураПараметров.ДоговорКонтрагента) Тогда
		
		ВестиВзаиморасчетыПоСчетамПост  = СтруктураПараметров.ДоговорКонтрагента.АР_ВестиВзаиморасчетыПоСчетамПост;
		ВестиВзаиморасчетыПоСчетамПерем = СтруктураПараметров.ДоговорКонтрагента.АР_ВестиВзаиморасчетыПоСчетамПерем;
		ВестиВзаиморасчетыПоПериодам    = СтруктураПараметров.ДоговорКонтрагента.АР_ВестиВзаиморасчетыПоПериодам;
		ВестиВзаиморасчетыПоОбъектам    = СтруктураПараметров.ДоговорКонтрагента.АР_ВестиВзаиморасчетыПоОбъектам;
		ВестиВзаиморасчетыПоУслугам     = СтруктураПараметров.ДоговорКонтрагента.АР_ВестиВзаиморасчетыПоУслугам;
		
		Условие = Условие + " И ДоговорКонтрагента = &ДоговорКонтрагента";
		Если ВестиВзаиморасчетыПоУслугам И ЗначениеЗаполнено(СтруктураПараметров.УслугаАренды) Тогда
			Условие = Условие + " И Услуга = &УслугаАренды ";
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СтруктураПараметров.СчетНаАренду) Тогда
			Если ЗначениеЗаполнено(СтруктураПараметров.УслугаАренды) Тогда
				Если (СтруктураПараметров.УслугаАренды.АР_ПостояннаяЧастьОплаты И ВестиВзаиморасчетыПоСчетамПост ИЛИ
					Не СтруктураПараметров.УслугаАренды.АР_ПостояннаяЧастьОплаты И ВестиВзаиморасчетыПоСчетамПерем) Тогда
					Условие = Условие + " И СчетНаАренду = &СчетНаАренду ";
				КонецЕсли;
			Иначе
				Если ВестиВзаиморасчетыПоСчетамПост И ВестиВзаиморасчетыПоСчетамПерем Тогда
					Условие = Условие + " И СчетНаАренду = &СчетНаАренду ";
				ИначеЕсли ВестиВзаиморасчетыПоСчетамПост Тогда
					Условие = Условие + " И ((Услуга.АР_ПостояннаяЧастьОплаты И СчетНаАренду = &СчетНаАренду) ИЛИ НЕ Услуга.АР_ПостояннаяЧастьОплаты) ";
				ИначеЕсли ВестиВзаиморасчетыПоСчетамПерем Тогда
					Условие = Условие + " И ((НЕ Услуга.АР_ПостояннаяЧастьОплаты И СчетНаАренду = &СчетНаАренду) ИЛИ Услуга.АР_ПостояннаяЧастьОплаты) ";
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Если ВестиВзаиморасчетыПоПериодам И ЗначениеЗаполнено(СтруктураПараметров.ПериодАренды) Тогда
			Условие = Условие + " И ПериодАренды = &ПериодАренды ";
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СтруктураПараметров.ОбъектАренды) И ВестиВзаиморасчетыПоОбъектам Тогда
			Условие = Условие + " И ОбъектАренды = &ОбъектАренды ";
		КонецЕсли;
		
	КонецЕсли;
	
	Если СтруктураПараметров.Депозит = Ложь Тогда
		Условие = Условие + " И Депозит = Ложь ";
	КонецЕсли;
	
	ЗнакОстатков = ?(СтруктураПараметров.НаправлениеДвижения = "Поступление" , 1, -1);
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НЕОПРЕДЕЛЕНО КАК Счет,
	|	ВложенныйЗапрос.Субконто1 КАК Контрагент,
	|	ВложенныйЗапрос.Субконто3 КАК ДокументРасчетов,
	|	ВложенныйЗапрос.Субконто3.Дата КАК ДатаДокументаРасчетов,
	|	ВложенныйЗапрос.ДоговорКонтрагента,
	|	ВложенныйЗапрос.Валюта КАК ВалютаВзаиморасчетов,
	|	ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КАК Подразделение,
	|	ВложенныйЗапрос.УслугаАренды,
	|	ВложенныйЗапрос.ОбъектАренды,
	|	ВложенныйЗапрос.СчетНаАренду,
	|	ВложенныйЗапрос.ПериодАренды,
	|	ВложенныйЗапрос.Валюта,
	|	ВложенныйЗапрос.СуммаОстаток КАК СуммаБУ,
	|	ВложенныйЗапрос.СуммаНУОстаток КАК СуммаНУ,
	|	ВложенныйЗапрос.ВалютнаяСуммаОстаток КАК СуммаВзаиморасчетов,
	|	ВложенныйЗапрос.Депозит,
	|	ВложенныйЗапрос.Пени,
	|	0 КАК ОстатокВзаиморасчетов,
	|	0 КАК СуммаВзаиморасчетовЕНВД,
	|	0 КАК СуммаБУ_ЕНВД,
	|	0 КАК СуммаВзаиморасчетовПатент,
	|	0 КАК СуммаБУ_Патент,
	|	0 КАК СуммаВзаиморасчетовКомитента,
	|	0 КАК СуммаБУ_Комитента,
	|	0 КАК СуммаВзаиморасчетовТорговыйСбор,
	|	0 КАК СуммаБУ_ТорговыйСбор
	|ИЗ
	|	(ВЫБРАТЬ
	|		АР_ВзаиморасчетыПоАрендеОстатки.Контрагент КАК Субконто1,
	|		АР_ВзаиморасчетыПоАрендеОстатки.ДоговорКонтрагента КАК Субконто2,
	|		АР_ВзаиморасчетыПоАрендеОстатки.ДокументРасчетов КАК Субконто3,
	|		АР_ВзаиморасчетыПоАрендеОстатки.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|		АР_ВзаиморасчетыПоАрендеОстатки.Валюта КАК Валюта,
	|		АР_ВзаиморасчетыПоАрендеОстатки.УслугаАренды КАК УслугаАренды,
	|		АР_ВзаиморасчетыПоАрендеОстатки.ОбъектАренды КАК ОбъектАренды,
	|		АР_ВзаиморасчетыПоАрендеОстатки.СчетНаАренду КАК СчетНаАренду,
	|		АР_ВзаиморасчетыПоАрендеОстатки.ПериодАренды КАК ПериодАренды,
	|		АР_ВзаиморасчетыПоАрендеОстатки.Депозит КАК Депозит,
	|		АР_ВзаиморасчетыПоАрендеОстатки.Пени КАК Пени,
	|		ЕСТЬNULL(АР_ВзаиморасчетыПоАрендеОстатки.СуммаОстаток, 0) * &Множитель КАК СуммаОстаток,
	|		ЕСТЬNULL(АР_ВзаиморасчетыПоАрендеОстатки.СуммаНУОстаток, 0) * &Множитель КАК СуммаНУОстаток,
	|		ЕСТЬNULL(АР_ВзаиморасчетыПоАрендеОстатки.СуммаВзаиморасчетовОстаток, 0) * &Множитель КАК ВалютнаяСуммаОстаток,
	|		ВЫБОР
	|			КОГДА АР_ВзаиморасчетыПоАрендеОстатки.УслугаАренды.АР_УслугаАренды
	|				ТОГДА 0
	|			ИНАЧЕ 1
	|		КОНЕЦ КАК ПриоритетУслуги,
	|		ВЫБОР
	|			КОГДА АР_ВзаиморасчетыПоАрендеОстатки.Депозит
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ПриоритетСчета
	|	ИЗ
	|		РегистрНакопления.АР_ВзаиморасчетыПоАренде.Остатки(&Период, "+Условие+") КАК АР_ВзаиморасчетыПоАрендеОстатки
	|	ГДЕ
	|		ЕСТЬNULL(АР_ВзаиморасчетыПоАрендеОстатки.СуммаВзаиморасчетовОстаток, 0) * &Множитель > 0) КАК ВложенныйЗапрос
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВложенныйЗапрос.ПриоритетСчета,
	|	ВложенныйЗапрос.ПриоритетУслуги";
	
	Запрос.УстановитьПараметр("Период", СтруктураПараметров.ГраницаОстатков);                                
	Запрос.УстановитьПараметр("Организация", СтруктураПараметров.Организация);
	Запрос.УстановитьПараметр("Контрагент", СтруктураПараметров.Контрагент);
	Запрос.УстановитьПараметр("ДоговорКонтрагента", СтруктураПараметров.ДоговорКонтрагента);
	Запрос.УстановитьПараметр("СчетНаАренду", СтруктураПараметров.СчетНаАренду);
	Запрос.УстановитьПараметр("ПериодАренды", СтруктураПараметров.ПериодАренды);
	Запрос.УстановитьПараметр("ОбъектАренды", СтруктураПараметров.ОбъектАренды);
	Запрос.УстановитьПараметр("УслугаАренды", СтруктураПараметров.УслугаАренды);
		
	Запрос.УстановитьПараметр("Множитель", ЗнакОстатков);
	
	ОстаткиАвансов = Запрос.Выполнить().Выгрузить();
	
	Если ДополнительныеПараметры.Свойство("ДокументыРасчетовУСН") Тогда
		ДокументыРасчетовУСН = ДополнительныеПараметры.ДокументыРасчетовУСН;
		Для Каждого СтрокаАванса Из ОстаткиАвансов Цикл
			СтруктураУСН = ДокументыРасчетовУСН.Получить(СтрокаАванса.ДокументРасчетов);
			Если НЕ СтруктураУСН = Неопределено Тогда
				СтрокаАванса.СуммаВзаиморасчетовЕНВД		 = ?(СтруктураУСН.ЕстьОстаткиЕНВД, СтрокаАванса.СуммаВзаиморасчетов, 0);	
				СтрокаАванса.СуммаБУ_ЕНВД 			 		 = ?(СтруктураУСН.ЕстьОстаткиЕНВД, СтрокаАванса.СуммаБУ, 0);	
				СтрокаАванса.СуммаВзаиморасчетовПатент 		 = ?(СтруктураУСН.ЕстьОстаткиПатент, СтрокаАванса.СуммаВзаиморасчетов, 0);	
				СтрокаАванса.СуммаБУ_Патент 		 		 = ?(СтруктураУСН.ЕстьОстаткиПатент, СтрокаАванса.СуммаБУ, 0);	
				СтрокаАванса.СуммаВзаиморасчетовКомитента 	 = ?(СтруктураУСН.ЕстьОстаткиКомитента, СтрокаАванса.СуммаВзаиморасчетов, 0);	
				СтрокаАванса.СуммаБУ_Комитента 		 		 = ?(СтруктураУСН.ЕстьОстаткиКомитента, СтрокаАванса.СуммаБУ, 0);	
				СтрокаАванса.СуммаВзаиморасчетовТорговыйСбор = ?(СтруктураУСН.ЕстьОстаткиТорговыйСбор, СтрокаАванса.СуммаВзаиморасчетов, 0);	
				СтрокаАванса.СуммаБУ_ТорговыйСбор	 		 = ?(СтруктураУСН.ЕстьОстаткиТорговыйСбор, СтрокаАванса.СуммаБУ, 0);	
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	ОбщегоНазначенияБПВызовСервера.УпорядочитьТаблицуПоДокументу(ОстаткиАвансов, "ДокументРасчетов", "ДатаДокументаРасчетов");
	Направление = ?(СтруктураПараметров.СпособПогашенияПени = Перечисления.АР_СпособыПогашенияПени.СперваПениПотомОсновнойДолг, "Убыв", "Возр");
	ОстаткиАвансов.Сортировать("Пени " + Направление);

	Возврат ОстаткиАвансов;

КонецФункции
