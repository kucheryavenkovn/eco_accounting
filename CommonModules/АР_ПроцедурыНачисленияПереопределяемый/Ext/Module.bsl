
Функция ПолучитьПараметрыНачисленияПени(Запрос) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	СрокиОплаты = Запрос.Выполнить().Выгрузить();
	Возврат СрокиОплаты;
	
КонецФункции

Функция ПроизводственныйКалендарьЗаполненНаПериод(НачалоКалендаря, КонецКалендаря) Экспорт
	
	ПроизводственныйКалендарь = Константы.АР_ОсновнойПроизводственныйКалендарьАренды.Получить();
	Если ПроизводственныйКалендарь.Пустая() Тогда
		ТекстОшибки = "В настройках учета не выбран основной производственный календарь. Расчет не выполнен";
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
		Возврат Ложь; 
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(КонецКалендаря) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ПроизводственныйКалендарь", ПроизводственныйКалендарь);
	Запрос.УстановитьПараметр("НачПериода", Год(НачалоКалендаря));
	Запрос.УстановитьПараметр("КонПериода", Год(КонецКалендаря));
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеПроизводственногоКалендаря.Год
	|ИЗ
	|	РегистрСведений.ДанныеПроизводственногоКалендаря КАК ДанныеПроизводственногоКалендаря
	|ГДЕ
	|	ДанныеПроизводственногоКалендаря.Год МЕЖДУ &НачПериода И &КонПериода
	|	И ДанныеПроизводственногоКалендаря.ПроизводственныйКалендарь = &ПроизводственныйКалендарь";
	Рез = Запрос.Выполнить().Выгрузить();
	КалендарьЗаполнен = Истина;
	Для К = Год(НачалоКалендаря) По Год(КонецКалендаря) Цикл
		Если Рез.Найти(К, "Год") = Неопределено Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не заполнен производственный календарь на " + Формат(К, "ЧГ=0") + " год. Обработка не выполнена");
			КалендарьЗаполнен = Ложь;
		КонецЕсли;
	КонецЦикла;
	Возврат КалендарьЗаполнен;
	
КонецФункции

Функция ПолучитьЗапросДляРасчетаРабочихДней(НачалоКалендаря, КонецКалендаря) Экспорт 
	
	СписокРабочихДней = Новый СписокЗначений;
	СписокРабочихДней.Добавить(Перечисления.ВидыДнейПроизводственногоКалендаря.Рабочий);
	СписокРабочихДней.Добавить(Перечисления.ВидыДнейПроизводственногоКалендаря.Предпраздничный);
	
	ПроизводственныйКалендарь = Константы.АР_ОсновнойПроизводственныйКалендарьАренды.Получить();

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("РабочийДень", СписокРабочихДней);
	Запрос.УстановитьПараметр("НачПериодаКалендаря", НачалоКалендаря);
	Запрос.УстановитьПараметр("КонПериодаКалендаря", КонецКалендаря);
	Запрос.УстановитьПараметр("ПроизводственныйКалендарь", ПроизводственныйКалендарь);

	Запрос.Текст = ПолучитьТекстЗапросаДляРасчетаРабочихДней();
	Возврат Запрос;
	
КонецФункции

Функция ПолучитьТекстЗапросаДляРасчетаРабочихДней()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеПроизводственногоКалендаря.Дата КАК Дата,
	|	ВЫБОР
	|		КОГДА ДанныеПроизводственногоКалендаря.ВидДня В (&РабочийДень)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоРабочийДень
	|ИЗ
	|	РегистрСведений.ДанныеПроизводственногоКалендаря КАК ДанныеПроизводственногоКалендаря
	|ГДЕ
	|	ДанныеПроизводственногоКалендаря.Дата МЕЖДУ &НачПериодаКалендаря И &КонПериодаКалендаря
	|	И ДанныеПроизводственногоКалендаря.ПроизводственныйКалендарь = &ПроизводственныйКалендарь
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата";
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура УстановитьРегистрВзаиморасчетовКакВременнуюТаблицу(Запрос) Экспорт
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РегистрВзаиморасчетов.Период,
	|	РегистрВзаиморасчетов.Регистратор,
	|	РегистрВзаиморасчетов.НомерСтроки,
	|	РегистрВзаиморасчетов.Активность,
	|	РегистрВзаиморасчетов.ВидДвижения,
	|	РегистрВзаиморасчетов.Организация,
	|	РегистрВзаиморасчетов.Контрагент,
	|	РегистрВзаиморасчетов.ДоговорКонтрагента,
	|	РегистрВзаиморасчетов.УслугаАренды,
	|	РегистрВзаиморасчетов.ОбъектАренды,
	|	РегистрВзаиморасчетов.СчетНаАренду,
	|	РегистрВзаиморасчетов.ПериодАренды,
	|	РегистрВзаиморасчетов.Депозит,
	|	РегистрВзаиморасчетов.ДокументРасчетов,
	|	РегистрВзаиморасчетов.Валюта,
	|	РегистрВзаиморасчетов.Пени,
	|	РегистрВзаиморасчетов.Сумма,
	|	РегистрВзаиморасчетов.СуммаВзаиморасчетов,
	|	РегистрВзаиморасчетов.ЗачетАванса,
	|	РегистрВзаиморасчетов.ДатаРасчетаПени,
	|	РегистрВзаиморасчетов.ДокументОплаты
	|ПОМЕСТИТЬ ВТРегистрВзаиморасчетов
	|ИЗ
	|	РегистрНакопления.АР_ВзаиморасчетыПоАренде КАК РегистрВзаиморасчетов";
	Запрос.Выполнить();
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВзаиморасчетыПоАренде.Организация,
	|	ВзаиморасчетыПоАренде.Контрагент,
	|	ВзаиморасчетыПоАренде.ДоговорКонтрагента,
	|	ВзаиморасчетыПоАренде.УслугаАренды,
	|	ВзаиморасчетыПоАренде.ОбъектАренды,
	|	ВзаиморасчетыПоАренде.СчетНаАренду,
	|	ВзаиморасчетыПоАренде.ПериодАренды,
	|	ВзаиморасчетыПоАренде.Депозит,
	|	ВзаиморасчетыПоАренде.ДокументРасчетов,
	|	ВзаиморасчетыПоАренде.Валюта,
	|	ВзаиморасчетыПоАренде.Пени,
	|	ВзаиморасчетыПоАренде.СуммаОборот,
	|	ВзаиморасчетыПоАренде.СуммаПриход,
	|	ВзаиморасчетыПоАренде.СуммаРасход,
	|	ВзаиморасчетыПоАренде.СуммаВзаиморасчетовОборот,
	|	ВзаиморасчетыПоАренде.СуммаВзаиморасчетовПриход КАК Сумма,
	|	ВзаиморасчетыПоАренде.СуммаВзаиморасчетовРасход
	|ПОМЕСТИТЬ ВТРегистрВзаиморасчетовОбороты
	|ИЗ
	|	РегистрНакопления.АР_ВзаиморасчетыПоАренде.Обороты(
	|			,
	|			&МоментНачисленияПени,
	|			,
	|			ДоговорКонтрагента В (&СписокДоговоров)
	|				И НЕ Пени) КАК ВзаиморасчетыПоАренде";
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура УстановитьНачислениеПоТарифицируемымУслугамКакВременнуюТаблицу(Запрос) Экспорт
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	АР_НачисленияПоТарифицируемымУслугамОбороты.УслугаАренды КАК Услуга,
	|	АР_НачисленияПоТарифицируемымУслугамОбороты.ОбъектАренды КАК ОбъектАренды,
	|	АР_НачисленияПоТарифицируемымУслугамОбороты.Ставка КАК Ставка,
	|	АР_НачисленияПоТарифицируемымУслугамОбороты.КоличествоОборот КАК Количество,
	|	АР_НачисленияПоТарифицируемымУслугамОбороты.СуммаОборот КАК Сумма,
	|	ЕСТЬNULL(АР_СтавкиСрезПоследних.СпособНачисления, ЗНАЧЕНИЕ(Справочник.АР_СпособыНачисленияАренднойПлаты.ПустаяСсылка)) КАК СпособНачисления,
	|	ВЫБОР
	|		КОГДА НЕ &НоваяСхемаНДС
	|				ИЛИ ЕСТЬNULL(АР_СтавкиСрезПоследних.СтавкаНДС, ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.ПустаяСсылка)
	|			ТОГДА АР_НачисленияПоТарифицируемымУслугамОбороты.УслугаАренды.ВидСтавкиНДС
	|		ИНАЧЕ АР_СтавкиСрезПоследних.СтавкаНДС
	|	КОНЕЦ КАК СтавкаНДС,
	|	ЕСТЬNULL(АР_СтавкиСрезПоследних.СпособНачисления.Валюта, ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)) КАК Валюта,
	|	АР_НачисленияПоТарифицируемымУслугамОбороты.ДоговорКонтрагента КАК Договор,
	|	ЕСТЬNULL(АР_СтавкиСрезПоследних.Регистратор.ДокументБезНДС, ЛОЖЬ) КАК ДокументБезНДС
	|ПОМЕСТИТЬ ВТРегистрНачисленияПоУслугам
	|ИЗ
	|	РегистрНакопления.АР_НачисленияПоТарифицируемымУслугам.Обороты(
	|			,
	|			,
	|			,
	|			ДоговорКонтрагента = &Договор
	|				И (ПериодАренды МЕЖДУ &НачалоПериода И &КонецПериода)) КАК АР_НачисленияПоТарифицируемымУслугамОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АР_Ставки.СрезПоследних(
	|				&КонецПериода,
	|				Договор = &Договор
	|					И (СрокДействия >= &КонецПериода
	|						ИЛИ СрокДействия = ДАТАВРЕМЯ(1, 1, 1))) КАК АР_СтавкиСрезПоследних
	|		ПО АР_НачисленияПоТарифицируемымУслугамОбороты.УслугаАренды = АР_СтавкиСрезПоследних.Услуга
	|			И АР_НачисленияПоТарифицируемымУслугамОбороты.ОбъектАренды = АР_СтавкиСрезПоследних.ОбъектАренды";
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ПереименоватьКолонкиРезультатаПоНачислениюПени(Таблица) Экспорт
	
	// Для данной конфигурации не актуально
	
КонецПроцедуры

Процедура ПереименоватьКолонкиРезультатаПоНачислениюАренды(Таблица) Экспорт
	
	// Для данной конфигурации не актуально
	
КонецПроцедуры

Функция ПолучитьКурсВалюты(Валюта, ДатаКурса, Договор) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Валюта", Валюта);
	Запрос.УстановитьПараметр("ДатаКурса", ДатаКурса);
	Запрос.УстановитьПараметр("Договор", Договор);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(КурсыВалютСрезПоследних.Валюта, АР_КурсыВалютДляРасчетовСАрендаторамиСрезПоследних.Валюта) КАК Валюта,
	|	ВЫБОР
	|		КОГДА АР_КурсыВалютДляРасчетовСАрендаторамиСрезПоследних.СпособРасчета ЕСТЬ NULL
	|			ТОГДА КурсыВалютСрезПоследних.Курс
	|		КОГДА АР_КурсыВалютДляРасчетовСАрендаторамиСрезПоследних.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.АР_СпособыРасчетаКурсаВалюты.Фиксированный)
	|			ТОГДА АР_КурсыВалютДляРасчетовСАрендаторамиСрезПоследних.Курс
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ЕСТЬNULL(КурсыВалютСрезПоследних.Курс, 1) * АР_КурсыВалютДляРасчетовСАрендаторамиСрезПоследних.Коэффициент < АР_КурсыВалютДляРасчетовСАрендаторамиСрезПоследних.НижняяГраница
	|					ТОГДА АР_КурсыВалютДляРасчетовСАрендаторамиСрезПоследних.НижняяГраница
	|				КОГДА ЕСТЬNULL(КурсыВалютСрезПоследних.Курс, 1) * АР_КурсыВалютДляРасчетовСАрендаторамиСрезПоследних.Коэффициент > АР_КурсыВалютДляРасчетовСАрендаторамиСрезПоследних.ВерхняяГраница
	|						И АР_КурсыВалютДляРасчетовСАрендаторамиСрезПоследних.ВерхняяГраница > 0
	|					ТОГДА АР_КурсыВалютДляРасчетовСАрендаторамиСрезПоследних.ВерхняяГраница
	|				ИНАЧЕ ЕСТЬNULL(КурсыВалютСрезПоследних.Курс, 1) * АР_КурсыВалютДляРасчетовСАрендаторамиСрезПоследних.Коэффициент
	|			КОНЕЦ
	|	КОНЕЦ КАК Курс,
	|	ВЫБОР
	|		КОГДА АР_КурсыВалютДляРасчетовСАрендаторамиСрезПоследних.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.АР_СпособыРасчетаКурсаВалюты.Фиксированный)
	|			ТОГДА АР_КурсыВалютДляРасчетовСАрендаторамиСрезПоследних.Кратность
	|		ИНАЧЕ ЕСТЬNULL(КурсыВалютСрезПоследних.Кратность, 1)
	|	КОНЕЦ КАК Кратность,
	|	ВЫБОР
	|		КОГДА АР_КурсыВалютДляРасчетовСАрендаторамиСрезПоследних.Курс ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК СпециальныйКурс
	|ИЗ
	|	РегистрСведений.КурсыВалют.СрезПоследних(&ДатаКурса, Валюта = &Валюта) КАК КурсыВалютСрезПоследних
	|		ПОЛНОЕ СОЕДИНЕНИЕ РегистрСведений.АР_КурсыВалютДляРасчетовСАрендаторами.СрезПоследних(
	|				&ДатаКурса,
	|				ДоговорКонтрагента = &Договор
	|					И Валюта = &Валюта
	|					И (СрокДействия >= &ДатаКурса
	|						ИЛИ СрокДействия = ДАТАВРЕМЯ(1, 1, 1))) КАК АР_КурсыВалютДляРасчетовСАрендаторамиСрезПоследних
	|		ПО КурсыВалютСрезПоследних.Валюта = АР_КурсыВалютДляРасчетовСАрендаторамиСрезПоследних.Валюта";
	
	СтруктураКурса = Новый Структура("Курс, Кратность, СпециальныйКурс");
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(СтруктураКурса, Выборка);
	Иначе
		СтруктураКурса.Курс = 1;
		СтруктураКурса.Кратность = 1;
		СтруктураКурса.СпециальныйКурс = Ложь;
	КонецЕсли;
	
	Возврат СтруктураКурса;

КонецФункции // ПолучитьКурсВалюты()

Процедура ЗаполнитьДанныеПоАгентскимУслугам(СтрокаТабличнойЧасти, Организация, Дата = '00010101') Экспорт
	
	ДанныеСобственника = АР_ОбщиеПроцедурыПереопределяемый.ПолучитьСобственника(СтрокаТабличнойЧасти.ОбъектАренды, Дата);
	Если Не СтрокаТабличнойЧасти.Номенклатура.АР_АгентскаяСхема ИЛИ Не ДанныеСобственника.АгентскаяСхема Тогда
		СтрокаТабличнойЧасти.Контрагент = Справочники.Контрагенты.ПустаяСсылка();
		СтрокаТабличнойЧасти.ДоговорКонтрагента = Справочники.ДоговорыКонтрагентов.ПустаяСсылка();
		СтрокаТабличнойЧасти.СчетРасчетов = ПланыСчетов.Хозрасчетный.ПустаяСсылка();
	Иначе
		СтрокаТабличнойЧасти.Контрагент = ДанныеСобственника.Собственник;
		Если Не ЗначениеЗаполнено(СтрокаТабличнойЧасти.ДоговорКонтрагента) Тогда
			СтрокаТабличнойЧасти.ДоговорКонтрагента = Справочники.ДоговорыКонтрагентов.ПустаяСсылка();
		КонецЕсли;
		Если ЗначениеЗаполнено(ДанныеСобственника.ДоговорКонтрагента) И ДанныеСобственника.ДоговорКонтрагента.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомитентом Тогда
			Если ДанныеСобственника.ДоговорКонтрагента.Организация = Организация Тогда
				СтрокаТабличнойЧасти.ДоговорКонтрагента = ДанныеСобственника.ДоговорКонтрагента;
				СчетаУчета = АР_ОбщиеПроцедурыПереопределяемый.ПолучитьСчетаРасчетовСКонтрагентом(Организация, СтрокаТабличнойЧасти.Контрагент, СтрокаТабличнойЧасти.ДоговорКонтрагента);
				СтрокаТабличнойЧасти.СчетРасчетов = СчетаУчета.СчетРасчетовСКомитентом;
			Иначе
				СтрокаТабличнойЧасти.Контрагент = Справочники.Контрагенты.ПустаяСсылка();
			КонецЕсли;
		Иначе
			Если АР_ОбщиеПроцедурыПереопределяемый.УстановитьДоговорКонтрагента(СтрокаТабличнойЧасти.ДоговорКонтрагента, СтрокаТабличнойЧасти.Контрагент, Организация, Перечисления.ВидыДоговоровКонтрагентов.СКомитентом) Тогда
				СчетаУчета = АР_ОбщиеПроцедурыПереопределяемый.ПолучитьСчетаРасчетовСКонтрагентом(Организация, СтрокаТабличнойЧасти.Контрагент, СтрокаТабличнойЧасти.ДоговорКонтрагента);
				СтрокаТабличнойЧасти.СчетРасчетов = СчетаУчета.СчетРасчетовСКомитентом;
			Иначе
				СтрокаТабличнойЧасти.Контрагент = Справочники.Контрагенты.ПустаяСсылка();
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьТекстЗапросаОпределенияСроковОплатыДляРасчетаПени(Запрос, СписокДоговоров) Экспорт
	
	ЗапросПериодичность = Новый Запрос;
	ЗапросПериодичность.УстановитьПараметр("СписокДоговоров", СписокДоговоров);
	ЗапросПериодичность.Текст = 
	"ВЫБРАТЬ
	|	ДоговорыКонтрагентов.Ссылка КАК Договор,
	|	ДоговорыКонтрагентов.АР_Периодичность КАК Периодичность
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|ГДЕ
	|	ДоговорыКонтрагентов.Ссылка В(&СписокДоговоров)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДоговорыКонтрагентов.Ссылка,
	|	ДоговорыКонтрагентов.АР_Периодичность";
	ТаблицаПериодичности = ЗапросПериодичность.Выполнить().Выгрузить();
	
	Для Каждого Стр Из ТаблицаПериодичности Цикл
		Если Не ЗначениеЗаполнено(Стр.Периодичность) Тогда
			Стр.Периодичность = Константы.АР_ПериодНачисленияАренднойПлаты.Получить();
		КонецЕсли;
	КонецЦикла;	
	
	Таблица = ТаблицаПериодичности.Скопировать(, "Периодичность");
	Таблица.Свернуть("Периодичность");
	МассивПериодичности = Таблица.ВыгрузитьКолонку("Периодичность");
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТЗадолженностьОстатки.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ВТЗадолженностьОстатки.УслугаАренды КАК УслугаАренды,
	|	ВТЗадолженностьОстатки.ОбъектАренды КАК ОбъектАренды,
	|	ВТЗадолженностьОстатки.СчетНаАренду КАК СчетНаАренду,
	|	ВТЗадолженностьОстатки.ПериодАренды КАК ПериодАренды,
	|	ВТЗадолженностьОстатки.ДокументРасчетов КАК ДокументРасчетов,
	|	ВТЗадолженностьОстатки.ОкончаниеПериода КАК ОкончаниеПериода,
	|	ВТЗадолженностьОстатки.Сумма КАК Сумма,
	|	ВТЗадолженностьОстатки.НачалоПериода КАК НачалоПериода,
	|	ВТПараметрыНачисленияПени.КоличествоДнейОтсрочки КАК КоличествоДнейОтсрочки,
	|	ВТПараметрыНачисленияПени.УчитыватьТолькоРабочиеДниОтДатыСчетаАкта КАК УчитыватьТолькоРабочиеДниОтДатыСчетаАкта,
	|	ВТПараметрыНачисленияПени.КоличествоДнейОтДатыСчетаАкта КАК КоличествоДней,
	|	ВТПараметрыНачисленияПени.УчитыватьТолькоРабочиеДниОтсрочки КАК УчитыватьТолькоРабочиеДниОтсрочки,
	|	ВТПараметрыНачисленияПени.УчитыватьТолькоРабочиеДниПриРасчетеПени КАК УчитыватьТолькоРабочиеДниПриРасчетеПени,
	|	ВТПараметрыНачисленияПени.СпособНачисленияПени КАК СпособНачисленияПени,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ВТЗадолженностьОстатки.СчетНаАренду <> &ПустойСчетНаАренду
	|				ТОГДА НАЧАЛОПЕРИОДА(ВТЗадолженностьОстатки.СчетНаАренду.Дата, ДЕНЬ)
	|			КОГДА ВЫРАЗИТЬ(ВТЗадолженностьОстатки.ДокументРасчетов КАК Документ.АР_НачислениеАренднойПлаты).ДокументОснование <> &ПустойСчетНаАренду
	|				ТОГДА НАЧАЛОПЕРИОДА(ВЫРАЗИТЬ(ВТЗадолженностьОстатки.ДокументРасчетов КАК Документ.АР_НачислениеАренднойПлаты).ДокументОснование.Дата, ДЕНЬ)
	|			ИНАЧЕ НАЧАЛОПЕРИОДА(АР_СчетНаАрендуСостав.Ссылка.Дата, ДЕНЬ)
	|		КОНЕЦ) КАК СрокОплаты,
	|	МИНИМУМ(ВЫБОР
	|			КОГДА ВТПараметрыНачисленияПени.НазначениеСрока = ЗНАЧЕНИЕ(Перечисление.АР_ВариантыНазначенияСрокаОплаты.ДляУслуги)
	|					И ВТЗадолженностьОстатки.УслугаАренды = ВТПараметрыНачисленияПени.Услуга
	|				ТОГДА 1
	|			КОГДА ВТПараметрыНачисленияПени.НазначениеСрока = ЗНАЧЕНИЕ(Перечисление.АР_ВариантыНазначенияСрокаОплаты.Общий)
	|					И ВТЗадолженностьОстатки.УслугаАренды = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|				ТОГДА 2
	|			КОГДА ВТПараметрыНачисленияПени.НазначениеСрока = ЗНАЧЕНИЕ(Перечисление.АР_ВариантыНазначенияСрокаОплаты.ПостояннаяЧасть)
	|					И ВТЗадолженностьОстатки.УслугаАренды = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|				ТОГДА 3
	|			КОГДА ВТПараметрыНачисленияПени.НазначениеСрока = ЗНАЧЕНИЕ(Перечисление.АР_ВариантыНазначенияСрокаОплаты.ПостояннаяЧасть)
	|					И ВТЗадолженностьОстатки.УслугаАренды.АР_ПостояннаяЧастьОплаты
	|				ТОГДА 4
	|			КОГДА ВТПараметрыНачисленияПени.НазначениеСрока = ЗНАЧЕНИЕ(Перечисление.АР_ВариантыНазначенияСрокаОплаты.ПеременнаяЧасть)
	|					И НЕ ВТЗадолженностьОстатки.УслугаАренды.АР_ПостояннаяЧастьОплаты
	|				ТОГДА 5
	|			КОГДА ВТПараметрыНачисленияПени.НазначениеСрока = ЗНАЧЕНИЕ(Перечисление.АР_ВариантыНазначенияСрокаОплаты.Общий)
	|				ТОГДА 6
	|			ИНАЧЕ 7
	|		КОНЕЦ) КАК Порядок,
	|	ВТЗадолженностьОстатки.СтавкаПени
	|ПОМЕСТИТЬ ВТЗадолженностьПорядок
	|ИЗ
	|	ВТЗадолженностьИСтавка КАК ВТЗадолженностьОстатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПараметрыНачисленияПени КАК ВТПараметрыНачисленияПени
	|		ПО ВТЗадолженностьОстатки.ДоговорКонтрагента = ВТПараметрыНачисленияПени.ДоговорКонтрагента
	|			И ВТЗадолженностьОстатки.ДокументРасчетов.Дата >= ВТПараметрыНачисленияПени.НачалоПериода
	|			И ВТЗадолженностьОстатки.ДокументРасчетов.Дата < ВТПараметрыНачисленияПени.КонецПериода
	|			И (ВТПараметрыНачисленияПени.СпособОпределенияСрокаОплаты = ЗНАЧЕНИЕ(Перечисление.АР_СпособыРасчетаПросрочки.ПоДатеСчета))
	|			И (ВТЗадолженностьОстатки.УслугаАренды = ВТПараметрыНачисленияПени.Услуга
	|				ИЛИ ВТПараметрыНачисленияПени.Услуга = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|					И (ВТЗадолженностьОстатки.УслугаАренды = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|						ИЛИ ВТПараметрыНачисленияПени.НазначениеСрока = ЗНАЧЕНИЕ(Перечисление.АР_ВариантыНазначенияСрокаОплаты.Общий)
	|						ИЛИ ВТПараметрыНачисленияПени.НазначениеСрока = ЗНАЧЕНИЕ(Перечисление.АР_ВариантыНазначенияСрокаОплаты.ПостояннаяЧасть)
	|							И ВТЗадолженностьОстатки.УслугаАренды.АР_ПостояннаяЧастьОплаты
	|						ИЛИ ВТПараметрыНачисленияПени.НазначениеСрока = ЗНАЧЕНИЕ(Перечисление.АР_ВариантыНазначенияСрокаОплаты.ПеременнаяЧасть)
	|							И НЕ ВТЗадолженностьОстатки.УслугаАренды.АР_ПостояннаяЧастьОплаты))
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.АР_СчетНаАренду.Состав КАК АР_СчетНаАрендуСостав
	|		ПО (ВТЗадолженностьОстатки.УслугаАренды = АР_СчетНаАрендуСостав.Номенклатура
	|				ИЛИ НЕ ВТЗадолженностьОстатки.ДоговорКонтрагента.АР_ВестиВзаиморасчетыПоУслугам)
	|			И (ВТЗадолженностьОстатки.ОбъектАренды = АР_СчетНаАрендуСостав.ОбъектАренды
	|				ИЛИ НЕ ВТЗадолженностьОстатки.ДоговорКонтрагента.АР_ВестиВзаиморасчетыПоОбъектам)
	|			И (НЕ АР_СчетНаАрендуСостав.Ссылка.ПометкаУдаления)
	|			И ВТЗадолженностьОстатки.ДокументРасчетов.НачалоПериода = АР_СчетНаАрендуСостав.Ссылка.НачалоПериода
	|			И ВТЗадолженностьОстатки.ДокументРасчетов.ОкончаниеПериода = АР_СчетНаАрендуСостав.Ссылка.ОкончаниеПериода
	|			И ВТЗадолженностьОстатки.ДоговорКонтрагента = АР_СчетНаАрендуСостав.Ссылка.ДоговорКонтрагента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.АР_НачислениеАренднойПлаты.Состав КАК НачислениеАренднойПлаты
	|		ПО (НачислениеАренднойПлаты.Номенклатура = АР_СчетНаАрендуСостав.Номенклатура)
	|			И (НачислениеАренднойПлаты.ОбъектАренды = АР_СчетНаАрендуСостав.ОбъектАренды)
	|			И ВТЗадолженностьОстатки.ДокументРасчетов = НачислениеАренднойПлаты.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТПараметрыНачисленияПени.КоличествоДнейОтсрочки,
	|	ВТПараметрыНачисленияПени.УчитыватьТолькоРабочиеДниОтсрочки,
	|	ВТПараметрыНачисленияПени.УчитыватьТолькоРабочиеДниПриРасчетеПени,
	|	ВТПараметрыНачисленияПени.УчитыватьТолькоРабочиеДниОтДатыСчетаАкта,
	|	ВТПараметрыНачисленияПени.КоличествоДнейОтДатыСчетаАкта,
	|	ВТПараметрыНачисленияПени.СпособНачисленияПени,
	|	ВТЗадолженностьОстатки.ДоговорКонтрагента,
	|	ВТЗадолженностьОстатки.УслугаАренды,
	|	ВТЗадолженностьОстатки.ОбъектАренды,
	|	ВТЗадолженностьОстатки.СчетНаАренду,
	|	ВТЗадолженностьОстатки.ПериодАренды,
	|	ВТЗадолженностьОстатки.ДокументРасчетов,
	|	ВТЗадолженностьОстатки.ОкончаниеПериода,
	|	ВТЗадолженностьОстатки.Сумма,
	|	ВТЗадолженностьОстатки.НачалоПериода,
	|	ВТЗадолженностьОстатки.СтавкаПени
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТЗадолженностьОстатки.ДоговорКонтрагента,
	|	ВТЗадолженностьОстатки.УслугаАренды,
	|	ВТЗадолженностьОстатки.ОбъектАренды,
	|	ВТЗадолженностьОстатки.СчетНаАренду,
	|	ВТЗадолженностьОстатки.ПериодАренды,
	|	ВТЗадолженностьОстатки.ДокументРасчетов,
	|	ВТЗадолженностьОстатки.ОкончаниеПериода,
	|	ВТЗадолженностьОстатки.Сумма,
	|	ВТЗадолженностьОстатки.НачалоПериода,
	|	ВТПараметрыНачисленияПени.КоличествоДнейОтсрочки,
	|	ВТПараметрыНачисленияПени.УчитыватьТолькоРабочиеДниОтДатыСчетаАкта,
	|	ВТПараметрыНачисленияПени.КоличествоДнейОтДатыСчетаАкта,
	|	ВТПараметрыНачисленияПени.УчитыватьТолькоРабочиеДниОтсрочки,
	|	ВТПараметрыНачисленияПени.УчитыватьТолькоРабочиеДниПриРасчетеПени,
	|	ВТПараметрыНачисленияПени.СпособНачисленияПени,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ВТЗадолженностьОстатки.ДокументРасчетов = НЕОПРЕДЕЛЕНО
	|				ТОГДА ДАТАВРЕМЯ(1, 1, 1)
	|			ИНАЧЕ НАЧАЛОПЕРИОДА(ВТЗадолженностьОстатки.ДокументРасчетов.Дата, ДЕНЬ)
	|		КОНЕЦ),
	|	МИНИМУМ(ВЫБОР
	|			КОГДА ВТПараметрыНачисленияПени.НазначениеСрока = ЗНАЧЕНИЕ(Перечисление.АР_ВариантыНазначенияСрокаОплаты.ДляУслуги)
	|					И ВТЗадолженностьОстатки.УслугаАренды = ВТПараметрыНачисленияПени.Услуга
	|				ТОГДА 1
	|			КОГДА ВТПараметрыНачисленияПени.НазначениеСрока = ЗНАЧЕНИЕ(Перечисление.АР_ВариантыНазначенияСрокаОплаты.Общий)
	|					И ВТЗадолженностьОстатки.УслугаАренды = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|				ТОГДА 2
	|			КОГДА ВТПараметрыНачисленияПени.НазначениеСрока = ЗНАЧЕНИЕ(Перечисление.АР_ВариантыНазначенияСрокаОплаты.ПостояннаяЧасть)
	|					И ВТЗадолженностьОстатки.УслугаАренды = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|				ТОГДА 3
	|			КОГДА ВТПараметрыНачисленияПени.НазначениеСрока = ЗНАЧЕНИЕ(Перечисление.АР_ВариантыНазначенияСрокаОплаты.ПостояннаяЧасть)
	|					И ВТЗадолженностьОстатки.УслугаАренды.АР_ПостояннаяЧастьОплаты
	|				ТОГДА 4
	|			КОГДА ВТПараметрыНачисленияПени.НазначениеСрока = ЗНАЧЕНИЕ(Перечисление.АР_ВариантыНазначенияСрокаОплаты.ПеременнаяЧасть)
	|					И НЕ ВТЗадолженностьОстатки.УслугаАренды.АР_ПостояннаяЧастьОплаты
	|				ТОГДА 5
	|			КОГДА ВТПараметрыНачисленияПени.НазначениеСрока = ЗНАЧЕНИЕ(Перечисление.АР_ВариантыНазначенияСрокаОплаты.Общий)
	|				ТОГДА 6
	|			ИНАЧЕ 7
	|		КОНЕЦ),
	|	ВТЗадолженностьОстатки.СтавкаПени
	|ИЗ
	|	ВТЗадолженностьИСтавка КАК ВТЗадолженностьОстатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПараметрыНачисленияПени КАК ВТПараметрыНачисленияПени
	|		ПО ВТЗадолженностьОстатки.ДоговорКонтрагента = ВТПараметрыНачисленияПени.ДоговорКонтрагента
	|			И ВТЗадолженностьОстатки.ДокументРасчетов.Дата >= ВТПараметрыНачисленияПени.НачалоПериода
	|			И ВТЗадолженностьОстатки.ДокументРасчетов.Дата < ВТПараметрыНачисленияПени.КонецПериода
	|			И (ВТПараметрыНачисленияПени.СпособОпределенияСрокаОплаты = ЗНАЧЕНИЕ(Перечисление.АР_СпособыРасчетаПросрочки.ПоДатеНачисления))
	|			И (ВТЗадолженностьОстатки.УслугаАренды = ВТПараметрыНачисленияПени.Услуга
	|				ИЛИ ВТПараметрыНачисленияПени.Услуга = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|					И (ВТЗадолженностьОстатки.УслугаАренды = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|						ИЛИ ВТПараметрыНачисленияПени.НазначениеСрока = ЗНАЧЕНИЕ(Перечисление.АР_ВариантыНазначенияСрокаОплаты.Общий)
	|						ИЛИ ВТПараметрыНачисленияПени.НазначениеСрока = ЗНАЧЕНИЕ(Перечисление.АР_ВариантыНазначенияСрокаОплаты.ПостояннаяЧасть)
	|							И ВТЗадолженностьОстатки.УслугаАренды.АР_ПостояннаяЧастьОплаты
	|						ИЛИ ВТПараметрыНачисленияПени.НазначениеСрока = ЗНАЧЕНИЕ(Перечисление.АР_ВариантыНазначенияСрокаОплаты.ПеременнаяЧасть)
	|							И НЕ ВТЗадолженностьОстатки.УслугаАренды.АР_ПостояннаяЧастьОплаты))
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТПараметрыНачисленияПени.КоличествоДнейОтсрочки,
	|	ВТПараметрыНачисленияПени.УчитыватьТолькоРабочиеДниОтсрочки,
	|	ВТПараметрыНачисленияПени.УчитыватьТолькоРабочиеДниПриРасчетеПени,
	|	ВТПараметрыНачисленияПени.УчитыватьТолькоРабочиеДниОтДатыСчетаАкта,
	|	ВТПараметрыНачисленияПени.КоличествоДнейОтДатыСчетаАкта,
	|	ВТПараметрыНачисленияПени.СпособНачисленияПени,
	|	ВТЗадолженностьОстатки.ДоговорКонтрагента,
	|	ВТЗадолженностьОстатки.УслугаАренды,
	|	ВТЗадолженностьОстатки.ОбъектАренды,
	|	ВТЗадолженностьОстатки.СчетНаАренду,
	|	ВТЗадолженностьОстатки.ПериодАренды,
	|	ВТЗадолженностьОстатки.ДокументРасчетов,
	|	ВТЗадолженностьОстатки.ОкончаниеПериода,
	|	ВТЗадолженностьОстатки.Сумма,
	|	ВТЗадолженностьОстатки.НачалоПериода,
	|	ВТЗадолженностьОстатки.СтавкаПени";
		
	К = 1;
	Для Каждого Элемент Из МассивПериодичности Цикл
		
		ТекстПодзапроса = "
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТЗадолженностьОстатки.ДоговорКонтрагента,
		|	ВТЗадолженностьОстатки.УслугаАренды,
		|	ВТЗадолженностьОстатки.ОбъектАренды,
		|	ВТЗадолженностьОстатки.СчетНаАренду,
		|	ВТЗадолженностьОстатки.ПериодАренды,
		|	ВТЗадолженностьОстатки.ДокументРасчетов,
		|	ВТЗадолженностьОстатки.ОкончаниеПериода,
		|	ВТЗадолженностьОстатки.Сумма,
		|	ВТЗадолженностьОстатки.НачалоПериода,
		|	ВТПараметрыНачисленияПени.КоличествоДнейОтсрочки КАК КоличествоДнейОтсрочки,
		|	ЛОЖЬ КАК УчитыватьТолькоРабочиеДниОтДатыСчетаАкта,
		|	0 КАК КоличествоДней,
		|	ВТПараметрыНачисленияПени.УчитыватьТолькоРабочиеДниОтсрочки КАК УчитыватьТолькоРабочиеДниОтсрочки,
		|	ВТПараметрыНачисленияПени.УчитыватьТолькоРабочиеДниПриРасчетеПени КАК УчитыватьТолькоРабочиеДниПриРасчетеПени,
		|	ВТПараметрыНачисленияПени.СпособНачисленияПени КАК СпособНачисленияПени,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА ВТЗадолженностьОстатки.ДокументРасчетов ССЫЛКА Документ.АР_НачислениеАренднойПлаты
		|				ТОГДА ВЫБОР
		|						КОГДА ДОБАВИТЬКДАТЕ(ДОБАВИТЬКДАТЕ(ВТЗадолженностьОстатки.ДокументРасчетов.НачалоПериода, [Периодичность] , ВТПараметрыНачисленияПени.ПериодСрокаОплаты), ДЕНЬ, ВТПараметрыНачисленияПени.СрокОплаты) > КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(ВТЗадолженностьОстатки.ДокументРасчетов.НачалоПериода, [Периодичность], ВТПараметрыНачисленияПени.ПериодСрокаОплаты), [Периодичность])
		|							ТОГДА НАЧАЛОПЕРИОДА(КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(ВТЗадолженностьОстатки.ДокументРасчетов.НачалоПериода, [Периодичность] , ВТПараметрыНачисленияПени.ПериодСрокаОплаты), [Периодичность]), ДЕНЬ)
		|						ИНАЧЕ ДОБАВИТЬКДАТЕ(ДОБАВИТЬКДАТЕ(ВТЗадолженностьОстатки.ДокументРасчетов.НачалоПериода, [Периодичность], ВТПараметрыНачисленияПени.ПериодСрокаОплаты), ДЕНЬ, ВТПараметрыНачисленияПени.СрокОплаты)
		|					КОНЕЦ
		|			ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
		|		КОНЕЦ) КАК СрокОплаты,
		|	МИНИМУМ(ВЫБОР
		|			КОГДА ВТПараметрыНачисленияПени.НазначениеСрока = ЗНАЧЕНИЕ(Перечисление.АР_ВариантыНазначенияСрокаОплаты.ДляУслуги)
		|					И ВТЗадолженностьОстатки.УслугаАренды = ВТПараметрыНачисленияПени.Услуга
		|				ТОГДА 1
		|			КОГДА ВТПараметрыНачисленияПени.НазначениеСрока = ЗНАЧЕНИЕ(Перечисление.АР_ВариантыНазначенияСрокаОплаты.Общий)
		|					И ВТЗадолженностьОстатки.УслугаАренды = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|				ТОГДА 2
		|			КОГДА ВТПараметрыНачисленияПени.НазначениеСрока = ЗНАЧЕНИЕ(Перечисление.АР_ВариантыНазначенияСрокаОплаты.ПостояннаяЧасть)
		|					И ВТЗадолженностьОстатки.УслугаАренды = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|				ТОГДА 3
		|			КОГДА ВТПараметрыНачисленияПени.НазначениеСрока = ЗНАЧЕНИЕ(Перечисление.АР_ВариантыНазначенияСрокаОплаты.ПостояннаяЧасть)
		|					И ВТЗадолженностьОстатки.УслугаАренды.АР_ПостояннаяЧастьОплаты
		|				ТОГДА 4
		|			КОГДА ВТПараметрыНачисленияПени.НазначениеСрока = ЗНАЧЕНИЕ(Перечисление.АР_ВариантыНазначенияСрокаОплаты.ПеременнаяЧасть)
		|					И НЕ ВТЗадолженностьОстатки.УслугаАренды.АР_ПостояннаяЧастьОплаты
		|				ТОГДА 5
		|			КОГДА ВТПараметрыНачисленияПени.НазначениеСрока = ЗНАЧЕНИЕ(Перечисление.АР_ВариантыНазначенияСрокаОплаты.Общий)
		|				ТОГДА 6
		|			ИНАЧЕ 7
		|		КОНЕЦ),
		|	ВТЗадолженностьОстатки.СтавкаПени
		|ИЗ
		|	ВТЗадолженностьИСтавка КАК ВТЗадолженностьОстатки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПараметрыНачисленияПени КАК ВТПараметрыНачисленияПени
		|		ПО ВТЗадолженностьОстатки.ДоговорКонтрагента = ВТПараметрыНачисленияПени.ДоговорКонтрагента
		|			И ВТЗадолженностьОстатки.ДокументРасчетов.Дата >= ВТПараметрыНачисленияПени.НачалоПериода
		|			И ВТЗадолженностьОстатки.ДокументРасчетов.Дата < ВТПараметрыНачисленияПени.КонецПериода
		|			И (ВТПараметрыНачисленияПени.СпособОпределенияСрокаОплаты = ЗНАЧЕНИЕ(Перечисление.АР_СпособыРасчетаПросрочки.ПоПериодуНачисления))
		|           И ВТПараметрыНачисленияПени.ДоговорКонтрагента В ([СписокДоговоров])
		|			И (ВТЗадолженностьОстатки.УслугаАренды = ВТПараметрыНачисленияПени.Услуга
		|				ИЛИ ВТПараметрыНачисленияПени.Услуга = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|					И (ВТЗадолженностьОстатки.УслугаАренды = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|						ИЛИ ВТПараметрыНачисленияПени.НазначениеСрока = ЗНАЧЕНИЕ(Перечисление.АР_ВариантыНазначенияСрокаОплаты.Общий)
		|						ИЛИ ВТПараметрыНачисленияПени.НазначениеСрока = ЗНАЧЕНИЕ(Перечисление.АР_ВариантыНазначенияСрокаОплаты.ПостояннаяЧасть)
		|							И ВТЗадолженностьОстатки.УслугаАренды.АР_ПостояннаяЧастьОплаты
		|						ИЛИ ВТПараметрыНачисленияПени.НазначениеСрока = ЗНАЧЕНИЕ(Перечисление.АР_ВариантыНазначенияСрокаОплаты.ПеременнаяЧасть)
		|							И НЕ ВТЗадолженностьОстатки.УслугаАренды.АР_ПостояннаяЧастьОплаты))
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТПараметрыНачисленияПени.КоличествоДнейОтсрочки,
		|	ВТПараметрыНачисленияПени.УчитыватьТолькоРабочиеДниОтсрочки,
		|	ВТПараметрыНачисленияПени.УчитыватьТолькоРабочиеДниПриРасчетеПени,
		|	ВТПараметрыНачисленияПени.СпособНачисленияПени,
		|	ВТЗадолженностьОстатки.ДоговорКонтрагента,
		|	ВТЗадолженностьОстатки.УслугаАренды,
		|	ВТЗадолженностьОстатки.ОбъектАренды,
		|	ВТЗадолженностьОстатки.СчетНаАренду,
		|	ВТЗадолженностьОстатки.ПериодАренды,
		|	ВТЗадолженностьОстатки.ДокументРасчетов,
		|	ВТЗадолженностьОстатки.ОкончаниеПериода,
		|	ВТЗадолженностьОстатки.Сумма,
		|	ВТЗадолженностьОстатки.НачалоПериода,
		|	ВТЗадолженностьОстатки.СтавкаПени
		|
		|";
		
		ТекстПодзапроса = СтрЗаменить(ТекстПодзапроса, "[Периодичность]", Строка(Элемент));
		ТекстПодзапроса = СтрЗаменить(ТекстПодзапроса, "[СписокДоговоров]", "&СписокДоговоров" + К);
		ТекстЗапроса = ТекстЗапроса + ТекстПодзапроса;
		
		Таблица = ТаблицаПериодичности.Скопировать(Новый Структура("Периодичность", Элемент));
		МассивДоговоров = Таблица.ВыгрузитьКолонку("Договор");
		
		Запрос.УстановитьПараметр("СписокДоговоров" + К, МассивДоговоров);
		
		К = К + 1;
		
	КонецЦикла;
	
	ТекстЗапроса = ТекстЗапроса + "
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТЗадолженностьПорядок.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ВТЗадолженностьПорядок.УслугаАренды КАК УслугаАренды,
	|	МИНИМУМ(ВТЗадолженностьПорядок.Порядок) КАК Порядок
	|ПОМЕСТИТЬ ВТМинимальныйПорядок
	|ИЗ
	|	ВТЗадолженностьПорядок КАК ВТЗадолженностьПорядок
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТЗадолженностьПорядок.ДоговорКонтрагента,
	|	ВТЗадолженностьПорядок.УслугаАренды
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТЗадолженностьПорядок.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ВТЗадолженностьПорядок.УслугаАренды КАК УслугаАренды,
	|	ВТЗадолженностьПорядок.ОбъектАренды КАК ОбъектАренды,
	|	ВТЗадолженностьПорядок.СчетНаАренду КАК СчетНаАренду,
	|	ВТЗадолженностьПорядок.ПериодАренды КАК ПериодАренды,
	|	ВТЗадолженностьПорядок.ДокументРасчетов КАК ДокументРасчетов,
	|	ВТЗадолженностьПорядок.ОкончаниеПериода КАК ОкончаниеПериода,
	|	ВТЗадолженностьПорядок.Сумма КАК Сумма,
	|	ВТЗадолженностьПорядок.НачалоПериода КАК НачалоПериода,
	|	ВТЗадолженностьПорядок.КоличествоДнейОтсрочки КАК КоличествоДнейОтсрочки,
	|	ВТЗадолженностьПорядок.УчитыватьТолькоРабочиеДниОтДатыСчетаАкта КАК УчитыватьТолькоРабочиеДниОтДатыСчетаАкта,
	|	ВТЗадолженностьПорядок.КоличествоДней КАК КоличествоДней,
	|	ВТЗадолженностьПорядок.УчитыватьТолькоРабочиеДниОтсрочки КАК УчитыватьТолькоРабочиеДниОтсрочки,
	|	ВТЗадолженностьПорядок.УчитыватьТолькоРабочиеДниПриРасчетеПени КАК УчитыватьТолькоРабочиеДниПриРасчетеПени,
	|	ВТЗадолженностьПорядок.СпособНачисленияПени КАК СпособНачисленияПени,
	|	ВТЗадолженностьПорядок.СрокОплаты КАК СрокОплаты,
	|	ВТЗадолженностьПорядок.Порядок КАК Порядок,
	|	ВТЗадолженностьПорядок.СтавкаПени
	|ПОМЕСТИТЬ ВТЗадолженность
	|ИЗ
	|	ВТЗадолженностьПорядок КАК ВТЗадолженностьПорядок
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТМинимальныйПорядок КАК ВТМинимальныйПорядок
	|		ПО ВТЗадолженностьПорядок.ДоговорКонтрагента = ВТМинимальныйПорядок.ДоговорКонтрагента
	|			И ВТЗадолженностьПорядок.Порядок = ВТМинимальныйПорядок.Порядок
	|			И ВТЗадолженностьПорядок.УслугаАренды = ВТМинимальныйПорядок.УслугаАренды";

	ТекстЗапроса = ТекстЗапроса + 
	";
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ПересчитатьСтавкуПоПериодуДокумента(ДанныеУчета, Объект) Экспорт
	
	Для Каждого Стр Из ДанныеУчета Цикл
		ПериодичностьСтавки = Стр.СпособНачисления.ПериодНачисления;
		Если Не ЗначениеЗаполнено(ПериодичностьСтавки) Тогда
			ПериодичностьСтавки = Константы.АР_ПериодНачисленияАренднойПлаты.Получить();
		КонецЕсли;
		// в случае взаиморасчетов по периоду строки разбиваются по периодам начисления договора
		// в случае если период документа день или произвольный, то на периодичность документа не смотрим
		Если Объект.ДоговорКонтрагента.АР_ВестиВзаиморасчетыПоПериодам 
			И НЕ Объект.ВидПериода = Перечисления.ДоступныеПериодыОтчета.День 
			И НЕ Объект.ВидПериода = Перечисления.ДоступныеПериодыОтчета.ПроизвольныйПериод Тогда
			
			ПериодичностьСтроки = Объект.ДоговорКонтрагента.АР_Периодичность;
			Если Не ЗначениеЗаполнено(ПериодичностьСтроки) Тогда
				ПериодичностьСтроки = Константы.АР_ПериодНачисленияАренднойПлаты.Получить();
			КонецЕсли;
			
		Иначе
			
			Если ЗначениеЗаполнено(Объект.ВидПериода) Тогда
				ПериодичностьСтроки = Объект.ВидПериода;
			Иначе
				ПериодичностьСтроки = Перечисления.Периодичность.Месяц;
			КонецЕсли;
			
		КонецЕсли;
		
		Стр.Цена = Стр.Цена * АР_ОбщиеПроцедуры.ПолучитьКоэффициентПересчетаПериодов(ПериодичностьСтавки, ПериодичностьСтроки);
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьТекстЗапросаОпределенияПараметровНачисленияПени(Запрос, СписокДоговоров) Экспорт
		
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(СрокиОплаты.Период, ДЕНЬ) КАК Период,
	|	СрокиОплаты.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	СрокиОплаты.НазначениеСрока КАК НазначениеСрока,
	|	СрокиОплаты.Услуга КАК Услуга,
	|	СрокиОплаты.СпособОпределенияСрокаОплаты КАК СпособОпределенияСрокаОплаты,
	|	ВЫБОР
	|		КОГДА СрокиОплаты.СрокОплаты = 0
	|			ТОГДА 0
	|		ИНАЧЕ СрокиОплаты.СрокОплаты - 1
	|	КОНЕЦ КАК СрокОплаты,
	|	СрокиОплаты.ПериодСрокаОплаты КАК ПериодСрокаОплаты,
	|	СрокиОплаты.КоличествоДнейОтДатыСчетаАкта КАК КоличествоДнейОтДатыСчетаАкта,
	|	СрокиОплаты.УчитыватьТолькоРабочиеДниОтДатыСчетаАкта КАК УчитыватьТолькоРабочиеДниОтДатыСчетаАкта,
	|	СрокиОплаты.СпособНачисленияПени КАК СпособНачисленияПени,
	|	СрокиОплаты.СтавкаПени КАК СтавкаПени,
	|	СрокиОплаты.СпособПогашенияПени КАК СпособПогашенияПени,
	|	СрокиОплаты.КоличествоДнейОтсрочки КАК КоличествоДнейОтсрочки,
	|	СрокиОплаты.УчитыватьТолькоРабочиеДниОтсрочки КАК УчитыватьТолькоРабочиеДниОтсрочки,
	|	СрокиОплаты.УчитыватьТолькоРабочиеДниПриРасчетеПени КАК УчитыватьТолькоРабочиеДниПриРасчетеПени
	|ПОМЕСТИТЬ ВТПараметрыНачисленияПениИсходные
	|ИЗ
	|	РегистрСведений.АР_СрокиОплатыИПараметрыНачисленияПеней КАК СрокиОплаты
	|ГДЕ
	|	СрокиОплаты.Период <= &ДатаНачисленияПени
	|	И СрокиОплаты.ДоговорКонтрагента В(&СписокДоговоров)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДОБАВИТЬКДАТЕ(ВложенныйЗапрос.СрокДействия, ДЕНЬ, 1),
	|	ПредыдущееЗначение.ДоговорКонтрагента,
	|	ПредыдущееЗначение.НазначениеСрока,
	|	ПредыдущееЗначение.Услуга,
	|	ПредыдущееЗначение.СпособОпределенияСрокаОплаты,
	|	ВЫБОР
	|		КОГДА ПредыдущееЗначение.СрокОплаты = 0
	|			ТОГДА 0
	|		ИНАЧЕ ПредыдущееЗначение.СрокОплаты - 1
	|	КОНЕЦ,
	|	ПредыдущееЗначение.ПериодСрокаОплаты,
	|	ПредыдущееЗначение.КоличествоДнейОтДатыСчетаАкта,
	|	ПредыдущееЗначение.УчитыватьТолькоРабочиеДниОтДатыСчетаАкта,
	|	ПредыдущееЗначение.СпособНачисленияПени,
	|	ПредыдущееЗначение.СтавкаПени,
	|	ПредыдущееЗначение.СпособПогашенияПени,
	|	ПредыдущееЗначение.КоличествоДнейОтсрочки,
	|	ПредыдущееЗначение.УчитыватьТолькоРабочиеДниОтсрочки,
	|	ПредыдущееЗначение.УчитыватьТолькоРабочиеДниПриРасчетеПени
	|ИЗ
	|	(ВЫБРАТЬ
	|		МАКСИМУМ(ПредыдущееЗначение.Период) КАК Период,
	|		СрокиОплаты.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|		СрокиОплаты.СрокДействия КАК СрокДействия
	|	ИЗ
	|		РегистрСведений.АР_СрокиОплатыИПараметрыНачисленияПеней КАК СрокиОплаты
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АР_СрокиОплатыИПараметрыНачисленияПеней КАК ПредыдущееЗначение
	|			ПО СрокиОплаты.ДоговорКонтрагента = ПредыдущееЗначение.ДоговорКонтрагента
	|				И СрокиОплаты.СрокДействия > ПредыдущееЗначение.Период
	|				И (ПредыдущееЗначение.СрокДействия = ДАТАВРЕМЯ(1, 1, 1)
	|					ИЛИ ПредыдущееЗначение.СрокДействия > СрокиОплаты.СрокДействия)
	|	ГДЕ
	|		СрокиОплаты.СрокДействия < &ДатаНачисленияПени
	|		И СрокиОплаты.СрокДействия <> ДАТАВРЕМЯ(1, 1, 1)
	|		И СрокиОплаты.ДоговорКонтрагента В(&СписокДоговоров)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		СрокиОплаты.ДоговорКонтрагента,
	|		СрокиОплаты.СрокДействия) КАК ВложенныйЗапрос
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АР_СрокиОплатыИПараметрыНачисленияПеней КАК ПредыдущееЗначение
	|		ПО ВложенныйЗапрос.ДоговорКонтрагента = ПредыдущееЗначение.ДоговорКонтрагента
	|			И ВложенныйЗапрос.Период = ПредыдущееЗначение.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТПараметрыНачисленияПени.Период КАК НачалоПериода,
	|	ВТПараметрыНачисленияПени.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	МИНИМУМ(ЕСТЬNULL(ВТПараметрыНачисленияПениОграничение.Период, ДОБАВИТЬКДАТЕ(&ДатаНачисленияПени, ДЕНЬ, 1))) КАК КонецПериода
	|ПОМЕСТИТЬ ВТПериоды
	|ИЗ
	|	ВТПараметрыНачисленияПениИсходные КАК ВТПараметрыНачисленияПени
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПараметрыНачисленияПениИсходные КАК ВТПараметрыНачисленияПениОграничение
	|		ПО ВТПараметрыНачисленияПени.ДоговорКонтрагента = ВТПараметрыНачисленияПениОграничение.ДоговорКонтрагента
	|			И ВТПараметрыНачисленияПени.Период < ВТПараметрыНачисленияПениОграничение.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТПараметрыНачисленияПени.Период,
	|	ВТПараметрыНачисленияПени.ДоговорКонтрагента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТПараметрыНачисленияПени.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ВТПараметрыНачисленияПени.НазначениеСрока КАК НазначениеСрока,
	|	ВТПараметрыНачисленияПени.Услуга КАК Услуга,
	|	ВТПараметрыНачисленияПени.СпособОпределенияСрокаОплаты КАК СпособОпределенияСрокаОплаты,
	|	ВТПараметрыНачисленияПени.СрокОплаты КАК СрокОплаты,
	|	ВТПараметрыНачисленияПени.ПериодСрокаОплаты КАК ПериодСрокаОплаты,
	|	ВТПараметрыНачисленияПени.КоличествоДнейОтДатыСчетаАкта КАК КоличествоДнейОтДатыСчетаАкта,
	|	ВТПараметрыНачисленияПени.УчитыватьТолькоРабочиеДниОтДатыСчетаАкта КАК УчитыватьТолькоРабочиеДниОтДатыСчетаАкта,
	|	ВТПараметрыНачисленияПени.СпособНачисленияПени КАК СпособНачисленияПени,
	|	ВТПараметрыНачисленияПени.СтавкаПени КАК СтавкаПени,
	|	ВТПараметрыНачисленияПени.СпособПогашенияПени КАК СпособПогашенияПени,
	|	ВТПараметрыНачисленияПени.КоличествоДнейОтсрочки КАК КоличествоДнейОтсрочки,
	|	ВТПараметрыНачисленияПени.УчитыватьТолькоРабочиеДниОтсрочки КАК УчитыватьТолькоРабочиеДниОтсрочки,
	|	ВТПараметрыНачисленияПени.УчитыватьТолькоРабочиеДниПриРасчетеПени КАК УчитыватьТолькоРабочиеДниПриРасчетеПени,
	|	ВТПериоды.НачалоПериода КАК НачалоПериода,
	|	ВТПериоды.КонецПериода КАК КонецПериода
	|ПОМЕСТИТЬ ВТПараметрыНачисленияПени
	|ИЗ
	|	ВТПараметрыНачисленияПениИсходные КАК ВТПараметрыНачисленияПени
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПериоды КАК ВТПериоды
	|		ПО ВТПараметрыНачисленияПени.ДоговорКонтрагента = ВТПериоды.ДоговорКонтрагента
	|			И ВТПараметрыНачисленияПени.Период = ВТПериоды.НачалоПериода";

	ТекстЗапроса = ТекстЗапроса + 
	";
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции
