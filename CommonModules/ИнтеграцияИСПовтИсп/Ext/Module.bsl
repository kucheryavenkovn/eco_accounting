// Возвращает объект ЗащищенноеСоединениеOpenSSL
// 
// Возвращаемое значение:
// 	ЗащищенноеСоединениеOpenSSL - Описание
Функция ЗащищенноеСоединение() Экспорт
	
	ЗащищенноеСоединение = Новый ЗащищенноеСоединениеOpenSSL(Неопределено, Новый СертификатыУдостоверяющихЦентровОС());
	
	Возврат ЗащищенноеСоединение;
	
КонецФункции

// Возвращает структуру реквизитов справочника.
//
// Параметры:
//		ИмяСправочника - Строка - имя справочника как оно задано в метаданных
// Возвращаемое значение:
//		Структура - стандартные и обычные реквизиты справочника.
//
Функция РеквизитыСправочника(ИмяСправочника) Экспорт
	
	СтруктураРеквизитов   = Новый Структура;
	МетаданныеСправочника = Метаданные.Справочники[ИмяСправочника];
	
	Для Каждого Реквизит Из МетаданныеСправочника.СтандартныеРеквизиты Цикл
		СтруктураРеквизитов.Вставить(Реквизит.Имя, Реквизит.Синоним);
	КонецЦикла;
	
	Для Каждого Реквизит Из МетаданныеСправочника.Реквизиты Цикл
		СтруктураРеквизитов.Вставить(Реквизит.Имя, Реквизит.Синоним);
	КонецЦикла;
	
	Возврат СтруктураРеквизитов;
	
КонецФункции

// Определяет включено ли ведение учета продукции, подлежащей маркированию.
//
// Параметры:
// Возвращаемое значение:
//  Булево - Истина, если учет ведется.
Функция ВедетсяУчетМаркируемойПродукции() Экспорт
	
	УчитываемыеВидыМаркируемойПродукции = ИнтеграцияИС.УчитываемыеВидыМаркируемойПродукции();
	
	Возврат УчитываемыеВидыМаркируемойПродукции.Количество() > 0;
	
КонецФункции

// Возвращает признак принадлежности переданного в параметре вида продукции к виду продукции ИС МП.
// 
// Параметры:
// 	ВидПродукции              - ПеречислениеСсылка.ВидыПродукцииИС - Вид продукции для анализа.
// 	ВключаяТабачнуюПродукцию  - Булево                             - Признак включения табачной продукции.
// 	ВключатьМолочнуюПродукцию - Булево                             - Признак включения молочной продукции.
// Возвращаемое значение:
// 	Булево - Принадлежность к виду продукции ИСМП
//
Функция ЭтоПродукцияИСМП(ВидПродукции, ВключаяТабачнуюПродукцию = Ложь, ВключатьМолочнуюПродукцию = Истина) Экспорт
	
	ВидыПродукцииИСМП = ИнтеграцияИСКлиентСервер.ВидыПродукцииИСМП(ВключаяТабачнуюПродукцию, ВключатьМолочнуюПродукцию);
	
	Возврат ВидыПродукцииИСМП.Найти(ВидПродукции) <> Неопределено;
	
КонецФункции

// Проверяет доступность объекта метаданных. Проверки выполняются по:
// - доступности вида продукции;
// - функциональным опциям;
// 
// Параметры:
// 	ПолноеИмяМетаданных - Строка - полное имя проверяемого объекта метаданных.
// Возвращаемое значение:
// 	Булево - Признак доступности объекта.
Функция ОбъектМетаданныхДоступен(ПолноеИмяМетаданных) Экспорт
	
	ОбъектМетаданных         = Метаданные.НайтиПоПолномуИмени(ПолноеИмяМетаданных);
	ВозвращаемоеЗначение     = Ложь;
	НедоступныеВидыПродукции = Новый Массив();
	
	Если ОбъектМетаданных = Метаданные.Документы.ПеремаркировкаТоваровИСМП Тогда
		НедоступныеВидыПродукции.Добавить(Перечисления.ВидыПродукцииИС.Табак);
		НедоступныеВидыПродукции.Добавить(Перечисления.ВидыПродукцииИС.МолочнаяПродукция);
	ИначеЕсли ОбъектМетаданных = Метаданные.Документы.ВыводИзОборотаИСМП Тогда
		НедоступныеВидыПродукции.Добавить(Перечисления.ВидыПродукцииИС.Табак);
	ИначеЕсли ОбъектМетаданных = Метаданные.Документы.ОтгрузкаТоваровИСМП Тогда
		НедоступныеВидыПродукции.Добавить(Перечисления.ВидыПродукцииИС.Табак);
	ИначеЕсли ОбъектМетаданных = Метаданные.Документы.ПриемкаТоваровИСМП Тогда
		НедоступныеВидыПродукции.Добавить(Перечисления.ВидыПродукцииИС.Табак);
	ИначеЕсли ОбъектМетаданных = Метаданные.Документы.ВозвратВОборотИСМП Тогда
		НедоступныеВидыПродукции.Добавить(Перечисления.ВидыПродукцииИС.Табак);
		НедоступныеВидыПродукции.Добавить(Перечисления.ВидыПродукцииИС.МолочнаяПродукция);
	КонецЕсли;
	
	Если НедоступныеВидыПродукции.Количество() Тогда
		
		ВидыПродукции = Новый Массив();
		
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ВидыПродукции, ИнтеграцияИСКлиентСервер.ВидыПродукцииИСМП(Истина));
		
		ПроверяемыеВидыПродукции = ОбщегоНазначенияКлиентСервер.РазностьМассивов(ВидыПродукции, НедоступныеВидыПродукции);
		
		Для Каждого ВидПродукции Из ПроверяемыеВидыПродукции Цикл
			
			Если ИнтеграцияИСМПКлиентСерверПовтИсп.ВестиУчетМаркируемойПродукции(ВидПродукции) Тогда
				ВозвращаемоеЗначение = Истина;
				Прервать;
			КонецЕсли;
			
		КонецЦикла;
	
	Иначе
		ВозвращаемоеЗначение = Истина;
	КонецЕсли;
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции
