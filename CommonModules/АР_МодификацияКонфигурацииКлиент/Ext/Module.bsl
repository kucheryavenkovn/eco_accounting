#Область ПрограммныйИнтерфейс

Процедура ВыполнитьПереопределяемуюКоманду(Форма, Команда, ДополнительныеПараметры = Неопределено) Экспорт
	
	
КонецПроцедуры

Процедура ВыполнитьПереопределяемоеСобытиеПриИзменении(Форма, Элемент) Экспорт
	
	Если Форма.ИмяФормы = "Справочник.ДоговорыКонтрагентов.Форма.ФормаЭлемента" Тогда
		
		ПриИзмененииРеквизитовДоговора(Форма, Элемент);
		
	ИначеЕсли Форма.ИмяФормы = "Документ.ПриходныйКассовыйОрдер.Форма.ФормаДокумента" 
		ИЛИ Форма.ИмяФормы = "Документ.РасходныйКассовыйОрдер.Форма.ФормаДокумента" 
		ИЛИ Форма.ИмяФормы = "Документ.ПоступлениеНаРасчетныйСчет.Форма.ФормаДокумента" 
		ИЛИ Форма.ИмяФормы = "Документ.СписаниеСРасчетногоСчета.Форма.ФормаДокумента" 
		ИЛИ Форма.ИмяФормы = "Документ.ПриходныйКассовыйОрдер.Форма.ФормаРасшифровкаПлатежа" 
		ИЛИ Форма.ИмяФормы = "Документ.РасходныйКассовыйОрдер.Форма.ФормаРасшифровкаПлатежа"
		ИЛИ Форма.ИмяФормы = "Документ.ПоступлениеНаРасчетныйСчет.Форма.ФормаРасшифровкаПлатежа" 
		ИЛИ Форма.ИмяФормы = "Документ.СписаниеСРасчетногоСчета.Форма.ФормаРасшифровкаПлатежа" Тогда
		
		ПриИзмененииРеквизитовПлатежныйДокумент(Форма, Элемент);
	
	ИначеЕсли Форма.ИмяФормы = "Документ.ПоступлениеНаРасчетныйСчет.Форма.ФормаДокументаОднострочная" 
		ИЛИ Форма.ИмяФормы = "Документ.СписаниеСРасчетногоСчета.Форма.ФормаДокументаОднострочная"
		ИЛИ Форма.ИмяФормы = "Документ.ПриходныйКассовыйОрдер.Форма.ФормаДокументаОднострочная"
		ИЛИ Форма.ИмяФормы = "Документ.РасходныйКассовыйОрдер.Форма.ФормаДокументаОднострочная" Тогда
		
		ПриИзмененииРеквизитовПлатежныйДокументОднострочный(Форма, Элемент);
	
	ИначеЕсли Форма.ИмяФормы = "Документ.КорректировкаРеализации.Форма.ФормаДокумента" Тогда
		
		ПриИзмененииРеквизитовКорректировкаРеализации(Форма, Элемент);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыполнитьПереопределяемоеСобытиеНачалоВыбора(Форма, Элемент, ДанныеВыбора, СтандартнаяОбработка) Экспорт
	
	
КонецПроцедуры

Процедура ВыполнитьПереопределяемоеСобытиеОбработкаВыбора(Форма, Элемент, ВыбранноеЗначение, СтандартнаяОбработка) Экспорт
	
	Если Форма.ИмяФормы = "Документ.ПриходныйКассовыйОрдер.Форма.ФормаДокумента" 
		ИЛИ Форма.ИмяФормы = "Документ.РасходныйКассовыйОрдер.Форма.ФормаДокумента" 
		ИЛИ Форма.ИмяФормы = "Документ.ПоступлениеНаРасчетныйСчет.Форма.ФормаДокумента" 
		ИЛИ Форма.ИмяФормы = "Документ.СписаниеСРасчетногоСчета.Форма.ФормаДокумента" Тогда
		
		ПриИзмененииРеквизитовПлатежныйДокумент(Форма, Элемент);
	
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыполнитьПереопределяемоеСобытиеАвтоПодбор(Форма, Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка) Экспорт
	
	
КонецПроцедуры

Процедура ВыполнитьПереопределяемоеСобытиеОкончаниеВводаТекста(Форма, Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка) Экспорт
	
	
КонецПроцедуры

Процедура ВыполнитьПереопределяемоеСобытиеВыбор(Форма, Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка) Экспорт
	
	Если Форма.ИмяФормы = "Документ.ПриходныйКассовыйОрдер.Форма.ФормаДокумента" 
		ИЛИ Форма.ИмяФормы = "Документ.ПриходныйКассовыйОрдер.Форма.ФормаРасшифровкаПлатежа" 
		ИЛИ Форма.ИмяФормы = "Документ.ПоступлениеНаРасчетныйСчет.Форма.ФормаДокумента"
		ИЛИ Форма.ИмяФормы = "Документ.ПоступлениеНаРасчетныйСчет.Форма.ФормаРасшифровкаПлатежа" Тогда
		
		ВыборПоляРасшифровкаПлатежаПриходныхДокументов(Форма, Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка);
	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ПереопределяемыеКоманды

#КонецОбласти

#Область ПереопределяемыеПроцедурыСобытий

Процедура ПриИзмененииРеквизитовДоговора(Форма, Элемент)
	
	Объект = Форма.Объект;
	
	Если Элемент.Имя = "АР_АрендныйДоговор" Тогда
		
		АР_МодификацияКонфигурацииКлиентСервер.УправлениеФормойДоговора(Форма);
		
	ИначеЕсли Элемент.Имя = "АР_ВестиВзаиморасчетыПоПериодам" Тогда
			
		Если Объект.АР_ВестиВзаиморасчетыПоПериодам И Не ЗначениеЗаполнено(Объект.АР_Периодичность) Тогда
			Объект.АР_Периодичность = АР_ОбщиеПроцедуры.ПолучитьЗначениеКонстанты("АР_ПериодНачисленияАренднойПлаты");
		КонецЕсли;
		АР_МодификацияКонфигурацииКлиентСервер.УправлениеФормойДоговора(Форма)
		
	ИначеЕсли Элемент.Имя = "АР_ВестиВзаиморасчетыПоУслугам" Тогда
		
		Если НЕ Объект.АР_ВестиВзаиморасчетыПоУслугам  
			И (Объект.АР_ВестиВзаиморасчетыПоСчетамПерем ИЛИ Объект.АР_ВестиВзаиморасчетыПоСчетамПост) // одно из значенией ИСТИНА
			И (НЕ Объект.АР_ВестиВзаиморасчетыПоСчетамПерем = Объект.АР_ВестиВзаиморасчетыПоСчетамПост) Тогда // флаги имеют разное значение
			ИзменитьВсеФлагиВзаиморасчетовПоСчетам(Объект, Истина);
		КонецЕсли;
		
	ИначеЕсли Элемент.Имя = "АР_ВестиВзаиморасчетыПоСчетамПост" Тогда
		
		Если НЕ Объект.АР_ВестиВзаиморасчетыПоУслугам Тогда
			ИзменитьВсеФлагиВзаиморасчетовПоСчетам(Объект, Объект.АР_ВестиВзаиморасчетыПоСчетамПост);	
		КонецЕсли;
	
	ИначеЕсли Элемент.Имя = "АР_ВестиВзаиморасчетыПоСчетамПерем" Тогда
		
		Если НЕ Объект.АР_ВестиВзаиморасчетыПоУслугам Тогда
			ИзменитьВсеФлагиВзаиморасчетовПоСчетам(Объект, Объект.АР_ВестиВзаиморасчетыПоСчетамПерем);	
		КонецЕсли;
	
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриИзмененииРеквизитовПлатежныйДокумент(Форма, Элемент)
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	ТекДанные = Элементы.РасшифровкаПлатежа.ТекущиеДанные;
	
	Если Элемент.Имя = "АР_ОплатаАренды" Тогда
		
		АР_МодификацияКонфигурацииКлиентСервер.УправлениеФормойПлатежныйДокумент(Форма);
		
	ИначеЕсли Элемент.Имя = "РасшифровкаПлатежаАР_ПериодАренды" Тогда
		
		ПлатежныйДокументПриИзмененииПериодаАренды(Форма);
		
	ИначеЕсли Элемент.Имя = "РасшифровкаПлатежаАР_Депозит" Тогда
		
		ПлатежныйДокументПереключитьДепозитПени(Форма, "АР_Пени");
		
	ИначеЕсли Элемент.Имя = "РасшифровкаПлатежаАР_Пени" Тогда
		
		ПлатежныйДокументПереключитьДепозитПени(Форма, "АР_Депозит");
		
	ИначеЕсли Элемент.Имя = "Дата" Тогда
		
		Для Каждого Стр Из Объект.РасшифровкаПлатежа Цикл
			ПлатежныйДокументПроверитьПризнакПени(Стр, Объект.Дата);
		КонецЦикла;
		ПлатежныйДокументУстановитьПризнакВеденияВзаиморасчетов(Форма);
		
	ИначеЕсли Элемент.Имя = "ВидОперации" Тогда
		
		АР_МодификацияКонфигурацииКлиентСервер.УправлениеФормойПлатежныйДокумент(Форма);
		
	ИначеЕсли Элемент.Имя = "РасшифровкаПлатежаДоговорКонтрагента" Тогда
		
		ПлатежныйДокументПриИзмененииДоговора(Форма);                                           
		ПлатежныйДокументУстановитьПризнакВеденияВзаиморасчетов(Форма);
		
		АР_МодификацияКонфигурацииКлиентСервер.УправлениеФормойПлатежныйДокумент(Форма);
		
	ИначеЕсли Элемент.Имя = "Контрагент" Тогда
		
		ПлатежныйДокументПриИзмененииДоговора(Форма);                                           
		ПлатежныйДокументУстановитьПризнакВеденияВзаиморасчетов(Форма);
		
		АР_МодификацияКонфигурацииКлиентСервер.УправлениеФормойПлатежныйДокумент(Форма);
		
	ИначеЕсли Элемент.Имя = "Организация" Тогда
		
		ПлатежныйДокументПриИзмененииДоговора(Форма);                                           
		ПлатежныйДокументУстановитьПризнакВеденияВзаиморасчетов(Форма);
		
		АР_МодификацияКонфигурацииКлиентСервер.УправлениеФормойПлатежныйДокумент(Форма);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриИзмененииРеквизитовПлатежныйДокументОднострочный(Форма, Элемент)
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	Если Элемент.Имя = "АР_ОплатаАренды" Тогда
		
		АР_МодификацияКонфигурацииКлиентСервер.УправлениеФормойПлатежныйДокументОднострочный(Форма);
		
	ИначеЕсли Элемент.Имя = "АР_ПериодАренды" Тогда
		
		Форма.РасшифровкаПлатежаАР_ПериодАренды = АР_ОбщиеПроцедуры.ОпределитьНачалоПериодаОплатыПоДоговору(Форма.РасшифровкаПлатежаАР_ПериодАренды, Форма.РасшифровкаПлатежаДоговорКонтрагента);
		
	ИначеЕсли Элемент.Имя = "АР_Депозит" Тогда
		
		Если Форма.РасшифровкаПлатежаАР_Депозит И Форма.РасшифровкаПлатежаАР_Пени Тогда
			Форма.РасшифровкаПлатежаАР_Пени = Ложь;
			ПлатежныйДокументОднострочныйУстановитьСчетаУчета(Форма);
		КонецЕсли;		
		
	ИначеЕсли Элемент.Имя = "АР_Пени" Тогда
		
		Если Форма.РасшифровкаПлатежаАР_Депозит И Форма.РасшифровкаПлатежаАР_Пени Тогда
			Форма.РасшифровкаПлатежаАР_Депозит = Ложь;
		КонецЕсли;		
		
		ПлатежныйДокументОднострочныйУстановитьСчетаУчета(Форма);
		
	ИначеЕсли Элемент.Имя = "Дата" Тогда
		
		ПлатежныйДокументОднострочныйПроверитьПризнакПени(Форма);
		
	ИначеЕсли Элемент.Имя = "ВидОперации" Тогда
		
		АР_МодификацияКонфигурацииКлиентСервер.УправлениеФормойПлатежныйДокументОднострочный(Форма);
		
	ИначеЕсли Элемент.Имя = "Контрагент" Тогда
		
		ПлатежныйДокументОднострочныйПриИзмененииДоговора(Форма);                                           
		
		АР_МодификацияКонфигурацииКлиентСервер.УправлениеФормойПлатежныйДокументОднострочный(Форма);
		
	ИначеЕсли Элемент.Имя = "ДоговорКонтрагента" Тогда
		
		ПлатежныйДокументОднострочныйПриИзмененииДоговора(Форма);                                           
		
		АР_МодификацияКонфигурацииКлиентСервер.УправлениеФормойПлатежныйДокументОднострочный(Форма);
		
	ИначеЕсли Элемент.Имя = "РасшифровкаПлатежаДоговорКонтрагента" Тогда
		
		ПлатежныйДокументОднострочныйПриИзмененииДоговора(Форма);                                           
		
		АР_МодификацияКонфигурацииКлиентСервер.УправлениеФормойПлатежныйДокументОднострочный(Форма);
		
	ИначеЕсли Элемент.Имя = "Организация" Тогда
		
		ПлатежныйДокументОднострочныйПриИзмененииДоговора(Форма);                                           
		
		АР_МодификацияКонфигурацииКлиентСервер.УправлениеФормойПлатежныйДокументОднострочный(Форма);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриИзмененииРеквизитовКорректировкаРеализации(Форма, Элемент)
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	Если Элемент.Имя = "Организация" ИЛИ Элемент.Имя = "ДокументРеализации" Тогда
		
		Форма.АР_ИсправлениеАренды = ТипЗнч(Объект.ДокументРеализации) = Тип("ДокументСсылка.АР_НачислениеАренднойПлаты");
		Форма.АР_ИсправлениеПени = ТипЗнч(Объект.ДокументРеализации) = Тип("ДокументСсылка.АР_НачислениеПени");

		Если Объект.ПризнаватьЗачитыватьАванс И (Форма.АР_ИсправлениеАренды ИЛИ Форма.АР_ИсправлениеПени) Тогда
			Объект.ПризнаватьЗачитыватьАванс = Ложь;	
		КонецЕсли;
		
		АР_МодификацияКонфигурацииКлиентСервер.УправлениеФормойКорректировкаРеализации(Форма);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыборПоляРасшифровкаПлатежаПриходныхДокументов(Форма, Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "РасшифровкаПлатежаАР_СчетПеней" Тогда
		ТекущиеДанные = Элемент.ТекущиеДанные;
		ДоговорКонтрагента = ТекущиеДанные.ДоговорКонтрагента;
		Дата = Форма.Объект.Дата;
		
		ПараметрыНачисленияПени = АР_ПроцедурыНачисления.ПолучитьПараметрыНачисленияПени(ДоговорКонтрагента, Дата);
		ОбособленныйУчетПени = ?(ПараметрыНачисленияПени = Неопределено, Ложь, ПараметрыНачисленияПени.СпособПогашенияПени = ПредопределенноеЗначение("Перечисление.АР_СпособыПогашенияПени.ВестиОбособленныйУчетПени"));
		Если ОбособленныйУчетПени Тогда
			СтандартнаяОбработка = Ложь;
			Сообщить("Для договоров с обособленным учетом пеней в качестве счета расчетов по пеням используется обычный счет расчетов с контрагентом");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры
	
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ИзменитьВсеФлагиВзаиморасчетовПоСчетам(Объект, Значение)
	
	Объект.АР_ВестиВзаиморасчетыПоСчетамПерем = Значение;	
	Объект.АР_ВестиВзаиморасчетыПоСчетамПост  = Значение;
	СообщениеПользователю = "Если детализация по услугам не установлена, то детализация по счетам может быть установлена или снята " +
		"только одновременно для постоянной и переменной части";
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СообщениеПользователю);
	
КонецПроцедуры 

Процедура ПлатежныйДокументПриИзмененииДоговора(Форма)
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	ТекДанные = Элементы.РасшифровкаПлатежа.ТекущиеДанные;
	
	Если (Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийПоступлениеДенежныхСредств.ОплатаПокупателя")
			ИЛИ Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийПКО.ОплатаПокупателя")
			ИЛИ Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийРКО.ВозвратПокупателю")
			ИЛИ Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийСписаниеДенежныхСредств.ВозвратПокупателю"))
		И ТипЗнч(ТекДанные.ДоговорКонтрагента) = Тип("СправочникСсылка.ДоговорыКонтрагентов")
		И ЗначениеЗаполнено(ТекДанные.ДоговорКонтрагента)
		И АР_ОбщиеПроцедуры.ЗначениеРеквизитаОбъекта(ТекДанные.ДоговорКонтрагента, "АР_АрендныйДоговор") Тогда
		
		Объект.АР_ОплатаАренды = Истина;
		
		ПлатежныйДокументПроверитьПризнакПени(ТекДанные, Объект.Дата);
		Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийПоступлениеДенежныхСредств.ОплатаПокупателя")
				ИЛИ Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийПКО.ОплатаПокупателя") Тогда
			ПлатежныйДокументЗаполнитьСчетПеней(ТекДанные, Объект.Дата);
		КонецЕсли;
		
	ИначеЕсли Объект.АР_ОплатаАренды Тогда
		
		ЕстьАрендныйДоговор = Ложь;
		ТабличнаяЧасть = ?(Объект.Свойство("РасшифровкаПлатежа"), Объект.РасшифровкаПлатежа, Форма.РасшифровкаПлатежа);
		Для Каждого СтрокаТЧ Из ТабличнаяЧасть Цикл
			Если ТипЗнч(СтрокаТЧ.ДоговорКонтрагента) = Тип("СправочникСсылка.ДоговорыКонтрагентов")
				И ЗначениеЗаполнено(СтрокаТЧ.ДоговорКонтрагента)
				И АР_ОбщиеПроцедуры.ЗначениеРеквизитаОбъекта(СтрокаТЧ.ДоговорКонтрагента, "АР_АрендныйДоговор") Тогда
				ЕстьАрендныйДоговор = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Если Не ЕстьАрендныйДоговор Тогда
			Объект.АР_ОплатаАренды = Ложь;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПлатежныйДокументОднострочныйПриИзмененииДоговора(Форма)
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	Если (Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийПоступлениеДенежныхСредств.ОплатаПокупателя")
			ИЛИ Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийПКО.ОплатаПокупателя")
			ИЛИ Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийРКО.ВозвратПокупателю")
			ИЛИ Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийСписаниеДенежныхСредств.ВозвратПокупателю"))
		И ТипЗнч(Форма.РасшифровкаПлатежаДоговорКонтрагента) = Тип("СправочникСсылка.ДоговорыКонтрагентов")
		И ЗначениеЗаполнено(Форма.РасшифровкаПлатежаДоговорКонтрагента)
		И АР_ОбщиеПроцедуры.ЗначениеРеквизитаОбъекта(Форма.РасшифровкаПлатежаДоговорКонтрагента, "АР_АрендныйДоговор") Тогда
		
		Объект.АР_ОплатаАренды = АР_ОбщиеПроцедуры.ЗначениеРеквизитаОбъекта(Форма.РасшифровкаПлатежаДоговорКонтрагента, "АР_АрендныйДоговор");
		
		ПлатежныйДокументОднострочныйПроверитьПризнакПени(Форма);
		Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийПоступлениеДенежныхСредств.ОплатаПокупателя")
				ИЛИ Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийПКО.ОплатаПокупателя") Тогда
			ПлатежныйДокументОднострочныйЗаполнитьСчетПеней(Форма);
		КонецЕсли;
		
	Иначе
		
		Объект.АР_ОплатаАренды = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПлатежныйДокументУстановитьПризнакВеденияВзаиморасчетов(Форма)
	
	Если НЕ (Форма.ИмяФормы = "Документ.ПриходныйКассовыйОрдер.Форма.ФормаДокумента" 
		ИЛИ Форма.ИмяФормы = "Документ.ПоступлениеНаРасчетныйСчет.Форма.ФормаДокумента" 
		ИЛИ Форма.ИмяФормы = "Документ.ПриходныйКассовыйОрдер.Форма.ФормаРасшифровкаПлатежа" 
		ИЛИ Форма.ИмяФормы = "Документ.ПоступлениеНаРасчетныйСчет.Форма.ФормаРасшифровкаПлатежа") Тогда 
		Возврат;
	КонецЕсли;
	
	ТекДанные = Форма.Элементы.РасшифровкаПлатежа.ТекущиеДанные;
	
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекДанные.ДоговорКонтрагента)
		И АР_ОбщиеПроцедуры.ЗначениеРеквизитаОбъекта(ТекДанные.ДоговорКонтрагента, "АР_АрендныйДоговор") Тогда
		
		ТекДанные.АР_ВестиВзаиморасчетыПоУслугам = АР_ОбщиеПроцедуры.ЗначениеРеквизитаОбъекта(ТекДанные.ДоговорКонтрагента, "АР_ВестиВзаиморасчетыПоУслугам");	
		ТекДанные.АР_ВестиВзаиморасчетыПоОбъектам = АР_ОбщиеПроцедуры.ЗначениеРеквизитаОбъекта(ТекДанные.ДоговорКонтрагента, "АР_ВестиВзаиморасчетыПоОбъектам");	
		ПараметрыНачисленияПени = АР_ПроцедурыНачисления.ПолучитьПараметрыНачисленияПени(ТекДанные.ДоговорКонтрагента, Форма.Объект.Дата);
		ОбособленныйУчетПени = ?(ПараметрыНачисленияПени = Неопределено, Ложь, ПараметрыНачисленияПени.СпособПогашенияПени = ПредопределенноеЗначение("Перечисление.АР_СпособыПогашенияПени.ВестиОбособленныйУчетПени"));
		ТекДанные.АР_ОбособленныйУчетПеней = ОбособленныйУчетПени;	
		
	Иначе
		
		ТекДанные.АР_ВестиВзаиморасчетыПоУслугам = Ложь;
		ТекДанные.АР_ВестиВзаиморасчетыПоОбъектам = Ложь;
		ТекДанные.АР_ОбособленныйУчетПеней = Ложь;	
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПлатежныйДокументПриИзмененииПериодаАренды(Форма)

	ТекДанные = Форма.Элементы.РасшифровкаПлатежа.ТекущиеДанные;
	
	Если НЕ ТекДанные = Неопределено И ТипЗнч(ТекДанные.АР_ПериодАренды) = Тип("Дата") Тогда
		Если ЗначениеЗаполнено(ТекДанные.ДоговорКонтрагента) Тогда
			ТекДанные.АР_ПериодАренды = АР_ОбщиеПроцедуры.ОпределитьНачалоПериодаОплатыПоДоговору(ТекДанные.АР_ПериодАренды, ТекДанные.ДоговорКонтрагента);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

Процедура ПлатежныйДокументПереключитьДепозитПени(Форма, Элемент)
	
	ТекДанные = Форма.Элементы.РасшифровкаПлатежа.ТекущиеДанные;
	
	Если ТекДанные.АР_Депозит И ТекДанные.АР_Пени Тогда
		ТекДанные[Элемент] = Ложь;
	КонецЕсли;

	ПлатежныйДокументУстановитьСчетаУчета(Форма);
	
КонецПроцедуры

Процедура ПлатежныйДокументПроверитьПризнакПени(ТекДанные, Дата)

	Если ТекДанные.АР_Пени И ТипЗнч(ТекДанные.ДоговорКонтрагента) = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда
		Если АР_ОбщиеПроцедуры.ЗначениеРеквизитаОбъекта(ТекДанные.ДоговорКонтрагента, "АР_АрендныйДоговор") = Истина Тогда
			ПараметрыНачисленияПени = АР_ПроцедурыНачисления.ПолучитьПараметрыНачисленияПени(ТекДанные.ДоговорКонтрагента, Дата);
			ОбособленныйУчетПени = ?(ПараметрыНачисленияПени = Неопределено, Ложь, ПараметрыНачисленияПени.СпособПогашенияПени = ПредопределенноеЗначение("Перечисление.АР_СпособыПогашенияПени.ВестиОбособленныйУчетПени"));
			Если Не ОбособленныйУчетПени Тогда
				ТекДанные.АР_Пени = Ложь;
			КонецЕсли;
		Иначе
			ТекДанные.АР_Пени = Ложь;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

Процедура ПлатежныйДокументОднострочныйПроверитьПризнакПени(Форма)

	Если Форма.РасшифровкаПлатежаАР_Пени И ТипЗнч(Форма.РасшифровкаПлатежаДоговорКонтрагента) = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда
		Если АР_ОбщиеПроцедуры.ЗначениеРеквизитаОбъекта(Форма.РасшифровкаПлатежаДоговорКонтрагента, "АР_АрендныйДоговор") = Истина Тогда
			ПараметрыНачисленияПени = АР_ПроцедурыНачисления.ПолучитьПараметрыНачисленияПени(Форма.РасшифровкаПлатежаДоговорКонтрагента, Форма.Объект.Дата);
			ОбособленныйУчетПени = ?(ПараметрыНачисленияПени = Неопределено, Ложь, ПараметрыНачисленияПени.СпособПогашенияПени = ПредопределенноеЗначение("Перечисление.АР_СпособыПогашенияПени.ВестиОбособленныйУчетПени"));
			Если Не ОбособленныйУчетПени Тогда
				Форма.РасшифровкаПлатежаАР_Пени = Ложь;
			КонецЕсли;
		Иначе
			Форма.РасшифровкаПлатежаАР_Пени = Ложь;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

Процедура ПлатежныйДокументЗаполнитьСчетПеней(ТекДанные, Дата)
	
	Если ТипЗнч(ТекДанные.ДоговорКонтрагента) = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда
		ДоговорКонтрагента = ТекДанные.ДоговорКонтрагента;
		Организация = АР_ОбщиеПроцедуры.ЗначениеРеквизитаОбъекта(ТекДанные.ДоговорКонтрагента, "Организация");
		Контрагент = АР_ОбщиеПроцедуры.ЗначениеРеквизитаОбъекта(ТекДанные.ДоговорКонтрагента, "Владелец");
		ТекДанные.АР_СчетПеней = АР_ОбщиеПроцедуры.ПолучитьСчетУчетаПеней(Организация, Контрагент, ДоговорКонтрагента, Дата);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПлатежныйДокументОднострочныйЗаполнитьСчетПеней(Форма)
	
	Если ТипЗнч(Форма.РасшифровкаПлатежаДоговорКонтрагента) = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда
		ДоговорКонтрагента = Форма.РасшифровкаПлатежаДоговорКонтрагента;
		Организация = АР_ОбщиеПроцедуры.ЗначениеРеквизитаОбъекта(ДоговорКонтрагента, "Организация");
		Контрагент = АР_ОбщиеПроцедуры.ЗначениеРеквизитаОбъекта(ДоговорКонтрагента, "Владелец");
		Дата = Форма.Объект.Дата;
		Форма.РасшифровкаПлатежаАР_СчетПеней = АР_ОбщиеПроцедуры.ПолучитьСчетУчетаПеней(Организация, Контрагент, ДоговорКонтрагента, Дата);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПлатежныйДокументУстановитьСчетаУчета(Форма)
	
	ТекДанные = Форма.Элементы.РасшифровкаПлатежа.ТекущиеДанные;
	
	ДоговорКонтрагента = ТекДанные.ДоговорКонтрагента;
	Организация = АР_ОбщиеПроцедуры.ЗначениеРеквизитаОбъекта(ТекДанные.ДоговорКонтрагента, "Организация");
	Контрагент = АР_ОбщиеПроцедуры.ЗначениеРеквизитаОбъекта(ТекДанные.ДоговорКонтрагента, "Владелец");
	
	ВозвратПлатежа = Форма.Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийРКО.ВозвратПокупателю")
		ИЛИ Форма.Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийСписаниеДенежныхСредств.ВозвратПокупателю");
		
	ПараметрыНачисленияПени = АР_ПроцедурыНачисления.ПолучитьПараметрыНачисленияПени(ДоговорКонтрагента, Форма.Объект.Дата);
	ОбособленныйУчетПени = ?(ПараметрыНачисленияПени = Неопределено, Ложь, ПараметрыНачисленияПени.СпособПогашенияПени = ПредопределенноеЗначение("Перечисление.АР_СпособыПогашенияПени.ВестиОбособленныйУчетПени"));
	Если НЕ ВозвратПлатежа И (ПараметрыНачисленияПени = Неопределено ИЛИ НЕ ОбособленныйУчетПени) Тогда
		Возврат;
	КонецЕсли;
	
	СчетаУчета = АР_ОбщиеПроцедуры.ПолучитьСчетаРасчетовСКонтрагентом(Организация, Контрагент, ДоговорКонтрагента);
		
	Если ТекДанные.АР_Пени Тогда
		ТекДанные.СчетУчетаРасчетовСКонтрагентом = СчетаУчета.СчетРасчетовПоПретензиям;
		ТекДанные.СчетУчетаРасчетовПоАвансам = СчетаУчета.СчетРасчетовПоПретензиям;
	Иначе	
		ТекДанные.СчетУчетаРасчетовСКонтрагентом = СчетаУчета.СчетРасчетовПокупателя;
		ТекДанные.СчетУчетаРасчетовПоАвансам = СчетаУчета.СчетАвансовПокупателя;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПлатежныйДокументОднострочныйУстановитьСчетаУчета(Форма)
	
	ДоговорКонтрагента = Форма.РасшифровкаПлатежаДоговорКонтрагента;
	Организация = АР_ОбщиеПроцедуры.ЗначениеРеквизитаОбъекта(ДоговорКонтрагента, "Организация");
	Контрагент = АР_ОбщиеПроцедуры.ЗначениеРеквизитаОбъекта(ДоговорКонтрагента, "Владелец");
	Дата = Форма.Объект.Дата;
	
	ВозвратПлатежа = Форма.Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийРКО.ВозвратПокупателю")
		ИЛИ Форма.Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийСписаниеДенежныхСредств.ВозвратПокупателю");
		
	ПараметрыНачисленияПени = АР_ПроцедурыНачисления.ПолучитьПараметрыНачисленияПени(ДоговорКонтрагента, Дата);
	ОбособленныйУчетПени = ?(ПараметрыНачисленияПени = Неопределено, Ложь, ПараметрыНачисленияПени.СпособПогашенияПени = ПредопределенноеЗначение("Перечисление.АР_СпособыПогашенияПени.ВестиОбособленныйУчетПени"));
	Если НЕ ВозвратПлатежа И (ПараметрыНачисленияПени = Неопределено ИЛИ НЕ ОбособленныйУчетПени) Тогда
		Возврат;
	КонецЕсли;
	
	СчетаУчета = АР_ОбщиеПроцедуры.ПолучитьСчетаРасчетовСКонтрагентом(Организация, Контрагент, ДоговорКонтрагента);
		
	Если Форма.РасшифровкаПлатежаАР_Пени Тогда
		Форма.РасшифровкаПлатежаСчетУчетаРасчетовСКонтрагентом = СчетаУчета.СчетРасчетовПоПретензиям;
		Форма.РасшифровкаПлатежаСчетУчетаРасчетовПоАвансам = СчетаУчета.СчетРасчетовПоПретензиям;
	Иначе	
		Форма.РасшифровкаПлатежаСчетУчетаРасчетовСКонтрагентом = СчетаУчета.СчетРасчетовПокупателя;
		Форма.РасшифровкаПлатежаСчетУчетаРасчетовПоАвансам = СчетаУчета.СчетАвансовПокупателя;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
