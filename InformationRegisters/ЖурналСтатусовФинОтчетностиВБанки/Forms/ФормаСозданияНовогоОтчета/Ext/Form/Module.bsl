
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Организация   = Параметры.Организация;
	Банк          = Параметры.Банк;
	НачалоПериода = Параметры.НачалоПериода;
	КонецПериода  = Параметры.КонецПериода;
	
	// Ограничим список выбираемых организаций только теми, данных которых пользователь может просматривать.
	ДоступныеОрганизации = ОбщегоНазначенияБПВызовСервераПовтИсп.ОрганизацииДанныеКоторыхДоступныПользователю();
	ПараметрыВыбораОрганизации = Новый Массив();
	ПараметрыВыбораОрганизации.Добавить(Новый ПараметрВыбора("Отбор.Ссылка", ДоступныеОрганизации));
	Элементы.Организация.ПараметрыВыбора = Новый ФиксированныйМассив(ПараметрыВыбораОрганизации);
	
	ОргПоУмолчанию = БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("ОсновнаяОрганизация");
	Если ДоступныеОрганизации.Найти(ОргПоУмолчанию) = Неопределено Тогда
		ОргПоУмолчанию = Неопределено;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Организация) И ЗначениеЗаполнено(ОргПоУмолчанию) Тогда
		Организация = ОргПоУмолчанию;
	КонецЕсли;
	
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоОрганизаций") Тогда
		Организация = ОргПоУмолчанию;
		Элементы.НадписьОрганизация.Видимость = Ложь;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(КонецПериода) Тогда
		КонецПериода  = КонецМесяца(ДобавитьМесяц(КонецМесяца(ТекущаяДатаСеанса()), -1));
		НачалоПериода = НачалоМесяца(КонецПериода);
	КонецЕсли;

	ИзменитьПериод(ЭтотОбъект, 0);

	ЗаполнитьСписокБанков();
	
	ОбновитьКомплектыОтчетности();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыбратьПериод(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ДопПараметры = Новый Структура;
	ДопПараметры.Вставить("ОтображатьВыборГода", Истина);
	ДопПараметры.Вставить("ОтображатьМесяцы", Истина);
	
	ПараметрыВыбора = Новый Структура;
	ПараметрыВыбора.Вставить("НачалоПериода", НачалоМесяца(КонецПериода));
	ПараметрыВыбора.Вставить("КонецПериода",  КонецМесяца(КонецПериода));
	ПараметрыВыбора.Вставить("ДополнительныеПараметры", ДопПараметры);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыбратьПериодЗавершение", ЭтотОбъект);
	
	ОткрытьФорму("Обработка.ОбщиеОбъектыРеглОтчетности.Форма.ВыборОтчетногоПериода", ПараметрыВыбора,
		Элементы.ПериодОтчета.КнопкаВыбора, , , , ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПредыдущийПериод(Команда)
	
	ИзменитьПериод(ЭтотОбъект, -1);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСледующийПериод(Команда)
	
	ИзменитьПериод(ЭтотОбъект, 1);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуОтчета(Команда)
	
	// Показывает в виде предупреждений, а не простых сообщений пользователя,
	// т.к. форма небольшая по размеру и сообщения внизу занимают почти половину от самой формы.
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения( , , НСтр("ru = 'Организация'"));
		ПоказатьПредупреждение(, ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Банк) Тогда
		ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения( , , НСтр("ru = 'Получатель'"));
		ПоказатьПредупреждение(, ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ИдентификаторКомплекта) Тогда
		Если Элементы.НесколькоКомплектов.СписокВыбора.Количество() > 0 Тогда
			ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения( , , НСтр("ru = 'Наименование'"));
		Иначе
			ТекстСообщения = СтрШаблон(
				НСтр("ru = 'За %1 отсутствуют доступные отчеты для %2'"),
				ПериодОтчета,
				Банк);
		КонецЕсли;

		ПоказатьПредупреждение(, ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	Если ФинОтчетностьВБанкиКлиентСервер.ЭтоБанкУниверсальногоОбмена(Банк) Тогда
	
		// Для работы с электронными подписями у присоединенных файлов включим соответствующую опцию БСП.
		ПроверитьВключитьОпциюИспользоватьЭлектронныеПодписи();
	
		// Создаем пакет отчетов для сервиса 1С:ФинОтчетность в банки.
		ЗначенияЗаполнения = Новый Структура();
		ЗначенияЗаполнения.Вставить("Организация",                   Организация);
		ЗначенияЗаполнения.Вставить("Банк",                          Банк);
		ЗначенияЗаполнения.Вставить("НачалоПериода",                 НачалоПериода);
		ЗначенияЗаполнения.Вставить("КонецПериода",                  КонецМесяца(КонецПериода));
		ЗначенияЗаполнения.Вставить("ИдентификаторКомплекта",        ИдентификаторКомплекта);
		ЗначенияЗаполнения.Вставить("КраткоеПредставлениеКомплекта", КраткоеПредставлениеКомплекта);
		
		ПараметрыФормы = Новый Структура();
		ПараметрыФормы.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
		
		ОткрытьФорму("Документ.ФинОтчетВБанк.Форма.ФормаДокумента", ПараметрыФормы, , Истина);
	
	Иначе
		// Создаем отчет БРО БухгалтерскаяОтчетностьВБанк.
		СистемнаяИнформация = Новый СистемнаяИнформация;
		ПараметрыКлиента = Новый Структура;
		ПараметрыКлиента.Вставить("ТипПлатформы", Строка(СистемнаяИнформация.ТипПлатформы));
		ПараметрыКлиента.Вставить("ВерсияОС",     СистемнаяИнформация.ВерсияОС);

		ВозможнаОтправка = ОтчетностьВБанкиСлужебныйВызовСервера.ВозможнаОтправкаОтчета(Организация, Банк, ПараметрыКлиента);
		
		Если НЕ ВозможнаОтправка Тогда
			Возврат;
		КонецЕсли;
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("мДатаНачалаПериодаОтчета", НачалоПериода);
		ПараметрыФормы.Вставить("мДатаКонцаПериодаОтчета",  КонецМесяца(КонецПериода));
		ПараметрыФормы.Вставить("Организация",              Организация);
		ПараметрыФормы.Вставить("мВыбраннаяФорма",          ИдентификаторКомплекта);
		ПараметрыФормы.Вставить("Банк",                     Банк);
		
		ОткрытьФорму("Отчет.БухгалтерскаяОтчетностьВБанк.Форма." + ИдентификаторКомплекта, ПараметрыФормы, , Истина);
		
	КонецЕсли;
	
	// Текущую форму закрываем.
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура БанкПриИзменении(Элемент)
	
	ОбновитьКомплектыОтчетности();

КонецПроцедуры

&НаКлиенте
Процедура ИдентификаторКомплектаПриИзменении(Элемент)
	
	ОбновитьПодсказкуНазначения(ЭтотОбъект);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ИзменитьПериод(Форма, Шаг)
	
	Форма.КонецПериода  = КонецМесяца(ДобавитьМесяц(Форма.КонецПериода, Шаг));
	Форма.НачалоПериода = НачалоГода(Форма.КонецПериода);
	
	Форма.ПериодОтчета = ЗаполнениеФинОтчетностиВБанкиКлиентСервер.ПредставлениеПериодаОтчета(
		Форма.НачалоПериода, Форма.КонецПериода);
	
	ОбновитьСписокДоступныхКомплектов(Форма);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПериодЗавершение(РезультатВыбора, ДопПараметры) Экспорт
	
	Если РезультатВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	НачалоПериода = РезультатВыбора.НачалоПериода;
	КонецПериода  = РезультатВыбора.КонецПериода;
	
	ИзменитьПериод(ЭтотОбъект, 0);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокБанков()

	СписокВыбора = Элементы.Банк.СписокВыбора;
	СписокВыбора.Очистить();
	
	ДоступныеБанки = ФинОтчетностьВБанки.ДоступныеБанки(Ложь);
	
	Для каждого ЭлементСписка Из ДоступныеБанки Цикл
		СписокВыбора.Добавить(ЭлементСписка.Значение, ЭлементСписка.Представление);
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура ОбновитьКомплектыОтчетности()

	Если ЗначениеЗаполнено(Банк) Тогда
		// Проверим, были ли ранее считаны данные о требованиях банка к отчетности.
		Отбор = Новый Структура();
		Отбор.Вставить("Банк", Банк);
		
		НайденныеСтроки = КомплектыОтчетности.НайтиСтроки(Отбор);

		Если НайденныеСтроки.Количество() = 0 Тогда

			Если ФинОтчетностьВБанкиКлиентСервер.ЭтоБанкУниверсальногоОбмена(Банк) Тогда

				// Ранее не получали по выбранному банку комплекты отчетности, получаем их сейчас.
				КомплектыОтчетностиБанка = ЗаполнениеФинОтчетностиВБанки.КомплектыОтчетности(Банк);
				Для каждого СтрокаКомплекта Из КомплектыОтчетностиБанка Цикл
					НоваяСтрока = КомплектыОтчетности.Добавить();
					НоваяСтрока.Банк = Банк;
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаКомплекта);
				КонецЦикла;
				
			Иначе
				// Задаем настройки по умолчанию для актуальной формы отчета БРО БухгалтерскаяОтчетностьВБанк.
				НоваяСтрока = КомплектыОтчетности.Добавить();
				НоваяСтрока.Банк                   = Банк;
				НоваяСтрока.Идентификатор          = "ФормаОтчета2017Кв3";
				 // Всегда используем фиксированное значение.
				НоваяСтрока.КраткоеПредставление   = ФинОтчетностьВБанки.НаименованиеОтчетностиВСбербанк();
				НоваяСтрока.ПодробноеПредставление = "";
				НоваяСтрока.ДатаНачала             = '0001-01-01';
				НоваяСтрока.ДатаОкончания          = '2999-12-31';

			КонецЕсли;
			
		КонецЕсли;

	КонецЕсли;
	
	ОбновитьСписокДоступныхКомплектов(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьСписокДоступныхКомплектов(Форма)

	Элементы = Форма.Элементы;

	СписокВыбора = Элементы.НесколькоКомплектов.СписокВыбора;
	СписокВыбора.Очистить();

	Отбор = Новый Структура();
	Отбор.Вставить("Банк", Форма.Банк);
		
	НайденныеСтроки = Форма.КомплектыОтчетности.НайтиСтроки(Отбор);
	Для каждого НайденнаяСтрока Из НайденныеСтроки Цикл
		Если НайденнаяСтрока.ДатаНачала <= Форма.НачалоПериода
			И КонецДня(НайденнаяСтрока.ДатаОкончания) >= КонецДня(Форма.КонецПериода) Тогда
			СписокВыбора.Добавить(НайденнаяСтрока.Идентификатор, НайденнаяСтрока.КраткоеПредставление);
		КонецЕсли;
	КонецЦикла;

	// Очистим выбранный вариант, если его нет среди доступных в списке.
	Если СписокВыбора.НайтиПоЗначению(Форма.ИдентификаторКомплекта) = Неопределено Тогда
		Форма.ИдентификаторКомплекта = "";
	КонецЕсли;
	
	Если СписокВыбора.Количество() > 1 Тогда
		Элементы.НесколькоКомплектов.Видимость = Истина;
		Элементы.ОдинКомплект.Видимость        = Ложь;
	Иначе
		Элементы.НесколькоКомплектов.Видимость = Ложь;
		Элементы.ОдинКомплект.Видимость        = Истина;
	
		Если СписокВыбора.Количество() > 0 Тогда
			Форма.ИдентификаторКомплекта        = СписокВыбора[0].Значение;
			Форма.КраткоеПредставлениеКомплекта = СписокВыбора[0].Представление;
		Иначе
			Форма.ИдентификаторКомплекта        = "";
			Форма.КраткоеПредставлениеКомплекта = "";
		КонецЕсли;
	КонецЕсли;

	ОбновитьПодсказкуНазначения(Форма);

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьПодсказкуНазначения(Форма)

	Элементы = Форма.Элементы;
	
	// Выбираем элемент, для которого выводить подсказку, в зависимости от количества доступных комплектов.
	Если Элементы.НесколькоКомплектов.СписокВыбора.Количество() > 1 Тогда
		ЭлементСПодсказкой = Элементы.НесколькоКомплектов;
	Иначе
		ЭлементСПодсказкой = Элементы.ОдинКомплект;
	КонецЕсли;
	
	Отбор = Новый Структура();
	Отбор.Вставить("Банк",          Форма.Банк);
	Отбор.Вставить("Идентификатор", Форма.ИдентификаторКомплекта);
	
	НайденныеСтроки = Форма.КомплектыОтчетности.НайтиСтроки(Отбор);
	Если НайденныеСтроки.Количество() > 0 Тогда
		ЭлементСПодсказкой.Подсказка = НайденныеСтроки[0].ПодробноеПредставление;
	Иначе
		ЭлементСПодсказкой.Подсказка = "";
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПроверитьВключитьОпциюИспользоватьЭлектронныеПодписи()

	Если ЭлектроннаяПодпись.ИспользоватьЭлектронныеПодписи() Тогда
		Возврат;
	КонецЕсли;

	УстановитьПривилегированныйРежим(Истина);
	Константы.ИспользоватьЭлектронныеПодписи.Установить(Истина);
	УстановитьПривилегированныйРежим(Ложь);
	
	ОбновитьПовторноИспользуемыеЗначения();

КонецПроцедуры

#КонецОбласти
