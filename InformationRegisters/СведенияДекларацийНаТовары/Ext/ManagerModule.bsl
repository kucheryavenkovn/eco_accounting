#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

Функция ПолучитьПроцедурыДекларированияФТСССервера(ПараметрыОтправки, ПараметрыСоединения) Экспорт
	
	ПроцедурыДекларирования = ИнтерфейсыВзаимодействияБРОВызовСервера.ПолучитьПроцедурыДекларированияФТСССервера(
		ПараметрыОтправки, ПараметрыСоединения);
	Результат = Новый Структура;
	Результат.Вставить("ПроцедурыДекларирования", 	ПроцедурыДекларирования);
	Результат.Вставить("ПараметрыСоединения", 		ПараметрыСоединения);
	
	Если ПроцедурыДекларирования = Неопределено Тогда
		Возврат Результат;
	КонецЕсли; 
	
	ДекларацииНаТовары = Новый ТаблицаЗначений;
	ДекларацииНаТовары.Колонки.Добавить("Организация",          Новый ОписаниеТипов("СправочникСсылка.Организации"));
	ДекларацииНаТовары.Колонки.Добавить("РегистрационныйНомер", ОбщегоНазначения.ОписаниеТипаСтрока(24));
	ДекларацииНаТовары.Колонки.Добавить("ОбщаяСтоимость",       ОбщегоНазначения.ОписаниеТипаСтрока(250));
	ДекларацииНаТовары.Колонки.Добавить("ДатаРешения",          ОбщегоНазначения.ОписаниеТипаСтрока(10));
	ДекларацииНаТовары.Колонки.Добавить("ВсегоТоваровМест",     ОбщегоНазначения.ОписаниеТипаСтрока(250));
	ДекларацииНаТовары.Колонки.Добавить("Отправитель",          ОбщегоНазначения.ОписаниеТипаСтрока(250));
	ДекларацииНаТовары.Колонки.Добавить("Получатель",           ОбщегоНазначения.ОписаниеТипаСтрока(250));
	ДекларацииНаТовары.Колонки.Добавить("СтранаОтправления",    ОбщегоНазначения.ОписаниеТипаСтрока(250));
	ДекларацииНаТовары.Колонки.Добавить("СтранаНазначения",     ОбщегоНазначения.ОписаниеТипаСтрока(250));

	Для Каждого СведенияОДекларации Из ПроцедурыДекларирования Цикл
		
		Если Не ЗначениеЗаполнено(СведенияОДекларации.РегистрационныйНомер) Тогда
			Продолжить;
		КонецЕсли; 
	
		НоваяСтрока = ДекларацииНаТовары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СведенияОДекларации);
		НоваяСтрока.Организация = ПараметрыОтправки.Организация;
		
	КонецЦикла;
	
	ДобавитьАктуализироватьСведенияПоДекларациям(ДекларацииНаТовары, ПараметрыОтправки.Организация);
	
	Возврат Результат;
	
КонецФункции

Функция СведенияЗагружены(Организация) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	СведенияДекларацийНаТовары.РегистрационныйНомер КАК РегистрационныйНомер
	|ИЗ
	|	РегистрСведений.СведенияДекларацийНаТовары КАК СведенияДекларацийНаТовары
	|ГДЕ
	|	СведенияДекларацийНаТовары.Организация = &Организация";
	Результат = Запрос.Выполнить();
	
	Возврат Не Результат.Пустой();
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Записывает в регистр сведений "СведенияДекларацийНаТовары" данные из ЛК ФТС ранее не загруженные в ИБ
// либо загруженные с другими значениями сведений
Процедура ДобавитьАктуализироватьСведенияПоДекларациям(Знач ДекларацииНаТовары, Знач Организация)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДекларацииНаТовары", ДекларацииНаТовары);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДекларацииНаТовары.Организация КАК Организация,
	|	ДекларацииНаТовары.РегистрационныйНомер КАК РегистрационныйНомер,
	|	ДекларацииНаТовары.ОбщаяСтоимость КАК ОбщаяСтоимость,
	|	ДекларацииНаТовары.ДатаРешения КАК ДатаРешения,
	|	ДекларацииНаТовары.ВсегоТоваровМест КАК ВсегоТоваровМест,
	|	ДекларацииНаТовары.Отправитель КАК Отправитель,
	|	ДекларацииНаТовары.Получатель КАК Получатель,
	|	ДекларацииНаТовары.СтранаОтправления КАК СтранаОтправления,
	|	ДекларацииНаТовары.СтранаНазначения КАК СтранаНазначения
	|ПОМЕСТИТЬ ВТ_ДекларацииНаТовары
	|ИЗ
	|	&ДекларацииНаТовары КАК ДекларацииНаТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ДекларацииНаТовары.Организация КАК Организация,
	|	ВТ_ДекларацииНаТовары.РегистрационныйНомер КАК РегистрационныйНомер,
	|	ВТ_ДекларацииНаТовары.ОбщаяСтоимость КАК ОбщаяСтоимость,
	|	ВТ_ДекларацииНаТовары.ДатаРешения КАК ДатаРешения,
	|	ВТ_ДекларацииНаТовары.ВсегоТоваровМест КАК ВсегоТоваровМест,
	|	ВТ_ДекларацииНаТовары.Отправитель КАК Отправитель,
	|	ВТ_ДекларацииНаТовары.Получатель КАК Получатель,
	|	ВТ_ДекларацииНаТовары.СтранаОтправления КАК СтранаОтправления,
	|	ВТ_ДекларацииНаТовары.СтранаНазначения КАК СтранаНазначения
	|ИЗ
	|	ВТ_ДекларацииНаТовары КАК ВТ_ДекларацииНаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияДекларацийНаТовары КАК СведенияДекларацийНаТовары
	|		ПО ВТ_ДекларацииНаТовары.Организация = СведенияДекларацийНаТовары.Организация
	|			И ВТ_ДекларацииНаТовары.РегистрационныйНомер = СведенияДекларацийНаТовары.РегистрационныйНомер
	|ГДЕ
	|	(СведенияДекларацийНаТовары.РегистрационныйНомер ЕСТЬ NULL
	|			ИЛИ ВТ_ДекларацииНаТовары.ОбщаяСтоимость <> СведенияДекларацийНаТовары.ОбщаяСтоимость
	|			ИЛИ ВТ_ДекларацииНаТовары.ДатаРешения <> СведенияДекларацийНаТовары.ДатаРешения
	|			ИЛИ ВТ_ДекларацииНаТовары.ВсегоТоваровМест <> СведенияДекларацийНаТовары.ВсегоТоваровМест
	|			ИЛИ ВТ_ДекларацииНаТовары.Отправитель <> СведенияДекларацийНаТовары.Отправитель
	|			ИЛИ ВТ_ДекларацииНаТовары.Получатель <> СведенияДекларацийНаТовары.Получатель
	|			ИЛИ ВТ_ДекларацииНаТовары.СтранаОтправления <> СведенияДекларацийНаТовары.СтранаОтправления
	|			ИЛИ ВТ_ДекларацииНаТовары.СтранаНазначения <> СведенияДекларацийНаТовары.СтранаНазначения)";
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		ОбщегоНазначенияБП.ЗаписатьДанныеВХранилище(Организация, ТекущаяДатаСеанса(), "ДатаЗагрузкиСведенийИзЛКФТС");
		Возврат;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	
	НачатьТранзакцию();
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.СведенияДекларацийНаТовары");
	ЭлементБлокировки.УстановитьЗначение("Организация", Организация);
	Блокировка.Заблокировать();

	Попытка

		Пока Выборка.Следующий() Цикл

			СведенияДекларацийНаТовары = РегистрыСведений.СведенияДекларацийНаТовары.СоздатьМенеджерЗаписи();
			ЗаполнитьЗначенияСвойств(СведенияДекларацийНаТовары, Выборка);
			ЗаполнитьСтоимостьВРублях(СведенияДекларацийНаТовары);
			СведенияДекларацийНаТовары.Записать(Истина);
				

		КонецЦикла;
		
		ОбщегоНазначенияБП.ЗаписатьДанныеВХранилище(Организация, ТекущаяДатаСеанса(), "ДатаЗагрузкиСведенийИзЛКФТС");
		ЗафиксироватьТранзакцию();
	
	Исключение
	
		ОтменитьТранзакцию();

	КонецПопытки;
	
КонецПроцедуры

// Преобразует строковое представление налоговой базы в число и записывает в ресурс "ОбщаяСтоимостьЧисло"
Процедура ЗаполнитьСтоимостьВРублях(СведенияДекларацийНаТовары)
	
	СтоимостьСтрока = СведенияДекларацийНаТовары.ОбщаяСтоимость;
	СтоимостьСтрока = СтрЗаменить(СтоимостьСтрока, " RUB", "");
	СведенияДекларацийНаТовары.ОбщаяСтоимостьЧисло = Число(СтоимостьСтрока);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
