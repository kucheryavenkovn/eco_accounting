#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЭтоАвторизованныйПользователь(Пользователь)";
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПереименоватьМобильныеПриложения(Идентификатор, Имя) Экспорт
	
	НачатьТранзакцию();
	Попытка
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ИсходныеДанныеЗаданийРаспознаваниеДокументов.ИдентификаторФайла КАК ИдентификаторФайла
			|ИЗ
			|	РегистрСведений.ИсходныеДанныеЗаданийРаспознаваниеДокументов КАК ИсходныеДанныеЗаданийРаспознаваниеДокументов
			|ГДЕ
			|	ИсходныеДанныеЗаданийРаспознаваниеДокументов.ИдентификаторКлиента = &ИдентификаторКлиента";
		
		Запрос.УстановитьПараметр("ИдентификаторКлиента", Идентификатор);
		
		РезультатЗапроса = Запрос.Выполнить();
		Выборка = РезультатЗапроса.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			Менеджер = РегистрыСведений.ИсходныеДанныеЗаданийРаспознаваниеДокументов.СоздатьМенеджерЗаписи();
			Менеджер.ИдентификаторФайла = Выборка.ИдентификаторФайла;
			Менеджер.Прочитать();
			
			Менеджер.Отправитель = Имя;
			Менеджер.Записать(Истина);
			
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
	КонецПопытки;
	
КонецПроцедуры

Процедура ИзменитьОтветственного(РаспознанныйДокумент) Экспорт
	
	НачатьТранзакцию();
	Попытка
		
		Запрос = Новый Запрос;
		Запрос.Текст =
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ИсходныеДанныеЗаданийРаспознаваниеДокументов.ИдентификаторФайла КАК ИдентификаторФайла,
			|	ИсходныеДанныеЗаданийРаспознаваниеДокументов.ИдентификаторЗадания КАК ИдентификаторЗадания
			|ИЗ
			|	РегистрСведений.РезультатыОбработкиЗаданийРаспознаваниеДокументов КАК РезультатыОбработкиЗаданийРаспознаваниеДокументов
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ИсходныеДанныеЗаданийРаспознаваниеДокументов КАК ИсходныеДанныеЗаданийРаспознаваниеДокументов
			|		ПО РезультатыОбработкиЗаданийРаспознаваниеДокументов.ИдентификаторФайла = ИсходныеДанныеЗаданийРаспознаваниеДокументов.ИдентификаторФайла
			|ГДЕ
			|	РезультатыОбработкиЗаданийРаспознаваниеДокументов.ИдентификаторРезультата = &ИдентификаторРезультата";
		
		Запрос.УстановитьПараметр("ИдентификаторРезультата", РаспознанныйДокумент.ИдентификаторРезультата);
		
		РезультатЗапроса = Запрос.Выполнить();
		Выборка = РезультатЗапроса.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			Менеджер = РегистрыСведений.ИсходныеДанныеЗаданийРаспознаваниеДокументов.СоздатьМенеджерЗаписи();
			Менеджер.ИдентификаторФайла = Выборка.ИдентификаторФайла;
			Менеджер.Прочитать();
			
			Менеджер.Пользователь = РаспознанныйДокумент.Ответственный;
			Менеджер.Записать(Истина);
			
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
	КонецПопытки;
	
КонецПроцедуры

Функция ПолучитьПользователяПоИдЗадания(ИдентификаторЗадания) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ИсходныеДанныеЗаданийРаспознаваниеДокументов.Пользователь КАК Пользователь
		|ИЗ
		|	РегистрСведений.ИсходныеДанныеЗаданийРаспознаваниеДокументов КАК ИсходныеДанныеЗаданийРаспознаваниеДокументов
		|ГДЕ
		|	ИсходныеДанныеЗаданийРаспознаваниеДокументов.ИдентификаторЗадания = &ИдентификаторЗадания";
	
	Запрос.УстановитьПараметр("ИдентификаторЗадания", ИдентификаторЗадания);
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Пользователь;
	КонецЕсли;
	
	Возврат Справочники.Пользователи.ПустаяСсылка();
	
КонецФункции

Функция ПолучитьМобильноеПриложениеПоИдЗадания(ИдентификаторЗадания) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ИсходныеДанныеЗаданийРаспознаваниеДокументов.МобильноеПриложение КАК МобильноеПриложение
		|ИЗ
		|	РегистрСведений.ИсходныеДанныеЗаданийРаспознаваниеДокументов КАК ИсходныеДанныеЗаданийРаспознаваниеДокументов
		|ГДЕ
		|	ИсходныеДанныеЗаданийРаспознаваниеДокументов.ИдентификаторЗадания = &ИдентификаторЗадания";
	
	Запрос.УстановитьПараметр("ИдентификаторЗадания", ИдентификаторЗадания);
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.МобильноеПриложение;
	КонецЕсли;
	
	Возврат Справочники.Пользователи.ПустаяСсылка();
	
КонецФункции

Функция ПолучитьРезультатыОбработкиПоИдЗадания(ИдентификаторЗадания) Экспорт
	
	ИменаФайлов = Новый Массив;
	ФайлыДокумента = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИсходныеДанныеЗаданийРаспознаваниеДокументов.ИдентификаторФайла КАК ИдентификаторФайла,
		|	ИсходныеДанныеЗаданийРаспознаваниеДокументов.ИмяФайла КАК ИмяФайла
		|ИЗ
		|	РегистрСведений.ИсходныеДанныеЗаданийРаспознаваниеДокументов КАК ИсходныеДанныеЗаданийРаспознаваниеДокументов
		|ГДЕ
		|	ИсходныеДанныеЗаданийРаспознаваниеДокументов.ИдентификаторЗадания = &ИдентификаторЗадания";
	
	Запрос.УстановитьПараметр("ИдентификаторЗадания", ИдентификаторЗадания);
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ИменаФайлов.Добавить(Выборка.ИмяФайла);
		ФайлыДокумента.Добавить(Выборка.ИдентификаторФайла);
		
	КонецЦикла;
	
	РезультатыОбработки = Новый Структура;
	РезультатыОбработки.Вставить("ИдентификаторРезультата", ИдентификаторЗадания);
	РезультатыОбработки.Вставить("ИменаФайлов", СтрСоединить(ИменаФайлов, ", "));
	РезультатыОбработки.Вставить("ФайлыДокумента", ФайлыДокумента);
	
	Возврат РезультатыОбработки;
	
КонецФункции

Функция ПолучитьЕдинственныйИсходныйФайлИзображения(ИдентификаторЗадания) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИсходныеДанныеЗаданийРаспознаваниеДокументов.ИдентификаторФайла КАК ИдентификаторФайла,
		|	ИсходныеДанныеЗаданийРаспознаваниеДокументов.ИсходныйФайл КАК ИсходныйФайл,
		|	ИсходныеДанныеЗаданийРаспознаваниеДокументов.ИмяФайла КАК ИмяФайла
		|ИЗ
		|	РегистрСведений.ИсходныеДанныеЗаданийРаспознаваниеДокументов КАК ИсходныеДанныеЗаданийРаспознаваниеДокументов
		|ГДЕ
		|	ИсходныеДанныеЗаданийРаспознаваниеДокументов.ИдентификаторЗадания = &ИдентификаторЗадания";
	
	Запрос.УстановитьПараметр("ИдентификаторЗадания", ИдентификаторЗадания);
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Количество() = 1 Тогда
		Выборка.Следующий();
		
		Если ЭтоФайлИзображения(Выборка.ИмяФайла) Тогда
			Возврат Выборка.ИсходныйФайл.Получить();
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

Функция ЭтоФайлИзображения(ИмяФайла)
	
	ФайлИнфо = Новый Файл(ИмяФайла);
	Возврат ЭтоРасширениеИзображения(ФайлИнфо.Расширение);
	
КонецФункции

Функция ЭтоРасширениеИзображения(Знач Расширение)
	
	Расширение = НРег(Расширение);
	Возврат Расширение = ".jpg"
		Или Расширение = ".jpeg"
		Или Расширение = ".png";
	
КонецФункции

Процедура УдалитьЗаписиПоИдФайлов(ИдентификаторыФайлов) Экспорт
	
	Для Каждого ИдентификаторыФайла Из ИдентификаторыФайлов Цикл
		Набор = РегистрыСведений.ИсходныеДанныеЗаданийРаспознаваниеДокументов.СоздатьНаборЗаписей();
		Набор.Отбор.ИдентификаторФайла.Установить(ИдентификаторыФайла);
		Набор.Записать();
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
