#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)
	|	ИЛИ Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

// Заполняет регистр данными по умолчанию на дату начала использования регистра - 2013-01-01.
//
// Параметры:
//  СтатьяЗатрат - СправочникСсылка.СтатьяЗатрат - статья затрат для отражения сумм расходов
//
Процедура ЗаполнитьПоУмолчанию(СтатьяЗатрат) Экспорт

	Если ПланыОбмена.ГлавныйУзел() <> Неопределено Тогда // В подчиненных узлах РИБ не выполняется
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(СтатьяЗатрат) Тогда
		Возврат;
	КонецЕсли;
	
	ДатаНачалаИспользованияРегистра = '2013-01-01';
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Настройки.ВидНалога КАК ВидНалога
	|ПОМЕСТИТЬ Настройки
	|ИЗ
	|	РегистрСведений.СпособыОтраженияРасходовПоНалогам КАК Настройки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВидыИмущественныхНалогов.Ссылка КАК ВидНалога
	|ИЗ
	|	Перечисление.ВидыИмущественныхНалогов КАК ВидыИмущественныхНалогов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Настройки КАК Настройки
	|		ПО Настройки.ВидНалога = ВидыИмущественныхНалогов.Ссылка
	|ГДЕ
	|	Настройки.ВидНалога ЕСТЬ NULL";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	НаборЗаписей = РегистрыСведений.СпособыОтраженияРасходовПоНалогам.СоздатьНаборЗаписей();
	
	АналитикаЗатрат = Новый Соответствие;
	АналитикаЗатрат.Вставить(
		Тип("ПланСчетовСсылка.Хозрасчетный"),
		ПланыСчетов.Хозрасчетный.ОбщехозяйственныеРасходы);
	АналитикаЗатрат.Вставить(
		ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат,
		СтатьяЗатрат);
	
	АналитикаЗатратДляЗаписи      = УчетЗатрат.АналитикаЗатратДляЗаписи(АналитикаЗатрат);
	АналитикаЗатратНомераСубконто = УчетЗатрат.АналитикаЗатратНомераСубконто(АналитикаЗатратДляЗаписи);
	АналитикаЗатратНомераСубконто.Вставить("ОтражениеВУСН", Перечисления.ОтражениеВУСН.Принимаются);
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Запись = НаборЗаписей.Добавить();
		Запись.Период     = ДатаНачалаИспользованияРегистра;
		Запись.ВидНалога  = Выборка.ВидНалога;
		
		Запись.СчетЗатрат = АналитикаЗатратНомераСубконто.Счет;
		Если АналитикаЗатратНомераСубконто.Свойство("Подразделение") Тогда
			Запись.ПодразделениеЗатрат = АналитикаЗатратНомераСубконто.Подразделение;
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(Запись, АналитикаЗатратНомераСубконто); // Значения Субконто, ОтражениеВУСН
		
	КонецЦикла;
		
	Попытка
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(НаборЗаписей, Истина, Истина);
	Исключение
		ШаблонСообщения = НСтр("ru = 'Не удалось создать записи по способам отражения расходов по имущественным налогам
                                |%1'", Метаданные.ОсновнойЯзык.КодЯзыка);
		ТекстСообщения = СтрШаблон(ШаблонСообщения, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		ЗаписьЖурналаРегистрации(
			ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), 
			УровеньЖурналаРегистрации.Ошибка,
			Метаданные.РегистрыСведений.СпособыОтраженияРасходовПоНалогам,
			, // Данные
			ТекстСообщения);
		ВызватьИсключение;
	КонецПопытки;
		
КонецПроцедуры

// Определяет наиболее частотную статью затрат, используемую в настройке.
// 
// Возвращаемое значение:
//  СправочникСсылка.СтатьяЗатрат
//
Функция ОсновнаяСтатьяЗатрат() Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА ВидСубконтоСтатьяЗатрат.НомерСтроки = 1
	|				ТОГДА Настройки.Субконто1
	|			КОГДА ВидСубконтоСтатьяЗатрат.НомерСтроки = 2
	|				ТОГДА Настройки.Субконто2
	|			КОГДА ВидСубконтоСтатьяЗатрат.НомерСтроки = 3
	|				ТОГДА Настройки.Субконто3
	|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка)
	|		КОНЕЦ КАК Справочник.СтатьиЗатрат) КАК СтатьяЗатрат,
	|	КОЛИЧЕСТВО(*) КАК КоличествоЗаписей
	|ИЗ
	|	РегистрСведений.СпособыОтраженияРасходовПоНалогам КАК Настройки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ВидСубконтоСтатьяЗатрат
	|		ПО Настройки.СчетЗатрат = ВидСубконтоСтатьяЗатрат.Ссылка
	|ГДЕ
	|	ВидСубконтоСтатьяЗатрат.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат)
	|	И (ВЫРАЗИТЬ(ВЫБОР
	|				КОГДА ВидСубконтоСтатьяЗатрат.НомерСтроки = 1
	|					ТОГДА Настройки.Субконто1
	|				КОГДА ВидСубконтоСтатьяЗатрат.НомерСтроки = 2
	|					ТОГДА Настройки.Субконто2
	|				КОГДА ВидСубконтоСтатьяЗатрат.НомерСтроки = 3
	|					ТОГДА Настройки.Субконто3
	|				ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка)
	|			КОНЕЦ КАК Справочник.СтатьиЗатрат)) <> ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА ВидСубконтоСтатьяЗатрат.НомерСтроки = 1
	|				ТОГДА Настройки.Субконто1
	|			КОГДА ВидСубконтоСтатьяЗатрат.НомерСтроки = 2
	|				ТОГДА Настройки.Субконто2
	|			КОГДА ВидСубконтоСтатьяЗатрат.НомерСтроки = 3
	|				ТОГДА Настройки.Субконто3
	|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка)
	|		КОНЕЦ КАК Справочник.СтатьиЗатрат)
	|
	|УПОРЯДОЧИТЬ ПО
	|	КоличествоЗаписей УБЫВ";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.СтатьяЗатрат;
	Иначе
		Возврат Справочники.СтатьиЗатрат.ПустаяСсылка();
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#КонецЕсли
