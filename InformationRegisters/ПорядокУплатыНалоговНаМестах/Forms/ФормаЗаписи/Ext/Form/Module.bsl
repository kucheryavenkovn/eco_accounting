#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Ключ.Пустой() Тогда
		Запись.Период = НачалоГода(ОбщегоНазначения.ТекущаяДатаПользователя());
		Если Запись.Организация.Пустая() Тогда
			Запись.Организация = БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("ОсновнаяОрганизация");
		КонецЕсли;
		Если НЕ Запись.Организация.Пустая() Тогда
			Запись.РегистрацияВНалоговомОргане = 
				ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Запись.Организация, "РегистрацияВНалоговомОргане");
		КонецЕсли;		
	КонецЕсли;
	
	ЗаполнитьПараметрыНастройкиНалога();
	
	МестныеНалоги = РегистрыСведений.ПорядокУплатыНалоговНаМестах.НалогиПорядокКоторыхУстанавливаетсяНаМестах();
	
	СписокВыбораВидаНалога = Элементы.Налог.СписокВыбора;
	Для Каждого Налог Из МестныеНалоги Цикл
		СписокВыбораВидаНалога.Добавить(Налог);
	КонецЦикла;
	
	// Настроим список выбора - представления всех месяцев
	СписокВыбора = Элементы.СрокУплатыНалогаМесяцев.СписокВыбора;
	Для НомерМесяца = 0 По 11 Цикл
		УсловнаяДата = ДобавитьМесяц('20130101', НомерМесяца);
		ПредставлениеМесяца = СтрЗаменить(
			Формат(УсловнаяДата, "ДФ=dd@MMMM"),
			Формат(УсловнаяДата, "ДФ=dd@"),
			"");
		СписокВыбора.Добавить(НомерМесяца, ПредставлениеМесяца);
	КонецЦикла;
		
	Если Параметры.Ключ.Пустой() Тогда
		УстановитьСрокУплатыНалогаАвансов(ЭтаФорма);
	ИначеЕсли ВозможенПереносСроковУплатыАвансов Тогда
		ПрочитатьСрокиУплатыАвансов();
	КонецЕсли;
	
	УстановитьГоловнуюОрганизацию(ЭтаФорма);
	НастроитьСрокУплатыНалогаМесяцев(ЭтаФорма);
	НастроитьСрокУплатыАвансов(ЭтаФорма);
	ОбновитьОписаниеСрокаУплаты(ЭтаФорма);
	
	ВыборНалогаДоступен = Истина;
		
	Если Параметры.ЗначенияЗаполнения.Свойство("Налог")
	   И ЗначениеЗаполнено(Параметры.ЗначенияЗаполнения.Налог) Тогда
		ВыборНалогаДоступен = Ложь;
	КонецЕсли;
	
	Если Параметры.Свойство("ВыборНалогаДоступен") Тогда
		ВыборНалогаДоступен = Параметры.ВыборНалогаДоступен;
	КонецЕсли;
	
	ЭтаФорма.Элементы.Налог.Видимость = ВыборНалогаДоступен;
	Если НЕ ВыборНалогаДоступен Тогда
		
		ЭтаФорма.АвтоЗаголовок = Ложь;
		Код = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Запись.Налог, "Код");
		Если Код = "НалогНаИмущество" Тогда
			ЭтаФорма.Заголовок = НСтр("ru='Налог на имущество: порядок уплаты'");
		ИначеЕсли Код = "ТранспортныйНалог" Тогда
			ЭтаФорма.Заголовок = НСтр("ru='Транспортный налог: порядок уплаты'");
		ИначеЕсли Код = "ЗемельныйНалог" Тогда
			ЭтаФорма.Заголовок = НСтр("ru='Земельный налог: порядок уплаты'");
		КонецЕсли;
		
	КонецЕсли;
	
	ТекущийПериод = Запись.Период;
		
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)

	Если НЕ Отказ И НЕ ТекущийОбъект.Выбран() Тогда

		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Период",						Запись.Период);
		Запрос.УстановитьПараметр("Организация",				Запись.Организация);
		Запрос.УстановитьПараметр("Налог",						Запись.Налог);
		Запрос.УстановитьПараметр("РегистрацияВНалоговомОргане",Запись.РегистрацияВНалоговомОргане);

		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПорядокУплатыНалоговНаМестах.Период
		|ИЗ
		|	РегистрСведений.ПорядокУплатыНалоговНаМестах КАК ПорядокУплатыНалоговНаМестах
		|ГДЕ
		|	ПорядокУплатыНалоговНаМестах.Период = &Период
		|	И ПорядокУплатыНалоговНаМестах.Организация = &Организация
		|	И ПорядокУплатыНалоговНаМестах.Налог = &Налог
		|	И ПорядокУплатыНалоговНаМестах.РегистрацияВНалоговомОргане = &РегистрацияВНалоговомОргане";
		
		Результат = Запрос.Выполнить();
		Если Не Результат.Пустой() Тогда
			
			ТекстСообщения = НСтр("ru = 'На %1 в налоговом органе <%2> по виду налога <%3> уже есть запись в организации <%4>'");
			
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения,
				Формат(Запись.Период, "ДФ=dd.MM.yyyy"),
				СокрЛП(Запись.РегистрацияВНалоговомОргане),
				СокрЛП(Запись.Налог),
				СокрЛП(Запись.Организация));
				
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , , , Отказ);
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если НЕ Отказ И ВозможенПереносСроковУплатыАвансов Тогда
		ЗаполнитьСрокиАвансовПередЗаписью(ЭтотОбъект, ТекущийОбъект);
	ИначеЕсли НЕ Отказ Тогда
		ТекущийОбъект.СрокУплатыУстанавливаетсяДляКаждогоАванса = Ложь;
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если Не ЗначениеЗаполнено(Запись.Организация) Тогда
		ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(,, НСтр("ru = 'Организация'"));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "Запись.Организация", "", Отказ);
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Запись.Налог) Тогда
		ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(,, НСтр("ru = 'Вид налога'"));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "Запись.Налог", "", Отказ);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СрокУплатыНалогаДнейПриИзменении(Элемент)
	
	ПроверитьДопустимостьДаты();
	
	НастроитьСрокУплатыНалогаМесяцев(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура СрокУплатыНалогаМесяцевПриИзменении(Элемент)
	
	ПроверитьДопустимостьДаты();
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьДопустимостьДаты()
	
	Если Запись.СрокУплатыНалогаМесяцев > 0 И Запись.СрокУплатыНалогаДней <= 31 Тогда
		// Убедимся, что число не превышает количество дней в выбранном месяце.
		// Ориентируемся на високосный год.
		КоличествоДнейВМесяце = День(Дата(2000, Запись.СрокУплатыНалогаМесяцев + 2, 1) - 1);
		Если Запись.СрокУплатыНалогаДней > КоличествоДнейВМесяце Тогда
			Запись.СрокУплатыНалогаДней = КоличествоДнейВМесяце;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УплачиваютсяАвансыПриИзменении(Элемент)
	НастроитьСрокУплатыАвансов(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура СрокУплатыУстанавливаетсяДляКаждогоАвансаПриИзменении(Элемент)
	
	НастроитьСрокУплатыАвансов(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура СрокУплатыАвансаМесяцевПриИзменении(Элемент)
	ОбновитьОписаниеСрокаУплаты(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура СрокУплатыАвансаДнейПриИзменении(Элемент)
	ОбновитьОписаниеСрокаУплаты(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура НалогПриИзменении(Элемент)
	
	ЗаполнитьПараметрыНастройкиНалога();
	УстановитьСрокУплатыНалогаАвансов(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Запись.Организация) Тогда
		ОрганизацияПриИзмененииНаСервере();
		УстановитьСрокУплатыНалогаАвансов(ЭтаФорма);
	Иначе
		ПараметрыНастройкиНалога.Очистить();
		ГоловнаяОрганизация = Неопределено;
		Запись.РегистрацияВНалоговомОргане = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодПриИзменении(Элемент)
	
	Если Запись.Период = ТекущийПериод Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьПараметрыНастройкиНалога();
	
	УстановитьСрокУплатыНалогаАвансов(ЭтаФорма);
	
	ТекущийПериод = Запись.Период;
	
КонецПроцедуры

&НаКлиенте
Процедура РегистрацияВНалоговомОрганеПриИзменении(Элемент)
	
	УстановитьСрокУплатыНалогаАвансов(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОрганизацияПриИзмененииНаСервере()
	
	УстановитьГоловнуюОрганизацию(ЭтаФорма);
	
	Если ЗначениеЗаполнено(ГоловнаяОрганизация) Тогда
		Запись.РегистрацияВНалоговомОргане = 
			ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ГоловнаяОрганизация, "РегистрацияВНалоговомОргане");
	КонецЕсли;
	
	ЗаполнитьПараметрыНастройкиНалога();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Настройка формы

&НаКлиентеНаСервереБезКонтекста
Процедура НастроитьСрокУплатыНалогаМесяцев(Форма)
	
	Запись = Форма.Запись;
	
	ВыбиратьМесяц = (Запись.СрокУплатыНалогаДней <= 31);
	
	Если ВыбиратьМесяц И Запись.СрокУплатыНалогаМесяцев = -1 Тогда
		Запись.СрокУплатыНалогаМесяцев = 0;
	ИначеЕсли Не ВыбиратьМесяц Тогда
		Запись.СрокУплатыНалогаМесяцев = -1;
	КонецЕсли;
	
	СписокВыбора = Форма.Элементы.СрокУплатыНалогаМесяцев.СписокВыбора;
	ЭлементСписка = СписокВыбора.НайтиПоЗначению(-1);
	Если ЭлементСписка <> Неопределено Тогда
		СписокВыбора.Удалить(ЭлементСписка);
	КонецЕсли;
	
	Если Не ВыбиратьМесяц Тогда
		ТекстПолностью = СтроковыеФункцииКлиентСервер.ЧислоЦифрамиПредметИсчисленияПрописью(
			Запись.СрокУплатыНалогаДней,
			НСтр("ru = 'календарный день, календарных дня, календарных дней'"));
		ТолькоСлова = СокрЛП(Сред(ТекстПолностью, 1 + СтрДлина("" + Запись.СрокУплатыНалогаДней)));
		СписокВыбора.Вставить(0, -1, ТолькоСлова);
	КонецЕсли;
	
	Элемент = Форма.Элементы.СрокУплатыНалогаМесяцев;
	Элемент.ТолькоПросмотр = Не ВыбиратьМесяц;
	Элемент.КнопкаВыбора   = ВыбиратьМесяц;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура НастроитьСрокУплатыАвансов(Форма)
	
	Элементы = Форма.Элементы;
	Запись = Форма.Запись;
		
	Элементы.НадписьОбщийСрокУплатыАвансов.Видимость = Форма.ВозможенПереносСроковУплатыАвансов; 
	Элементы.СрокУплатыУстанавливаетсяДляКаждогоАванса.Видимость = Форма.ВозможенПереносСроковУплатыАвансов; 
	Элементы.ПереносСроковУплатыАвансов.Видимость = Форма.ВозможенПереносСроковУплатыАвансов; 
		
	Элементы.ОбычныйСрокУплатыАванса.Доступность = Запись.УплачиваютсяАвансы; 
	Элементы.СрокУплатыУстанавливаетсяДляКаждогоАванса.Доступность = Запись.УплачиваютсяАвансы; 
	Элементы.ПереносСроковУплатыАвансов.Доступность = Запись.УплачиваютсяАвансы И Запись.СрокУплатыУстанавливаетсяДляКаждогоАванса;
		
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьОписаниеСрокаУплаты(Форма)
	
	Запись = Форма.Запись;
	
	УсловнаяДата = '20130101';
	
	Дней = 24 * 60 * 60;
	
	СрокиУплаты = Новый Массив;
	Для НомерКвартала = 1 По 3 Цикл
		Дата = ДобавитьМесяц(УсловнаяДата, 3 * НомерКвартала + Запись.СрокУплатыАвансаМесяцев) + Дней * Запись.СрокУплатыАвансаДней - 1;
		СрокиУплаты.Добавить(Формат(Дата, "ДФ='dd MMMM'"));
	КонецЦикла;
	
	ПереченьСроков = СтрСоединить(СрокиУплаты, ", ");
	Форма.ОписаниеСрокаУплатыАванса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = '(%1)'"),
		ПереченьСроков);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьГоловнуюОрганизацию(Форма)
	
	Форма.ГоловнаяОрганизация = ОбщегоНазначенияБПВызовСервераПовтИсп.ГоловнаяОрганизация(Форма.Запись.Организация);
		
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПараметрыНастройкиНалога()
	
	ПараметрыНастройкиНалога.Очистить();
	
	ПорядокУплатыНефедеральныхНалогов = РегистрыСведений.ПорядокУплатыНалоговНаМестах.ПорядокУплатыРегиональныхМестныхНалогов(
										Запись.Организация, Запись.Период);
	
	Для Каждого ПорядокУплатыНалога Из ПорядокУплатыНефедеральныхНалогов Цикл
		ЗаполнитьЗначенияСвойств(ПараметрыНастройкиНалога.Добавить(), ПорядокУплатыНалога);
	КонецЦикла;
	
	ПериодПереносаСроков = РегистрыСведений.НастройкиПродленияСроковНалоговОтчетов.ПериодПереносаСроковНалоговОтчетов();
	ВозможенПереносСроковУплатыАвансов = (Запись.Период >= ПериодПереносаСроков.Начало И Запись.Период <= ПериодПереносаСроков.Окончание);
	
	Если ВозможенПереносСроковУплатыАвансов Тогда
		
		ИдентификаторЗадачи = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Запись.Налог, "Код");
		
		ОтборПравил = Справочники.ПравилаПредставленияОтчетовУплатыНалогов.ОтборПравилЗаполнения();
		ОтборПравил.Организация     = Запись.Организация;
		ОтборПравил.ИмяЗадачи       = ИдентификаторЗадачи; // ПараметрыНастройкиНалога перезаполняется при изменении вида налога
		ОтборПравил.Действие        = Перечисления.ВидыДействийКалендаряБухгалтера.УплатаНалога;
		ОтборПравил.НачалоИнтервала = ПериодПереносаСроков.Начало;
		ОтборПравил.КонецИнтервала  = ПериодПереносаСроков.Окончание;
				
		Если ИдентификаторЗадачи = "НалогНаИмущество" Тогда 
			ОтборПравил.Правила.Добавить("2013_Аванс");
		ИначеЕсли ИдентификаторЗадачи = "ТранспортныйНалог" Тогда	
			ОтборПравил.Правила.Добавить("2013_УплатаАванс");
		ИначеЕсли ИдентификаторЗадачи = "ЗемельныйНалог" Тогда	
			ОтборПравил.Правила.Добавить("2015_Аванс");
		КонецЕсли;	
				
		Расписание = РегистрыСведений.ЗадачиБухгалтера.РасписаниеПоНалогамОтчетамЗаПериод(ОтборПравил);

		Если ЗначениеЗаполнено(Расписание) Тогда
			
			Отбор = Новый Структура;
			Отбор.Вставить("Периодичность", Перечисления.Периодичность.Квартал);
			
			Для Каждого ПорядокУплатыНалога Из ПараметрыНастройкиНалога Цикл
				
				Отбор.Вставить("РегистрацияВНалоговомОргане", ПорядокУплатыНалога.РегистрацияВНалоговомОргане);
								
				// Аванс за 1 квартал
				Отбор.Вставить("ПериодСобытия", Дата(Год(Запись.Период), 3, 31));
				
				Результат = Расписание.НайтиСтроки(Отбор);
				Если Результат.Количество() > 0 Тогда
					ПорядокУплатыНалога.СрокУплатыАванса1Кв = Результат[0].Срок;
				КонецЕсли;	
				
				// Аванс за 2 квартал
				Отбор.Вставить("ПериодСобытия", Дата(Год(Запись.Период), 6, 30));
				
				Результат = Расписание.НайтиСтроки(Отбор);
				Если Результат.Количество() > 0 Тогда
					ПорядокУплатыНалога.СрокУплатыАванса2Кв = Результат[0].Срок;
				КонецЕсли;	
				
				// Аванс за 3 квартал
				Отбор.Вставить("ПериодСобытия", Дата(Год(Запись.Период), 9, 30));
				
				Результат = Расписание.НайтиСтроки(Отбор);
				Если Результат.Количество() > 0 Тогда
					ПорядокУплатыНалога.СрокУплатыАванса3Кв = Результат[0].Срок;
				КонецЕсли;	
				
			КонецЦикла;	
			
		КонецЕсли;
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьСрокУплатыНалогаАвансов(Форма)
	
	Запись = Форма.Запись;
	
	Если Запись.СрокУплатыНалогаДней = 0 
	   И Запись.СрокУплатыНалогаМесяцев = 0
	   И Запись.СрокУплатыАвансаДней = 0
	   И Запись.СрокУплатыАвансаМесяцев = 0 Тогда

		Отбор = Новый Структура("Налог, РегистрацияВНалоговомОргане", Запись.Налог, Запись.РегистрацияВНалоговомОргане);
		МассивСтрок = Форма.ПараметрыНастройкиНалога.НайтиСтроки(Отбор);
		Для Каждого ПараметрНастройки Из МассивСтрок Цикл
			ЗаполнитьЗначенияСвойств(Запись, ПараметрНастройки, ,"Налог");
		КонецЦикла;
		
		ОбновитьОписаниеСрокаУплаты(Форма);
		
	КонецЕсли;
	
	Если Форма.ВозможенПереносСроковУплатыАвансов
	   И НЕ ЗначениеЗаполнено(Форма.СрокУплатыАванса1Кв) 
	   И НЕ ЗначениеЗаполнено(Форма.СрокУплатыАванса2Кв)
	   И НЕ ЗначениеЗаполнено(Форма.СрокУплатыАванса3Кв) Тогда

		Отбор = Новый Структура("Налог, РегистрацияВНалоговомОргане", Запись.Налог, Запись.РегистрацияВНалоговомОргане);
		МассивСтрок = Форма.ПараметрыНастройкиНалога.НайтиСтроки(Отбор);
		Для Каждого ПараметрНастройки Из МассивСтрок Цикл
			ЗаполнитьЗначенияСвойств(Форма, ПараметрНастройки, "СрокУплатыАванса1Кв, СрокУплатыАванса2Кв, СрокУплатыАванса3Кв");
		КонецЦикла;
				
	КонецЕсли;
	
	НастроитьСрокУплатыАвансов(Форма);
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьСрокиУплатыАвансов()
		
	СрокУплатыАванса1Кв = РегистрыСведений.ПорядокУплатыНалоговНаМестах.СрокУплатыАвансаЗаКвартал(Запись, 1);
	СрокУплатыАванса2Кв = РегистрыСведений.ПорядокУплатыНалоговНаМестах.СрокУплатыАвансаЗаКвартал(Запись, 2);
	СрокУплатыАванса3Кв = РегистрыСведений.ПорядокУплатыНалоговНаМестах.СрокУплатыАвансаЗаКвартал(Запись, 3);
		
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаполнитьСрокиАвансовПередЗаписью(Форма, Запись)
		
	РазложитьРазностьДатНаМесяцыИДни(Форма.СрокУплатыАванса1Кв, Дата(Год(Запись.Период), 3, 31), Запись.СрокУплатыАванса1КвМесяцев, Запись.СрокУплатыАванса1КвДней); 
	РазложитьРазностьДатНаМесяцыИДни(Форма.СрокУплатыАванса2Кв, Дата(Год(Запись.Период), 6, 30), Запись.СрокУплатыАванса2КвМесяцев, Запись.СрокУплатыАванса2КвДней); 
	РазложитьРазностьДатНаМесяцыИДни(Форма.СрокУплатыАванса3Кв, Дата(Год(Запись.Период), 9, 30), Запись.СрокУплатыАванса3КвМесяцев, Запись.СрокУплатыАванса3КвДней); 
		
КонецПроцедуры

&НаСервереБезКонтекста
Процедура РазложитьРазностьДатНаМесяцыИДни(Дата1, Дата2, СрокМесяцев, СрокДней)
	
	СрокМесяцев = Месяц(Дата1) - Месяц(Дата2) - 1; // сдвиг по месяцам приводит в конец месяца, предшествующего Дате 1 
	
	День = 24 * 60 * 60;
	
	Если СрокМесяцев <= 0 Тогда
		СрокДней = (Дата1 - Дата2) / День;
		Возврат;
	КонецЕсли;	
		
	СрокДней = (КонецДня(Дата1) - КонецМесяца(ДобавитьМесяц(Дата2, СрокМесяцев))) / День;
	
КонецПроцедуры

#КонецОбласти