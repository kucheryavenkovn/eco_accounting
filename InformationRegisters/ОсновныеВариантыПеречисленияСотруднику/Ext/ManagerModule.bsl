#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура УстановитьОсновнойВариантПеречисления(Организация, ФизическоеЛицо, ВидОперации, БанковскийСчет, НазначениеПлатежа = Неопределено) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Организация)
		ИЛИ НЕ ЗначениеЗаполнено(ФизическоеЛицо)
		ИЛИ НЕ ЗначениеЗаполнено(ВидОперации)
		ИЛИ НЕ ЗначениеЗаполнено(БанковскийСчет)
		Тогда
		Возврат;
	КонецЕсли;
	
	МенеджерЗаписи = РегистрыСведений.ОсновныеВариантыПеречисленияСотруднику.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Организация    = Организация;
	МенеджерЗаписи.ФизическоеЛицо = ФизическоеЛицо;
	МенеджерЗаписи.ВидОперации    = ВидОперации;
	МенеджерЗаписи.БанковскийСчет = БанковскийСчет;
	Если НазначениеПлатежа = Неопределено 
		ИЛИ НЕ ЗначениеЗаполнено(БанковскийСчет)
		ИЛИ БанковскийСчет.Владелец = ФизическоеЛицо Тогда
		МенеджерЗаписи.НазначениеПлатежа = "";
	Иначе
		
		НазначениеПлатежа = СтрПолучитьСтроку(НазначениеПлатежа,1);
		
		ПозицияВзыскано   = Найти(НазначениеПлатежа, "//ВЗС//");
		НазначениеПлатежа = ?(ПозицияВзыскано = 0, НазначениеПлатежа, Лев(НазначениеПлатежа, ПозицияВзыскано - 1));
		ПозицияСумма      = Найти(НазначениеПлатежа, "Сумма");
		НазначениеПлатежа = ?(ПозицияСумма = 0, НазначениеПлатежа, Лев(НазначениеПлатежа, ПозицияСумма - 1));
		
		МенеджерЗаписи.НазначениеПлатежа = НазначениеПлатежа;
		
	КонецЕсли;
	
	Если НЕ СчетАктуален(БанковскийСчет) Тогда
		МенеджерЗаписи.БанковскийСчет = Неопределено;
	КонецЕсли;
	
	МенеджерЗаписи.Записать();
	
КонецПроцедуры

Функция ПолучитьНазначенияПлатежа(Организация, ФизическоеЛицо, ВидОперации, БанковскийСчет) Экспорт
	
	МенеджерЗаписи = РегистрыСведений.ОсновныеВариантыПеречисленияСотруднику.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Организация    = Организация;
	МенеджерЗаписи.ФизическоеЛицо = ФизическоеЛицо;
	МенеджерЗаписи.ВидОперации    = ВидОперации;
	МенеджерЗаписи.БанковскийСчет = БанковскийСчет;
	МенеджерЗаписи.Прочитать();
	
	Возврат МенеджерЗаписи.НазначениеПлатежа;
	
КонецФункции

Функция ПолучитьОсновнойВариантПеречисления(Реквизиты) Экспорт
	
	МенеджерЗаписи = РегистрыСведений.ОсновныеВариантыПеречисленияСотруднику.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Организация    = Реквизиты.Организация;
	МенеджерЗаписи.ФизическоеЛицо = Реквизиты.ФизическоеЛицо;
	МенеджерЗаписи.ВидОперации    = Реквизиты.ВидОперации;
	Если Реквизиты.БанковскийСчет <> Неопределено Тогда
		МенеджерЗаписи.БанковскийСчет = Реквизиты.БанковскийСчет;
	КонецЕсли;
	
	МенеджерЗаписи.Прочитать();
	ЗаполнитьЗначенияСвойств(Реквизиты, МенеджерЗаписи);
	
	Если НЕ СчетАктуален(Реквизиты.БанковскийСчет) Тогда
		Реквизиты.БанковскийСчет = Неопределено;
	КонецЕсли;
	
	Возврат Реквизиты;
	
КонецФункции

Функция СчетАктуален(БанковскийСчет)
	
	СчетАктуален = Истина;
	Если ЗначениеЗаполнено(БанковскийСчет) Тогда
		Если ТипЗнч(БанковскийСчет) = Тип("СправочникСсылка.БанковскиеСчета") Тогда
			ПараметрыСчета = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(БанковскийСчет, "ДатаЗакрытия, ПометкаУдаления");
			Если ЗначениеЗаполнено(ПараметрыСчета.ДатаЗакрытия) или ПараметрыСчета.ПометкаУдаления Тогда
				СчетАктуален = Ложь;
			КонецЕсли;
		Иначе
			ПараметрыСчета = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(БанковскийСчет, "ПометкаУдаления");
			Если ПараметрыСчета.ПометкаУдаления Тогда
				СчетАктуален = Ложь;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Возврат СчетАктуален;
	
КонецФункции


#КонецОбласти

#КонецЕсли