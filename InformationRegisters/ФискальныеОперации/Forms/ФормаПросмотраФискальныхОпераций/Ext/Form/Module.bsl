#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Перем ДокументОснование;
	
	Если Параметры.Свойство("Отбор") 
		И Параметры.Отбор.Свойство("ДокументОснование", ДокументОснование) Тогда
		
		АктивироватьПоследнююОперацию(ДокументОснование);
		
		Параметры.Отбор.Удалить("ДокументОснование");
		
		Элементы.ДокументОснование.Видимость = Ложь;
		Элементы.ФормаЧекКоррекции.Видимость = Ложь;
	Иначе
		ОбщегоНазначенияБПВызовСервера.УстановитьОтборПоОсновнойОрганизации(ЭтаФорма);
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список, "ДокументОснование", ДокументОснование, ВидСравненияКомпоновкиДанных.Равно,,
		ЗначениеЗаполнено(ДокументОснование), РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ);
	
		
	Если Параметры.Свойство("РежимВыбора") Тогда
		Элементы.Список.РежимВыбора = Параметры.РежимВыбора;
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ИзменениеОсновнойОрганизации" Тогда
	
		ОбщегоНазначенияБПКлиент.ИзменитьОтборПоОсновнойОрганизации(Список, ,Параметр);
	
	КонецЕсли; 
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийСписка

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	ПодключитьОбработчикОжидания("Подключаемый_ПоказатьЧек", 0.5, Истина);
КонецПроцедуры

&НаСервере
Процедура СписокПриЗагрузкеПользовательскихНастроекНаСервере(Элемент, Настройки, ИспользуютсяСтандартныеНастройки)
	ОбщегоНазначенияБП.ВосстановитьОтборСписка(Список, Настройки, "Организация");
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЧекКоррекции(Команда)
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("НапечататьЧекЗавершение", ЭтотОбъект);
	
	ПараметрыФормы = Новый Структура("ПоказатьБаннерЧекКоррекции, Ключ", Истина, ТекущиеДанные.ДокументОснование);
	
	ОткрытьФорму(ИмяФормыДокумента(ТекущиеДанные.ДокументОснование), ПараметрыФормы,ЭтотОбъект,,,,ОписаниеОповещения);
КонецПроцедуры

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция ИмяФормыДокумента(ДокументСсылка)
	МетаданныеДокумента = Метаданные.НайтиПоТипу(ТипЗнч(ДокументСсылка));
	
	Возврат МетаданныеДокумента.ОсновнаяФормаОбъекта.ПолноеИмя();
КонецФункции
 

&НаКлиенте
Процедура Подключаемый_ПоказатьЧек() Экспорт
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	ТекстЧека = ТекстФискальнойОперации(ТекущиеДанные.ДокументОснование, ТекущиеДанные.ИдентификаторЗаписи);
	
	Если ЗначениеЗаполнено(ТекстЧека) Тогда
		ПредварительныйПросмотрЧека.УстановитьТекст(ТекстЧека);
	Иначе
		ПредварительныйПросмотрЧека.УстановитьТекст("");
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура НапечататьЧекЗавершение(Значение, ДополнительныеПараметры) Экспорт
	Элементы.Список.Обновить();
КонецПроцедуры

&НаСервере
Процедура АктивироватьПоследнююОперацию(ДокументОснованиеФискальнойОперации)
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснованиеФискальнойОперации);
	
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ФискальныеОперации.ДокументОснование КАК ДокументОснование,
	|	ФискальныеОперации.ИдентификаторЗаписи КАК ИдентификаторЗаписи
	|ИЗ
	|	РегистрСведений.ФискальныеОперации КАК ФискальныеОперации
	|ГДЕ
	|	ФискальныеОперации.ДокументОснование = &ДокументОснование
	|	И (ФискальныеОперации.ТипРасчета = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетаДенежнымиСредствами.ПриходДенежныхСредств)
	|			ИЛИ ФискальныеОперации.ТипРасчета = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетаДенежнымиСредствами.РасходДенежныхСредств))
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФискальныеОперации.Дата УБЫВ";
	
	ТаблицаРезультата = Запрос.Выполнить().Выгрузить();
	Если ТаблицаРезультата.Количество() > 0 Тогда
		КлючЗаписи = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(ТаблицаРезультата[0]);
		Элементы.Список.ТекущаяСтрока = РегистрыСведений.ФискальныеОперации.СоздатьКлючЗаписи(КлючЗаписи);
	КонецЕсли; 
КонецПроцедуры

&НаСервереБезКонтекста
Функция ТекстФискальнойОперации(ДокументОснование, ИдентификаторЗаписи)

	Реквизиты = МенеджерОборудованияВызовСервера.ДанныеФискальнойОперации(ДокументОснование, ИдентификаторЗаписи);
	Если Реквизиты <> Неопределено Тогда
		ТекстСообщенияXML = Реквизиты.ДанныеXML.Получить();
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекстСообщенияXML) 
		И (Реквизиты.ТипДокумента = Перечисления.ТипыФискальныхДокументовККТ.КассовыйЧек 
		Или Реквизиты.ТипДокумента = Перечисления.ТипыФискальныхДокументовККТ.КассовыйЧекКоррекции)
	Тогда
	
		ОбщиеПараметры = МенеджерОборудованияВызовСервера.ЗагрузитьДанныеФискализацииИзXML(ТекстСообщенияXML);
		
		Возврат МенеджерОборудованияКлиентСервер.СформироватьТекстНефискальногоДокумента(0, ОбщиеПараметры, 46);
	Иначе
		
		Возврат Неопределено;
	КонецЕсли;
КонецФункции 

#КонецОбласти 


 