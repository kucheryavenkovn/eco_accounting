#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Переносы строк для удобства чтения при разработке. Перед выводом удаляются
	ШаблонПодсказки = НСтр("ru = 'Сотрудники, не имеющие доступа в %1, могут получить коды доступа для использования
                            |<a href=''%2''>мобильного приложения 1С:БизнесСтарт. Сканер чеков</a>'");
	
	Команда = СтрШаблон(
		"e1cib/command/ОбщаяКоманда.%1",
		Метаданные.ОбщиеКоманды.УстановкаМобильногоПриложенияСканированиеЧеков.Имя);
		
	ШаблонПодсказки = СтрЗаменить(ШаблонПодсказки, Символы.ПС, " ");
		
	Элементы.Доступ.РасширеннаяПодсказка.Заголовок = СтроковыеФункции.ФорматированнаяСтрока(
		ШаблонПодсказки,
		ОбщегоНазначенияБП.ПредставлениеПрограммыВинительныйПадеж(),
		Команда);
	
	Запрос = Новый Запрос;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Доступ.Пользователь КАК Пользователь,
	|	ЕСТЬNULL(ФизическиеЛица.Ссылка, Пользователи.ФизическоеЛицо) КАК Сотрудник,
	|	ВЫБОР
	|		КОГДА НЕ ФизическиеЛица.ФИО ЕСТЬ NULL
	|			ТОГДА ФизическиеЛица.ФИО
	|		КОГДА НЕ Пользователи.ФизическоеЛицо.ФИО ЕСТЬ NULL
	|			ТОГДА Пользователи.ФизическоеЛицо.ФИО
	|		ИНАЧЕ ПРЕДСТАВЛЕНИЕ(Доступ.Пользователь)
	|	КОНЕЦ КАК Представление
	|ИЗ
	|	РегистрСведений.МобильноеПриложениеСканированиеЧеков КАК Доступ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Пользователи КАК Пользователи
	|		ПО Доступ.Пользователь = Пользователи.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
	|		ПО Доступ.Пользователь = ФизическиеЛица.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Представление,
	|	Пользователь";
	
	Доступ.Загрузить(Запрос.Выполнить().Выгрузить());
	Для Каждого Запись Из Доступ Цикл
		Запись.КодДоступа = Новый УникальныйИдентификатор;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДоступ

&НаКлиенте
Процедура ДоступВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ПоказатьКодДоступа();
	
КонецПроцедуры

&НаКлиенте
Процедура ДоступПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
	ПараметрыПодбора = Новый Структура;
	ПараметрыПодбора.Вставить("РежимВыбора",                       Истина);
	ПараметрыПодбора.Вставить("МножественныйВыбор",                Истина);
	ПараметрыПодбора.Вставить("ЗакрыватьПриВыборе",                Ложь);
	ПараметрыПодбора.Вставить("АдресСпискаПодобранныхСотрудников", АдресФизическиеЛица());
	
	ОткрытьФорму(
		"Справочник.ФизическиеЛица.ФормаВыбора",
		ПараметрыПодбора,
		Элементы.Доступ,
		, // Уникальность
		, // Окно
		, // НавигационнаяСсылка
		, // ОписаниеОповещенияОЗакрытии
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
	// По окончании подбора будет вызвана ДоступОбработкаВыбора
	
КонецПроцедуры

&НаКлиенте
Процедура ДоступПередУдалением(Элемент, Отказ)
	
	ДанныеСтроки = Элементы.Доступ.ТекущиеДанные;
	Если ДанныеСтроки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Отказ = Истина;
	
	ОбработкаОтветаУдалениеДоступа = Новый ОписаниеОповещения(
		"ОбработкаОтветаУдалениеДоступа",
		ЭтотОбъект,
		Элементы.Доступ.ТекущаяСтрока);
			
	ПоказатьВопрос(
		ОбработкаОтветаУдалениеДоступа,
		НСтр("ru = 'Удалить код доступа?'"),
		РежимДиалогаВопрос.ДаНет,
		0,
		КодВозвратаДиалога.Нет,
		"");
		
КонецПроцедуры

&НаКлиенте
Процедура ДоступОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущаяСтрока = ДобавитьФизическихЛиц(ВыбранноеЗначение);
	Если ТекущаяСтрока <> Неопределено
		И Элементы.Доступ.ПроверитьСтроку(ТекущаяСтрока) Тогда
		Элементы.Доступ.ТекущаяСтрока = ТекущаяСтрока;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПоказатьКодДоступа()
	
	ДанныеСтроки = Элементы.Доступ.ТекущиеДанные;
	Если ДанныеСтроки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Пользователь", ДанныеСтроки.Пользователь);
	
	ОткрытьФорму(
		"РегистрСведений.МобильноеПриложениеСканированиеЧеков.Форма.КодДоступа",
		ПараметрыФормы,
		ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Функция АдресФизическиеЛица()
	
	Возврат ПоместитьВоВременноеХранилище(ОбщегоНазначения.ВыгрузитьКолонку(Доступ, "Сотрудник"));
	// Значение будет удалено из временного хранилища по окончании серверного вызова,
	// в ходе которого создается открываемая форма
	
КонецФункции

&НаСервере
Функция ДобавитьФизическихЛиц(ВыбранныеЛица)
	
	ТекущаяСтрока = Неопределено;
	
	ПоискСотрудников = Новый Соответствие;
	Для Каждого Запись Из Доступ Цикл
		Если Не ЗначениеЗаполнено(Запись.Сотрудник) Тогда
			Продолжить;
		КонецЕсли;
		ПоискСотрудников.Вставить(Запись.Сотрудник, Истина);
	КонецЦикла;
	
	Для Каждого ФизическоеЛицо Из ВыбранныеЛица Цикл
		
		Если ПоискСотрудников[ФизическоеЛицо] <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Если РегистрыСведений.МобильноеПриложениеСканированиеЧеков.КодДоступа(ФизическоеЛицо) = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ПоискСотрудников.Вставить(ФизическоеЛицо, Истина);
		
		Запись = Доступ.Добавить();
		Запись.Пользователь  = ФизическоеЛицо;
		Запись.Сотрудник     = ФизическоеЛицо;
		Запись.Представление = РегистрыСведений.МобильноеПриложениеСканированиеЧеков.ПредставлениеПользователя(ФизическоеЛицо);
		Запись.КодДоступа    = Новый УникальныйИдентификатор;
		
		ТекущаяСтрока = Запись.ПолучитьИдентификатор();
		
	КонецЦикла;
	
	Возврат ТекущаяСтрока;
	
КонецФункции

&НаКлиенте
Процедура ОбработкаОтветаУдалениеДоступа(РезультатВопроса, УдаляемаяСтрока) Экспорт // Обработчик оповещения
	
	Если РезультатВопроса <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеСтроки = Доступ.НайтиПоИдентификатору(УдаляемаяСтрока);
	
	Если Не УдалитьКодДоступа(ДанныеСтроки.Пользователь) Тогда
		Возврат;
	КонецЕсли;
	
	Доступ.Удалить(ДанныеСтроки);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция УдалитьКодДоступа(Пользователь)
	
	Возврат РегистрыСведений.МобильноеПриложениеСканированиеЧеков.УдалитьКодДоступа(Пользователь);
	
КонецФункции

#КонецОбласти


