<?xml version="1.0" encoding="UTF-8"?>
<Rights xmlns="http://v8.1c.ru/8.2/roles" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="Rights" version="2.11">
	<setForNewObjects>false</setForNewObjects>
	<setForAttributesByDefault>true</setForAttributesByDefault>
	<independentRightsOfChildObjects>false</independentRightsOfChildObjects>
	<object>
		<name>Catalog.ДополнительныеОтчетыИОбработки.TabularSection.Команды.Attribute.ПоказыватьОповещение</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДоговорыКонтрагентов.Attribute.ЗаРуководителяПоПриказу</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.АР_Счетчики</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Constant.ИспользоватьВалютныйУчет</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ФизическиеЛица.TabularSection.ДополнительныеРеквизиты</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ФизическиеЛица.TabularSection.КонтактнаяИнформация</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДополнительныеОтчетыИОбработки.TabularSection.Команды</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Constant.АР_НастройкаСроковОплаты</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДоговорыКонтрагентов.TabularSection.ДополнительныеРеквизиты.Attribute.Свойство</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДоговорыКонтрагентов.Attribute.РасчетыВУсловныхЕдиницах</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>AccumulationRegister.РеализацияУслуг</name>
		<right>
			<name>Read</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>// ОсновноеУсловиеЧтение
// Можно читать если есть доступ к (по или)
// Организации
#ПоЗначениям("РегистрНакопления.РеализацияУслуг", "Чтение", "",
"Организации", "Организация",
"","",
"","",
"","",
"","","","","","","","",
"","","","","","","","",
"","","","","","","",""
)</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Constant.ИспользоватьСтатьиДвиженияДенежныхСредств</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Report.АР_АнализЭффективностиИспользованияПлощадей</name>
		<right>
			<name>Use</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ФизическиеЛица.TabularSection.ДополнительныеРеквизиты.Attribute.ТекстоваяСтрока</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ФизическиеЛица.Attribute.МестоРождения</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.АР_ФайлыПланировокПомещенийИПлощадей</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДоговорыКонтрагентов.Attribute.ОперацияПлатежногоАгента</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ФИОФизическихЛиц.Resource.Фамилия</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.АР_АктПриемаПередачиПомещенияВАренду</name>
		<right>
			<name>Read</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>// ОсновноеУсловиеЧтение
// Можно читать если есть доступ к (по или)
// Организации
#ПоЗначениям("Документ.АР_АктПриемаПередачиПомещенияВАренду", "Чтение", "",
"Организации", "Организация",
"","",
"","",
"","",
"","","","","","","","",
"","","","","","","","",
"","","","","","","",""
)</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Document.СчетФактураВыданный</name>
		<right>
			<name>Read</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>// ОсновноеУсловиеЧтение
// Можно читать если есть доступ к (по или)
// Организации
#ПоЗначениям("Документ.СчетФактураВыданный", "Чтение", "",
"Организации", "Организация",
"","",
"","",
"","",
"","","","","","","","",
"","","","","","","","",
"","","","","","","",""
)</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.АР_ЦветаРаскраскиПомещений</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.АР_ДополнительноеСоглашениеПрисоединенныеФайлы</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДоговорыКонтрагентов.Attribute.Комментарий</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>ChartOfCharacteristicTypes.ДополнительныеРеквизитыИСведения</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Document.АР_АктСнятияПоказанийСчетчика</name>
		<right>
			<name>Read</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>// ОсновноеУсловиеЧтение
// Можно читать если есть доступ к (по или)
// Организации
#ПоЗначениям("Документ.АР_АктСнятияПоказанийСчетчика", "Чтение", "",
"Организации", "Организация",
"","",
"","",
"","",
"","","","","","","","",
"","","","","","","","",
"","","","","","","",""
)</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Document.ТребованиеНакладная</name>
		<right>
			<name>Read</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>// ОсновноеУсловиеЧтение
// Можно читать если есть доступ к (по или)
// Организации
#ПоЗначениям("Документ.ТребованиеНакладная", "Чтение", "",
"Организации", "Организация",
"","",
"","",
"","",
"","","","","","","","",
"","","","","","","","",
"","","","","","","",""
)</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДоговорыКонтрагентов.Attribute.АР_Периодичность</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ПриходныйКассовыйОрдер</name>
		<right>
			<name>Read</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>// ОсновноеУсловиеЧтение
// Можно читать если есть доступ к (по или)
// Организации
#ПоЗначениям("Документ.ПриходныйКассовыйОрдер", "Чтение", "",
"Организации", "Организация",
"","",
"","",
"","",
"","","","","","","","",
"","","","","","","","",
"","","","","","","",""
)</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДополнительныеОтчетыИОбработки.TabularSection.Команды.Attribute.Модификатор</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДоговорыКонтрагентов.Attribute.ТипЦен</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДоговорыКонтрагентов.Attribute.ТелефонОператораПеревода</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ФизическиеЛица.TabularSection.КонтактнаяИнформация.Attribute.Представление</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>AccountingRegister.Хозрасчетный.Attribute.Содержание</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.АР_ПараметрыЭксплуатацииОбъектов</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>CommonForm.АР_НастройкаГрупповыхОбработок</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>DocumentJournal.АР_ДокументыПоДоговорамАренды</name>
		<right>
			<name>Read</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>// ОсновноеУсловиеЧтение
// Можно читать если есть доступ к (по или)
// Организации
#ПоЗначениям("ЖурналДокументов.АР_ДокументыПоДоговорамАренды", "Чтение", "",
"Организации", "Организация",
"","",
"","",
"","",
"","","","","","","","",
"","","","","","","","",
"","","","","","","",""
)</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДополнительныеОтчетыИОбработки.TabularSection.Команды.Attribute.РегламентноеЗаданиеGUID</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>CommonCommand.АР_ДополнительныеОбработкиАрендаНедвижимости</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.БанковскиеСчета</name>
		<right>
			<name>Read</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>// ОрганизацияЧтение
// Можно читать если есть доступ к (по или)
// Организации
// Головной организации данной организации
// Любой организации с головной организацией равной головной организации данной
#ПоЗначениямРасширенный("Справочник.БанковскиеСчета", "Чтение",
"",
"ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК ОбособленныеПодразделения
ПО
    Т.Владелец.ГоловнаяОрганизация &lt;&gt; ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
    И (
        Т.Владелец.ГоловнаяОрганизация = ОбособленныеПодразделения.ГоловнаяОрганизация
        ИЛИ
        Т.Владелец.ГоловнаяОрганизация = ОбособленныеПодразделения.Ссылка
      )
    ИЛИ
    Т.Владелец = ОбособленныеПодразделения.ГоловнаяОрганизация",
"",
"","НЕ Т.Владелец ССЫЛКА Справочник.Организации","ИЛИ", 
"Организации", "Т.Владелец", "ИЛИ (",
"Организации", "Т.Владелец.ГоловнаяОрганизация","И", 
"","Т.Владелец.ГоловнаяОрганизация &lt;&gt; ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)", ") ИЛИ",
"Организации", "ОбособленныеПодразделения.Ссылка", "", 
"","","", "","","", "","","", 
"","","", "","","", "","","", "","","", 
"","","", "","","", "","","", "","",""
)</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>AccumulationRegister.ПрочиеРасчеты</name>
		<right>
			<name>Read</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>// ОсновноеУсловиеЧтение
// Можно читать если есть доступ к (по или)
// Организации
#ПоЗначениям("РегистрНакопления.ПрочиеРасчеты", "Чтение", "",
"Организации", "Организация",
"","",
"","",
"","",
"","","","","","","","",
"","","","","","","","",
"","","","","","","",""
)</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДоговорыКонтрагентов.Attribute.ГосударственныйКонтракт</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Constant.АР_ОбрабатыватьШаблоныИПланировкиНаКлиенте</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Constant.АР_ИспользоватьНесколькоСчетчиковДляУслуги</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Subsystem.АР_АрендаНедвижимости.Subsystem.УправлениеДоговорами</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ТипыЦенНоменклатуры</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>AccumulationRegister.ИПРБП</name>
		<right>
			<name>Read</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>// ОсновноеУсловиеЧтение
// Можно читать если есть доступ к (по или)
// Организации
#ПоЗначениям("РегистрНакопления.ИПРБП", "Чтение", "",
"Организации", "Организация",
"","",
"","",
"","",
"","","","","","","","",
"","","","","","","","",
"","","","","","","",""
)</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДоговорыКонтрагентов.Attribute.ВидАгентскогоДоговора</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.АР_НапоминанияУведомленияПоСобытиям</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Constant.АР_ОсновнаяУслугаПоАренде</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>AccountingRegister.Хозрасчетный.Resource.ВалютнаяСумма</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.АР_СобственникиОбъектовАренды</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДополнительныеОтчетыИОбработки.Attribute.Ответственный</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДоговорыКонтрагентов.Attribute.Руководитель</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ДвоичныеДанныеФайлов.Dimension.Файл</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Subsystem.Администрирование.Subsystem.ПроведениеДокументов</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Document.КорректировкаРеализации</name>
		<right>
			<name>Read</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>// ОсновноеУсловиеЧтение
// Можно читать если есть доступ к (по или)
// Организации
#ПоЗначениям("Документ.КорректировкаРеализации", "Чтение", "",
"Организации", "Организация",
"","",
"","",
"","",
"","","","","","","","",
"","","","","","","","",
"","","","","","","",""
)</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>CommonCommand.АР_НастройкаУчетаНедвижимости</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>AccumulationRegister.КнигаУчетаДоходовИРасходов.Attribute.СтрокаДокумента</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.АР_РасторжениеДоговораАрендыПрисоединенныеФайлы</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.АР_ЗаявкаНаОбслуживаниеПрисоединенныеФайлы</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.АР_СценарииПланирования</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Report.АР_ИсторияЭксплуатацииОбъектовАрендыПодрядчиками</name>
		<right>
			<name>Use</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ПараметрыРегламентированногоУчета</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>CommonForm.ФормаВыбораКода</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Document.ДокументРасчетовСКонтрагентом</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Subsystem.Администрирование.Subsystem.Пользователи</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ФизическиеЛица.Attribute.ИНН</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.АР_КатегорииЦенАренды</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.АР_ПланировкиПомещенийИПлощадей</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Report.АР_ПланФактныйАнализРасходовНаЭксплуатацию</name>
		<right>
			<name>Use</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДоговорыКонтрагентов.TabularSection.ДополнительныеРеквизиты.Attribute.ТекстоваяСтрока</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДополнительныеОтчетыИОбработки.TabularSection.Разрешения.Attribute.Параметры</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Constant.ЗаголовокСистемы</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Document.ОперацияБух</name>
		<right>
			<name>Read</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>// ОсновноеУсловиеЧтение
// Можно читать если есть доступ к (по или)
// Организации
#ПоЗначениям("Документ.ОперацияБух", "Чтение", "",
"Организации", "Организация",
"","",
"","",
"","",
"","","","","","","","",
"","","","","","","","",
"","","","","","","",""
)</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДоговорыКонтрагентов.Attribute.ДоговорПодписан</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.СписаниеСРасчетногоСчета</name>
		<right>
			<name>Read</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>// ОсновноеУсловиеЧтение
// Можно читать если есть доступ к (по или)
// Организации
#ПоЗначениям("Документ.СписаниеСРасчетногоСчета", "Чтение", "",
"Организации", "Организация",
"","",
"","",
"","",
"","","","","","","","",
"","","","","","","","",
"","","","","","","",""
)</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>CommonForm.АР_ПанельКлассификаторов</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Report.АР_РеестрОбъектовАренды.Command.РеестрДоговоров</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Constant.АР_СохранятьДокументWord</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>AccumulationRegister.НДСЗаписиКнигиПродаж</name>
		<right>
			<name>Read</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>// ОсновноеУсловиеЧтение
// Можно читать если есть доступ к (по или)
// Организации
#ПоЗначениям("РегистрНакопления.НДСЗаписиКнигиПродаж", "Чтение", "",
"Организации", "Организация",
"","",
"","",
"","",
"","","","","","","","",
"","","","","","","","",
"","","","","","","",""
)</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Constant.УдалитьКонтролироватьПоследовательностьПроведения</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>CommonForm.ФормаВыбораДоступногоПоля</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Subsystem.Администрирование.Subsystem.ОтчетыИОбработки</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>AccountingRegister.Хозрасчетный.Resource.Сумма</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.АР_ВыполнениеРаботПоОбслуживанию</name>
		<right>
			<name>Read</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>// ОсновноеУсловиеЧтение
// Можно читать если есть доступ к (по или)
// Организации
#ПоЗначениям("Документ.АР_ВыполнениеРаботПоОбслуживанию", "Чтение", "",
"Организации", "Организация",
"","",
"","",
"","",
"","","","","","","","",
"","","","","","","","",
"","","","","","","",""
)</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Report.АР_ОтчетПоНачислениямИВыплатамАренднойПлаты</name>
		<right>
			<name>Use</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДополнительныеОтчетыИОбработки.TabularSection.Команды.Attribute.Идентификатор</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ФизическиеЛица.Attribute.НаименованиеСлужебное</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ФизическиеЛица.TabularSection.КонтактнаяИнформация.Attribute.Вид</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>ChartOfAccounts.Хозрасчетный</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>CommonForm.ПерсональныеНастройки</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.АР_СпособыНачисленияАренднойПлаты</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Report.АР_ДиаграммаСостоянийОбъектовАренды</name>
		<right>
			<name>Use</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>AccumulationRegister.НДСНачисленный</name>
		<right>
			<name>Read</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>// ОсновноеУсловиеЧтение
// Можно читать если есть доступ к (по или)
// Организации
#ПоЗначениям("РегистрНакопления.НДСНачисленный", "Чтение", "",
"Организации", "Организация",
"","",
"","",
"","",
"","","","","","","","",
"","","","","","","","",
"","","","","","","",""
)</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДоговорыКонтрагентов.Attribute.ТелефонОператораПоПриемуПлатежей</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.АР_АктПриемаВозвратаАрендуемогоПомещения</name>
		<right>
			<name>Read</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>// ОсновноеУсловиеЧтение
// Можно читать если есть доступ к (по или)
// Организации
#ПоЗначениям("Документ.АР_АктПриемаВозвратаАрендуемогоПомещения", "Чтение", "",
"Организации", "Организация",
"","",
"","",
"","",
"","","","","","","","",
"","","","","","","","",
"","","","","","","",""
)</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Subsystem.АР_АрендаНедвижимости.Subsystem.ДополнительныеОтчетыОбработки</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.АР_ОтобразитьНаПлане</name>
		<right>
			<name>Use</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДополнительныеОтчетыИОбработки.Attribute.Комментарий</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Subsystem.БанкИКасса</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Constant.ОтключитьКонтрольОтрицательныхОстатков</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>AccumulationRegister.АР_ЗаявкиНаОбслуживание</name>
		<right>
			<name>Read</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>// ОсновноеУсловиеЧтение
// Можно читать если есть доступ к (по или)
// Организации
#ПоЗначениям("РегистрНакопления.АР_ЗаявкиНаОбслуживание", "Чтение", "",
"Организации", "Организация",
"","",
"","",
"","",
"","","","","","","","",
"","","","","","","","",
"","","","","","","",""
)</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>AccumulationRegister.КнигаУчетаДоходовИРасходов.Attribute.ВидРасхода</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Report.АР_РеестрОбъектовАренды.Command.РеестрОбъектов</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ФизическиеЛица.Attribute.УточнениеНаименования</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.АР_УстановкаЦенНаАренду</name>
		<right>
			<name>Read</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>// ОсновноеУсловиеЧтение
// Можно читать если есть доступ к (по или)
// Организации
#ПоЗначениям("Документ.АР_УстановкаЦенНаАренду", "Чтение", "",
"Организации", "Организация",
"","",
"","",
"","",
"","","","","","","","",
"","","","","","","","",
"","","","","","","",""
)</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.НаличиеФайлов</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДоговорыКонтрагентов.Attribute.АР_ВестиВзаиморасчетыПоПериодам</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ФизическиеЛица.TabularSection.КонтактнаяИнформация.Attribute.НомерТелефонаБезКодов</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Report.АР_РеестрОбъектовАренды.Command.РеестрОбъектовКомандныйИнтерфейс</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.АР_ТехнологическиеОперации</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДополнительныеОтчетыИОбработки.Attribute.БезопасныйРежим</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Constant.ПрефиксУзлаРаспределеннойИнформационнойБазыБП20</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>AccumulationRegister.ИПМПЗ</name>
		<right>
			<name>Read</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>// ОсновноеУсловиеЧтение
// Можно читать если есть доступ к (по или)
// Организации
#ПоЗначениям("РегистрНакопления.ИПМПЗ", "Чтение", "",
"Организации", "Организация",
"","",
"","",
"","",
"","","","","","","","",
"","","","","","","","",
"","","","","","","",""
)</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ФизическиеЛица.TabularSection.КонтактнаяИнформация.Attribute.ЗначенияПолей</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДоговорыКонтрагентов.Attribute.ТелефонПоставщика</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>CommonCommand.ПоказатьДвиженияДокумента</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДоговорыКонтрагентов.Attribute.Валютный</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>AccumulationRegister.РасходыПриУСН</name>
		<right>
			<name>Read</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>// ОсновноеУсловиеЧтение
// Можно читать если есть доступ к (по или)
// Организации
#ПоЗначениям("РегистрНакопления.РасходыПриУСН", "Чтение", "",
"Организации", "Организация",
"","",
"","",
"","",
"","","","","","","","",
"","","","","","","","",
"","","","","","","",""
)</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>ChartOfCharacteristicTypes.ВидыСубконтоХозрасчетные</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Sequence.УдалитьВзаиморасчеты30</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>AccumulationRegister.ИПМПЗОбороты</name>
		<right>
			<name>Read</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>// ОсновноеУсловиеЧтение
// Можно читать если есть доступ к (по или)
// Организации
#ПоЗначениям("РегистрНакопления.ИПМПЗОбороты", "Чтение", "",
"Организации", "Организация",
"","",
"","",
"","",
"","","","","","","","",
"","","","","","","","",
"","","","","","","",""
)</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>AccumulationRegister.ИПМПЗОбороты.StandardAttribute.Active</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>AccumulationRegister.ИПМПЗОбороты.StandardAttribute.LineNumber</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>AccumulationRegister.ИПМПЗОбороты.StandardAttribute.Recorder</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>AccumulationRegister.ИПМПЗОбороты.StandardAttribute.Period</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Subsystem.Администрирование</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>AccumulationRegister.АР_ВзаиморасчетыПоАренде</name>
		<right>
			<name>Read</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>// ОсновноеУсловиеЧтение
// Можно читать если есть доступ к (по или)
// Организации
#ПоЗначениям("РегистрНакопления.АР_ВзаиморасчетыПоАренде", "Чтение", "",
"Организации", "Организация",
"","",
"","",
"","",
"","","","","","","","",
"","","","","","","","",
"","","","","","","",""
)</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.АР_ЦеныНаАренду</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ДанныеПроизводственногоКалендаря</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДоговорыКонтрагентов.Attribute.ПлатежныйАгент</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>CommonForm.АР_ФормаВыбораИзСписка</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Constant.ИспользоватьВерсионированиеОбъектов</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>AccountingRegister.Хозрасчетный.Resource.Количество</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>CommonCommand.АР_Новости_Недвижимость</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ФизическиеЛица.Attribute.ДатаРождения</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>AccountingRegister.Хозрасчетный.Dimension.Организация</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Report.АР_РеестрОбъектовАренды.Command.РеестрДоговоровКомандныйИнтерфейс</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>CommonForm.НерекомендуемаяВерсияКонфигурации</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДоговорыКонтрагентов.Attribute.ФайлДоговора</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДоговорыКонтрагентов.Attribute.АР_Субаренда</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>AccumulationRegister.НДСПредъявленный</name>
		<right>
			<name>Read</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>// ОсновноеУсловиеЧтение
// Можно читать если есть доступ к (по или)
// Организации
#ПоЗначениям("РегистрНакопления.НДСПредъявленный", "Чтение", "",
"Организации", "Организация",
"","",
"","",
"","",
"","","","","","","","",
"","","","","","","","",
"","","","","","","",""
)</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Constant.ДатаТекущейВерсии</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Constant.АР_ОсновнойСпособНачисленияАрендойПлаты</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Document.АР_ДополнительноеСоглашение</name>
		<right>
			<name>Read</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>// ОсновноеУсловиеЧтение
// Можно читать если есть доступ к (по или)
// Организации
#ПоЗначениям("Документ.АР_ДополнительноеСоглашение", "Чтение", "",
"Организации", "Организация",
"","",
"","",
"","",
"","","","","","","","",
"","","","","","","","",
"","","","","","","",""
)</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДополнительныеОтчетыИОбработки.Attribute.ИспользуетХранилищеВариантов</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.АР_ПланированиеЗатратНаЭксплуатацию</name>
		<right>
			<name>Read</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>// ОсновноеУсловиеЧтение
// Можно читать если есть доступ к (по или)
// Организации
#ПоЗначениям("Документ.АР_ПланированиеЗатратНаЭксплуатацию", "Чтение", "",
"Организации", "Организация",
"","",
"","",
"","",
"","","","","","","","",
"","","","","","","","",
"","","","","","","",""
)</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>CommonForm.ЗагрузкаКлассификатора</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.Контрагенты</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.АР_НазначенияОбъектовНедвижимости</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДополнительныеОтчетыИОбработки.Attribute.Версия</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.СтатьиЗатрат</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>AccumulationRegister.ИПМПЗОбороты.Resource.Количество</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Constant.АР_ПортСЛК</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Constant.АР_СерверСЛК</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Report.АР_СведенияОРасходахНаЭксплуатацию</name>
		<right>
			<name>Use</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>AccumulationRegister.ИПМПЗОбороты.Dimension.ДокументОплаты</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>AccumulationRegister.РасчетыСФондамиПоСтраховымВзносам</name>
		<right>
			<name>Read</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>// ОсновноеУсловиеЧтение
// Можно читать если есть доступ к (по или)
// Организации
#ПоЗначениям("РегистрНакопления.РасчетыСФондамиПоСтраховымВзносам", "Чтение", "",
"Организации", "Организация",
"","",
"","",
"","",
"","","","","","","","",
"","","","","","","","",
"","","","","","","",""
)</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Constant.АР_ТипЦенПлановойСебестоимостиМатериалов</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВидыВзаиморасчетов</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Report.АР_ИсторияОбъектовАренды.Command.ИсторияОбъектов</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.АР_ЗаполнениеПолейШаблона</name>
		<right>
			<name>Use</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДоговорыКонтрагентов.Attribute.УдалитьРеализацияНаЭкспорт</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>AccumulationRegister.КнигаУчетаДоходовИРасходов.Resource.НДС</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>AccumulationRegister.ИПМПЗОбороты.Dimension.ПартияСписаннойНоменклатуры</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.АР_ЗаключениеДоговораАренды</name>
		<right>
			<name>Read</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>// ОсновноеУсловиеЧтение
// Можно читать если есть доступ к (по или)
// Организации
#ПоЗначениям("Документ.АР_ЗаключениеДоговораАренды", "Чтение", "",
"Организации", "Организация",
"","",
"","",
"","",
"","","","","","","","",
"","","","","","","","",
"","","","","","","",""
)</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>AccumulationRegister.ИПМПЗОбороты.Dimension.ВидСписанногоМПЗ</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ФизическиеЛица.TabularSection.КонтактнаяИнформация.Attribute.АдресЭП</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.КлассификаторЕдиницИзмерения</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>AccumulationRegister.АР_ВыполнениеРаботПоОбслуживанию</name>
		<right>
			<name>Read</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>// ОсновноеУсловиеЧтение
// Можно читать если есть доступ к (по или)
// Организации
#ПоЗначениям("РегистрНакопления.АР_ВыполнениеРаботПоОбслуживанию", "Чтение", "",
"Организации", "Организация",
"","",
"","",
"","",
"","","","","","","","",
"","","","","","","","",
"","","","","","","",""
)</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДополнительныеОтчетыИОбработки.TabularSection.Назначение.Attribute.ОбъектНазначения</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.Номенклатура</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Subsystem.БанкИКасса.Subsystem.ДенежныеДокументы</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Sequence.УдалитьОбщаяПоследовательность30</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Constant.УчетЗарплатыИКадровСредствамиБухгалтерии</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДополнительныеОтчетыИОбработки.Attribute.Вид</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>AccumulationRegister.АР_ФактическиеЗатратыНаОбслуживаниеОбъектов</name>
		<right>
			<name>Read</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>// ОсновноеУсловиеЧтение
// Можно читать если есть доступ к (по или)
// Организации
#ПоЗначениям("РегистрНакопления.АР_ФактическиеЗатратыНаОбслуживаниеОбъектов", "Чтение", "",
"Организации", "Организация",
"","",
"","",
"","",
"","","","","","","","",
"","","","","","","","",
"","","","","","","",""
)</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>AccountingRegister.Хозрасчетный.Resource.СуммаНУ</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ФормированиеЗаписейКнигиПродаж</name>
		<right>
			<name>Read</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>// ОсновноеУсловиеЧтение
// Можно читать если есть доступ к (по или)
// Организации
#ПоЗначениям("Документ.ФормированиеЗаписейКнигиПродаж", "Чтение", "",
"Организации", "Организация",
"","",
"","",
"","",
"","","","","","","","",
"","","","","","","","",
"","","","","","","",""
)</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Document.КорректировкаДолга</name>
		<right>
			<name>Read</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>// ОсновноеУсловиеЧтение
// Можно читать если есть доступ к (по или)
// Организации
#ПоЗначениям("Документ.КорректировкаДолга", "Чтение", "",
"Организации", "Организация",
"","",
"","",
"","",
"","","","","","","","",
"","","","","","","","",
"","","","","","","",""
)</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>CommonForm.ФормаЦеныИВалюта</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Constant.ИспользоватьДополнительныеРеквизитыИСведения</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.КорректировкаДвижений</name>
		<right>
			<name>Use</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДополнительныеОтчетыИОбработки.Attribute.ИспользоватьДляФормыОбъекта</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.АР_ЗаявкаНаОбслуживание</name>
		<right>
			<name>Read</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>// ОсновноеУсловиеЧтение
// Можно читать если есть доступ к (по или)
// Организации
#ПоЗначениям("Документ.АР_ЗаявкаНаОбслуживание", "Чтение", "",
"Организации", "Организация",
"","",
"","",
"","",
"","","","","","","","",
"","","","","","","","",
"","","","","","","",""
)</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДоговорыКонтрагентов.Attribute.УстановленСрокОплаты</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>CommonCommand.АР_ДополнительныеОтчетыАрендаНедвижимости</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Document.АР_ЗакрытиеЗаявкиНаОбслуживание</name>
		<right>
			<name>Read</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>// ОсновноеУсловиеЧтение
// Можно читать если есть доступ к (по или)
// Организации
#ПоЗначениям("Документ.АР_ЗакрытиеЗаявкиНаОбслуживание", "Чтение", "",
"Организации", "Организация",
"","",
"","",
"","",
"","","","","","","","",
"","","","","","","","",
"","","","","","","",""
)</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ФИОФизическихЛиц.Resource.Имя</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.АР_АктПриемаВозвратаАрендуемогоПомещенияПрисоединенныеФайлы</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.СчетаУчетаРасчетовСКонтрагентами</name>
		<right>
			<name>Read</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>// ОсновноеУсловиеЧтение
// Можно читать если есть доступ к (по или)
// Организации
// Организация пустая
#ПоЗначениямРасширенный("РегистрСведений.СчетаУчетаРасчетовСКонтрагентами", "Чтение",
"",
"",
"",
"Организации", "Т.Организация", "ИЛИ",
"", "Т.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)", "",
"","", "",
"", "", "", 
"","","", "","","", "","","", "","","", 
"","","", "","","", "","","", "","","", 
"","","", "","","", "","","", "","",""
)</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>AccumulationRegister.ИПМПЗОбороты.Dimension.НоменклатурнаяГруппа</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Report.АР_АнализЗадержекПлатежейПоАренде</name>
		<right>
			<name>Use</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ФизическиеЛица.Attribute.УдалитьПол</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Constant.ДополнительнаяКолонкаПечатныхФормДокументов</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.АР_СчетНаАрендуПрисоединенныеФайлы</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДоговорыКонтрагентов.Attribute.ДолжностьРуководителя</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>AccumulationRegister.ИППрочиеРасходы</name>
		<right>
			<name>Read</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>// ОсновноеУсловиеЧтение
// Можно читать если есть доступ к (по или)
// Организации
#ПоЗначениям("РегистрНакопления.ИППрочиеРасходы", "Чтение", "",
"Организации", "Организация",
"","",
"","",
"","",
"","","","","","","","",
"","","","","","","","",
"","","","","","","",""
)</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.АР_СпискиСчетчиков</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>CommonForm.ФормаВводаКурсаИКратности</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>AccumulationRegister.ИПМПЗОбороты.Dimension.ХарактерДеятельности</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДоговорыКонтрагентов.Attribute.АР_ВестиВзаиморасчетыПоСчетамПерем</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.АР_НачислениеАренднойПлатыПрисоединенныеФайлы</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>DocumentJournal.АР_УчетЭксплуатацииОбъектов</name>
		<right>
			<name>Read</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>// ОсновноеУсловиеЧтение
// Можно читать если есть доступ к (по или)
// Организации
#ПоЗначениям("ЖурналДокументов.АР_УчетЭксплуатацииОбъектов", "Чтение", "",
"Организации", "Организация",
"","",
"","",
"","",
"","","","","","","","",
"","","","","","","","",
"","","","","","","",""
)</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ФизическиеЛица.TabularSection.КонтактнаяИнформация.Attribute.НомерТелефона</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДоговорыКонтрагентов.Attribute.ИННОператораПеревода</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДоговорыКонтрагентов.Attribute.АР_ВестиВзаиморасчетыПоОбъектам</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДоговорыКонтрагентов.Attribute.АР_АрендныйДоговор</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>AccumulationRegister.АР_ПланируемыеЗатратыНаОбслуживаниеОбъектов</name>
		<right>
			<name>Read</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>// ОсновноеУсловиеЧтение
// Можно читать если есть доступ к (по или)
// Организации
#ПоЗначениям("РегистрНакопления.АР_ПланируемыеЗатратыНаОбслуживаниеОбъектов", "Чтение", "",
"Организации", "Организация",
"","",
"","",
"","",
"","","","","","","","",
"","","","","","","","",
"","","","","","","",""
)</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДоговорыКонтрагентов.Attribute.ТелефонПлатежногоАгента</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>CommonForm.АР_ФормаВыбораПечатныхФормУправляемая</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Report.АР_ВедомостьПоЗаявкамНаЭксплуатацию</name>
		<right>
			<name>Use</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Report.АР_РеестрОбъектовАренды</name>
		<right>
			<name>Use</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.АР_ДемонстрационнаяВерсия</name>
		<right>
			<name>Use</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДополнительныеОтчетыИОбработки.TabularSection.Назначение</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>AccumulationRegister.АР_ПродажиПоАренде</name>
		<right>
			<name>Read</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>// ОсновноеУсловиеЧтение
// Можно читать если есть доступ к (по или)
// Организации
#ПоЗначениям("РегистрНакопления.АР_ПродажиПоАренде", "Чтение", "",
"Организации", "Организация",
"","",
"","",
"","",
"","","","","","","","",
"","","","","","","","",
"","","","","","","",""
)</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ФизическиеЛица.Attribute.ГруппаДоступа</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>AccountingRegister.Хозрасчетный</name>
		<right>
			<name>Read</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>// ОсновноеУсловиеЧтение
// Можно читать если есть доступ к (по или)
// Организации
#ПоЗначениям("РегистрБухгалтерии.Хозрасчетный", "Чтение", "",
"Организации", "Организация",
"","",
"","",
"","",
"","","","","","","","",
"","","","","","","","",
"","","","","","","",""
)</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>AccountingRegister.Хозрасчетный.StandardAttribute.Account</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>AccountingRegister.Хозрасчетный.StandardAttribute.Active</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>AccountingRegister.Хозрасчетный.StandardAttribute.LineNumber</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>AccountingRegister.Хозрасчетный.StandardAttribute.Recorder</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>AccountingRegister.Хозрасчетный.StandardAttribute.Period</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>AccountingRegister.Хозрасчетный.StandardAttribute.ExtDimension1</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>AccountingRegister.Хозрасчетный.StandardAttribute.ExtDimensionType1</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>AccountingRegister.Хозрасчетный.StandardAttribute.ExtDimension2</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>AccountingRegister.Хозрасчетный.StandardAttribute.ExtDimensionType2</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>AccountingRegister.Хозрасчетный.StandardAttribute.ExtDimension3</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>AccountingRegister.Хозрасчетный.StandardAttribute.ExtDimensionType3</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Constant.АР_ПоказыватьНастройкуИспользованияСправочникаЗданияИЭтажи</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>AccumulationRegister.КнигаУчетаДоходовИРасходов.Resource.Графа7</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Constant.АР_СпособУчетаНДСПриНачисленииПеней</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДоговорыКонтрагентов.TabularSection.ДополнительныеРеквизиты</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Constant.АР_ПриРасчетеПениСрокОплатыРабочийДень</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ФизическиеЛица.Attribute.ДатаРегистрации</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДоговорыКонтрагентов.Attribute.АдресОператораПеревода</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ФизическиеЛица.TabularSection.КонтактнаяИнформация.Attribute.Тип</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>FilterCriterion.ДокументыПоДоговоруКонтрагента</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.РолиКонтактныхЛиц</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ДвоичныеДанныеФайлов.Resource.ДвоичныеДанныеФайла</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Constant.УчетЗарплатыИКадровВоВнешнейПрограмме</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>CommonCommand.АР_ПанельКлассификаторов</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Document.ВводНачальныхОстатков</name>
		<right>
			<name>Read</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>// ОсновноеУсловиеЧтение
// Можно читать если есть доступ к (по или)
// Организации
#ПоЗначениям("Документ.ВводНачальныхОстатков", "Чтение", "",
"Организации", "Организация",
"","",
"","",
"","",
"","","","","","","","",
"","","","","","","","",
"","","","","","","",""
)</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>DocumentJournal.АР_ДокументыНачисленияИОплатыПоДоговорамАренды</name>
		<right>
			<name>Read</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>// ОсновноеУсловиеЧтение
// Можно читать если есть доступ к (по или)
// Организации
#ПоЗначениям("ЖурналДокументов.АР_ДокументыНачисленияИОплатыПоДоговорамАренды", "Чтение", "",
"Организации", "Организация",
"","",
"","",
"","",
"","","","","","","","",
"","","","","","","","",
"","","","","","","",""
)</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДополнительныеОтчетыИОбработки.TabularSection.Разделы</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>AccumulationRegister.НДСРеализация0</name>
		<right>
			<name>Read</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>// ОсновноеУсловиеЧтение
// Можно читать если есть доступ к (по или)
// Организации
#ПоЗначениям("РегистрНакопления.НДСРеализация0", "Чтение", "",
"Организации", "Организация",
"","",
"","",
"","",
"","","","","","","","",
"","","","","","","","",
"","","","","","","",""
)</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Document.АР_НачислениеПени</name>
		<right>
			<name>Read</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>// ОсновноеУсловиеЧтение
// Можно читать если есть доступ к (по или)
// Организации
#ПоЗначениям("Документ.АР_НачислениеПени", "Чтение", "",
"Организации", "Организация",
"","",
"","",
"","",
"","","","","","","","",
"","","","","","","","",
"","","","","","","",""
)</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>AccumulationRegister.ИПМПЗОбороты.Dimension.НоменклатураПоступившая</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>AccountingRegister.Хозрасчетный.Resource.СуммаВР</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.РасшифровкаКУДиР</name>
		<right>
			<name>Read</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>// ОсновноеУсловиеЧтение
// Можно читать если есть доступ к (по или)
// Организации
#ПоЗначениям("РегистрСведений.РасшифровкаКУДиР", "Чтение", "",
"Организации", "Организация",
"","",
"","",
"","",
"","","","","","","","",
"","","","","","","","",
"","","","","","","",""
)</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Constant.УдалитьПрименяемыеСистемыНалогообложения</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Constant.УдалитьНастройкиКолонтитулов</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ФизическиеЛица.TabularSection.ДополнительныеРеквизиты.Attribute.Значение</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>AccumulationRegister.АР_ПланируемыеПоступленияДенежныхСредств</name>
		<right>
			<name>Read</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>// ОсновноеУсловиеЧтение
// Можно читать если есть доступ к (по или)
// Организации
#ПоЗначениям("РегистрНакопления.АР_ПланируемыеПоступленияДенежныхСредств", "Чтение", "",
"Организации", "Организация",
"","",
"","",
"","",
"","","","","","","","",
"","","","","","","","",
"","","","","","","",""
)</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Constant.УдалитьПрименяютсяРазныеСтавкиНалогаНаПрибыль</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДоговорыКонтрагентов.Attribute.ПорядокРегистрацииСчетовФактурНаАвансПоДоговору</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ФизическиеЛица.TabularSection.КонтактнаяИнформация.Attribute.ДоменноеИмяСервера</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДоговорыКонтрагентов.Attribute.СрокОплаты</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.АР_Ставки</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>AccumulationRegister.ИПМПЗОбороты.Dimension.ВидПоступившегоМПЗ</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Subsystem.БанкИКасса.Subsystem.Банк</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>AccumulationRegister.ИПМПЗОбороты.Dimension.ПартияПоступившейНоменклатуры</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДополнительныеОтчетыИОбработки</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДополнительныеОтчетыИОбработки.StandardAttribute.Predefined</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДополнительныеОтчетыИОбработки.StandardAttribute.Ref</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДополнительныеОтчетыИОбработки.StandardAttribute.DeletionMark</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДополнительныеОтчетыИОбработки.StandardAttribute.IsFolder</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДополнительныеОтчетыИОбработки.StandardAttribute.Owner</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДополнительныеОтчетыИОбработки.StandardAttribute.Parent</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДополнительныеОтчетыИОбработки.StandardAttribute.Description</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДополнительныеОтчетыИОбработки.StandardAttribute.Code</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДоговорыКонтрагентов.Attribute.ВидВзаиморасчетов</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ФИОФизическихЛиц.Resource.Отчество</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ФизическиеЛица.TabularSection.ДополнительныеРеквизиты.Attribute.Свойство</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.АР_СтатусыОбъектовАренды</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Report.АР_РеестрЗаявокНаОбслуживание</name>
		<right>
			<name>Use</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДоговорыКонтрагентов.Attribute.АР_ВестиВзаиморасчетыПоСчетамПост</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.НоменклатурныеГруппы</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.АР_ОбъектыПодлежащиеСдачеВАренду</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Report.АР_РасходыНаОплатуКомУслуг</name>
		<right>
			<name>Use</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.АР_ШаблоныДокументов</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Constant.ИспользоватьПолнотекстовыйПоиск</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.АР_ЗданияИЭтажи</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>AccumulationRegister.КнигаУчетаДоходовИРасходов</name>
		<right>
			<name>Read</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>// ОсновноеУсловиеЧтение
// Можно читать если есть доступ к (по или)
// Организации
#ПоЗначениям("РегистрНакопления.КнигаУчетаДоходовИРасходов", "Чтение", "",
"Организации", "Организация",
"","",
"","",
"","",
"","","","","","","","",
"","","","","","","","",
"","","","","","","",""
)</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>AccumulationRegister.КнигаУчетаДоходовИРасходов.StandardAttribute.Active</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>AccumulationRegister.КнигаУчетаДоходовИРасходов.StandardAttribute.LineNumber</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>AccumulationRegister.КнигаУчетаДоходовИРасходов.StandardAttribute.Recorder</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>AccumulationRegister.КнигаУчетаДоходовИРасходов.StandardAttribute.Period</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДоговорыКонтрагентов.TabularSection.ДополнительныеРеквизиты.Attribute.Значение</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>AccumulationRegister.КнигаУчетаДоходовИРасходов.Resource.Графа4</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.КонтрагентыПрисоединенныеФайлы</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Report.АР_ПродажиПоАренде</name>
		<right>
			<name>Use</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДоговорыКонтрагентов.Attribute.СпособРасчетаКомиссионногоВознаграждения</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>AccumulationRegister.ИПИныеМатериальныеРасходы</name>
		<right>
			<name>Read</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>// ОсновноеУсловиеЧтение
// Можно читать если есть доступ к (по или)
// Организации
#ПоЗначениям("РегистрНакопления.ИПИныеМатериальныеРасходы", "Чтение", "",
"Организации", "Организация",
"","",
"","",
"","",
"","","","","","","","",
"","","","","","","","",
"","","","","","","",""
)</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Document.АР_СчетНаАренду</name>
		<right>
			<name>Read</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>// ОсновноеУсловиеЧтение
// Можно читать если есть доступ к (по или)
// Организации
#ПоЗначениям("Документ.АР_СчетНаАренду", "Чтение", "",
"Организации", "Организация",
"","",
"","",
"","",
"","","","","","","","",
"","","","","","","","",
"","","","","","","",""
)</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Constant.АР_ОсновнаяУслугаДляНачисленияДепозита</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Report.АР_ОтчетПоНачислениямИВыплатамАренднойПлаты.Command.РасчетыПоАренде</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ФизическиеЛица.StandardAttribute.PredefinedDataName</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ФизическиеЛица.StandardAttribute.Predefined</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ФизическиеЛица.StandardAttribute.Ref</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ФизическиеЛица.StandardAttribute.DeletionMark</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ФизическиеЛица.StandardAttribute.IsFolder</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ФизическиеЛица.StandardAttribute.Owner</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ФизическиеЛица.StandardAttribute.Parent</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ФизическиеЛица.StandardAttribute.Description</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ФизическиеЛица.StandardAttribute.Code</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Subsystem.АР_АрендаНедвижимости.Subsystem.УправлениеОбъектами.Subsystem.Классификаторы</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>AccumulationRegister.РеализованныеТоварыКомитентов</name>
		<right>
			<name>Read</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>// ОсновноеУсловиеЧтение
// Можно читать если есть доступ к (по или)
// Организации
#ПоЗначениям("РегистрНакопления.РеализованныеТоварыКомитентов", "Чтение", "",
"Организации", "Организация",
"","",
"","",
"","",
"","","","","","","","",
"","","","","","","","",
"","","","","","","",""
)</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.АР_ОбъектыАрендыПрисоединенныеФайлы</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.АР_СрокиОплатыИПараметрыНачисленияПеней</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>AccumulationRegister.КнигаУчетаДоходовИРасходов.Attribute.ТабличнаяЧасть</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Report.АР_СтруктураРасчетовПоАренде</name>
		<right>
			<name>Use</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДоговорыКонтрагентов.Attribute.СрокДействия</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>AccumulationRegister.КнигаУчетаДоходовИРасходов.Attribute.Содержание</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Subsystem.Администрирование.Subsystem.Формы</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.АР_ТипыОбъектовАренды</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>AccumulationRegister.НДСВключенныйВСтоимость</name>
		<right>
			<name>Read</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>// ОсновноеУсловиеЧтение
// Можно читать если есть доступ к (по или)
// Организации
#ПоЗначениям("РегистрНакопления.НДСВключенныйВСтоимость", "Чтение", "",
"Организации", "Организация",
"","",
"","",
"","",
"","","","","","","","",
"","","","","","","","",
"","","","","","","",""
)</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Constant.АР_ИспользоватьСправочникЗданияИЭтажи</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.СпецификацииНоменклатуры</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>AccumulationRegister.КнигаУчетаДоходовИРасходов.Resource.Графа6</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Report.АР_ПланируемыеПоступленияДенежныхСредств</name>
		<right>
			<name>Use</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Document.РегламентнаяОперация</name>
		<right>
			<name>Read</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>// ОсновноеУсловиеЧтение
// Можно читать если есть доступ к (по или)
// Организации
#ПоЗначениям("Документ.РегламентнаяОперация", "Чтение", "",
"Организации", "Организация",
"","",
"","",
"","",
"","","","","","","","",
"","","","","","","","",
"","","","","","","",""
)</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.АР_ЗаключениеДоговораАрендыПрисоединенныеФайлы</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>CommonForm.Обозреватель</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.АР_ГрафикиОбслуживания</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДоговорыКонтрагентов.Attribute.ОплатаВВалюте</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДополнительныеОтчетыИОбработки.Attribute.ИмяФайла</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДоговорыКонтрагентов.Attribute.РуководительКонтрагента</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Constant.АР_ПериодНачисленияАренднойПлаты</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>AccumulationRegister.КнигаУчетаДоходовИРасходов.Dimension.Организация</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Subsystem.Администрирование.Subsystem.Файлы</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ФизическиеЛица.Attribute.Пол</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ФизическиеЛица.TabularSection.КонтактнаяИнформация.Attribute.Регион</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>CommonForm.АР_ФормаЗаполненияКолонки</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ФИОФизическихЛиц.Dimension.ФизическоеЛицо</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Constant.УдалитьНомерВерсииКонфигурации</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДоговорыКонтрагентов.Attribute.АР_ВестиВзаиморасчетыПоУслугам</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДоговорыКонтрагентов.Attribute.ЗаРуководителяКонтрагентаПоПриказу</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Subsystem.АР_АрендаНедвижимости.Subsystem.УправлениеВзаиморасчетами</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДоговорыКонтрагентов.Attribute.ИспользуетсяПриОбменеДанными</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.АР_НачислениеПениПрисоединенныеФайлы</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.АР_ОбъектыАренды</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Constant.АР_ТипОбъектаАренды</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДоговорыКонтрагентов.Attribute.Номер</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДоговорыКонтрагентов</name>
		<right>
			<name>Read</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>// ОбособленноеПодразделениеЧтение
// Можно читать если есть доступ к (по или)
// Организации
// Головной организации данной организации
#ПоЗначениямРасширенный("Справочник.ДоговорыКонтрагентов", "Чтение",
"НеОграничиватьДоступКГруппам",
"ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК ОбособленныеПодразделения
ПО ОбособленныеПодразделения.ГоловнаяОрганизация = Т.Организация
    И ОбособленныеПодразделения.ГоловнаяОрганизация &lt;&gt; ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
    ИЛИ ОбособленныеПодразделения.Ссылка = Т.Организация
",
"",
"Организации", "ОбособленныеПодразделения.Ссылка", "",
"","","",
"","","",
"","","",
"","","", "","","", "","","", "","","", 
"","","", "","","", "","","", "","","", 
"","","", "","","", "","","", "","",""
)</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДоговорыКонтрагентов.StandardAttribute.PredefinedDataName</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДоговорыКонтрагентов.StandardAttribute.Predefined</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДоговорыКонтрагентов.StandardAttribute.Ref</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДоговорыКонтрагентов.StandardAttribute.DeletionMark</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДоговорыКонтрагентов.StandardAttribute.IsFolder</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДоговорыКонтрагентов.StandardAttribute.Owner</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДоговорыКонтрагентов.StandardAttribute.Parent</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДоговорыКонтрагентов.StandardAttribute.Description</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДоговорыКонтрагентов.StandardAttribute.Code</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Subsystem.БанкИКасса.Subsystem.Касса</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Constant.ВедетсяРозничнаяТорговля</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДоговорыКонтрагентов.Attribute.ПолРуководителяКонтрагента</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Constant.АР_ВестиУчетТарифицируемыхУслугПоСчетчикам</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>CommonForm.АР_ОтчетыПоНедвижимости</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДополнительныеОтчетыИОбработки.Attribute.ХранилищеОбработки</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДополнительныеОтчетыИОбработки.TabularSection.Разрешения.Attribute.ВидРазрешения</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.АктСверкиВзаиморасчетов</name>
		<right>
			<name>Read</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>// ОсновноеУсловиеЧтение
// Можно читать если есть доступ к (по или)
// Организации
#ПоЗначениям("Документ.АктСверкиВзаиморасчетов", "Чтение", "",
"Организации", "Организация",
"","",
"","",
"","",
"","","","","","","","",
"","","","","","","","",
"","","","","","","",""
)</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДополнительныеОтчетыИОбработки.Attribute.Публикация</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДополнительныеОтчетыИОбработки.TabularSection.Команды.Attribute.Скрыть</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.АР_КатегорииЗемель</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Constant.АР_ИспользоватьСхемуОпределенияСтавокНДСПоАрендеНаОсновеДоговора</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.АР_СобственникиОбъектовНедвижимости</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Report.АР_СравнениеУсловийДоговоровФактическихНачислений</name>
		<right>
			<name>Use</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДополнительныеОтчетыИОбработки.TabularSection.Разрешения</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>AccumulationRegister.ИПМПЗОбороты.Resource.Сумма</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДоговорыКонтрагентов.Attribute.ВидДоговора</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>AccumulationRegister.ИПМПЗОбороты.Dimension.Организация</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Constant.ПрефиксУзлаРаспределеннойИнформационнойБазы</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДоговорыКонтрагентов.Attribute.Организация</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДополнительныеОтчетыИОбработки.TabularSection.Команды.Attribute.Представление</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.АР_АктСнятияПоказанийСчетчикаПрисоединенныеФайлы</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>AccountingRegister.Хозрасчетный.Attribute.НеКорректироватьСтоимостьАвтоматически</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Subsystem.АР_АрендаНедвижимости.Subsystem.УправлениеОбъектами</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДоговорыКонтрагентов.Attribute.УчетАгентскогоНДС</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.АР_ПланируемыеПоступленияДенежныхСредств</name>
		<right>
			<name>Read</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>// ОсновноеУсловиеЧтение
// Можно читать если есть доступ к (по или)
// Организации
#ПоЗначениям("Документ.АР_ПланируемыеПоступленияДенежныхСредств", "Чтение", "",
"Организации", "Организация",
"","",
"","",
"","",
"","","","","","","","",
"","","","","","","","",
"","","","","","","",""
)</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДоговорыКонтрагентов.Attribute.ДолжностьРуководителяКонтрагента</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Constant.АР_ОсновнойПроизводственныйКалендарьАренды</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>AccountingRegister.Хозрасчетный.Dimension.Подразделение</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ДвоичныеДанныеФайлов.StandardAttribute.Active</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ДвоичныеДанныеФайлов.StandardAttribute.LineNumber</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ДвоичныеДанныеФайлов.StandardAttribute.Recorder</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ДвоичныеДанныеФайлов.StandardAttribute.Period</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Constant.ИспользоватьРазделениеПоОбластямДанных</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Document.РасходныйКассовыйОрдер</name>
		<right>
			<name>Read</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>// ОсновноеУсловиеЧтение
// Можно читать если есть доступ к (по или)
// Организации
#ПоЗначениям("Документ.РасходныйКассовыйОрдер", "Чтение", "",
"Организации", "Организация",
"","",
"","",
"","",
"","","","","","","","",
"","","","","","","","",
"","","","","","","",""
)</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ФИОФизическихЛиц.StandardAttribute.Active</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ФИОФизическихЛиц.StandardAttribute.LineNumber</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ФИОФизическихЛиц.StandardAttribute.Recorder</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ФИОФизическихЛиц.StandardAttribute.Period</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Report.АР_ПланФактныйАнализПоступленияДС</name>
		<right>
			<name>Use</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.СчетаУчетаНоменклатуры</name>
		<right>
			<name>Read</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>// ОсновноеУсловиеЧтение
// Можно читать если есть доступ к (по или)
// Организации
// Организация пустая
#ПоЗначениямРасширенный("РегистрСведений.СчетаУчетаНоменклатуры", "Чтение",
"",
"",
"",
"Организации", "Т.Организация", "ИЛИ",
"", "Т.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)", "",
"","", "",
"", "", "", 
"","","", "","","", "","","", "","","", 
"","","", "","","", "","","", "","","", 
"","","", "","","", "","","", "","",""
)</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Document.АР_РасторжениеДоговораАренды</name>
		<right>
			<name>Read</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>// ОсновноеУсловиеЧтение
// Можно читать если есть доступ к (по или)
// Организации
#ПоЗначениям("Документ.АР_РасторжениеДоговораАренды", "Чтение", "",
"Организации", "Организация",
"","",
"","",
"","",
"","","","","","","","",
"","","","","","","","",
"","","","","","","",""
)</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Report.АР_ИсторияОбъектовАренды</name>
		<right>
			<name>Use</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Document.ПоступлениеНаРасчетныйСчет</name>
		<right>
			<name>Read</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>// ОсновноеУсловиеЧтение
// Можно читать если есть доступ к (по или)
// Организации
#ПоЗначениям("Документ.ПоступлениеНаРасчетныйСчет", "Чтение", "",
"Организации", "Организация",
"","",
"","",
"","",
"","","","","","","","",
"","","","","","","","",
"","","","","","","",""
)</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.АР_ТелефоныКонтрагентов</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>AccumulationRegister.ИПМПЗОбороты.Dimension.НоменклатураСписанная</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Constant.АР_ХранитьФайлыПланировокВ1СДокументооборот</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>AccumulationRegister.НДСПредъявленныйРеализация0</name>
		<right>
			<name>Read</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>// ОсновноеУсловиеЧтение
// Можно читать если есть доступ к (по или)
// Организации
#ПоЗначениям("РегистрНакопления.НДСПредъявленныйРеализация0", "Чтение", "",
"Организации", "Организация",
"","",
"","",
"","",
"","","","","","","","",
"","","","","","","","",
"","","","","","","",""
)</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ПодразделенияОрганизаций</name>
		<right>
			<name>Read</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>// ОсновноеУсловиеЧтение
// Можно читать если есть доступ к (по или)
// Организации
#ПоЗначениям("Справочник.ПодразделенияОрганизаций", "Чтение", "",
"Организации", "Владелец",
"","",
"","",
"","",
"","","","","","","","",
"","","","","","","","",
"","","","","","","",""
)</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>AccumulationRegister.АР_НачисленияПоТарифицируемымУслугам</name>
		<right>
			<name>Read</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>// ОсновноеУсловиеЧтение
// Можно читать если есть доступ к (по или)
// Организации
#ПоЗначениям("РегистрНакопления.АР_НачисленияПоТарифицируемымУслугам", "Чтение", "",
"Организации", "ДоговорКонтрагента.Организация",
"","",
"","",
"","",
"","","","","","","","",
"","","","","","","","",
"","","","","","","",""
)</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДоговорыКонтрагентов.Attribute.КодРаздел7ДекларацииНДС</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Constant.ИспользоватьРучнуюКорректировкуДвижений</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ФизическиеЛица.Attribute.СтраховойНомерПФР</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДоговорыКонтрагентов.Attribute.НаименованиеДляСчетаФактурыНаАванс</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.АР_СтруктураАссортимента</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДополнительныеОтчетыИОбработки.TabularSection.Разделы.Attribute.Раздел</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>AccumulationRegister.НДСЗаписиКнигиПокупок</name>
		<right>
			<name>Read</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>// ОсновноеУсловиеЧтение
// Можно читать если есть доступ к (по или)
// Организации
#ПоЗначениям("РегистрНакопления.НДСЗаписиКнигиПокупок", "Чтение", "",
"Организации", "Организация",
"","",
"","",
"","",
"","","","","","","","",
"","","","","","","","",
"","","","","","","",""
)</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Constant.ВалютаРегламентированногоУчета</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.АР_АктПриемаПередачиПомещенияВАрендуПрисоединенныеФайлы</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДополнительныеОтчетыИОбработки.TabularSection.Команды.Attribute.ВариантЗапуска</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Report.АР_ЗанятостьПлощадей</name>
		<right>
			<name>Use</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДоговорыКонтрагентов.Attribute.ВалютаВзаиморасчетов</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДоговорыКонтрагентов.Attribute.НДСПоСтавкам4и2</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Constant.АР_ИспользоватьСреднийМесяц</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>AccountingRegister.Хозрасчетный.Resource.СуммаПР</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.АР_ИзменениеСтатусовОбъектов</name>
		<right>
			<name>Read</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>// ОсновноеУсловиеЧтение
// Можно читать если есть доступ к (по или)
// Организации
#ПоЗначениям("Документ.АР_ИзменениеСтатусовОбъектов", "Чтение", "",
"Организации", "Организация",
"","",
"","",
"","",
"","","","","","","","",
"","","","","","","","",
"","","","","","","",""
)</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ФизическиеЛица.TabularSection.КонтактнаяИнформация.Attribute.Город</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.Субконто</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Configuration.АрендаИУправлениеНедвижимостью</name>
		<right>
			<name>MainWindowModeNormal</name>
			<value>true</value>
		</right>
		<right>
			<name>MainWindowModeWorkplace</name>
			<value>true</value>
		</right>
		<right>
			<name>MainWindowModeEmbeddedWorkplace</name>
			<value>true</value>
		</right>
		<right>
			<name>MainWindowModeFullscreenWorkplace</name>
			<value>true</value>
		</right>
		<right>
			<name>MainWindowModeKiosk</name>
			<value>true</value>
		</right>
		<right>
			<name>AnalyticsSystemClient</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДоговорыКонтрагентов.Attribute.Дата</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.КонтактныеЛица</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>AccumulationRegister.КнигаУчетаДоходовИРасходов.Attribute.РеквизитыПервичногоДокумента</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДоговорыКонтрагентов.Attribute.ПроцентКомиссионногоВознаграждения</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>AccumulationRegister.ИПДоходы</name>
		<right>
			<name>Read</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>// ОсновноеУсловиеЧтение
// Можно читать если есть доступ к (по или)
// Организации
#ПоЗначениям("РегистрНакопления.ИПДоходы", "Чтение", "",
"Организации", "Организация",
"","",
"","",
"","",
"","","","","","","","",
"","","","","","","","",
"","","","","","","",""
)</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>AccumulationRegister.КнигаУчетаДоходовИРасходов.Resource.Графа5</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.АР_ПоказателиВыработки</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ФизическиеЛица.TabularSection.КонтактнаяИнформация.Attribute.Страна</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>AccumulationRegister.КнигаУчетаДоходовИРасходов.Resource.ДоходЕНВД</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.АР_НачислениеАренднойПлаты</name>
		<right>
			<name>Read</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>// ОсновноеУсловиеЧтение
// Можно читать если есть доступ к (по или)
// Организации
#ПоЗначениям("Документ.АР_НачислениеАренднойПлаты", "Чтение", "",
"Организации", "Организация",
"","",
"","",
"","",
"","","","","","","","",
"","","","","","","","",
"","","","","","","",""
)</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДополнительныеОтчетыИОбработки.Attribute.ХранилищеНастроек</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДоговорыКонтрагентов.Attribute.УдалитьПредъявляетНДС</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Constant.АР_ХранитьФайлыШаблоновВ1СДокументооборот</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Subsystem.АР_АрендаНедвижимости</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.АР_КурсыВалютДляРасчетовСАрендаторами</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДополнительныеОтчетыИОбработки.Attribute.Информация</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Constant.ВедетсяУчетРасчетовПоЗарплатеСводно</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.АР_ЭлементыОбъектовАренды</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>AccumulationRegister.КнигаУчетаДоходовИРасходов.Attribute.ЭтапПроведения</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Subsystem.АР_АрендаНедвижимости.Subsystem.УправлениеЭксплуатацией</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Constant.ВедетсяПроизводственнаяДеятельность</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.АР_ТехнологическиеКартыТехОбслуживания</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>AccumulationRegister.ИПМПЗОтгруженные</name>
		<right>
			<name>Read</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>// ОсновноеУсловиеЧтение
// Можно читать если есть доступ к (по или)
// Организации
#ПоЗначениям("РегистрНакопления.ИПМПЗОтгруженные", "Чтение", "",
"Организации", "Организация",
"","",
"","",
"","",
"","","","","","","","",
"","","","","","","","",
"","","","","","","",""
)</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ФизическиеЛица.Attribute.ФИО</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.АР_ГрафикиИзмененияСтавокНаУслуги</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.Банки</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Constant.АР_ИспользоватьГрафикИзмененияСтавокВДоговорахАренды</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>AccountingRegister.Хозрасчетный.Dimension.Валюта</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.СтатьиДвиженияДенежныхСредств</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Document.АР_ВводПараметровЭксплуатацииОбъектов</name>
		<right>
			<name>Read</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>// ОсновноеУсловиеЧтение
// Можно читать если есть доступ к (по или)
// Организации
#ПоЗначениям("Документ.АР_ВводПараметровЭксплуатацииОбъектов", "Чтение", "",
"Организации", "Организация",
"","",
"","",
"","",
"","","","","","","","",
"","","","","","","","",
"","","","","","","",""
)</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Constant.АР_СреднийМесяц</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДоговорыКонтрагентов.Attribute.НаименованиеОператораПеревода</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДоговорыКонтрагентов.Attribute.ПризнакАгента</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Constant.ПараметрыПереходаСРедакции20</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>AccumulationRegister.ИПМПЗОбороты.Resource.НДС</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ОсновныеСредства</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.Организации</name>
		<right>
			<name>Read</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>// ОрганизацияЧтение
// Можно читать если есть доступ к (по или)
// Организации
// Головной организации данной организации
// Любой организации с головной организацией равной головной организации данной
#ПоЗначениямРасширенный("Справочник.Организации", "Чтение",
"",
"ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК ОбособленныеПодразделения
ПО
    Т.ГоловнаяОрганизация &lt;&gt; ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
    И (
        Т.ГоловнаяОрганизация = ОбособленныеПодразделения.ГоловнаяОрганизация
        ИЛИ
        Т.ГоловнаяОрганизация = ОбособленныеПодразделения.Ссылка
      )
    ИЛИ
    Т.Ссылка = ОбособленныеПодразделения.ГоловнаяОрганизация",
"",
"Организации", "Т.Ссылка", "ИЛИ (",
"Организации", "Т.ГоловнаяОрганизация","И", 
"","Т.ГоловнаяОрганизация &lt;&gt; ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)", ") ИЛИ",
"Организации", "ОбособленныеПодразделения.Ссылка", "", 
"","","", "","","", "","","", "","","", 
"","","", "","","", "","","", "","","", 
"","","", "","","", "","","", "","",""
)</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДополнительныеОтчетыИОбработки.Attribute.ИспользоватьДляФормыСписка</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДополнительныеОтчетыИОбработки.Attribute.ИмяОбъекта</name>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<restrictionTemplate>
		<name>ПоЗначениям</name>
		<condition>// ПоЗначениям(Таблица, -, Модификатор, В1,П1, В2,П2, ...,  В(n), П(n)).
// № параметра:      1, 2,           3,  4, 5,  6, 7, ..., 2+n*2,3+n*2.
// Читается так: "ограничение доступа по значениям".
// Параметры:
//     Таблица   - Имя текущей таблицы, например "Документ.ПоступлениеТоваровИУслуг".
//     Модификатор - изменяет шаблон.
//                 1-й модификатор - строка "НеОграничиватьДоступКГруппам" указывает
//                  безусловно выбирать группы иерархического справочника. 
//                 Других модификаторов в этой версии шаблона не предусмотрено.
//     В(n)      - Вид доступа - имя вида доступа, например, "Организации". Для полей составного типа, с целью повышения
//                  производительности, лучше указать несколько имен, например, "Организации,ГруппыФизическихЛиц",
//                  чем использовать несколько блоков параметров, с одним и тем же именем поля.
//                  Специальные виды доступа "Условие", "НастройкиПрав", "ПравоЧтения", "ПравоИзменения"
//                  можно использовать только отдельно.
//                 Когда В(n) = "Условие" (или ""), тогда П(n) содержит строку условия на языке запросов, например
//                  "Т.Автор = &amp;АвторизованныйПользователь",
//                  "ТИПЗНАЧЕНИЯ(Т.Владелец) = ТИП(Справочник.Организации)", где Т - псевдоним текущей таблицы.
//                 Когда В(n) = "ПравоЧтения" Или "ПравоИзменения",
//                  выполняется проверка наличия права на таблицу значения Т.П(n).
//     П(n)      - Поле проверяемого значения, кроме случая В(n) = "Условие" (или "").
//  Примечение: максимальное количество одновременно проверяемых значений полей можно увеличить, изменив шаблон, но
// необходимо будет указывать все параметры шаблона, т.е. указывать пустые строки, когда количество полей меньше максимального.
//  Шаблон имеет структуру:
//     &lt;Общая часть условий&gt; &lt;Условие по группе параметров 1&gt; И &lt;Условие по группе параметров 2&gt; И ... &lt;Условие по группе параметров(n)&gt;
//  Пример:
//      ПоЗначениям("Документ.ПоступлениеТоваровИУслуг", "", "",
//      "Организации","Организация",
//      "Поставщики","Контрагент", "","", ...)

// Проверка правильности параметра Право.
#Если Не ("#Параметр(2)" = "Чтение"    Или "#Параметр(2)" = "Добавление" Или
          "#Параметр(2)" = "Изменение" Или "#Параметр(2)" = "Удаление"   Или "#Параметр(2)" = "")
      Или #ИмяТекущегоПраваДоступа &lt;&gt; "Чтение" И "#Параметр(2)"  = "Чтение"
      Или #ИмяТекущегоПраваДоступа  = "Чтение" И "#Параметр(2)" &lt;&gt; "Чтение" И "#Параметр(2)" &lt;&gt; "" #Тогда
    // Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
    НеверноеПраво: #Параметр(2)
#КонецЕсли

// Проверка правильности параметра ИмяТаблицы.
#Если "#Параметр(1)" &lt;&gt; #ИмяТекущейТаблицы #Тогда
    // Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
    НеверноеИмяТекущейТаблицы: "#Параметр(1)"
#КонецЕсли

// Проверка правильности параметра Модификатор.
#Если Не ("#Параметр(3)" = "НеОграничиватьДоступКГруппам" Или "#Параметр(3)" = "") #Тогда
    // Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
    НеверныйМодификатор: #Параметр(3)
#КонецЕсли

// Общая проверка использования ограничений доступа на уровне записей и
// проверка использования хотя бы одного ограничения из указанных видов доступа.
#Если &amp;ОграничиватьДоступНаУровнеЗаписей
  И Не (Истина
      И ("#Параметр(4)" = "" И "#Параметр(5)" = ""
         Или &amp;ВидыДоступаСОтключеннымИспользованием = "Все"
           И Не СтрСодержит(",Условие,,НастройкиПрав,Объект, ,ПравоЧтения,ПравоИзменения,", ",#Параметр(4),")
         Или СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(4),"))
      И ("#Параметр(6)" = "" И "#Параметр(7)" = ""
         Или &amp;ВидыДоступаСОтключеннымИспользованием = "Все"
           И Не СтрСодержит(",Условие,,НастройкиПрав,Объект, ,ПравоЧтения,ПравоИзменения,", ",#Параметр(6),")
         Или СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(6),"))
      И ("#Параметр(8)" = "" И "#Параметр(9)" = ""
         Или &amp;ВидыДоступаСОтключеннымИспользованием = "Все"
           И Не СтрСодержит(",Условие,,НастройкиПрав,Объект, ,ПравоЧтения,ПравоИзменения,", ",#Параметр(8),")
         Или СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(8),"))
      И ("#Параметр(10)" = "" И "#Параметр(11)" = ""
         Или &amp;ВидыДоступаСОтключеннымИспользованием = "Все"
           И Не СтрСодержит(",Условие,,НастройкиПрав,Объект, ,ПравоЧтения,ПравоИзменения,", ",#Параметр(10),")
         Или СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(10),"))
      И ("#Параметр(12)" = "" И "#Параметр(13)" = ""
         Или &amp;ВидыДоступаСОтключеннымИспользованием = "Все"
           И Не СтрСодержит(",Условие,,НастройкиПрав,Объект, ,ПравоЧтения,ПравоИзменения,", ",#Параметр(12),")
         Или СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(12),"))
      И ("#Параметр(14)" = "" И "#Параметр(15)" = ""
         Или &amp;ВидыДоступаСОтключеннымИспользованием = "Все"
           И Не СтрСодержит(",Условие,,НастройкиПрав,Объект, ,ПравоЧтения,ПравоИзменения,", ",#Параметр(14),")
         Или СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(14),"))
      И ("#Параметр(16)" = "" И "#Параметр(17)" = ""
         Или &amp;ВидыДоступаСОтключеннымИспользованием = "Все"
           И Не СтрСодержит(",Условие,,НастройкиПрав,Объект, ,ПравоЧтения,ПравоИзменения,", ",#Параметр(16),")
         Или СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(16),"))
      И ("#Параметр(18)" = "" И "#Параметр(19)" = ""
         Или &amp;ВидыДоступаСОтключеннымИспользованием = "Все"
           И Не СтрСодержит(",Условие,,НастройкиПрав,Объект, ,ПравоЧтения,ПравоИзменения,", ",#Параметр(18),")
         Или СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(18),"))
      И ("#Параметр(20)" = "" И "#Параметр(21)" = ""
         Или &amp;ВидыДоступаСОтключеннымИспользованием = "Все"
           И Не СтрСодержит(",Условие,,НастройкиПрав,Объект, ,ПравоЧтения,ПравоИзменения,", ",#Параметр(20),")
         Или СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(20),"))
      И ("#Параметр(22)" = "" И "#Параметр(23)" = ""
         Или &amp;ВидыДоступаСОтключеннымИспользованием = "Все"
           И Не СтрСодержит(",Условие,,НастройкиПрав,Объект, ,ПравоЧтения,ПравоИзменения,", ",#Параметр(22),")
         Или СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(22),"))
      И ("#Параметр(24)" = "" И "#Параметр(25)" = ""
         Или &amp;ВидыДоступаСОтключеннымИспользованием = "Все"
           И Не СтрСодержит(",Условие,,НастройкиПрав,Объект, ,ПравоЧтения,ПравоИзменения,", ",#Параметр(24),")
         Или СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(24),"))
      И ("#Параметр(26)" = "" И "#Параметр(27)" = ""
         Или &amp;ВидыДоступаСОтключеннымИспользованием = "Все"
           И Не СтрСодержит(",Условие,,НастройкиПрав,Объект, ,ПравоЧтения,ПравоИзменения,", ",#Параметр(26),")
         Или СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(26),"))
      И ("#Параметр(28)" = "" И "#Параметр(29)" = ""
         Или &amp;ВидыДоступаСОтключеннымИспользованием = "Все"
           И Не СтрСодержит(",Условие,,НастройкиПрав,Объект, ,ПравоЧтения,ПравоИзменения,", ",#Параметр(28),")
         Или СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(28),"))
      И ("#Параметр(30)" = "" И "#Параметр(31)" = ""
         Или &amp;ВидыДоступаСОтключеннымИспользованием = "Все"
           И Не СтрСодержит(",Условие,,НастройкиПрав,Объект, ,ПравоЧтения,ПравоИзменения,", ",#Параметр(30),")
         Или СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(30),"))
      И ("#Параметр(32)" = "" И "#Параметр(33)" = ""
         Или &amp;ВидыДоступаСОтключеннымИспользованием = "Все"
           И Не СтрСодержит(",Условие,,НастройкиПрав,Объект, ,ПравоЧтения,ПравоИзменения,", ",#Параметр(32),")
         Или СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(32),"))
      И ("#Параметр(34)" = "" И "#Параметр(35)" = ""
         Или &amp;ВидыДоступаСОтключеннымИспользованием = "Все"
           И Не СтрСодержит(",Условие,,НастройкиПрав,Объект, ,ПравоЧтения,ПравоИзменения,", ",#Параметр(34),")
         Или СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(34),"))
       ) #Тогда

Т ГДЕ // Т - псевдоним текущей таблицы (выбран коротким, чтобы сократить количество символов в тексте параметра-условия на языке запросов).

// Безусловная выборка групп в иерархическом объекте метаданных (если нужно).
#Если "#Параметр(3)" = "НеОграничиватьДоступКГруппам" #Тогда
    Т.ЭтоГруппа ИЛИ
#КонецЕсли

ИСТИНА В
(   // Проверка права пользователя на текущую таблицу в целом.
    // Права на таблицы формируются по составу ролей профиля группы доступа.
    ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
    ИЗ
        Справочник.ИдентификаторыОбъектовМетаданных КАК СвойстваТекущейТаблицы
        ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ГруппыДоступа КАК ГруппыДоступа
        ПО
              СвойстваТекущейТаблицы.ПолноеИмя = "#Параметр(1)"
            И ИСТИНА В
              (
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ
                    РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступа
                    ГДЕ
                          ТаблицыГруппДоступа.Таблица       = СвойстваТекущейТаблицы.Ссылка
                        И ТаблицыГруппДоступа.ГруппаДоступа = ГруппыДоступа.Ссылка
                    #Если Не #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                        И ТаблицыГруппДоступа.Изменение
                    #КонецЕсли
              )
            И ГруппыДоступа.Ссылка В
              (
                ВЫБРАТЬ
                    ГруппыДоступаПользователи.Ссылка КАК ГруппаДоступа
                ИЗ
                    Справочник.ГруппыДоступа.Пользователи КАК ГруппыДоступаПользователи
                    ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                    ПО
                          СоставыГруппПользователей.Пользователь = &amp;АвторизованныйПользователь
                        И СоставыГруппПользователей.ГруппаПользователей = ГруппыДоступаПользователи.Пользователь
              )
    ГДЕ
  ( // Поиск значений заданных полей в разрешенных значениях групп доступа (пользователей).

//// Проверка значения поля группы параметров 1.
#Если "#Параметр(4)" = "Условие" Или "#Параметр(4)" = "" #Тогда
    // Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
    ( #Параметр(5) )
#ИначеЕсли "#Параметр(4)" = "ПравоЧтения" Или "#Параметр(4)" = "ПравоИзменения" #Тогда
      Т.#Параметр(5) &lt;&gt; НЕОПРЕДЕЛЕНО
    И ИСТИНА В
     (  // Проверка права пользователя на таблицу Значения, установленного в поле.
        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
        ГДЕ
              ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
            И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТИПЗНАЧЕНИЯ(Т.#Параметр(5))
        #Если Не "#Параметр(4)" = "ПравоЧтения" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Изменение
        #КонецЕсли
     )
#ИначеЕсли "#Параметр(4)" = "НастройкиПрав" #Тогда
    
     (
        ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
            (
            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
            ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                ПО
                      НаследованиеНастроек.Объект = Т.#Параметр(5)
                    И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
                #Иначе
                  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                    И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                  #Иначе
                    И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                  #КонецЕсли
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
                #КонецЕсли
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                      СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                    И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
            )
         И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
            (
            ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
            ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                ПО
                      НаследованиеНастроек.Объект = Т.#Параметр(5)
                    И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
                #Иначе
                  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                    И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                  #Иначе
                    И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                  #КонецЕсли
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
                #КонецЕсли
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                      СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                    И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
            )
     )
#ИначеЕсли Не СтрСодержит(&amp;ВсеВидыДоступаКромеСпециальных, ",#Параметр(4),") #Тогда
    // Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
    #Если СтрСодержит("#Параметр(4)", ",") #Тогда
        НеверныйВидДоступа: "#Параметр(4)" - "Список имен видов доступа не найден"
    #Иначе
        НеверныйВидДоступа: "#Параметр(4)" - "Имя вида доступа не найдено"
    #КонецЕсли
#ИначеЕсли &amp;ВидыДоступаСОтключеннымИспользованием &lt;&gt; "Все"
         И Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(4),") #Тогда
    
     (
        #Если (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")        И СтрСодержит(",#Параметр(4),", ",Пользователи,"))
          Или (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") И СтрСодержит(",#Параметр(4),", ",ВнешниеПользователи,")) #Тогда
            НЕ
            (
            НЕ ИСТИНА В
                (
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                ГДЕ
                      ГруппыЗначенийДоступа.ЗначениеДоступа       = Т.#Параметр(5)
                    И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
                )
            И НЕ
        #Иначе
            (
        #КонецЕсли
            ВЫБОР
            КОГДА ИСТИНА В
                (
        #Если СтрСодержит(&amp;ВидыДоступаБезГруппДляЗначенияДоступа, ",#Параметр(4),") #Тогда
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ГДЕ
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = Т.#Параметр(5)
        #ИначеЕсли "Т.#Параметр(5)" = "Т.Ссылка" #Тогда
            #Если СтрСодержит("#Параметр(4)", ",") #Тогда
                // Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
                НеверныйВидДоступа: "#Параметр(4)" - "При проверке таблицы значения доступа можно указывать только один вид доступа"
            #ИначеЕсли СтрСодержит(&amp;ВидыДоступаСОднойГруппойДляЗначенияДоступа, ",#Параметр(4),") #Тогда
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ГДЕ
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = Т.ГруппаДоступа
            #Иначе // Значения доступа, для которых можно указать несколько групп значений доступа.
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                    ВНУТРЕННЕЕ СОЕДИНЕНИЕ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
                ПО
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаДоступа
                    И ГруппыЗначений.Ссылка    = Т.#Параметр(5)
            #КонецЕсли
        #Иначе // "Т.#Параметр(5)" &lt;&gt; "Т.Ссылка"
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                    ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                ПО
                      Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
                    И ГруппыЗначений.ЗначениеДоступа = Т.#Параметр(5)
        #КонецЕсли
                )
            ТОГДА ИСТИНА
            ИНАЧЕ ЛОЖЬ
            КОНЕЦ
            =
            ВЫБОР
            КОГДА ИСТИНА В
                (
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                ГДЕ
                      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(Т.#Параметр(5))
                    И ЗначенияПоУмолчанию.ВсеРазрешены = ЛОЖЬ
                )
            ТОГДА ИСТИНА
            ИНАЧЕ ЛОЖЬ
            КОНЕЦ
            )
     )
#Иначе
    ИСТИНА
#КонецЕсли

//// Проверка значения поля группы параметров 2.
#Если "#Параметр(6)" = "" И "#Параметр(7)" = "" #Тогда
    // Группа параметров не используется.
#ИначеЕсли "#Параметр(6)" = "Условие" Или "#Параметр(6)" = "" #Тогда
    // Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
    И ( #Параметр(7) )
#ИначеЕсли "#Параметр(6)" = "ПравоЧтения" Или "#Параметр(6)" = "ПравоИзменения" #Тогда
    И Т.#Параметр(7) &lt;&gt; НЕОПРЕДЕЛЕНО
    И ИСТИНА В
     (  // Проверка права пользователя на таблицу Значения, установленного в поле.
        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
        ГДЕ
              ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
            И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТИПЗНАЧЕНИЯ(Т.#Параметр(7))
        #Если Не "#Параметр(6)" = "ПравоЧтения" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Изменение
        #КонецЕсли
     )
#ИначеЕсли "#Параметр(6)" = "НастройкиПрав" #Тогда
    И
     (
        ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
            (
            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
            ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                ПО
                      НаследованиеНастроек.Объект = Т.#Параметр(7)
                    И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
                #Иначе
                  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                    И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                  #Иначе
                    И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                  #КонецЕсли
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
                #КонецЕсли
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                      СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                    И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
            )
         И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
            (
            ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
            ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                ПО
                      НаследованиеНастроек.Объект = Т.#Параметр(7)
                    И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
                #Иначе
                  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                    И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                  #Иначе
                    И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                  #КонецЕсли
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
                #КонецЕсли
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                      СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                    И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
            )
     )
#ИначеЕсли Не СтрСодержит(&amp;ВсеВидыДоступаКромеСпециальных, ",#Параметр(6),") #Тогда
    // Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
    #Если СтрСодержит("#Параметр(6)", ",") #Тогда
        НеверныйВидДоступа: "#Параметр(6)" - "Список имен видов доступа не найден"
    #Иначе
        НеверныйВидДоступа: "#Параметр(6)" - "Имя вида доступа не найдено"
    #КонецЕсли
#ИначеЕсли &amp;ВидыДоступаСОтключеннымИспользованием &lt;&gt; "Все"
         И Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(6),") #Тогда
    И
     (
        #Если (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")        И СтрСодержит(",#Параметр(6),", ",Пользователи,"))
          Или (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") И СтрСодержит(",#Параметр(6),", ",ВнешниеПользователи,")) #Тогда
            НЕ
            (
            НЕ ИСТИНА В
                (
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                ГДЕ
                      ГруппыЗначенийДоступа.ЗначениеДоступа       = Т.#Параметр(7)
                    И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
                )
            И НЕ
        #Иначе
            (
        #КонецЕсли
            ВЫБОР
            КОГДА ИСТИНА В
                (
        #Если СтрСодержит(&amp;ВидыДоступаБезГруппДляЗначенияДоступа, ",#Параметр(6),") #Тогда
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ГДЕ
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = Т.#Параметр(7)
        #ИначеЕсли "Т.#Параметр(7)" = "Т.Ссылка" #Тогда
            #Если СтрСодержит("#Параметр(6)", ",") #Тогда
                // Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
                НеверныйВидДоступа: "#Параметр(6)" - "При проверке таблицы значения доступа можно указывать только один вид доступа"
            #ИначеЕсли СтрСодержит(&amp;ВидыДоступаСОднойГруппойДляЗначенияДоступа, ",#Параметр(6),") #Тогда
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ГДЕ
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = Т.ГруппаДоступа
            #Иначе // Значения доступа, для которых можно указать несколько групп значений доступа.
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                    ВНУТРЕННЕЕ СОЕДИНЕНИЕ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
                ПО
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаДоступа
                    И ГруппыЗначений.Ссылка    = Т.#Параметр(7)
            #КонецЕсли
        #Иначе // "Т.#Параметр(7)" &lt;&gt; "Т.Ссылка"
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                    ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                ПО
                      Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
                    И ГруппыЗначений.ЗначениеДоступа = Т.#Параметр(7)
        #КонецЕсли
                )
            ТОГДА ИСТИНА
            ИНАЧЕ ЛОЖЬ
            КОНЕЦ
            =
            ВЫБОР
            КОГДА ИСТИНА В
                (
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                ГДЕ
                      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(Т.#Параметр(7))
                    И ЗначенияПоУмолчанию.ВсеРазрешены = ЛОЖЬ
                )
            ТОГДА ИСТИНА
            ИНАЧЕ ЛОЖЬ
            КОНЕЦ
            )
     )
#КонецЕсли

//// Проверка значения поля группы параметров 3.
#Если "#Параметр(8)" = "" И "#Параметр(9)" = "" #Тогда
    // Группа параметров не используется.
#ИначеЕсли "#Параметр(8)" = "Условие" Или "#Параметр(8)" = "" #Тогда
    // Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
    И ( #Параметр(9) )
#ИначеЕсли "#Параметр(8)" = "ПравоЧтения" Или "#Параметр(8)" = "ПравоИзменения" #Тогда
    И Т.#Параметр(9) &lt;&gt; НЕОПРЕДЕЛЕНО
    И ИСТИНА В
     (  // Проверка права пользователя на таблицу Значения, установленного в поле.
        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
        ГДЕ
              ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
            И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТИПЗНАЧЕНИЯ(Т.#Параметр(9))
        #Если Не "#Параметр(8)" = "ПравоЧтения" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Изменение
        #КонецЕсли
     )
#ИначеЕсли "#Параметр(8)" = "НастройкиПрав" #Тогда
    И
     (
        ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
            (
            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
            ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                ПО
                      НаследованиеНастроек.Объект = Т.#Параметр(9)
                    И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
                #Иначе
                  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                    И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                  #Иначе
                    И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                  #КонецЕсли
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
                #КонецЕсли
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                      СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                    И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
            )
         И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
            (
            ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
            ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                ПО
                      НаследованиеНастроек.Объект = Т.#Параметр(9)
                    И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
                #Иначе
                  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                    И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                  #Иначе
                    И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                  #КонецЕсли
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
                #КонецЕсли
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                      СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                    И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
            )
     )
#ИначеЕсли Не СтрСодержит(&amp;ВсеВидыДоступаКромеСпециальных, ",#Параметр(8),") #Тогда
    // Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
    #Если СтрСодержит("#Параметр(8)", ",") #Тогда
        НеверныйВидДоступа: "#Параметр(8)" - "Список имен видов доступа не найден"
    #Иначе
        НеверныйВидДоступа: "#Параметр(8)" - "Имя вида доступа не найдено"
    #КонецЕсли
#ИначеЕсли &amp;ВидыДоступаСОтключеннымИспользованием &lt;&gt; "Все"
         И Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(8),") #Тогда
    И
     (
        #Если (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")        И СтрСодержит(",#Параметр(8),", ",Пользователи,"))
          Или (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") И СтрСодержит(",#Параметр(8),", ",ВнешниеПользователи,")) #Тогда
            НЕ
            (
            НЕ ИСТИНА В
                (
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                ГДЕ
                      ГруппыЗначенийДоступа.ЗначениеДоступа       = Т.#Параметр(9)
                    И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
                )
            И НЕ
        #Иначе
            (
        #КонецЕсли
            ВЫБОР
            КОГДА ИСТИНА В
                (
        #Если СтрСодержит(&amp;ВидыДоступаБезГруппДляЗначенияДоступа, ",#Параметр(8),") #Тогда
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ГДЕ
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = Т.#Параметр(9)
        #ИначеЕсли "Т.#Параметр(9)" = "Т.Ссылка" #Тогда
            #Если СтрСодержит("#Параметр(8)", ",") #Тогда
                // Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
                НеверныйВидДоступа: "#Параметр(8)" - "При проверке таблицы значения доступа можно указывать только один вид доступа"
            #ИначеЕсли СтрСодержит(&amp;ВидыДоступаСОднойГруппойДляЗначенияДоступа, ",#Параметр(8),") #Тогда
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ГДЕ
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = Т.ГруппаДоступа
            #Иначе // Значения доступа, для которых можно указать несколько групп значений доступа.
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                    ВНУТРЕННЕЕ СОЕДИНЕНИЕ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
                ПО
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаДоступа
                    И ГруппыЗначений.Ссылка    = Т.#Параметр(9)
            #КонецЕсли
        #Иначе // "Т.#Параметр(9)" &lt;&gt; "Т.Ссылка"
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                    ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                ПО
                      Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
                    И ГруппыЗначений.ЗначениеДоступа = Т.#Параметр(9)
        #КонецЕсли
                )
            ТОГДА ИСТИНА
            ИНАЧЕ ЛОЖЬ
            КОНЕЦ
            =
            ВЫБОР
            КОГДА ИСТИНА В
                (
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                ГДЕ
                      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(Т.#Параметр(9))
                    И ЗначенияПоУмолчанию.ВсеРазрешены = ЛОЖЬ
                )
            ТОГДА ИСТИНА
            ИНАЧЕ ЛОЖЬ
            КОНЕЦ
            )
     )
#КонецЕсли

//// Проверка значения поля группы параметров 4.
#Если "#Параметр(10)" = "" И "#Параметр(11)" = "" #Тогда
    // Группа параметров не используется.
#ИначеЕсли "#Параметр(10)" = "Условие" Или "#Параметр(10)" = "" #Тогда
    // Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
    И ( #Параметр(11) )
#ИначеЕсли "#Параметр(10)" = "ПравоЧтения" Или "#Параметр(10)" = "ПравоИзменения" #Тогда
    И Т.#Параметр(11) &lt;&gt; НЕОПРЕДЕЛЕНО
    И ИСТИНА В
     (  // Проверка права пользователя на таблицу Значения, установленного в поле.
        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
        ГДЕ
              ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
            И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТИПЗНАЧЕНИЯ(Т.#Параметр(11))
        #Если Не "#Параметр(10)" = "ПравоЧтения" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Изменение
        #КонецЕсли
     )
#ИначеЕсли "#Параметр(10)" = "НастройкиПрав" #Тогда
    И
     (
        ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
            (
            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
            ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                ПО
                      НаследованиеНастроек.Объект = Т.#Параметр(11)
                    И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
                #Иначе
                  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                    И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                  #Иначе
                    И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                  #КонецЕсли
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
                #КонецЕсли
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                      СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                    И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
            )
         И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
            (
            ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
            ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                ПО
                      НаследованиеНастроек.Объект = Т.#Параметр(11)
                    И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
                #Иначе
                  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                    И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                  #Иначе
                    И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                  #КонецЕсли
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
                #КонецЕсли
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                      СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                    И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
            )
     )
#ИначеЕсли Не СтрСодержит(&amp;ВсеВидыДоступаКромеСпециальных, ",#Параметр(10),") #Тогда
    // Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
    #Если СтрСодержит("#Параметр(10)", ",") #Тогда
        НеверныйВидДоступа: "#Параметр(10)" - "Список имен видов доступа не найден"
    #Иначе
        НеверныйВидДоступа: "#Параметр(10)" - "Имя вида доступа не найдено"
    #КонецЕсли
#ИначеЕсли &amp;ВидыДоступаСОтключеннымИспользованием &lt;&gt; "Все"
         И Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(10),") #Тогда
    И
     (
        #Если (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")        И СтрСодержит(",#Параметр(10),", ",Пользователи,"))
          Или (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") И СтрСодержит(",#Параметр(10),", ",ВнешниеПользователи,")) #Тогда
            НЕ
            (
            НЕ ИСТИНА В
                (
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                ГДЕ
                      ГруппыЗначенийДоступа.ЗначениеДоступа       = Т.#Параметр(11)
                    И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
                )
            И НЕ
        #Иначе
            (
        #КонецЕсли
            ВЫБОР
            КОГДА ИСТИНА В
                (
        #Если СтрСодержит(&amp;ВидыДоступаБезГруппДляЗначенияДоступа, ",#Параметр(10),") #Тогда
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ГДЕ
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = Т.#Параметр(11)
        #ИначеЕсли "Т.#Параметр(11)" = "Т.Ссылка" #Тогда
            #Если СтрСодержит("#Параметр(10)", ",") #Тогда
                // Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
                НеверныйВидДоступа: "#Параметр(10)" - "При проверке таблицы значения доступа можно указывать только один вид доступа"
            #ИначеЕсли СтрСодержит(&amp;ВидыДоступаСОднойГруппойДляЗначенияДоступа, ",#Параметр(10),") #Тогда
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ГДЕ
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = Т.ГруппаДоступа
            #Иначе // Значения доступа, для которых можно указать несколько групп значений доступа.
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                    ВНУТРЕННЕЕ СОЕДИНЕНИЕ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
                ПО
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаДоступа
                    И ГруппыЗначений.Ссылка    = Т.#Параметр(11)
            #КонецЕсли
        #Иначе // "Т.#Параметр(11)" &lt;&gt; "Т.Ссылка"
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                    ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                ПО
                      Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
                    И ГруппыЗначений.ЗначениеДоступа = Т.#Параметр(11)
        #КонецЕсли
                )
            ТОГДА ИСТИНА
            ИНАЧЕ ЛОЖЬ
            КОНЕЦ
            =
            ВЫБОР
            КОГДА ИСТИНА В
                (
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                ГДЕ
                      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(Т.#Параметр(11))
                    И ЗначенияПоУмолчанию.ВсеРазрешены = ЛОЖЬ
                )
            ТОГДА ИСТИНА
            ИНАЧЕ ЛОЖЬ
            КОНЕЦ
            )
     )
#КонецЕсли

//// Проверка значения поля группы параметров 5.
#Если "#Параметр(12)" = "" И "#Параметр(13)" = "" #Тогда
    // Группа параметров не используется.
#ИначеЕсли "#Параметр(12)" = "Условие" Или "#Параметр(12)" = "" #Тогда
    // Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
    И ( #Параметр(13) )
#ИначеЕсли "#Параметр(12)" = "ПравоЧтения" Или "#Параметр(12)" = "ПравоИзменения" #Тогда
    И Т.#Параметр(13) &lt;&gt; НЕОПРЕДЕЛЕНО
    И ИСТИНА В
     (  // Проверка права пользователя на таблицу Значения, установленного в поле.
        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
        ГДЕ
              ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
            И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТИПЗНАЧЕНИЯ(Т.#Параметр(13))
        #Если Не "#Параметр(12)" = "ПравоЧтения" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Изменение
        #КонецЕсли
     )
#ИначеЕсли "#Параметр(12)" = "НастройкиПрав" #Тогда
    И
     (
        ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
            (
            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
            ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                ПО
                      НаследованиеНастроек.Объект = Т.#Параметр(13)
                    И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
                #Иначе
                  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                    И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                  #Иначе
                    И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                  #КонецЕсли
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
                #КонецЕсли
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                      СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                    И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
            )
         И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
            (
            ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
            ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                ПО
                      НаследованиеНастроек.Объект = Т.#Параметр(13)
                    И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
                #Иначе
                  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                    И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                  #Иначе
                    И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                  #КонецЕсли
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
                #КонецЕсли
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                      СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                    И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
            )
     )
#ИначеЕсли Не СтрСодержит(&amp;ВсеВидыДоступаКромеСпециальных, ",#Параметр(12),") #Тогда
    // Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
    #Если СтрСодержит("#Параметр(12)", ",") #Тогда
        НеверныйВидДоступа: "#Параметр(12)" - "Список имен видов доступа не найден"
    #Иначе
        НеверныйВидДоступа: "#Параметр(12)" - "Имя вида доступа не найдено"
    #КонецЕсли
#ИначеЕсли &amp;ВидыДоступаСОтключеннымИспользованием &lt;&gt; "Все"
         И Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(12),") #Тогда
    И
     (
        #Если (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")        И СтрСодержит(",#Параметр(12),", ",Пользователи,"))
          Или (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") И СтрСодержит(",#Параметр(12),", ",ВнешниеПользователи,")) #Тогда
            НЕ
            (
            НЕ ИСТИНА В
                (
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                ГДЕ
                      ГруппыЗначенийДоступа.ЗначениеДоступа       = Т.#Параметр(13)
                    И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
                )
            И НЕ
        #Иначе
            (
        #КонецЕсли
            ВЫБОР
            КОГДА ИСТИНА В
                (
        #Если СтрСодержит(&amp;ВидыДоступаБезГруппДляЗначенияДоступа, ",#Параметр(12),") #Тогда
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ГДЕ
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = Т.#Параметр(13)
        #ИначеЕсли "Т.#Параметр(13)" = "Т.Ссылка" #Тогда
            #Если СтрСодержит("#Параметр(12)", ",") #Тогда
                // Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
                НеверныйВидДоступа: "#Параметр(12)" - "При проверке таблицы значения доступа можно указывать только один вид доступа"
            #ИначеЕсли СтрСодержит(&amp;ВидыДоступаСОднойГруппойДляЗначенияДоступа, ",#Параметр(12),") #Тогда
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ГДЕ
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = Т.ГруппаДоступа
            #Иначе // Значения доступа, для которых можно указать несколько групп значений доступа.
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                    ВНУТРЕННЕЕ СОЕДИНЕНИЕ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
                ПО
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаДоступа
                    И ГруппыЗначений.Ссылка    = Т.#Параметр(13)
            #КонецЕсли
        #Иначе // "Т.#Параметр(13)" &lt;&gt; "Т.Ссылка"
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                    ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                ПО
                      Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
                    И ГруппыЗначений.ЗначениеДоступа = Т.#Параметр(13)
        #КонецЕсли
                )
            ТОГДА ИСТИНА
            ИНАЧЕ ЛОЖЬ
            КОНЕЦ
            =
            ВЫБОР
            КОГДА ИСТИНА В
                (
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                ГДЕ
                      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(Т.#Параметр(13))
                    И ЗначенияПоУмолчанию.ВсеРазрешены = ЛОЖЬ
                )
            ТОГДА ИСТИНА
            ИНАЧЕ ЛОЖЬ
            КОНЕЦ
            )
     )
#КонецЕсли

//// Проверка значения поля группы параметров 6.
#Если "#Параметр(14)" = "" И "#Параметр(15)" = "" #Тогда
    // Группа параметров не используется.
#ИначеЕсли "#Параметр(14)" = "Условие" Или "#Параметр(14)" = "" #Тогда
    // Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
    И ( #Параметр(15) )
#ИначеЕсли "#Параметр(14)" = "ПравоЧтения" Или "#Параметр(14)" = "ПравоИзменения" #Тогда
    И Т.#Параметр(15) &lt;&gt; НЕОПРЕДЕЛЕНО
    И ИСТИНА В
     (  // Проверка права пользователя на таблицу Значения, установленного в поле.
        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
        ГДЕ
              ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
            И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТИПЗНАЧЕНИЯ(Т.#Параметр(15))
        #Если Не "#Параметр(14)" = "ПравоЧтения" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Изменение
        #КонецЕсли
     )
#ИначеЕсли "#Параметр(14)" = "НастройкиПрав" #Тогда
    И
     (
        ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
            (
            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
            ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                ПО
                      НаследованиеНастроек.Объект = Т.#Параметр(15)
                    И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
                #Иначе
                  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                    И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                  #Иначе
                    И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                  #КонецЕсли
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
                #КонецЕсли
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                      СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                    И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
            )
         И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
            (
            ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
            ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                ПО
                      НаследованиеНастроек.Объект = Т.#Параметр(15)
                    И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
                #Иначе
                  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                    И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                  #Иначе
                    И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                  #КонецЕсли
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
                #КонецЕсли
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                      СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                    И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
            )
     )
#ИначеЕсли Не СтрСодержит(&amp;ВсеВидыДоступаКромеСпециальных, ",#Параметр(14),") #Тогда
    // Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
    #Если СтрСодержит("#Параметр(14)", ",") #Тогда
        НеверныйВидДоступа: "#Параметр(14)" - "Список имен видов доступа не найден"
    #Иначе
        НеверныйВидДоступа: "#Параметр(14)" - "Имя вида доступа не найдено"
    #КонецЕсли
#ИначеЕсли &amp;ВидыДоступаСОтключеннымИспользованием &lt;&gt; "Все"
         И Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(14),") #Тогда
    И
     (
        #Если (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")        И СтрСодержит(",#Параметр(14),", ",Пользователи,"))
          Или (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") И СтрСодержит(",#Параметр(14),", ",ВнешниеПользователи,")) #Тогда
            НЕ
            (
            НЕ ИСТИНА В
                (
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                ГДЕ
                      ГруппыЗначенийДоступа.ЗначениеДоступа       = Т.#Параметр(15)
                    И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
                )
            И НЕ
        #Иначе
            (
        #КонецЕсли
            ВЫБОР
            КОГДА ИСТИНА В
                (
        #Если СтрСодержит(&amp;ВидыДоступаБезГруппДляЗначенияДоступа, ",#Параметр(14),") #Тогда
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ГДЕ
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = Т.#Параметр(15)
        #ИначеЕсли "Т.#Параметр(15)" = "Т.Ссылка" #Тогда
            #Если СтрСодержит("#Параметр(14)", ",") #Тогда
                // Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
                НеверныйВидДоступа: "#Параметр(14)" - "При проверке таблицы значения доступа можно указывать только один вид доступа"
            #ИначеЕсли СтрСодержит(&amp;ВидыДоступаСОднойГруппойДляЗначенияДоступа, ",#Параметр(14),") #Тогда
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ГДЕ
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = Т.ГруппаДоступа
            #Иначе // Значения доступа, для которых можно указать несколько групп значений доступа.
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                    ВНУТРЕННЕЕ СОЕДИНЕНИЕ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
                ПО
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаДоступа
                    И ГруппыЗначений.Ссылка    = Т.#Параметр(15)
            #КонецЕсли
        #Иначе // "Т.#Параметр(15)" &lt;&gt; "Т.Ссылка"
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                    ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                ПО
                      Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
                    И ГруппыЗначений.ЗначениеДоступа = Т.#Параметр(15)
        #КонецЕсли
                )
            ТОГДА ИСТИНА
            ИНАЧЕ ЛОЖЬ
            КОНЕЦ
            =
            ВЫБОР
            КОГДА ИСТИНА В
                (
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                ГДЕ
                      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(Т.#Параметр(15))
                    И ЗначенияПоУмолчанию.ВсеРазрешены = ЛОЖЬ
                )
            ТОГДА ИСТИНА
            ИНАЧЕ ЛОЖЬ
            КОНЕЦ
            )
     )
#КонецЕсли

//// Проверка значения поля группы параметров 7.
#Если "#Параметр(16)" = "" И "#Параметр(17)" = "" #Тогда
    // Группа параметров не используется.
#ИначеЕсли "#Параметр(16)" = "Условие" Или "#Параметр(16)" = "" #Тогда
    // Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
    И ( #Параметр(17) )
#ИначеЕсли "#Параметр(16)" = "ПравоЧтения" Или "#Параметр(16)" = "ПравоИзменения" #Тогда
    И Т.#Параметр(17) &lt;&gt; НЕОПРЕДЕЛЕНО
    И ИСТИНА В
     (  // Проверка права пользователя на таблицу Значения, установленного в поле.
        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
        ГДЕ
              ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
            И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТИПЗНАЧЕНИЯ(Т.#Параметр(17))
        #Если Не "#Параметр(16)" = "ПравоЧтения" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Изменение
        #КонецЕсли
     )
#ИначеЕсли "#Параметр(16)" = "НастройкиПрав" #Тогда
    И
     (
        ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
            (
            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
            ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                ПО
                      НаследованиеНастроек.Объект = Т.#Параметр(17)
                    И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
                #Иначе
                  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                    И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                  #Иначе
                    И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                  #КонецЕсли
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
                #КонецЕсли
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                      СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                    И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
            )
         И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
            (
            ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
            ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                ПО
                      НаследованиеНастроек.Объект = Т.#Параметр(17)
                    И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
                #Иначе
                  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                    И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                  #Иначе
                    И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                  #КонецЕсли
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
                #КонецЕсли
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                      СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                    И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
            )
     )
#ИначеЕсли Не СтрСодержит(&amp;ВсеВидыДоступаКромеСпециальных, ",#Параметр(16),") #Тогда
    // Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
    #Если СтрСодержит("#Параметр(16)", ",") #Тогда
        НеверныйВидДоступа: "#Параметр(16)" - "Список имен видов доступа не найден"
    #Иначе
        НеверныйВидДоступа: "#Параметр(16)" - "Имя вида доступа не найдено"
    #КонецЕсли
#ИначеЕсли &amp;ВидыДоступаСОтключеннымИспользованием &lt;&gt; "Все"
         И Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(16),") #Тогда
    И
     (
        #Если (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")        И СтрСодержит(",#Параметр(16),", ",Пользователи,"))
          Или (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") И СтрСодержит(",#Параметр(16),", ",ВнешниеПользователи,")) #Тогда
            НЕ
            (
            НЕ ИСТИНА В
                (
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                ГДЕ
                      ГруппыЗначенийДоступа.ЗначениеДоступа       = Т.#Параметр(17)
                    И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
                )
            И НЕ
        #Иначе
            (
        #КонецЕсли
            ВЫБОР
            КОГДА ИСТИНА В
                (
        #Если СтрСодержит(&amp;ВидыДоступаБезГруппДляЗначенияДоступа, ",#Параметр(16),") #Тогда
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ГДЕ
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = Т.#Параметр(17)
        #ИначеЕсли "Т.#Параметр(17)" = "Т.Ссылка" #Тогда
            #Если СтрСодержит("#Параметр(16)", ",") #Тогда
                // Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
                НеверныйВидДоступа: "#Параметр(16)" - "При проверке таблицы значения доступа можно указывать только один вид доступа"
            #ИначеЕсли СтрСодержит(&amp;ВидыДоступаСОднойГруппойДляЗначенияДоступа, ",#Параметр(16),") #Тогда
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ГДЕ
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = Т.ГруппаДоступа
            #Иначе // Значения доступа, для которых можно указать несколько групп значений доступа.
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                    ВНУТРЕННЕЕ СОЕДИНЕНИЕ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
                ПО
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаДоступа
                    И ГруппыЗначений.Ссылка    = Т.#Параметр(17)
            #КонецЕсли
        #Иначе // "Т.#Параметр(17)" &lt;&gt; "Т.Ссылка"
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                    ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                ПО
                      Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
                    И ГруппыЗначений.ЗначениеДоступа = Т.#Параметр(17)
        #КонецЕсли
                )
            ТОГДА ИСТИНА
            ИНАЧЕ ЛОЖЬ
            КОНЕЦ
            =
            ВЫБОР
            КОГДА ИСТИНА В
                (
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                ГДЕ
                      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(Т.#Параметр(17))
                    И ЗначенияПоУмолчанию.ВсеРазрешены = ЛОЖЬ
                )
            ТОГДА ИСТИНА
            ИНАЧЕ ЛОЖЬ
            КОНЕЦ
            )
     )
#КонецЕсли

//// Проверка значения поля группы параметров 8.
#Если "#Параметр(18)" = "" И "#Параметр(19)" = "" #Тогда
    // Группа параметров не используется.
#ИначеЕсли "#Параметр(18)" = "Условие" Или "#Параметр(18)" = "" #Тогда
    // Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
    И ( #Параметр(19) )
#ИначеЕсли "#Параметр(18)" = "ПравоЧтения" Или "#Параметр(18)" = "ПравоИзменения" #Тогда
    И Т.#Параметр(19) &lt;&gt; НЕОПРЕДЕЛЕНО
    И ИСТИНА В
     (  // Проверка права пользователя на таблицу Значения, установленного в поле.
        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
        ГДЕ
              ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
            И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТИПЗНАЧЕНИЯ(Т.#Параметр(19))
        #Если Не "#Параметр(18)" = "ПравоЧтения" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Изменение
        #КонецЕсли
     )
#ИначеЕсли "#Параметр(18)" = "НастройкиПрав" #Тогда
    И
     (
        ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
            (
            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
            ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                ПО
                      НаследованиеНастроек.Объект = Т.#Параметр(19)
                    И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
                #Иначе
                  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                    И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                  #Иначе
                    И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                  #КонецЕсли
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
                #КонецЕсли
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                      СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                    И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
            )
         И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
            (
            ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
            ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                ПО
                      НаследованиеНастроек.Объект = Т.#Параметр(19)
                    И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
                #Иначе
                  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                    И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                  #Иначе
                    И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                  #КонецЕсли
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
                #КонецЕсли
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                      СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                    И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
            )
     )
#ИначеЕсли Не СтрСодержит(&amp;ВсеВидыДоступаКромеСпециальных, ",#Параметр(18),") #Тогда
    // Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
    #Если СтрСодержит("#Параметр(18)", ",") #Тогда
        НеверныйВидДоступа: "#Параметр(18)" - "Список имен видов доступа не найден"
    #Иначе
        НеверныйВидДоступа: "#Параметр(18)" - "Имя вида доступа не найдено"
    #КонецЕсли
#ИначеЕсли &amp;ВидыДоступаСОтключеннымИспользованием &lt;&gt; "Все"
         И Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(18),") #Тогда
    И
     (
        #Если (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")        И СтрСодержит(",#Параметр(18),", ",Пользователи,"))
          Или (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") И СтрСодержит(",#Параметр(18),", ",ВнешниеПользователи,")) #Тогда
            НЕ
            (
            НЕ ИСТИНА В
                (
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                ГДЕ
                      ГруппыЗначенийДоступа.ЗначениеДоступа       = Т.#Параметр(19)
                    И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
                )
            И НЕ
        #Иначе
            (
        #КонецЕсли
            ВЫБОР
            КОГДА ИСТИНА В
                (
        #Если СтрСодержит(&amp;ВидыДоступаБезГруппДляЗначенияДоступа, ",#Параметр(18),") #Тогда
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ГДЕ
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = Т.#Параметр(19)
        #ИначеЕсли "Т.#Параметр(19)" = "Т.Ссылка" #Тогда
            #Если СтрСодержит("#Параметр(18)", ",") #Тогда
                // Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
                НеверныйВидДоступа: "#Параметр(18)" - "При проверке таблицы значения доступа можно указывать только один вид доступа"
            #ИначеЕсли СтрСодержит(&amp;ВидыДоступаСОднойГруппойДляЗначенияДоступа, ",#Параметр(18),") #Тогда
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ГДЕ
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = Т.ГруппаДоступа
            #Иначе // Значения доступа, для которых можно указать несколько групп значений доступа.
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                    ВНУТРЕННЕЕ СОЕДИНЕНИЕ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
                ПО
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаДоступа
                    И ГруппыЗначений.Ссылка    = Т.#Параметр(19)
            #КонецЕсли
        #Иначе // "Т.#Параметр(19)" &lt;&gt; "Т.Ссылка"
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                    ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                ПО
                      Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
                    И ГруппыЗначений.ЗначениеДоступа = Т.#Параметр(19)
        #КонецЕсли
                )
            ТОГДА ИСТИНА
            ИНАЧЕ ЛОЖЬ
            КОНЕЦ
            =
            ВЫБОР
            КОГДА ИСТИНА В
                (
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                ГДЕ
                      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(Т.#Параметр(19))
                    И ЗначенияПоУмолчанию.ВсеРазрешены = ЛОЖЬ
                )
            ТОГДА ИСТИНА
            ИНАЧЕ ЛОЖЬ
            КОНЕЦ
            )
     )
#КонецЕсли

//// Проверка значения поля группы параметров 9.
#Если "#Параметр(20)" = "" И "#Параметр(21)" = "" #Тогда
    // Группа параметров не используется.
#ИначеЕсли "#Параметр(20)" = "Условие" Или "#Параметр(20)" = "" #Тогда
    // Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
    И ( #Параметр(21) )
#ИначеЕсли "#Параметр(20)" = "ПравоЧтения" Или "#Параметр(20)" = "ПравоИзменения" #Тогда
    И Т.#Параметр(21) &lt;&gt; НЕОПРЕДЕЛЕНО
    И ИСТИНА В
     (  // Проверка права пользователя на таблицу Значения, установленного в поле.
        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
        ГДЕ
              ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
            И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТИПЗНАЧЕНИЯ(Т.#Параметр(21))
        #Если Не "#Параметр(20)" = "ПравоЧтения" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Изменение
        #КонецЕсли
     )
#ИначеЕсли "#Параметр(20)" = "НастройкиПрав" #Тогда
    И
     (
        ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
            (
            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
            ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                ПО
                      НаследованиеНастроек.Объект = Т.#Параметр(21)
                    И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
                #Иначе
                  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                    И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                  #Иначе
                    И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                  #КонецЕсли
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
                #КонецЕсли
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                      СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                    И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
            )
         И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
            (
            ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
            ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                ПО
                      НаследованиеНастроек.Объект = Т.#Параметр(21)
                    И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
                #Иначе
                  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                    И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                  #Иначе
                    И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                  #КонецЕсли
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
                #КонецЕсли
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                      СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                    И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
            )
     )
#ИначеЕсли Не СтрСодержит(&amp;ВсеВидыДоступаКромеСпециальных, ",#Параметр(20),") #Тогда
    // Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
    #Если СтрСодержит("#Параметр(20)", ",") #Тогда
        НеверныйВидДоступа: "#Параметр(20)" - "Список имен видов доступа не найден"
    #Иначе
        НеверныйВидДоступа: "#Параметр(20)" - "Имя вида доступа не найдено"
    #КонецЕсли
#ИначеЕсли &amp;ВидыДоступаСОтключеннымИспользованием &lt;&gt; "Все"
         И Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(20),") #Тогда
    И
     (
        #Если (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")        И СтрСодержит(",#Параметр(20),", ",Пользователи,"))
          Или (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") И СтрСодержит(",#Параметр(20),", ",ВнешниеПользователи,")) #Тогда
            НЕ
            (
            НЕ ИСТИНА В
                (
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                ГДЕ
                      ГруппыЗначенийДоступа.ЗначениеДоступа       = Т.#Параметр(21)
                    И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
                )
            И НЕ
        #Иначе
            (
        #КонецЕсли
            ВЫБОР
            КОГДА ИСТИНА В
                (
        #Если СтрСодержит(&amp;ВидыДоступаБезГруппДляЗначенияДоступа, ",#Параметр(20),") #Тогда
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ГДЕ
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = Т.#Параметр(21)
        #ИначеЕсли "Т.#Параметр(21)" = "Т.Ссылка" #Тогда
            #Если СтрСодержит("#Параметр(20)", ",") #Тогда
                // Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
                НеверныйВидДоступа: "#Параметр(20)" - "При проверке таблицы значения доступа можно указывать только один вид доступа"
            #ИначеЕсли СтрСодержит(&amp;ВидыДоступаСОднойГруппойДляЗначенияДоступа, ",#Параметр(20),") #Тогда
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ГДЕ
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = Т.ГруппаДоступа
            #Иначе // Значения доступа, для которых можно указать несколько групп значений доступа.
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                    ВНУТРЕННЕЕ СОЕДИНЕНИЕ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
                ПО
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаДоступа
                    И ГруппыЗначений.Ссылка    = Т.#Параметр(21)
            #КонецЕсли
        #Иначе // "Т.#Параметр(21)" &lt;&gt; "Т.Ссылка"
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                    ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                ПО
                      Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
                    И ГруппыЗначений.ЗначениеДоступа = Т.#Параметр(21)
        #КонецЕсли
                )
            ТОГДА ИСТИНА
            ИНАЧЕ ЛОЖЬ
            КОНЕЦ
            =
            ВЫБОР
            КОГДА ИСТИНА В
                (
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                ГДЕ
                      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(Т.#Параметр(21))
                    И ЗначенияПоУмолчанию.ВсеРазрешены = ЛОЖЬ
                )
            ТОГДА ИСТИНА
            ИНАЧЕ ЛОЖЬ
            КОНЕЦ
            )
     )
#КонецЕсли

//// Проверка значения поля группы параметров 10.
#Если "#Параметр(22)" = "" И "#Параметр(23)" = "" #Тогда
    // Группа параметров не используется.
#ИначеЕсли "#Параметр(22)" = "Условие" Или "#Параметр(22)" = "" #Тогда
    // Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
    И ( #Параметр(23) )
#ИначеЕсли "#Параметр(22)" = "ПравоЧтения" Или "#Параметр(22)" = "ПравоИзменения" #Тогда
    И Т.#Параметр(23) &lt;&gt; НЕОПРЕДЕЛЕНО
    И ИСТИНА В
     (  // Проверка права пользователя на таблицу Значения, установленного в поле.
        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
        ГДЕ
              ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
            И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТИПЗНАЧЕНИЯ(Т.#Параметр(23))
        #Если Не "#Параметр(22)" = "ПравоЧтения" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Изменение
        #КонецЕсли
     )
#ИначеЕсли "#Параметр(22)" = "НастройкиПрав" #Тогда
    И
     (
        ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
            (
            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
            ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                ПО
                      НаследованиеНастроек.Объект = Т.#Параметр(23)
                    И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
                #Иначе
                  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                    И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                  #Иначе
                    И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                  #КонецЕсли
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
                #КонецЕсли
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                      СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                    И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
            )
         И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
            (
            ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
            ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                ПО
                      НаследованиеНастроек.Объект = Т.#Параметр(23)
                    И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
                #Иначе
                  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                    И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                  #Иначе
                    И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                  #КонецЕсли
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
                #КонецЕсли
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                      СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                    И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
            )
     )
#ИначеЕсли Не СтрСодержит(&amp;ВсеВидыДоступаКромеСпециальных, ",#Параметр(22),") #Тогда
    // Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
    #Если СтрСодержит("#Параметр(22)", ",") #Тогда
        НеверныйВидДоступа: "#Параметр(22)" - "Список имен видов доступа не найден"
    #Иначе
        НеверныйВидДоступа: "#Параметр(22)" - "Имя вида доступа не найдено"
    #КонецЕсли
#ИначеЕсли &amp;ВидыДоступаСОтключеннымИспользованием &lt;&gt; "Все"
         И Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(22),") #Тогда
    И
     (
        #Если (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")        И СтрСодержит(",#Параметр(22),", ",Пользователи,"))
          Или (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") И СтрСодержит(",#Параметр(22),", ",ВнешниеПользователи,")) #Тогда
            НЕ
            (
            НЕ ИСТИНА В
                (
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                ГДЕ
                      ГруппыЗначенийДоступа.ЗначениеДоступа       = Т.#Параметр(23)
                    И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
                )
            И НЕ
        #Иначе
            (
        #КонецЕсли
            ВЫБОР
            КОГДА ИСТИНА В
                (
        #Если СтрСодержит(&amp;ВидыДоступаБезГруппДляЗначенияДоступа, ",#Параметр(22),") #Тогда
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ГДЕ
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = Т.#Параметр(23)
        #ИначеЕсли "Т.#Параметр(23)" = "Т.Ссылка" #Тогда
            #Если СтрСодержит("#Параметр(22)", ",") #Тогда
                // Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
                НеверныйВидДоступа: "#Параметр(22)" - "При проверке таблицы значения доступа можно указывать только один вид доступа"
            #ИначеЕсли СтрСодержит(&amp;ВидыДоступаСОднойГруппойДляЗначенияДоступа, ",#Параметр(22),") #Тогда
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ГДЕ
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = Т.ГруппаДоступа
            #Иначе // Значения доступа, для которых можно указать несколько групп значений доступа.
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                    ВНУТРЕННЕЕ СОЕДИНЕНИЕ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
                ПО
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаДоступа
                    И ГруппыЗначений.Ссылка    = Т.#Параметр(23)
            #КонецЕсли
        #Иначе // "Т.#Параметр(23)" &lt;&gt; "Т.Ссылка"
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                    ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                ПО
                      Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
                    И ГруппыЗначений.ЗначениеДоступа = Т.#Параметр(23)
        #КонецЕсли
                )
            ТОГДА ИСТИНА
            ИНАЧЕ ЛОЖЬ
            КОНЕЦ
            =
            ВЫБОР
            КОГДА ИСТИНА В
                (
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                ГДЕ
                      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(Т.#Параметр(23))
                    И ЗначенияПоУмолчанию.ВсеРазрешены = ЛОЖЬ
                )
            ТОГДА ИСТИНА
            ИНАЧЕ ЛОЖЬ
            КОНЕЦ
            )
     )
#КонецЕсли

//// Проверка значения поля группы параметров 11.
#Если "#Параметр(24)" = "" И "#Параметр(25)" = "" #Тогда
    // Группа параметров не используется.
#ИначеЕсли "#Параметр(24)" = "Условие" Или "#Параметр(24)" = "" #Тогда
    // Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
    И ( #Параметр(25) )
#ИначеЕсли "#Параметр(24)" = "ПравоЧтения" Или "#Параметр(24)" = "ПравоИзменения" #Тогда
    И Т.#Параметр(25) &lt;&gt; НЕОПРЕДЕЛЕНО
    И ИСТИНА В
     (  // Проверка права пользователя на таблицу Значения, установленного в поле.
        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
        ГДЕ
              ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
            И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТИПЗНАЧЕНИЯ(Т.#Параметр(25))
        #Если Не "#Параметр(24)" = "ПравоЧтения" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Изменение
        #КонецЕсли
     )
#ИначеЕсли "#Параметр(24)" = "НастройкиПрав" #Тогда
    И
     (
        ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
            (
            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
            ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                ПО
                      НаследованиеНастроек.Объект = Т.#Параметр(25)
                    И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
                #Иначе
                  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                    И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                  #Иначе
                    И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                  #КонецЕсли
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
                #КонецЕсли
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                      СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                    И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
            )
         И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
            (
            ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
            ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                ПО
                      НаследованиеНастроек.Объект = Т.#Параметр(25)
                    И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
                #Иначе
                  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                    И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                  #Иначе
                    И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                  #КонецЕсли
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
                #КонецЕсли
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                      СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                    И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
            )
     )
#ИначеЕсли Не СтрСодержит(&amp;ВсеВидыДоступаКромеСпециальных, ",#Параметр(24),") #Тогда
    // Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
    #Если СтрСодержит("#Параметр(24)", ",") #Тогда
        НеверныйВидДоступа: "#Параметр(24)" - "Список имен видов доступа не найден"
    #Иначе
        НеверныйВидДоступа: "#Параметр(24)" - "Имя вида доступа не найдено"
    #КонецЕсли
#ИначеЕсли &amp;ВидыДоступаСОтключеннымИспользованием &lt;&gt; "Все"
         И Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(24),") #Тогда
    И
     (
        #Если (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")        И СтрСодержит(",#Параметр(24),", ",Пользователи,"))
          Или (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") И СтрСодержит(",#Параметр(24),", ",ВнешниеПользователи,")) #Тогда
            НЕ
            (
            НЕ ИСТИНА В
                (
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                ГДЕ
                      ГруппыЗначенийДоступа.ЗначениеДоступа       = Т.#Параметр(25)
                    И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
                )
            И НЕ
        #Иначе
            (
        #КонецЕсли
            ВЫБОР
            КОГДА ИСТИНА В
                (
        #Если СтрСодержит(&amp;ВидыДоступаБезГруппДляЗначенияДоступа, ",#Параметр(24),") #Тогда
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ГДЕ
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = Т.#Параметр(25)
        #ИначеЕсли "Т.#Параметр(25)" = "Т.Ссылка" #Тогда
            #Если СтрСодержит("#Параметр(24)", ",") #Тогда
                // Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
                НеверныйВидДоступа: "#Параметр(24)" - "При проверке таблицы значения доступа можно указывать только один вид доступа"
            #ИначеЕсли СтрСодержит(&amp;ВидыДоступаСОднойГруппойДляЗначенияДоступа, ",#Параметр(24),") #Тогда
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ГДЕ
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = Т.ГруппаДоступа
            #Иначе // Значения доступа, для которых можно указать несколько групп значений доступа.
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                    ВНУТРЕННЕЕ СОЕДИНЕНИЕ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
                ПО
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаДоступа
                    И ГруппыЗначений.Ссылка    = Т.#Параметр(25)
            #КонецЕсли
        #Иначе // "Т.#Параметр(25)" &lt;&gt; "Т.Ссылка"
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                    ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                ПО
                      Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
                    И ГруппыЗначений.ЗначениеДоступа = Т.#Параметр(25)
        #КонецЕсли
                )
            ТОГДА ИСТИНА
            ИНАЧЕ ЛОЖЬ
            КОНЕЦ
            =
            ВЫБОР
            КОГДА ИСТИНА В
                (
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                ГДЕ
                      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(Т.#Параметр(25))
                    И ЗначенияПоУмолчанию.ВсеРазрешены = ЛОЖЬ
                )
            ТОГДА ИСТИНА
            ИНАЧЕ ЛОЖЬ
            КОНЕЦ
            )
     )
#КонецЕсли

//// Проверка значения поля группы параметров 12.
#Если "#Параметр(26)" = "" И "#Параметр(27)" = "" #Тогда
    // Группа параметров не используется.
#ИначеЕсли "#Параметр(26)" = "Условие" Или "#Параметр(26)" = "" #Тогда
    // Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
    И ( #Параметр(27) )
#ИначеЕсли "#Параметр(26)" = "ПравоЧтения" Или "#Параметр(26)" = "ПравоИзменения" #Тогда
    И Т.#Параметр(27) &lt;&gt; НЕОПРЕДЕЛЕНО
    И ИСТИНА В
     (  // Проверка права пользователя на таблицу Значения, установленного в поле.
        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
        ГДЕ
              ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
            И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТИПЗНАЧЕНИЯ(Т.#Параметр(27))
        #Если Не "#Параметр(26)" = "ПравоЧтения" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Изменение
        #КонецЕсли
     )
#ИначеЕсли "#Параметр(26)" = "НастройкиПрав" #Тогда
    И
     (
        ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
            (
            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
            ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                ПО
                      НаследованиеНастроек.Объект = Т.#Параметр(27)
                    И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
                #Иначе
                  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                    И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                  #Иначе
                    И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                  #КонецЕсли
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
                #КонецЕсли
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                      СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                    И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
            )
         И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
            (
            ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
            ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                ПО
                      НаследованиеНастроек.Объект = Т.#Параметр(27)
                    И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
                #Иначе
                  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                    И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                  #Иначе
                    И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                  #КонецЕсли
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
                #КонецЕсли
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                      СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                    И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
            )
     )
#ИначеЕсли Не СтрСодержит(&amp;ВсеВидыДоступаКромеСпециальных, ",#Параметр(26),") #Тогда
    // Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
    #Если СтрСодержит("#Параметр(26)", ",") #Тогда
        НеверныйВидДоступа: "#Параметр(26)" - "Список имен видов доступа не найден"
    #Иначе
        НеверныйВидДоступа: "#Параметр(26)" - "Имя вида доступа не найдено"
    #КонецЕсли
#ИначеЕсли &amp;ВидыДоступаСОтключеннымИспользованием &lt;&gt; "Все"
         И Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(26),") #Тогда
    И
     (
        #Если (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")        И СтрСодержит(",#Параметр(26),", ",Пользователи,"))
          Или (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") И СтрСодержит(",#Параметр(26),", ",ВнешниеПользователи,")) #Тогда
            НЕ
            (
            НЕ ИСТИНА В
                (
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                ГДЕ
                      ГруппыЗначенийДоступа.ЗначениеДоступа       = Т.#Параметр(27)
                    И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
                )
            И НЕ
        #Иначе
            (
        #КонецЕсли
            ВЫБОР
            КОГДА ИСТИНА В
                (
        #Если СтрСодержит(&amp;ВидыДоступаБезГруппДляЗначенияДоступа, ",#Параметр(26),") #Тогда
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ГДЕ
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = Т.#Параметр(27)
        #ИначеЕсли "Т.#Параметр(27)" = "Т.Ссылка" #Тогда
            #Если СтрСодержит("#Параметр(26)", ",") #Тогда
                // Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
                НеверныйВидДоступа: "#Параметр(26)" - "При проверке таблицы значения доступа можно указывать только один вид доступа"
            #ИначеЕсли СтрСодержит(&amp;ВидыДоступаСОднойГруппойДляЗначенияДоступа, ",#Параметр(26),") #Тогда
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ГДЕ
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = Т.ГруппаДоступа
            #Иначе // Значения доступа, для которых можно указать несколько групп значений доступа.
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                    ВНУТРЕННЕЕ СОЕДИНЕНИЕ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
                ПО
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаДоступа
                    И ГруппыЗначений.Ссылка    = Т.#Параметр(27)
            #КонецЕсли
        #Иначе // "Т.#Параметр(27)" &lt;&gt; "Т.Ссылка"
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                    ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                ПО
                      Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
                    И ГруппыЗначений.ЗначениеДоступа = Т.#Параметр(27)
        #КонецЕсли
                )
            ТОГДА ИСТИНА
            ИНАЧЕ ЛОЖЬ
            КОНЕЦ
            =
            ВЫБОР
            КОГДА ИСТИНА В
                (
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                ГДЕ
                      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(Т.#Параметр(27))
                    И ЗначенияПоУмолчанию.ВсеРазрешены = ЛОЖЬ
                )
            ТОГДА ИСТИНА
            ИНАЧЕ ЛОЖЬ
            КОНЕЦ
            )
     )
#КонецЕсли

//// Проверка значения поля группы параметров 13.
#Если "#Параметр(28)" = "" И "#Параметр(29)" = "" #Тогда
    // Группа параметров не используется.
#ИначеЕсли "#Параметр(28)" = "Условие" Или "#Параметр(28)" = "" #Тогда
    // Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
    И ( #Параметр(29) )
#ИначеЕсли "#Параметр(28)" = "ПравоЧтения" Или "#Параметр(28)" = "ПравоИзменения" #Тогда
    И Т.#Параметр(29) &lt;&gt; НЕОПРЕДЕЛЕНО
    И ИСТИНА В
     (  // Проверка права пользователя на таблицу Значения, установленного в поле.
        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
        ГДЕ
              ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
            И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТИПЗНАЧЕНИЯ(Т.#Параметр(29))
        #Если Не "#Параметр(28)" = "ПравоЧтения" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Изменение
        #КонецЕсли
     )
#ИначеЕсли "#Параметр(28)" = "НастройкиПрав" #Тогда
    И
     (
        ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
            (
            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
            ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                ПО
                      НаследованиеНастроек.Объект = Т.#Параметр(29)
                    И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
                #Иначе
                  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                    И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                  #Иначе
                    И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                  #КонецЕсли
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
                #КонецЕсли
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                      СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                    И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
            )
         И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
            (
            ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
            ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                ПО
                      НаследованиеНастроек.Объект = Т.#Параметр(29)
                    И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
                #Иначе
                  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                    И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                  #Иначе
                    И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                  #КонецЕсли
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
                #КонецЕсли
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                      СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                    И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
            )
     )
#ИначеЕсли Не СтрСодержит(&amp;ВсеВидыДоступаКромеСпециальных, ",#Параметр(28),") #Тогда
    // Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
    #Если СтрСодержит("#Параметр(28)", ",") #Тогда
        НеверныйВидДоступа: "#Параметр(28)" - "Список имен видов доступа не найден"
    #Иначе
        НеверныйВидДоступа: "#Параметр(28)" - "Имя вида доступа не найдено"
    #КонецЕсли
#ИначеЕсли &amp;ВидыДоступаСОтключеннымИспользованием &lt;&gt; "Все"
         И Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(28),") #Тогда
    И
     (
        #Если (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")        И СтрСодержит(",#Параметр(28),", ",Пользователи,"))
          Или (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") И СтрСодержит(",#Параметр(28),", ",ВнешниеПользователи,")) #Тогда
            НЕ
            (
            НЕ ИСТИНА В
                (
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                ГДЕ
                      ГруппыЗначенийДоступа.ЗначениеДоступа       = Т.#Параметр(29)
                    И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
                )
            И НЕ
        #Иначе
            (
        #КонецЕсли
            ВЫБОР
            КОГДА ИСТИНА В
                (
        #Если СтрСодержит(&amp;ВидыДоступаБезГруппДляЗначенияДоступа, ",#Параметр(28),") #Тогда
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ГДЕ
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = Т.#Параметр(29)
        #ИначеЕсли "Т.#Параметр(29)" = "Т.Ссылка" #Тогда
            #Если СтрСодержит("#Параметр(28)", ",") #Тогда
                // Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
                НеверныйВидДоступа: "#Параметр(28)" - "При проверке таблицы значения доступа можно указывать только один вид доступа"
            #ИначеЕсли СтрСодержит(&amp;ВидыДоступаСОднойГруппойДляЗначенияДоступа, ",#Параметр(28),") #Тогда
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ГДЕ
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = Т.ГруппаДоступа
            #Иначе // Значения доступа, для которых можно указать несколько групп значений доступа.
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                    ВНУТРЕННЕЕ СОЕДИНЕНИЕ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
                ПО
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаДоступа
                    И ГруппыЗначений.Ссылка    = Т.#Параметр(29)
            #КонецЕсли
        #Иначе // "Т.#Параметр(29)" &lt;&gt; "Т.Ссылка"
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                    ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                ПО
                      Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
                    И ГруппыЗначений.ЗначениеДоступа = Т.#Параметр(29)
        #КонецЕсли
                )
            ТОГДА ИСТИНА
            ИНАЧЕ ЛОЖЬ
            КОНЕЦ
            =
            ВЫБОР
            КОГДА ИСТИНА В
                (
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                ГДЕ
                      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(Т.#Параметр(29))
                    И ЗначенияПоУмолчанию.ВсеРазрешены = ЛОЖЬ
                )
            ТОГДА ИСТИНА
            ИНАЧЕ ЛОЖЬ
            КОНЕЦ
            )
     )
#КонецЕсли

//// Проверка значения поля группы параметров 14.
#Если "#Параметр(30)" = "" И "#Параметр(31)" = "" #Тогда
    // Группа параметров не используется.
#ИначеЕсли "#Параметр(30)" = "Условие" Или "#Параметр(30)" = "" #Тогда
    // Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
    И ( #Параметр(31) )
#ИначеЕсли "#Параметр(30)" = "ПравоЧтения" Или "#Параметр(30)" = "ПравоИзменения" #Тогда
    И Т.#Параметр(31) &lt;&gt; НЕОПРЕДЕЛЕНО
    И ИСТИНА В
     (  // Проверка права пользователя на таблицу Значения, установленного в поле.
        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
        ГДЕ
              ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
            И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТИПЗНАЧЕНИЯ(Т.#Параметр(31))
        #Если Не "#Параметр(30)" = "ПравоЧтения" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Изменение
        #КонецЕсли
     )
#ИначеЕсли "#Параметр(30)" = "НастройкиПрав" #Тогда
    И
     (
        ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
            (
            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
            ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                ПО
                      НаследованиеНастроек.Объект = Т.#Параметр(31)
                    И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
                #Иначе
                  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                    И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                  #Иначе
                    И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                  #КонецЕсли
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
                #КонецЕсли
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                      СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                    И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
            )
         И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
            (
            ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
            ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                ПО
                      НаследованиеНастроек.Объект = Т.#Параметр(31)
                    И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
                #Иначе
                  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                    И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                  #Иначе
                    И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                  #КонецЕсли
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
                #КонецЕсли
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                      СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                    И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
            )
     )
#ИначеЕсли Не СтрСодержит(&amp;ВсеВидыДоступаКромеСпециальных, ",#Параметр(30),") #Тогда
    // Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
    #Если СтрСодержит("#Параметр(30)", ",") #Тогда
        НеверныйВидДоступа: "#Параметр(30)" - "Список имен видов доступа не найден"
    #Иначе
        НеверныйВидДоступа: "#Параметр(30)" - "Имя вида доступа не найдено"
    #КонецЕсли
#ИначеЕсли &amp;ВидыДоступаСОтключеннымИспользованием &lt;&gt; "Все"
         И Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(30),") #Тогда
    И
     (
        #Если (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")        И СтрСодержит(",#Параметр(30),", ",Пользователи,"))
          Или (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") И СтрСодержит(",#Параметр(30),", ",ВнешниеПользователи,")) #Тогда
            НЕ
            (
            НЕ ИСТИНА В
                (
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                ГДЕ
                      ГруппыЗначенийДоступа.ЗначениеДоступа       = Т.#Параметр(31)
                    И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
                )
            И НЕ
        #Иначе
            (
        #КонецЕсли
            ВЫБОР
            КОГДА ИСТИНА В
                (
        #Если СтрСодержит(&amp;ВидыДоступаБезГруппДляЗначенияДоступа, ",#Параметр(30),") #Тогда
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ГДЕ
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = Т.#Параметр(31)
        #ИначеЕсли "Т.#Параметр(31)" = "Т.Ссылка" #Тогда
            #Если СтрСодержит("#Параметр(30)", ",") #Тогда
                // Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
                НеверныйВидДоступа: "#Параметр(30)" - "При проверке таблицы значения доступа можно указывать только один вид доступа"
            #ИначеЕсли СтрСодержит(&amp;ВидыДоступаСОднойГруппойДляЗначенияДоступа, ",#Параметр(30),") #Тогда
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ГДЕ
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = Т.ГруппаДоступа
            #Иначе // Значения доступа, для которых можно указать несколько групп значений доступа.
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                    ВНУТРЕННЕЕ СОЕДИНЕНИЕ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
                ПО
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаДоступа
                    И ГруппыЗначений.Ссылка    = Т.#Параметр(31)
            #КонецЕсли
        #Иначе // "Т.#Параметр(31)" &lt;&gt; "Т.Ссылка"
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                    ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                ПО
                      Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
                    И ГруппыЗначений.ЗначениеДоступа = Т.#Параметр(31)
        #КонецЕсли
                )
            ТОГДА ИСТИНА
            ИНАЧЕ ЛОЖЬ
            КОНЕЦ
            =
            ВЫБОР
            КОГДА ИСТИНА В
                (
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                ГДЕ
                      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(Т.#Параметр(31))
                    И ЗначенияПоУмолчанию.ВсеРазрешены = ЛОЖЬ
                )
            ТОГДА ИСТИНА
            ИНАЧЕ ЛОЖЬ
            КОНЕЦ
            )
     )
#КонецЕсли

//// Проверка значения поля группы параметров 15.
#Если "#Параметр(32)" = "" И "#Параметр(33)" = "" #Тогда
    // Группа параметров не используется.
#ИначеЕсли "#Параметр(32)" = "Условие" Или "#Параметр(32)" = "" #Тогда
    // Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
    И ( #Параметр(33) )
#ИначеЕсли "#Параметр(32)" = "ПравоЧтения" Или "#Параметр(32)" = "ПравоИзменения" #Тогда
    И Т.#Параметр(33) &lt;&gt; НЕОПРЕДЕЛЕНО
    И ИСТИНА В
     (  // Проверка права пользователя на таблицу Значения, установленного в поле.
        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
        ГДЕ
              ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
            И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТИПЗНАЧЕНИЯ(Т.#Параметр(33))
        #Если Не "#Параметр(32)" = "ПравоЧтения" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Изменение
        #КонецЕсли
     )
#ИначеЕсли "#Параметр(32)" = "НастройкиПрав" #Тогда
    И
     (
        ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
            (
            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
            ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                ПО
                      НаследованиеНастроек.Объект = Т.#Параметр(33)
                    И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
                #Иначе
                  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                    И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                  #Иначе
                    И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                  #КонецЕсли
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
                #КонецЕсли
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                      СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                    И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
            )
         И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
            (
            ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
            ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                ПО
                      НаследованиеНастроек.Объект = Т.#Параметр(33)
                    И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
                #Иначе
                  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                    И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                  #Иначе
                    И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                  #КонецЕсли
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
                #КонецЕсли
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                      СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                    И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
            )
     )
#ИначеЕсли Не СтрСодержит(&amp;ВсеВидыДоступаКромеСпециальных, ",#Параметр(32),") #Тогда
    // Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
    #Если СтрСодержит("#Параметр(32)", ",") #Тогда
        НеверныйВидДоступа: "#Параметр(32)" - "Список имен видов доступа не найден"
    #Иначе
        НеверныйВидДоступа: "#Параметр(32)" - "Имя вида доступа не найдено"
    #КонецЕсли
#ИначеЕсли &amp;ВидыДоступаСОтключеннымИспользованием &lt;&gt; "Все"
         И Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(32),") #Тогда
    И
     (
        #Если (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")        И СтрСодержит(",#Параметр(32),", ",Пользователи,"))
          Или (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") И СтрСодержит(",#Параметр(32),", ",ВнешниеПользователи,")) #Тогда
            НЕ
            (
            НЕ ИСТИНА В
                (
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                ГДЕ
                      ГруппыЗначенийДоступа.ЗначениеДоступа       = Т.#Параметр(33)
                    И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
                )
            И НЕ
        #Иначе
            (
        #КонецЕсли
            ВЫБОР
            КОГДА ИСТИНА В
                (
        #Если СтрСодержит(&amp;ВидыДоступаБезГруппДляЗначенияДоступа, ",#Параметр(32),") #Тогда
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ГДЕ
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = Т.#Параметр(33)
        #ИначеЕсли "Т.#Параметр(33)" = "Т.Ссылка" #Тогда
            #Если СтрСодержит("#Параметр(32)", ",") #Тогда
                // Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
                НеверныйВидДоступа: "#Параметр(32)" - "При проверке таблицы значения доступа можно указывать только один вид доступа"
            #ИначеЕсли СтрСодержит(&amp;ВидыДоступаСОднойГруппойДляЗначенияДоступа, ",#Параметр(32),") #Тогда
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ГДЕ
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = Т.ГруппаДоступа
            #Иначе // Значения доступа, для которых можно указать несколько групп значений доступа.
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                    ВНУТРЕННЕЕ СОЕДИНЕНИЕ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
                ПО
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаДоступа
                    И ГруппыЗначений.Ссылка    = Т.#Параметр(33)
            #КонецЕсли
        #Иначе // "Т.#Параметр(33)" &lt;&gt; "Т.Ссылка"
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                    ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                ПО
                      Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
                    И ГруппыЗначений.ЗначениеДоступа = Т.#Параметр(33)
        #КонецЕсли
                )
            ТОГДА ИСТИНА
            ИНАЧЕ ЛОЖЬ
            КОНЕЦ
            =
            ВЫБОР
            КОГДА ИСТИНА В
                (
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                ГДЕ
                      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(Т.#Параметр(33))
                    И ЗначенияПоУмолчанию.ВсеРазрешены = ЛОЖЬ
                )
            ТОГДА ИСТИНА
            ИНАЧЕ ЛОЖЬ
            КОНЕЦ
            )
     )
#КонецЕсли

//// Проверка значения поля группы параметров 16.
#Если "#Параметр(34)" = "" И "#Параметр(35)" = "" #Тогда
    // Группа параметров не используется.
#ИначеЕсли "#Параметр(34)" = "Условие" Или "#Параметр(34)" = "" #Тогда
    // Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
    И ( #Параметр(35) )
#ИначеЕсли "#Параметр(34)" = "ПравоЧтения" Или "#Параметр(34)" = "ПравоИзменения" #Тогда
    И Т.#Параметр(35) &lt;&gt; НЕОПРЕДЕЛЕНО
    И ИСТИНА В
     (  // Проверка права пользователя на таблицу Значения, установленного в поле.
        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
        ГДЕ
              ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
            И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТИПЗНАЧЕНИЯ(Т.#Параметр(35))
        #Если Не "#Параметр(34)" = "ПравоЧтения" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Изменение
        #КонецЕсли
     )
#ИначеЕсли "#Параметр(34)" = "НастройкиПрав" #Тогда
    И
     (
        ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
            (
            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
            ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                ПО
                      НаследованиеНастроек.Объект = Т.#Параметр(35)
                    И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
                #Иначе
                  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                    И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                  #Иначе
                    И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                  #КонецЕсли
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
                #КонецЕсли
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                      СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                    И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
            )
         И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
            (
            ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
            ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                ПО
                      НаследованиеНастроек.Объект = Т.#Параметр(35)
                    И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
                #Иначе
                  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                    И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                  #Иначе
                    И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                  #КонецЕсли
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
                #КонецЕсли
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                      СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                    И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
            )
     )
#ИначеЕсли Не СтрСодержит(&amp;ВсеВидыДоступаКромеСпециальных, ",#Параметр(34),") #Тогда
    // Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
    #Если СтрСодержит("#Параметр(34)", ",") #Тогда
        НеверныйВидДоступа: "#Параметр(34)" - "Список имен видов доступа не найден"
    #Иначе
        НеверныйВидДоступа: "#Параметр(34)" - "Имя вида доступа не найдено"
    #КонецЕсли
#ИначеЕсли &amp;ВидыДоступаСОтключеннымИспользованием &lt;&gt; "Все"
         И Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(34),") #Тогда
    И
     (
        #Если (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")        И СтрСодержит(",#Параметр(34),", ",Пользователи,"))
          Или (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") И СтрСодержит(",#Параметр(34),", ",ВнешниеПользователи,")) #Тогда
            НЕ
            (
            НЕ ИСТИНА В
                (
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                ГДЕ
                      ГруппыЗначенийДоступа.ЗначениеДоступа       = Т.#Параметр(35)
                    И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
                )
            И НЕ
        #Иначе
            (
        #КонецЕсли
            ВЫБОР
            КОГДА ИСТИНА В
                (
        #Если СтрСодержит(&amp;ВидыДоступаБезГруппДляЗначенияДоступа, ",#Параметр(34),") #Тогда
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ГДЕ
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = Т.#Параметр(35)
        #ИначеЕсли "Т.#Параметр(35)" = "Т.Ссылка" #Тогда
            #Если СтрСодержит("#Параметр(34)", ",") #Тогда
                // Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
                НеверныйВидДоступа: "#Параметр(34)" - "При проверке таблицы значения доступа можно указывать только один вид доступа"
            #ИначеЕсли СтрСодержит(&amp;ВидыДоступаСОднойГруппойДляЗначенияДоступа, ",#Параметр(34),") #Тогда
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ГДЕ
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = Т.ГруппаДоступа
            #Иначе // Значения доступа, для которых можно указать несколько групп значений доступа.
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                    ВНУТРЕННЕЕ СОЕДИНЕНИЕ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
                ПО
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаДоступа
                    И ГруппыЗначений.Ссылка    = Т.#Параметр(35)
            #КонецЕсли
        #Иначе // "Т.#Параметр(35)" &lt;&gt; "Т.Ссылка"
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                    ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                ПО
                      Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
                    И ГруппыЗначений.ЗначениеДоступа = Т.#Параметр(35)
        #КонецЕсли
                )
            ТОГДА ИСТИНА
            ИНАЧЕ ЛОЖЬ
            КОНЕЦ
            =
            ВЫБОР
            КОГДА ИСТИНА В
                (
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                ГДЕ
                      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(Т.#Параметр(35))
                    И ЗначенияПоУмолчанию.ВсеРазрешены = ЛОЖЬ
                )
            ТОГДА ИСТИНА
            ИНАЧЕ ЛОЖЬ
            КОНЕЦ
            )
     )
#КонецЕсли

  )
)
#КонецЕсли</condition>
	</restrictionTemplate>
	<restrictionTemplate>
		<name>ПоЗначениямРасширенный</name>
		<condition>// ПоЗначениямИНаборамРасширенный(Таблица, -, Модификатор, ПрисоединяемыеТаблицы, О, В1,П1,О1, В2,П2,О2,..., В(n), П(n), О(n)).
// № параметра:                         1, 2,           3,                     4, 5,  6, 7, 8,  9,10,11,...,3+n*3,4+n*3,5+n*3.
// Читается так: "ограничение доступа по значениям и наборам расширенный".
// Параметры:
//     Таблица   - Имя текущей таблицы, например "Документ.ПоступлениеТоваровИУслуг".
//     Модификатор - изменяет шаблон.
//                 1-й модификатор - строка "НеОграничиватьДоступКГруппам" указывает
//                  безусловно выбирать группы иерархического справочника.
//                 2-й модификатор - строка "РасширенноеИЛИ" указывает для ограничений,
//                  например, "ПоОрганизациям или ПоУчетнымЗаписям" делать расширенную
//                  проверку, при которой вариант настройки вида доступа в группах доступа
//                  "Все разрешены, без запрещенных" считается, как "Вид доступа не используется".
//                  Если этого модификатора нет, тогда результат проверки Истина, что приводит
//                  к итоговому результату Истина, если "Все разрешены, без запрещенных"
//                  хотя бы по одному из видов доступа (либо ПоОрганизациям, либо ПоУчетнымЗаписям).
//                  Модификатор имеет смысл только при проверке наборов значений доступа.
//                  Можно использовать комбинации модификаторов: "НеОграничиватьДоступКГруппам",
//                  "РасширенноеИЛИ", "НеОграничиватьДоступКГруппам,РасширенноеИЛИ".
//                 Других модификаторов в этой версии шаблона не предусмотрено.
//     ПрисоединяемыеТаблицы - текст присоедиения дополнительных таблиц на языке запросов, например,
//                 "ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.АвансовыйОтчет.ОплатаПоставщикам КАК Т1
//                  ПО Т.Ссылка = Т1.Ссылка".
//                 Присоединение позволяет указать поля таблицы ОплатаПоставщикам, как поля основной таблицы
//                  для проверки их значений, как значений основной таблицы.
//                 Следует помнить, что при размножении строк в результате соединения, достаточно чтобы
//                  всего одна строка прошла условия проверки, т.е. результаты проверки строк объединяются по "ИЛИ".
//     О         - Начальные скобки "(".
//     В(n)      - Вид доступа - имя вида доступа, например, "Организации". Для полей составного типа, с целью повышения
//                  производительности, лучше указать несколько имен, например, "Организации,ГруппыФизическихЛиц",
//                  чем использовать несколько блоков параметров, с одним и тем же именем поля.
//                  Специальные виды доступа "Объект", "Условие", "НастройкиПрав", "ПравоЧтения", "ПравоИзменения"
//                  можно использовать только отдельно.
//                 Когда В(n) = "Условие" (или ""), Тогда П(n) содержит строку условия на языке запросов, например
//                   "Т.Автор = &amp;АвторизованныйПользователь",
//                   "ТИПЗНАЧЕНИЯ(Т.Владелец) = ТИП(Справочник.Организации)", где Т - псевдоним текущей таблицы.
//                 Когда В(n) = "ПравоЧтения" ИЛИ "ПравоИзменения",
//                   выполняется проверка наличия права на таблицу значения Т.П(n).
//                 Когда В(n) = "Объект" (или " "), то
//                   когда есть запись зависимости прав в регистре сведений ЗависимостиПравДоступа тогда
//                     выполняется проверка права чтения Т.П(n) и наборов значений доступа
//                     в регистре сведений НаборыЗначенийДоступа, считываемых по ссылке Т.П(n) для права чтения;
//                   иначе используется стандартное правило:
//                     когда Право = "Чтение" тогда выполняется проверка права чтения Т.П(n) и наборов значений доступа
//                       в регистре сведений НаборыЗначенийДоступа, считываемых по ссылке Т.П(n) для права чтения;
//                     когда Право = "Изменение" тогда выполняется проверка права изменения Т.П(n)
//                       и наборов значений доступа, считываемых по ссылке Т.П(n) для права изменения.
//     П(n)     - Поле проверяемого значения с псевдонимом, например "Т.Организация",
//                кроме случая В(n) = "Условие" (или "").
//     О(n)      - Логические операции "И", "ИЛИ" в сочетании с скобками "(", ")".
//  Примечение: максимальное количество одновременно проверяемых значений полей можно увеличить, изменив шаблон, но
// необходимо будет указывать все параметры шаблона, т.е. указывать пустые строки, когда количество полей меньше максимального.
//  Шаблон имеет структуру:
//     &lt;Соединение по таблице1&gt;  &lt;Соединение по таблице2&gt;  ... &lt;Соединение по таблице(m)&gt;
//     &lt;Общая часть условий&gt; &lt;Условие по группе параметров 1&gt; И/ИЛИ &lt;Условие по группе параметров 1&gt; И/ИЛИ ... &lt;Условие по группе параметров(n)&gt;
//  Пример:
//      ПоЗначениямИНаборамРасширенный("ЖурналДокументов.СкладскиеДокументы", "", "",
//      "",
//      "",
//      "Объект","Т.Ссылка","И",
//      "Объект","Т.ОсновнойДокумент","", "","","", ...)

// Проверка правильности параметра Право.
#Если Не ("#Параметр(2)" = "Чтение"    Или "#Параметр(2)" = "Добавление" Или
          "#Параметр(2)" = "Изменение" Или "#Параметр(2)" = "Удаление"   Или "#Параметр(2)" = "")
      Или #ИмяТекущегоПраваДоступа &lt;&gt; "Чтение" И "#Параметр(2)"  = "Чтение"
      Или #ИмяТекущегоПраваДоступа  = "Чтение" И "#Параметр(2)" &lt;&gt; "Чтение" И "#Параметр(2)" &lt;&gt; "" #Тогда
    // Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
    НеверноеПраво: #Параметр(2)
#КонецЕсли

// Проверка правильности параметра ИмяТаблицы.
#Если "#Параметр(1)" &lt;&gt; #ИмяТекущейТаблицы #Тогда
    // Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
    НеверноеИмяТекущейТаблицы: "#Параметр(1)"
#КонецЕсли

// Проверка правильности параметра Модификатор.
#Если Не (    "#Параметр(3)" = "НеОграничиватьДоступКГруппам"
          Или "#Параметр(3)" = "РасширенноеИЛИ"
          Или "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ"
          Или "#Параметр(3)" = "") #Тогда
    // Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
    НеверныйМодификатор: #Параметр(3)
#КонецЕсли

// Общая проверка использования ограничений доступа на уровне записей и
// проверка использования хотя бы одного ограничения из указанных видов доступа.
#Если &amp;ОграничиватьДоступНаУровнеЗаписей
  И Не (Истина
      И ("#Параметр(6)" = "" И "#Параметр(7)" = ""
         Или &amp;ВидыДоступаСОтключеннымИспользованием = "Все"
           И Не СтрСодержит(",Условие,,НастройкиПрав,Объект, ,ПравоЧтения,ПравоИзменения,", ",#Параметр(6),")
         Или СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(6),"))
      И ("#Параметр(9)" = "" И "#Параметр(10)" = ""
         Или &amp;ВидыДоступаСОтключеннымИспользованием = "Все"
           И Не СтрСодержит(",Условие,,НастройкиПрав,Объект, ,ПравоЧтения,ПравоИзменения,", ",#Параметр(9),")
         Или СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(9),"))
      И ("#Параметр(12)" = "" И "#Параметр(13)" = ""
         Или &amp;ВидыДоступаСОтключеннымИспользованием = "Все"
           И Не СтрСодержит(",Условие,,НастройкиПрав,Объект, ,ПравоЧтения,ПравоИзменения,", ",#Параметр(12),")
         Или СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(12),"))
      И ("#Параметр(15)" = "" И "#Параметр(16)" = ""
         Или &amp;ВидыДоступаСОтключеннымИспользованием = "Все"
           И Не СтрСодержит(",Условие,,НастройкиПрав,Объект, ,ПравоЧтения,ПравоИзменения,", ",#Параметр(15),")
         Или СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(15),"))
      И ("#Параметр(18)" = "" И "#Параметр(19)" = ""
         Или &amp;ВидыДоступаСОтключеннымИспользованием = "Все"
           И Не СтрСодержит(",Условие,,НастройкиПрав,Объект, ,ПравоЧтения,ПравоИзменения,", ",#Параметр(18),")
         Или СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(18),"))
      И ("#Параметр(21)" = "" И "#Параметр(22)" = ""
         Или &amp;ВидыДоступаСОтключеннымИспользованием = "Все"
           И Не СтрСодержит(",Условие,,НастройкиПрав,Объект, ,ПравоЧтения,ПравоИзменения,", ",#Параметр(21),")
         Или СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(21),"))
      И ("#Параметр(24)" = "" И "#Параметр(25)" = ""
         Или &amp;ВидыДоступаСОтключеннымИспользованием = "Все"
           И Не СтрСодержит(",Условие,,НастройкиПрав,Объект, ,ПравоЧтения,ПравоИзменения,", ",#Параметр(24),")
         Или СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(24),"))
      И ("#Параметр(27)" = "" И "#Параметр(28)" = ""
         Или &amp;ВидыДоступаСОтключеннымИспользованием = "Все"
           И Не СтрСодержит(",Условие,,НастройкиПрав,Объект, ,ПравоЧтения,ПравоИзменения,", ",#Параметр(27),")
         Или СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(27),"))
      И ("#Параметр(30)" = "" И "#Параметр(31)" = ""
         Или &amp;ВидыДоступаСОтключеннымИспользованием = "Все"
           И Не СтрСодержит(",Условие,,НастройкиПрав,Объект, ,ПравоЧтения,ПравоИзменения,", ",#Параметр(30),")
         Или СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(30),"))
      И ("#Параметр(33)" = "" И "#Параметр(34)" = ""
         Или &amp;ВидыДоступаСОтключеннымИспользованием = "Все"
           И Не СтрСодержит(",Условие,,НастройкиПрав,Объект, ,ПравоЧтения,ПравоИзменения,", ",#Параметр(33),")
         Или СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(33),"))
      И ("#Параметр(36)" = "" И "#Параметр(37)" = ""
         Или &amp;ВидыДоступаСОтключеннымИспользованием = "Все"
           И Не СтрСодержит(",Условие,,НастройкиПрав,Объект, ,ПравоЧтения,ПравоИзменения,", ",#Параметр(36),")
         Или СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(36),"))
      И ("#Параметр(39)" = "" И "#Параметр(40)" = ""
         Или &amp;ВидыДоступаСОтключеннымИспользованием = "Все"
           И Не СтрСодержит(",Условие,,НастройкиПрав,Объект, ,ПравоЧтения,ПравоИзменения,", ",#Параметр(39),")
         Или СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(39),"))
      И ("#Параметр(42)" = "" И "#Параметр(43)" = ""
         Или &amp;ВидыДоступаСОтключеннымИспользованием = "Все"
           И Не СтрСодержит(",Условие,,НастройкиПрав,Объект, ,ПравоЧтения,ПравоИзменения,", ",#Параметр(42),")
         Или СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(42),"))
      И ("#Параметр(45)" = "" И "#Параметр(46)" = ""
         Или &amp;ВидыДоступаСОтключеннымИспользованием = "Все"
           И Не СтрСодержит(",Условие,,НастройкиПрав,Объект, ,ПравоЧтения,ПравоИзменения,", ",#Параметр(45),")
         Или СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(45),"))
      И ("#Параметр(48)" = "" И "#Параметр(49)" = ""
         Или &amp;ВидыДоступаСОтключеннымИспользованием = "Все"
           И Не СтрСодержит(",Условие,,НастройкиПрав,Объект, ,ПравоЧтения,ПравоИзменения,", ",#Параметр(48),")
         Или СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(48),"))
      И ("#Параметр(51)" = "" И "#Параметр(52)" = ""
         Или &amp;ВидыДоступаСОтключеннымИспользованием = "Все"
           И Не СтрСодержит(",Условие,,НастройкиПрав,Объект, ,ПравоЧтения,ПравоИзменения,", ",#Параметр(51),")
         Или СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(51),"))
       ) #Тогда

Т ИЗ Т // Т - псевдоним текущей таблицы (выбран коротким, чтобы сократить количество символов в тексте параметра-условия на языке запросов).

// Присоединяемые таблицы к проверяемой строке текущей таблицы "Т".
#Параметр(4)

ГДЕ

// Безусловная выборка групп в иерархическом объекте метаданных (если нужно).
#Если "#Параметр(3)" = "НеОграничиватьДоступКГруппам" Или "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
    Т.ЭтоГруппа ИЛИ
#КонецЕсли

ИСТИНА В
(   // Проверка права пользователя на текущую таблицу в целом.
    // Права на таблицы формируются по составу ролей профиля группы доступа.
    ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
    ИЗ
        Справочник.ИдентификаторыОбъектовМетаданных КАК СвойстваТекущейТаблицы
        ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ГруппыДоступа КАК ГруппыДоступа
        ПО
              СвойстваТекущейТаблицы.ПолноеИмя = "#Параметр(1)"
            И ИСТИНА В
              (
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ
                    РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступа
                    ГДЕ
                          ТаблицыГруппДоступа.Таблица       = СвойстваТекущейТаблицы.Ссылка
                        И ТаблицыГруппДоступа.ГруппаДоступа = ГруппыДоступа.Ссылка
                    #Если Не #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                        И ТаблицыГруппДоступа.Изменение
                    #КонецЕсли
              )
            И ГруппыДоступа.Ссылка В
              (
                ВЫБРАТЬ
                    ГруппыДоступаПользователи.Ссылка КАК ГруппаДоступа
                ИЗ
                    Справочник.ГруппыДоступа.Пользователи КАК ГруппыДоступаПользователи
                    ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                    ПО
                          СоставыГруппПользователей.Пользователь = &amp;АвторизованныйПользователь
                        И СоставыГруппПользователей.ГруппаПользователей = ГруппыДоступаПользователи.Пользователь
              )
    ГДЕ
  ( // Поиск значений заданных полей в разрешенных значениях групп доступа (пользователей).

    #Параметр(5)  // [([(][(]...] 0-n открывающихся скобок.

//// Проверка значения поля группы параметров 1.
#Если "#Параметр(6)" = "Условие" Или "#Параметр(6)" = "" #Тогда
    // Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
    ( #Параметр(7) )
#ИначеЕсли "#Параметр(6)" = "ПравоЧтения" Или "#Параметр(6)" = "ПравоИзменения" #Тогда
      #Параметр(7) &lt;&gt; НЕОПРЕДЕЛЕНО
    И ИСТИНА В
     (  // Проверка права пользователя на таблицу Значения, установленного в поле.
        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
        ГДЕ
              ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
            И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(7))
        #Если Не "#Параметр(6)" = "ПравоЧтения" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Изменение
        #КонецЕсли
     )
#ИначеЕсли "#Параметр(6)" = "Объект" Или "#Параметр(6)" = " " #Тогда
    (
        // Проверка права объекта ведущей таблицы (зависимость по правам)
        (
            ИСТИНА В
            (
            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
            ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваОбъекта
            ГДЕ
                  ТаблицыГруппДоступаПроверкаПраваОбъекта.ГруппаДоступа = ГруппыДоступа.Ссылка
                И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПраваОбъекта.ТипТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(7))
            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                // Проверка ведущего права для права Чтение
                // Право Чтение может зависеть только от права Чтение
            #Иначе
                // Проверка ведущего права для права Изменение
                // Право Изменение может зависеть от ведущих прав Чтение, Изменение
                И НЕ
                (     ТаблицыГруппДоступаПроверкаПраваОбъекта.Изменение = ЛОЖЬ
                    И НЕ ИСТИНА В
                    (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                    ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
                    ГДЕ
                          ЗависимостиПравДоступа.ПодчиненнаяТаблица = СвойстваТекущейТаблицы.Ссылка
                        И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(7))
                    )
                )
            #КонецЕсли
            )
        )
        // Проверка ограничения права объекта ведущей таблицы
        И 
    #Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
        ВЫБОР КОГДА ИСТИНА В
                (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                    ИЗ Справочник.ИдентификаторыОбъектовМетаданных КАК Идентификаторы
                    ГДЕ
                          ТИПЗНАЧЕНИЯ(Идентификаторы.ЗначениеПустойСсылки) = ТИПЗНАЧЕНИЯ(#Параметр(7))
                        И Идентификаторы.ЗначениеПустойСсылки В (&amp;ТипыВладельцевНастроекПрав)
                )
        ТОГДА
            (
                ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
                    (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                    ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                        ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                        ПО
                              НаследованиеНастроек.Объект = #Параметр(7)
                            И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                        #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                            И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
                        #Иначе
                          #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                            И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                          #Иначе
                            И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                          #КонецЕсли
                            И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
                        #КонецЕсли
                        ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                        ПО
                              СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                            И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
                    )
                И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
                    (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
                    ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                        ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                        ПО
                              НаследованиеНастроек.Объект = #Параметр(7)
                            И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                        #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                            И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
                        #Иначе
                          #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                            И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                          #Иначе
                            И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                          #КонецЕсли
                            И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
                        #КонецЕсли
                        ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                        ПО
                              СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                            И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
                    )
            )
        ИНАЧЕ
    #КонецЕсли
    #Если "#Параметр(3)" = "РасширенноеИЛИ" Или "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
        НЕ
         (
          ИСТИНА В // Не все проверки отключены.
          (
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первого набора с не отключенной проверкой.
                ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
                ГДЕ
                      НомераНаборов.Объект = #Параметр(7)
                #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    // Право Чтение может зависеть только от права Чтение
                    И НомераНаборов.Чтение = ИСТИНА
                #Иначе
                    // Право Изменение может зависеть от ведущих прав Чтение, Изменение
                    И ВЫБОР
                        КОГДА ИСТИНА В
                            (
                            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                            ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
                            ГДЕ
                                  ЗависимостиПравДоступа.ПодчиненнаяТаблица             = СвойстваТекущейТаблицы.Ссылка
                                И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(7))
                            )
                        ТОГДА НомераНаборов.Чтение
                        ИНАЧЕ НомераНаборов.Изменение
                      КОНЕЦ
                #КонецЕсли
                    И
                ИСТИНА В // Не все проверки текущего набора отключены.
                (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первой не отключенной проверки текущего набора.
                    ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                    ГДЕ
                          НаборыЗначений.Объект      = #Параметр(7)
                        И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                        И НЕ ИСТИНА В
                            (
                                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Поиск настроек ограничений доступа
                                ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                                ГДЕ
                                      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                                    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                                    И ЗначенияПоУмолчанию.БезНастройки = ИСТИНА
                            )
                )
          ) И НЕ
    #Иначе
         (
    #КонецЕсли
          ИСТИНА В
          (
            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первого набора по которому доступ разрешен.
            ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
            ГДЕ
                  НомераНаборов.Объект = #Параметр(7)
            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                // Право Чтение может зависеть только от права Чтение
                И НомераНаборов.Чтение = ИСТИНА
            #Иначе
                // Право Изменение может зависеть от ведущих прав Чтение, Изменение
                И ВЫБОР
                    КОГДА ИСТИНА В
                        (
                        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
                        ГДЕ
                              ЗависимостиПравДоступа.ПодчиненнаяТаблица             = СвойстваТекущейТаблицы.Ссылка
                            И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(7))
                        )
                    ТОГДА НомераНаборов.Чтение
                    ИНАЧЕ НомераНаборов.Изменение
                  КОНЕЦ
            #КонецЕсли
                И
              #Если "#Параметр(3)" = "РасширенноеИЛИ" Или "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
                ИСТИНА В // Не все проверки текущего набора отключены.
                (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первой не отключенной проверки текущего набора.
                    ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                    ГДЕ
                          НаборыЗначений.Объект      = #Параметр(7)
                        И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                        И НЕ ИСТИНА В
                            (
                                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Поиск настроек ограничений доступа
                                ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                                ГДЕ
                                      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                                    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                                    И ЗначенияПоУмолчанию.БезНастройки = ИСТИНА
                            )
                )
                И
              #КонецЕсли
                  НЕ ЛОЖЬ В // Все проверки успешны.
                (
                ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ // Выбор первого не разрешенного значения доступа.
                ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                ГДЕ
                      НаборыЗначений.Объект      = #Параметр(7)
                    И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                    И НЕ
                ВЫБОР
            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
              #Если НЕ &amp;ВидыДоступаСОтключеннымИспользованием = "Все" #Тогда
                КОГДА НаборыЗначений.ЗначениеБезГрупп
                ТОГДА
                    ИСТИНА В
                        (
                        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                            ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                            ПО
                                  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                                И Значения.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                        ГДЕ
                              ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                            И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                            И ЕстьNull(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
                        )
              #КонецЕсли
                КОГДА НаборыЗначений.СтандартноеЗначение
            #Иначе
                КОГДА
                    ИСТИНА В
                    (
                        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                        ГДЕ
                            ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                    )
            #КонецЕсли
            #Если &amp;ВидыДоступаСОтключеннымИспользованием = "Все" #Тогда
                ТОГДА
                    ИСТИНА
            #Иначе
                ТОГДА
                #Если Не #ИмяТекущегоПраваДоступа = "Чтение"
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
                    ВЫБОР
                #КонецЕсли
                #Если Не #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    КОГДА
                        НЕ ИСТИНА В
                            (
                            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                            ИЗ Справочник.ИдентификаторыОбъектовМетаданных КАК ТипыСсылок
                            ГДЕ
                                  ТИПЗНАЧЕНИЯ(ТипыСсылок.ЗначениеПустойСсылки) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                                И ТипыСсылок.ЗначениеПустойСсылки В (&amp;ТипыЗначенийДоступаСГруппами)
                            )
                    ТОГДА
                        ИСТИНА В
                            (
                            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                            ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                                ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                                ПО
                                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                                    И Значения.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                            ГДЕ
                                  ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                                И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                                И ЕстьNull(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
                            )
                #КонецЕсли
                #Если Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
                    КОГДА
                        ИСТИНА В
                            (
                            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                            ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                            ГДЕ
                                  ГруппыЗначенийДоступа.ЗначениеДоступа       = НаборыЗначений.ЗначениеДоступа
                                И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
                            )
                    ТОГДА
                        ИСТИНА
                #КонецЕсли
                #Если Не #ИмяТекущегоПраваДоступа = "Чтение"
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
                    ИНАЧЕ
                #КонецЕсли
                        ИСТИНА В
                            (
                            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                            ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                                ПО
                                      ГруппыЗначений.ЗначениеДоступа    = НаборыЗначений.ЗначениеДоступа
                                    И ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                                    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                                
                                ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                                ПО
                                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                                    И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаЗначенийДоступа
                            ГДЕ
                                ЕстьNull(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
                            )
                #Если Не #ИмяТекущегоПраваДоступа = "Чтение"
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
                    КОНЕЦ
                #КонецЕсли
            #КонецЕсли
                // Проверка заведомого ложного или истинного однострочного набора значений.
                КОГДА НаборыЗначений.ЗначениеДоступа = ЗНАЧЕНИЕ(Перечисление.ДополнительныеЗначенияДоступа.ДоступРазрешен)
                ТОГДА ИСТИНА
                КОГДА НаборыЗначений.ЗначениеДоступа = ЗНАЧЕНИЕ(Перечисление.ДополнительныеЗначенияДоступа.ДоступЗапрещен)
                ТОГДА ЛОЖЬ
                // Проверка права доступа пользователя к таблице ЗначенияДоступа.
                КОГДА ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа) = ТИП(Справочник.ИдентификаторыОбъектовМетаданных)
            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                // Право Чтение может зависеть только от права Чтение
                ТОГДА ИСТИНА В
                    (   ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа = ГруппыДоступа.Ссылка
                            И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Таблица = НаборыЗначений.ЗначениеДоступа
                    )
            #Иначе
                ТОГДА ИСТИНА В
                    (   ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа = ГруппыДоступа.Ссылка
                            И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Таблица = НаборыЗначений.ЗначениеДоступа
                            И НЕ(НаборыЗначений.Уточнение &lt;&gt; ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                                    И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Изменение = ЛОЖЬ)
                    )
            #КонецЕсли
            #Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
                ИНАЧЕ
                    (
                    ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
                        (
                        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                            ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                            ПО
                                  НаследованиеНастроек.Объект = НаборыЗначений.ЗначениеДоступа
                                И НастройкиПрав.Объект        = НаследованиеНастроек.Родитель
                            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                                И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
                            #Иначе
                                И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
                                И НастройкиПрав.Таблица = ВЫБОР
                                    КОГДА НаборыЗначений.Уточнение В (&amp;ИдентификаторыТаблицСОтдельнымиНастройкамиПрав)
                                    ТОГДА НаборыЗначений.Уточнение
                                    ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка) КОНЕЦ
                            #КонецЕсли
                            ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                            ПО
                                  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                                И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
                        )
                    И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
                        (
                        ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
                        ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                            ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                            ПО
                                  НаследованиеНастроек.Объект = НаборыЗначений.ЗначениеДоступа
                                И НастройкиПрав.Объект        = НаследованиеНастроек.Родитель
                            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                                И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
                            #Иначе
                                И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
                                И НастройкиПрав.Таблица = ВЫБОР
                                    КОГДА НаборыЗначений.Уточнение В (&amp;ИдентификаторыТаблицСОтдельнымиНастройкамиПрав)
                                    ТОГДА НаборыЗначений.Уточнение
                                    ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка) КОНЕЦ
                            #КонецЕсли
                            ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                            ПО
                                  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                                И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
                        )
                    )
            #Иначе
                ИНАЧЕ
                    ЛОЖЬ
            #КонецЕсли
                КОНЕЦ
                ) // НЕ ЛОЖЬ В
          )
         )
    #Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
        КОНЕЦ
    #КонецЕсли
    )

#ИначеЕсли "#Параметр(6)" = "НастройкиПрав" #Тогда
    
     (
        ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
            (
            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
            ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                ПО
                      НаследованиеНастроек.Объект = #Параметр(7)
                    И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
                #Иначе
                  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                    И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                  #Иначе
                    И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                  #КонецЕсли
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
                #КонецЕсли
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                      СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                    И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
            )
         И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
            (
            ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
            ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                ПО
                      НаследованиеНастроек.Объект = #Параметр(7)
                    И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
                #Иначе
                  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                    И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                  #Иначе
                    И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                  #КонецЕсли
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
                #КонецЕсли
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                      СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                    И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
            )
     )
#ИначеЕсли Не СтрСодержит(&amp;ВсеВидыДоступаКромеСпециальных, ",#Параметр(6),") #Тогда
    // Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
    #Если СтрСодержит("#Параметр(6)", ",") #Тогда
        НеверныйВидДоступа: "#Параметр(6)" - "Список имен видов доступа не найден"
    #Иначе
        НеверныйВидДоступа: "#Параметр(6)" - "Имя вида доступа не найдено"
    #КонецЕсли
#ИначеЕсли &amp;ВидыДоступаСОтключеннымИспользованием &lt;&gt; "Все"
         И Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(6),") #Тогда
    
     (
        #Если (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")        И СтрСодержит(",#Параметр(6),", ",Пользователи,"))
          Или (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") И СтрСодержит(",#Параметр(6),", ",ВнешниеПользователи,")) #Тогда
            НЕ
            (
            НЕ ИСТИНА В
                (
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                ГДЕ
                      ГруппыЗначенийДоступа.ЗначениеДоступа       = #Параметр(7)
                    И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
                )
            И НЕ
        #Иначе
            (
        #КонецЕсли
            ВЫБОР
            КОГДА ИСТИНА В
                (
        #Если СтрСодержит(&amp;ВидыДоступаБезГруппДляЗначенияДоступа, ",#Параметр(6),") #Тогда
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ГДЕ
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = #Параметр(7)
        #ИначеЕсли "#Параметр(7)" = "Т.Ссылка" #Тогда
            #Если СтрСодержит("#Параметр(6)", ",") #Тогда
                // Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
                НеверныйВидДоступа: "#Параметр(6)" - "При проверке таблицы значения доступа можно указывать только один вид доступа"
            #ИначеЕсли СтрСодержит(&amp;ВидыДоступаСОднойГруппойДляЗначенияДоступа, ",#Параметр(6),") #Тогда
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ГДЕ
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = Т.ГруппаДоступа
            #Иначе // Значения доступа, для которых можно указать несколько групп значений доступа.
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                    ВНУТРЕННЕЕ СОЕДИНЕНИЕ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
                ПО
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаДоступа
                    И ГруппыЗначений.Ссылка    = #Параметр(7)
            #КонецЕсли
        #Иначе // "#Параметр(7)" &lt;&gt; "Т.Ссылка"
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                    ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                ПО
                      Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
                    И ГруппыЗначений.ЗначениеДоступа = #Параметр(7)
        #КонецЕсли
                )
            ТОГДА ИСТИНА
            ИНАЧЕ ЛОЖЬ
            КОНЕЦ
            =
            ВЫБОР
            КОГДА ИСТИНА В
                (
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                ГДЕ
                      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(#Параметр(7))
                    И ЗначенияПоУмолчанию.ВсеРазрешены = ЛОЖЬ
                )
            ТОГДА ИСТИНА
            ИНАЧЕ ЛОЖЬ
            КОНЕЦ
            )
     )

#Иначе
    ИСТИНА
#КонецЕсли

    #Параметр(8)  // [)[)][)]...] [ИЛИ|И] [([(][(]...] оператор И/ИЛИ с/без скобок.

//// Проверка значения поля группы параметров 2.
#Если "#Параметр(9)" = "" И "#Параметр(10)" = "" #Тогда
    // Группа параметров не используется.
#ИначеЕсли "#Параметр(9)" = "Условие" Или "#Параметр(9)" = "" #Тогда
    // Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
     ( #Параметр(10) )
#ИначеЕсли "#Параметр(9)" = "ПравоЧтения" Или "#Параметр(9)" = "ПравоИзменения" #Тогда
     #Параметр(10) &lt;&gt; НЕОПРЕДЕЛЕНО
    И ИСТИНА В
     (  // Проверка права пользователя на таблицу Значения, установленного в поле.
        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
        ГДЕ
              ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
            И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(10))
        #Если Не "#Параметр(9)" = "ПравоЧтения" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Изменение
        #КонецЕсли
     )
#ИначеЕсли "#Параметр(9)" = "Объект" Или "#Параметр(9)" = " " #Тогда
    (
        // Проверка права объекта ведущей таблицы (зависимость по правам)
        (
            ИСТИНА В
            (
            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
            ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваОбъекта
            ГДЕ
                  ТаблицыГруппДоступаПроверкаПраваОбъекта.ГруппаДоступа = ГруппыДоступа.Ссылка
                И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПраваОбъекта.ТипТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(10))
            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                // Проверка ведущего права для права Чтение
                // Право Чтение может зависеть только от права Чтение
            #Иначе
                // Проверка ведущего права для права Изменение
                // Право Изменение может зависеть от ведущих прав Чтение, Изменение
                И НЕ
                (     ТаблицыГруппДоступаПроверкаПраваОбъекта.Изменение = ЛОЖЬ
                    И НЕ ИСТИНА В
                    (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                    ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
                    ГДЕ
                          ЗависимостиПравДоступа.ПодчиненнаяТаблица = СвойстваТекущейТаблицы.Ссылка
                        И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(10))
                    )
                )
            #КонецЕсли
            )
        )
        // Проверка ограничения права объекта ведущей таблицы
        И 
    #Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
        ВЫБОР КОГДА ИСТИНА В
                (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                    ИЗ Справочник.ИдентификаторыОбъектовМетаданных КАК Идентификаторы
                    ГДЕ
                          ТИПЗНАЧЕНИЯ(Идентификаторы.ЗначениеПустойСсылки) = ТИПЗНАЧЕНИЯ(#Параметр(10))
                        И Идентификаторы.ЗначениеПустойСсылки В (&amp;ТипыВладельцевНастроекПрав)
                )
        ТОГДА
            (
                ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
                    (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                    ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                        ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                        ПО
                              НаследованиеНастроек.Объект = #Параметр(10)
                            И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                        #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                            И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
                        #Иначе
                          #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                            И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                          #Иначе
                            И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                          #КонецЕсли
                            И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
                        #КонецЕсли
                        ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                        ПО
                              СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                            И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
                    )
                И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
                    (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
                    ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                        ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                        ПО
                              НаследованиеНастроек.Объект = #Параметр(10)
                            И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                        #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                            И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
                        #Иначе
                          #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                            И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                          #Иначе
                            И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                          #КонецЕсли
                            И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
                        #КонецЕсли
                        ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                        ПО
                              СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                            И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
                    )
            )
        ИНАЧЕ
    #КонецЕсли
    #Если "#Параметр(3)" = "РасширенноеИЛИ" Или "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
        НЕ
         (
          ИСТИНА В // Не все проверки отключены.
          (
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первого набора с не отключенной проверкой.
                ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
                ГДЕ
                      НомераНаборов.Объект = #Параметр(10)
                #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    // Право Чтение может зависеть только от права Чтение
                    И НомераНаборов.Чтение = ИСТИНА
                #Иначе
                    // Право Изменение может зависеть от ведущих прав Чтение, Изменение
                    И ВЫБОР
                        КОГДА ИСТИНА В
                            (
                            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                            ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
                            ГДЕ
                                  ЗависимостиПравДоступа.ПодчиненнаяТаблица             = СвойстваТекущейТаблицы.Ссылка
                                И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(10))
                            )
                        ТОГДА НомераНаборов.Чтение
                        ИНАЧЕ НомераНаборов.Изменение
                      КОНЕЦ
                #КонецЕсли
                    И
                ИСТИНА В // Не все проверки текущего набора отключены.
                (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первой не отключенной проверки текущего набора.
                    ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                    ГДЕ
                          НаборыЗначений.Объект      = #Параметр(10)
                        И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                        И НЕ ИСТИНА В
                            (
                                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Поиск настроек ограничений доступа
                                ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                                ГДЕ
                                      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                                    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                                    И ЗначенияПоУмолчанию.БезНастройки = ИСТИНА
                            )
                )
          ) И НЕ
    #Иначе
         (
    #КонецЕсли
          ИСТИНА В
          (
            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первого набора по которому доступ разрешен.
            ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
            ГДЕ
                  НомераНаборов.Объект = #Параметр(10)
            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                // Право Чтение может зависеть только от права Чтение
                И НомераНаборов.Чтение = ИСТИНА
            #Иначе
                // Право Изменение может зависеть от ведущих прав Чтение, Изменение
                И ВЫБОР
                    КОГДА ИСТИНА В
                        (
                        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
                        ГДЕ
                              ЗависимостиПравДоступа.ПодчиненнаяТаблица             = СвойстваТекущейТаблицы.Ссылка
                            И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(10))
                        )
                    ТОГДА НомераНаборов.Чтение
                    ИНАЧЕ НомераНаборов.Изменение
                  КОНЕЦ
            #КонецЕсли
                И
              #Если "#Параметр(3)" = "РасширенноеИЛИ" Или "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
                ИСТИНА В // Не все проверки текущего набора отключены.
                (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первой не отключенной проверки текущего набора.
                    ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                    ГДЕ
                          НаборыЗначений.Объект      = #Параметр(10)
                        И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                        И НЕ ИСТИНА В
                            (
                                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Поиск настроек ограничений доступа
                                ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                                ГДЕ
                                      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                                    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                                    И ЗначенияПоУмолчанию.БезНастройки = ИСТИНА
                            )
                )
                И
              #КонецЕсли
                  НЕ ЛОЖЬ В // Все проверки успешны.
                (
                ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ // Выбор первого не разрешенного значения доступа.
                ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                ГДЕ
                      НаборыЗначений.Объект      = #Параметр(10)
                    И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                    И НЕ
                ВЫБОР
            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
              #Если НЕ &amp;ВидыДоступаСОтключеннымИспользованием = "Все" #Тогда
                КОГДА НаборыЗначений.ЗначениеБезГрупп
                ТОГДА
                    ИСТИНА В
                        (
                        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                            ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                            ПО
                                  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                                И Значения.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                        ГДЕ
                              ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                            И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                            И ЕстьNull(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
                        )
              #КонецЕсли
                КОГДА НаборыЗначений.СтандартноеЗначение
            #Иначе
                КОГДА
                    ИСТИНА В
                    (
                        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                        ГДЕ
                            ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                    )
            #КонецЕсли
            #Если &amp;ВидыДоступаСОтключеннымИспользованием = "Все" #Тогда
                ТОГДА
                    ИСТИНА
            #Иначе
                ТОГДА
                #Если Не #ИмяТекущегоПраваДоступа = "Чтение"
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
                    ВЫБОР
                #КонецЕсли
                #Если Не #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    КОГДА
                        НЕ ИСТИНА В
                            (
                            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                            ИЗ Справочник.ИдентификаторыОбъектовМетаданных КАК ТипыСсылок
                            ГДЕ
                                  ТИПЗНАЧЕНИЯ(ТипыСсылок.ЗначениеПустойСсылки) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                                И ТипыСсылок.ЗначениеПустойСсылки В (&amp;ТипыЗначенийДоступаСГруппами)
                            )
                    ТОГДА
                        ИСТИНА В
                            (
                            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                            ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                                ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                                ПО
                                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                                    И Значения.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                            ГДЕ
                                  ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                                И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                                И ЕстьNull(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
                            )
                #КонецЕсли
                #Если Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
                    КОГДА
                        ИСТИНА В
                            (
                            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                            ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                            ГДЕ
                                  ГруппыЗначенийДоступа.ЗначениеДоступа       = НаборыЗначений.ЗначениеДоступа
                                И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
                            )
                    ТОГДА
                        ИСТИНА
                #КонецЕсли
                #Если Не #ИмяТекущегоПраваДоступа = "Чтение"
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
                    ИНАЧЕ
                #КонецЕсли
                        ИСТИНА В
                            (
                            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                            ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                                ПО
                                      ГруппыЗначений.ЗначениеДоступа    = НаборыЗначений.ЗначениеДоступа
                                    И ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                                    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                                
                                ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                                ПО
                                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                                    И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаЗначенийДоступа
                            ГДЕ
                                ЕстьNull(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
                            )
                #Если Не #ИмяТекущегоПраваДоступа = "Чтение"
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
                    КОНЕЦ
                #КонецЕсли
            #КонецЕсли
                // Проверка заведомого ложного или истинного однострочного набора значений.
                КОГДА НаборыЗначений.ЗначениеДоступа = ЗНАЧЕНИЕ(Перечисление.ДополнительныеЗначенияДоступа.ДоступРазрешен)
                ТОГДА ИСТИНА
                КОГДА НаборыЗначений.ЗначениеДоступа = ЗНАЧЕНИЕ(Перечисление.ДополнительныеЗначенияДоступа.ДоступЗапрещен)
                ТОГДА ЛОЖЬ
                // Проверка права доступа пользователя к таблице ЗначенияДоступа.
                КОГДА ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа) = ТИП(Справочник.ИдентификаторыОбъектовМетаданных)
            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                // Право Чтение может зависеть только от права Чтение
                ТОГДА ИСТИНА В
                    (   ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа = ГруппыДоступа.Ссылка
                            И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Таблица = НаборыЗначений.ЗначениеДоступа
                    )
            #Иначе
                ТОГДА ИСТИНА В
                    (   ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа = ГруппыДоступа.Ссылка
                            И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Таблица = НаборыЗначений.ЗначениеДоступа
                            И НЕ(НаборыЗначений.Уточнение &lt;&gt; ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                                    И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Изменение = ЛОЖЬ)
                    )
            #КонецЕсли
            #Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
                ИНАЧЕ
                    (
                    ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
                        (
                        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                            ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                            ПО
                                  НаследованиеНастроек.Объект = НаборыЗначений.ЗначениеДоступа
                                И НастройкиПрав.Объект        = НаследованиеНастроек.Родитель
                            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                                И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
                            #Иначе
                                И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
                                И НастройкиПрав.Таблица = ВЫБОР
                                    КОГДА НаборыЗначений.Уточнение В (&amp;ИдентификаторыТаблицСОтдельнымиНастройкамиПрав)
                                    ТОГДА НаборыЗначений.Уточнение
                                    ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка) КОНЕЦ
                            #КонецЕсли
                            ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                            ПО
                                  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                                И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
                        )
                    И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
                        (
                        ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
                        ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                            ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                            ПО
                                  НаследованиеНастроек.Объект = НаборыЗначений.ЗначениеДоступа
                                И НастройкиПрав.Объект        = НаследованиеНастроек.Родитель
                            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                                И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
                            #Иначе
                                И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
                                И НастройкиПрав.Таблица = ВЫБОР
                                    КОГДА НаборыЗначений.Уточнение В (&amp;ИдентификаторыТаблицСОтдельнымиНастройкамиПрав)
                                    ТОГДА НаборыЗначений.Уточнение
                                    ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка) КОНЕЦ
                            #КонецЕсли
                            ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                            ПО
                                  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                                И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
                        )
                    )
            #Иначе
                ИНАЧЕ
                    ЛОЖЬ
            #КонецЕсли
                КОНЕЦ
                ) // НЕ ЛОЖЬ В
          )
         )
    #Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
        КОНЕЦ
    #КонецЕсли
    )

#ИначеЕсли "#Параметр(9)" = "НастройкиПрав" #Тогда
    
     (
        ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
            (
            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
            ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                ПО
                      НаследованиеНастроек.Объект = #Параметр(10)
                    И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
                #Иначе
                  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                    И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                  #Иначе
                    И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                  #КонецЕсли
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
                #КонецЕсли
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                      СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                    И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
            )
         И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
            (
            ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
            ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                ПО
                      НаследованиеНастроек.Объект = #Параметр(10)
                    И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
                #Иначе
                  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                    И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                  #Иначе
                    И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                  #КонецЕсли
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
                #КонецЕсли
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                      СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                    И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
            )
     )
#ИначеЕсли Не СтрСодержит(&amp;ВсеВидыДоступаКромеСпециальных, ",#Параметр(9),") #Тогда
    // Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
    #Если СтрСодержит("#Параметр(9)", ",") #Тогда
        НеверныйВидДоступа: "#Параметр(9)" - "Список имен видов доступа не найден"
    #Иначе
        НеверныйВидДоступа: "#Параметр(9)" - "Имя вида доступа не найдено"
    #КонецЕсли
#ИначеЕсли &amp;ВидыДоступаСОтключеннымИспользованием &lt;&gt; "Все"
         И Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(9),") #Тогда
    
     (
        #Если (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")        И СтрСодержит(",#Параметр(9),", ",Пользователи,"))
          Или (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") И СтрСодержит(",#Параметр(9),", ",ВнешниеПользователи,")) #Тогда
            НЕ
            (
            НЕ ИСТИНА В
                (
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                ГДЕ
                      ГруппыЗначенийДоступа.ЗначениеДоступа       = #Параметр(10)
                    И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
                )
            И НЕ
        #Иначе
            (
        #КонецЕсли
            ВЫБОР
            КОГДА ИСТИНА В
                (
        #Если СтрСодержит(&amp;ВидыДоступаБезГруппДляЗначенияДоступа, ",#Параметр(9),") #Тогда
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ГДЕ
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = #Параметр(10)
        #ИначеЕсли "#Параметр(10)" = "Т.Ссылка" #Тогда
            #Если СтрСодержит("#Параметр(9)", ",") #Тогда
                // Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
                НеверныйВидДоступа: "#Параметр(9)" - "При проверке таблицы значения доступа можно указывать только один вид доступа"
            #ИначеЕсли СтрСодержит(&amp;ВидыДоступаСОднойГруппойДляЗначенияДоступа, ",#Параметр(9),") #Тогда
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ГДЕ
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = Т.ГруппаДоступа
            #Иначе // Значения доступа, для которых можно указать несколько групп значений доступа.
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                    ВНУТРЕННЕЕ СОЕДИНЕНИЕ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
                ПО
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаДоступа
                    И ГруппыЗначений.Ссылка    = #Параметр(10)
            #КонецЕсли
        #Иначе // "#Параметр(10)" &lt;&gt; "Т.Ссылка"
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                    ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                ПО
                      Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
                    И ГруппыЗначений.ЗначениеДоступа = #Параметр(10)
        #КонецЕсли
                )
            ТОГДА ИСТИНА
            ИНАЧЕ ЛОЖЬ
            КОНЕЦ
            =
            ВЫБОР
            КОГДА ИСТИНА В
                (
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                ГДЕ
                      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(#Параметр(10))
                    И ЗначенияПоУмолчанию.ВсеРазрешены = ЛОЖЬ
                )
            ТОГДА ИСТИНА
            ИНАЧЕ ЛОЖЬ
            КОНЕЦ
            )
     )

#Иначе
    ИСТИНА
#КонецЕсли

    #Параметр(11)  // [)[)][)]...] [ИЛИ|И] [([(][(]...] оператор И/ИЛИ с/без скобок.

//// Проверка значения поля группы параметров 3.
#Если "#Параметр(12)" = "" И "#Параметр(13)" = "" #Тогда
    // Группа параметров не используется.
#ИначеЕсли "#Параметр(12)" = "Условие" Или "#Параметр(12)" = "" #Тогда
    // Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
     ( #Параметр(13) )
#ИначеЕсли "#Параметр(12)" = "ПравоЧтения" Или "#Параметр(12)" = "ПравоИзменения" #Тогда
     #Параметр(13) &lt;&gt; НЕОПРЕДЕЛЕНО
    И ИСТИНА В
     (  // Проверка права пользователя на таблицу Значения, установленного в поле.
        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
        ГДЕ
              ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
            И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(13))
        #Если Не "#Параметр(12)" = "ПравоЧтения" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Изменение
        #КонецЕсли
     )
#ИначеЕсли "#Параметр(12)" = "Объект" Или "#Параметр(12)" = " " #Тогда
    (
        // Проверка права объекта ведущей таблицы (зависимость по правам)
        (
            ИСТИНА В
            (
            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
            ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваОбъекта
            ГДЕ
                  ТаблицыГруппДоступаПроверкаПраваОбъекта.ГруппаДоступа = ГруппыДоступа.Ссылка
                И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПраваОбъекта.ТипТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(13))
            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                // Проверка ведущего права для права Чтение
                // Право Чтение может зависеть только от права Чтение
            #Иначе
                // Проверка ведущего права для права Изменение
                // Право Изменение может зависеть от ведущих прав Чтение, Изменение
                И НЕ
                (     ТаблицыГруппДоступаПроверкаПраваОбъекта.Изменение = ЛОЖЬ
                    И НЕ ИСТИНА В
                    (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                    ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
                    ГДЕ
                          ЗависимостиПравДоступа.ПодчиненнаяТаблица = СвойстваТекущейТаблицы.Ссылка
                        И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(13))
                    )
                )
            #КонецЕсли
            )
        )
        // Проверка ограничения права объекта ведущей таблицы
        И 
    #Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
        ВЫБОР КОГДА ИСТИНА В
                (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                    ИЗ Справочник.ИдентификаторыОбъектовМетаданных КАК Идентификаторы
                    ГДЕ
                          ТИПЗНАЧЕНИЯ(Идентификаторы.ЗначениеПустойСсылки) = ТИПЗНАЧЕНИЯ(#Параметр(13))
                        И Идентификаторы.ЗначениеПустойСсылки В (&amp;ТипыВладельцевНастроекПрав)
                )
        ТОГДА
            (
                ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
                    (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                    ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                        ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                        ПО
                              НаследованиеНастроек.Объект = #Параметр(13)
                            И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                        #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                            И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
                        #Иначе
                          #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                            И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                          #Иначе
                            И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                          #КонецЕсли
                            И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
                        #КонецЕсли
                        ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                        ПО
                              СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                            И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
                    )
                И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
                    (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
                    ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                        ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                        ПО
                              НаследованиеНастроек.Объект = #Параметр(13)
                            И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                        #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                            И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
                        #Иначе
                          #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                            И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                          #Иначе
                            И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                          #КонецЕсли
                            И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
                        #КонецЕсли
                        ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                        ПО
                              СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                            И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
                    )
            )
        ИНАЧЕ
    #КонецЕсли
    #Если "#Параметр(3)" = "РасширенноеИЛИ" Или "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
        НЕ
         (
          ИСТИНА В // Не все проверки отключены.
          (
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первого набора с не отключенной проверкой.
                ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
                ГДЕ
                      НомераНаборов.Объект = #Параметр(13)
                #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    // Право Чтение может зависеть только от права Чтение
                    И НомераНаборов.Чтение = ИСТИНА
                #Иначе
                    // Право Изменение может зависеть от ведущих прав Чтение, Изменение
                    И ВЫБОР
                        КОГДА ИСТИНА В
                            (
                            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                            ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
                            ГДЕ
                                  ЗависимостиПравДоступа.ПодчиненнаяТаблица             = СвойстваТекущейТаблицы.Ссылка
                                И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(13))
                            )
                        ТОГДА НомераНаборов.Чтение
                        ИНАЧЕ НомераНаборов.Изменение
                      КОНЕЦ
                #КонецЕсли
                    И
                ИСТИНА В // Не все проверки текущего набора отключены.
                (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первой не отключенной проверки текущего набора.
                    ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                    ГДЕ
                          НаборыЗначений.Объект      = #Параметр(13)
                        И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                        И НЕ ИСТИНА В
                            (
                                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Поиск настроек ограничений доступа
                                ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                                ГДЕ
                                      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                                    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                                    И ЗначенияПоУмолчанию.БезНастройки = ИСТИНА
                            )
                )
          ) И НЕ
    #Иначе
         (
    #КонецЕсли
          ИСТИНА В
          (
            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первого набора по которому доступ разрешен.
            ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
            ГДЕ
                  НомераНаборов.Объект = #Параметр(13)
            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                // Право Чтение может зависеть только от права Чтение
                И НомераНаборов.Чтение = ИСТИНА
            #Иначе
                // Право Изменение может зависеть от ведущих прав Чтение, Изменение
                И ВЫБОР
                    КОГДА ИСТИНА В
                        (
                        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
                        ГДЕ
                              ЗависимостиПравДоступа.ПодчиненнаяТаблица             = СвойстваТекущейТаблицы.Ссылка
                            И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(13))
                        )
                    ТОГДА НомераНаборов.Чтение
                    ИНАЧЕ НомераНаборов.Изменение
                  КОНЕЦ
            #КонецЕсли
                И
              #Если "#Параметр(3)" = "РасширенноеИЛИ" Или "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
                ИСТИНА В // Не все проверки текущего набора отключены.
                (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первой не отключенной проверки текущего набора.
                    ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                    ГДЕ
                          НаборыЗначений.Объект      = #Параметр(13)
                        И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                        И НЕ ИСТИНА В
                            (
                                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Поиск настроек ограничений доступа
                                ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                                ГДЕ
                                      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                                    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                                    И ЗначенияПоУмолчанию.БезНастройки = ИСТИНА
                            )
                )
                И
              #КонецЕсли
                  НЕ ЛОЖЬ В // Все проверки успешны.
                (
                ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ // Выбор первого не разрешенного значения доступа.
                ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                ГДЕ
                      НаборыЗначений.Объект      = #Параметр(13)
                    И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                    И НЕ
                ВЫБОР
            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
              #Если НЕ &amp;ВидыДоступаСОтключеннымИспользованием = "Все" #Тогда
                КОГДА НаборыЗначений.ЗначениеБезГрупп
                ТОГДА
                    ИСТИНА В
                        (
                        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                            ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                            ПО
                                  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                                И Значения.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                        ГДЕ
                              ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                            И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                            И ЕстьNull(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
                        )
              #КонецЕсли
                КОГДА НаборыЗначений.СтандартноеЗначение
            #Иначе
                КОГДА
                    ИСТИНА В
                    (
                        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                        ГДЕ
                            ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                    )
            #КонецЕсли
            #Если &amp;ВидыДоступаСОтключеннымИспользованием = "Все" #Тогда
                ТОГДА
                    ИСТИНА
            #Иначе
                ТОГДА
                #Если Не #ИмяТекущегоПраваДоступа = "Чтение"
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
                    ВЫБОР
                #КонецЕсли
                #Если Не #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    КОГДА
                        НЕ ИСТИНА В
                            (
                            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                            ИЗ Справочник.ИдентификаторыОбъектовМетаданных КАК ТипыСсылок
                            ГДЕ
                                  ТИПЗНАЧЕНИЯ(ТипыСсылок.ЗначениеПустойСсылки) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                                И ТипыСсылок.ЗначениеПустойСсылки В (&amp;ТипыЗначенийДоступаСГруппами)
                            )
                    ТОГДА
                        ИСТИНА В
                            (
                            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                            ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                                ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                                ПО
                                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                                    И Значения.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                            ГДЕ
                                  ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                                И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                                И ЕстьNull(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
                            )
                #КонецЕсли
                #Если Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
                    КОГДА
                        ИСТИНА В
                            (
                            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                            ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                            ГДЕ
                                  ГруппыЗначенийДоступа.ЗначениеДоступа       = НаборыЗначений.ЗначениеДоступа
                                И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
                            )
                    ТОГДА
                        ИСТИНА
                #КонецЕсли
                #Если Не #ИмяТекущегоПраваДоступа = "Чтение"
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
                    ИНАЧЕ
                #КонецЕсли
                        ИСТИНА В
                            (
                            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                            ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                                ПО
                                      ГруппыЗначений.ЗначениеДоступа    = НаборыЗначений.ЗначениеДоступа
                                    И ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                                    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                                
                                ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                                ПО
                                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                                    И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаЗначенийДоступа
                            ГДЕ
                                ЕстьNull(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
                            )
                #Если Не #ИмяТекущегоПраваДоступа = "Чтение"
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
                    КОНЕЦ
                #КонецЕсли
            #КонецЕсли
                // Проверка заведомого ложного или истинного однострочного набора значений.
                КОГДА НаборыЗначений.ЗначениеДоступа = ЗНАЧЕНИЕ(Перечисление.ДополнительныеЗначенияДоступа.ДоступРазрешен)
                ТОГДА ИСТИНА
                КОГДА НаборыЗначений.ЗначениеДоступа = ЗНАЧЕНИЕ(Перечисление.ДополнительныеЗначенияДоступа.ДоступЗапрещен)
                ТОГДА ЛОЖЬ
                // Проверка права доступа пользователя к таблице ЗначенияДоступа.
                КОГДА ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа) = ТИП(Справочник.ИдентификаторыОбъектовМетаданных)
            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                // Право Чтение может зависеть только от права Чтение
                ТОГДА ИСТИНА В
                    (   ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа = ГруппыДоступа.Ссылка
                            И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Таблица = НаборыЗначений.ЗначениеДоступа
                    )
            #Иначе
                ТОГДА ИСТИНА В
                    (   ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа = ГруппыДоступа.Ссылка
                            И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Таблица = НаборыЗначений.ЗначениеДоступа
                            И НЕ(НаборыЗначений.Уточнение &lt;&gt; ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                                    И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Изменение = ЛОЖЬ)
                    )
            #КонецЕсли
            #Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
                ИНАЧЕ
                    (
                    ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
                        (
                        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                            ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                            ПО
                                  НаследованиеНастроек.Объект = НаборыЗначений.ЗначениеДоступа
                                И НастройкиПрав.Объект        = НаследованиеНастроек.Родитель
                            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                                И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
                            #Иначе
                                И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
                                И НастройкиПрав.Таблица = ВЫБОР
                                    КОГДА НаборыЗначений.Уточнение В (&amp;ИдентификаторыТаблицСОтдельнымиНастройкамиПрав)
                                    ТОГДА НаборыЗначений.Уточнение
                                    ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка) КОНЕЦ
                            #КонецЕсли
                            ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                            ПО
                                  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                                И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
                        )
                    И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
                        (
                        ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
                        ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                            ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                            ПО
                                  НаследованиеНастроек.Объект = НаборыЗначений.ЗначениеДоступа
                                И НастройкиПрав.Объект        = НаследованиеНастроек.Родитель
                            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                                И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
                            #Иначе
                                И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
                                И НастройкиПрав.Таблица = ВЫБОР
                                    КОГДА НаборыЗначений.Уточнение В (&amp;ИдентификаторыТаблицСОтдельнымиНастройкамиПрав)
                                    ТОГДА НаборыЗначений.Уточнение
                                    ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка) КОНЕЦ
                            #КонецЕсли
                            ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                            ПО
                                  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                                И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
                        )
                    )
            #Иначе
                ИНАЧЕ
                    ЛОЖЬ
            #КонецЕсли
                КОНЕЦ
                ) // НЕ ЛОЖЬ В
          )
         )
    #Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
        КОНЕЦ
    #КонецЕсли
    )

#ИначеЕсли "#Параметр(12)" = "НастройкиПрав" #Тогда
    
     (
        ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
            (
            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
            ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                ПО
                      НаследованиеНастроек.Объект = #Параметр(13)
                    И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
                #Иначе
                  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                    И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                  #Иначе
                    И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                  #КонецЕсли
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
                #КонецЕсли
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                      СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                    И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
            )
         И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
            (
            ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
            ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                ПО
                      НаследованиеНастроек.Объект = #Параметр(13)
                    И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
                #Иначе
                  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                    И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                  #Иначе
                    И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                  #КонецЕсли
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
                #КонецЕсли
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                      СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                    И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
            )
     )
#ИначеЕсли Не СтрСодержит(&amp;ВсеВидыДоступаКромеСпециальных, ",#Параметр(12),") #Тогда
    // Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
    #Если СтрСодержит("#Параметр(12)", ",") #Тогда
        НеверныйВидДоступа: "#Параметр(12)" - "Список имен видов доступа не найден"
    #Иначе
        НеверныйВидДоступа: "#Параметр(12)" - "Имя вида доступа не найдено"
    #КонецЕсли
#ИначеЕсли &amp;ВидыДоступаСОтключеннымИспользованием &lt;&gt; "Все"
         И Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(12),") #Тогда
    
     (
        #Если (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")        И СтрСодержит(",#Параметр(12),", ",Пользователи,"))
          Или (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") И СтрСодержит(",#Параметр(12),", ",ВнешниеПользователи,")) #Тогда
            НЕ
            (
            НЕ ИСТИНА В
                (
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                ГДЕ
                      ГруппыЗначенийДоступа.ЗначениеДоступа       = #Параметр(13)
                    И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
                )
            И НЕ
        #Иначе
            (
        #КонецЕсли
            ВЫБОР
            КОГДА ИСТИНА В
                (
        #Если СтрСодержит(&amp;ВидыДоступаБезГруппДляЗначенияДоступа, ",#Параметр(12),") #Тогда
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ГДЕ
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = #Параметр(13)
        #ИначеЕсли "#Параметр(13)" = "Т.Ссылка" #Тогда
            #Если СтрСодержит("#Параметр(12)", ",") #Тогда
                // Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
                НеверныйВидДоступа: "#Параметр(12)" - "При проверке таблицы значения доступа можно указывать только один вид доступа"
            #ИначеЕсли СтрСодержит(&amp;ВидыДоступаСОднойГруппойДляЗначенияДоступа, ",#Параметр(12),") #Тогда
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ГДЕ
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = Т.ГруппаДоступа
            #Иначе // Значения доступа, для которых можно указать несколько групп значений доступа.
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                    ВНУТРЕННЕЕ СОЕДИНЕНИЕ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
                ПО
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаДоступа
                    И ГруппыЗначений.Ссылка    = #Параметр(13)
            #КонецЕсли
        #Иначе // "#Параметр(13)" &lt;&gt; "Т.Ссылка"
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                    ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                ПО
                      Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
                    И ГруппыЗначений.ЗначениеДоступа = #Параметр(13)
        #КонецЕсли
                )
            ТОГДА ИСТИНА
            ИНАЧЕ ЛОЖЬ
            КОНЕЦ
            =
            ВЫБОР
            КОГДА ИСТИНА В
                (
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                ГДЕ
                      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(#Параметр(13))
                    И ЗначенияПоУмолчанию.ВсеРазрешены = ЛОЖЬ
                )
            ТОГДА ИСТИНА
            ИНАЧЕ ЛОЖЬ
            КОНЕЦ
            )
     )

#Иначе
    ИСТИНА
#КонецЕсли

    #Параметр(14)  // [)[)][)]...] [ИЛИ|И] [([(][(]...] оператор И/ИЛИ с/без скобок.

//// Проверка значения поля группы параметров 4.
#Если "#Параметр(15)" = "" И "#Параметр(16)" = "" #Тогда
    // Группа параметров не используется.
#ИначеЕсли "#Параметр(15)" = "Условие" Или "#Параметр(15)" = "" #Тогда
    // Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
     ( #Параметр(16) )
#ИначеЕсли "#Параметр(15)" = "ПравоЧтения" Или "#Параметр(15)" = "ПравоИзменения" #Тогда
     #Параметр(16) &lt;&gt; НЕОПРЕДЕЛЕНО
    И ИСТИНА В
     (  // Проверка права пользователя на таблицу Значения, установленного в поле.
        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
        ГДЕ
              ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
            И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(16))
        #Если Не "#Параметр(15)" = "ПравоЧтения" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Изменение
        #КонецЕсли
     )
#ИначеЕсли "#Параметр(15)" = "Объект" Или "#Параметр(15)" = " " #Тогда
    (
        // Проверка права объекта ведущей таблицы (зависимость по правам)
        (
            ИСТИНА В
            (
            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
            ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваОбъекта
            ГДЕ
                  ТаблицыГруппДоступаПроверкаПраваОбъекта.ГруппаДоступа = ГруппыДоступа.Ссылка
                И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПраваОбъекта.ТипТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(16))
            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                // Проверка ведущего права для права Чтение
                // Право Чтение может зависеть только от права Чтение
            #Иначе
                // Проверка ведущего права для права Изменение
                // Право Изменение может зависеть от ведущих прав Чтение, Изменение
                И НЕ
                (     ТаблицыГруппДоступаПроверкаПраваОбъекта.Изменение = ЛОЖЬ
                    И НЕ ИСТИНА В
                    (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                    ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
                    ГДЕ
                          ЗависимостиПравДоступа.ПодчиненнаяТаблица = СвойстваТекущейТаблицы.Ссылка
                        И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(16))
                    )
                )
            #КонецЕсли
            )
        )
        // Проверка ограничения права объекта ведущей таблицы
        И 
    #Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
        ВЫБОР КОГДА ИСТИНА В
                (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                    ИЗ Справочник.ИдентификаторыОбъектовМетаданных КАК Идентификаторы
                    ГДЕ
                          ТИПЗНАЧЕНИЯ(Идентификаторы.ЗначениеПустойСсылки) = ТИПЗНАЧЕНИЯ(#Параметр(16))
                        И Идентификаторы.ЗначениеПустойСсылки В (&amp;ТипыВладельцевНастроекПрав)
                )
        ТОГДА
            (
                ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
                    (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                    ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                        ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                        ПО
                              НаследованиеНастроек.Объект = #Параметр(16)
                            И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                        #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                            И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
                        #Иначе
                          #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                            И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                          #Иначе
                            И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                          #КонецЕсли
                            И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
                        #КонецЕсли
                        ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                        ПО
                              СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                            И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
                    )
                И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
                    (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
                    ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                        ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                        ПО
                              НаследованиеНастроек.Объект = #Параметр(16)
                            И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                        #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                            И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
                        #Иначе
                          #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                            И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                          #Иначе
                            И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                          #КонецЕсли
                            И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
                        #КонецЕсли
                        ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                        ПО
                              СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                            И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
                    )
            )
        ИНАЧЕ
    #КонецЕсли
    #Если "#Параметр(3)" = "РасширенноеИЛИ" Или "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
        НЕ
         (
          ИСТИНА В // Не все проверки отключены.
          (
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первого набора с не отключенной проверкой.
                ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
                ГДЕ
                      НомераНаборов.Объект = #Параметр(16)
                #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    // Право Чтение может зависеть только от права Чтение
                    И НомераНаборов.Чтение = ИСТИНА
                #Иначе
                    // Право Изменение может зависеть от ведущих прав Чтение, Изменение
                    И ВЫБОР
                        КОГДА ИСТИНА В
                            (
                            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                            ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
                            ГДЕ
                                  ЗависимостиПравДоступа.ПодчиненнаяТаблица             = СвойстваТекущейТаблицы.Ссылка
                                И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(16))
                            )
                        ТОГДА НомераНаборов.Чтение
                        ИНАЧЕ НомераНаборов.Изменение
                      КОНЕЦ
                #КонецЕсли
                    И
                ИСТИНА В // Не все проверки текущего набора отключены.
                (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первой не отключенной проверки текущего набора.
                    ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                    ГДЕ
                          НаборыЗначений.Объект      = #Параметр(16)
                        И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                        И НЕ ИСТИНА В
                            (
                                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Поиск настроек ограничений доступа
                                ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                                ГДЕ
                                      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                                    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                                    И ЗначенияПоУмолчанию.БезНастройки = ИСТИНА
                            )
                )
          ) И НЕ
    #Иначе
         (
    #КонецЕсли
          ИСТИНА В
          (
            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первого набора по которому доступ разрешен.
            ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
            ГДЕ
                  НомераНаборов.Объект = #Параметр(16)
            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                // Право Чтение может зависеть только от права Чтение
                И НомераНаборов.Чтение = ИСТИНА
            #Иначе
                // Право Изменение может зависеть от ведущих прав Чтение, Изменение
                И ВЫБОР
                    КОГДА ИСТИНА В
                        (
                        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
                        ГДЕ
                              ЗависимостиПравДоступа.ПодчиненнаяТаблица             = СвойстваТекущейТаблицы.Ссылка
                            И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(16))
                        )
                    ТОГДА НомераНаборов.Чтение
                    ИНАЧЕ НомераНаборов.Изменение
                  КОНЕЦ
            #КонецЕсли
                И
              #Если "#Параметр(3)" = "РасширенноеИЛИ" Или "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
                ИСТИНА В // Не все проверки текущего набора отключены.
                (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первой не отключенной проверки текущего набора.
                    ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                    ГДЕ
                          НаборыЗначений.Объект      = #Параметр(16)
                        И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                        И НЕ ИСТИНА В
                            (
                                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Поиск настроек ограничений доступа
                                ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                                ГДЕ
                                      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                                    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                                    И ЗначенияПоУмолчанию.БезНастройки = ИСТИНА
                            )
                )
                И
              #КонецЕсли
                  НЕ ЛОЖЬ В // Все проверки успешны.
                (
                ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ // Выбор первого не разрешенного значения доступа.
                ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                ГДЕ
                      НаборыЗначений.Объект      = #Параметр(16)
                    И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                    И НЕ
                ВЫБОР
            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
              #Если НЕ &amp;ВидыДоступаСОтключеннымИспользованием = "Все" #Тогда
                КОГДА НаборыЗначений.ЗначениеБезГрупп
                ТОГДА
                    ИСТИНА В
                        (
                        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                            ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                            ПО
                                  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                                И Значения.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                        ГДЕ
                              ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                            И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                            И ЕстьNull(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
                        )
              #КонецЕсли
                КОГДА НаборыЗначений.СтандартноеЗначение
            #Иначе
                КОГДА
                    ИСТИНА В
                    (
                        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                        ГДЕ
                            ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                    )
            #КонецЕсли
            #Если &amp;ВидыДоступаСОтключеннымИспользованием = "Все" #Тогда
                ТОГДА
                    ИСТИНА
            #Иначе
                ТОГДА
                #Если Не #ИмяТекущегоПраваДоступа = "Чтение"
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
                    ВЫБОР
                #КонецЕсли
                #Если Не #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    КОГДА
                        НЕ ИСТИНА В
                            (
                            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                            ИЗ Справочник.ИдентификаторыОбъектовМетаданных КАК ТипыСсылок
                            ГДЕ
                                  ТИПЗНАЧЕНИЯ(ТипыСсылок.ЗначениеПустойСсылки) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                                И ТипыСсылок.ЗначениеПустойСсылки В (&amp;ТипыЗначенийДоступаСГруппами)
                            )
                    ТОГДА
                        ИСТИНА В
                            (
                            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                            ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                                ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                                ПО
                                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                                    И Значения.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                            ГДЕ
                                  ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                                И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                                И ЕстьNull(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
                            )
                #КонецЕсли
                #Если Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
                    КОГДА
                        ИСТИНА В
                            (
                            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                            ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                            ГДЕ
                                  ГруппыЗначенийДоступа.ЗначениеДоступа       = НаборыЗначений.ЗначениеДоступа
                                И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
                            )
                    ТОГДА
                        ИСТИНА
                #КонецЕсли
                #Если Не #ИмяТекущегоПраваДоступа = "Чтение"
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
                    ИНАЧЕ
                #КонецЕсли
                        ИСТИНА В
                            (
                            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                            ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                                ПО
                                      ГруппыЗначений.ЗначениеДоступа    = НаборыЗначений.ЗначениеДоступа
                                    И ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                                    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                                
                                ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                                ПО
                                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                                    И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаЗначенийДоступа
                            ГДЕ
                                ЕстьNull(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
                            )
                #Если Не #ИмяТекущегоПраваДоступа = "Чтение"
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
                    КОНЕЦ
                #КонецЕсли
            #КонецЕсли
                // Проверка заведомого ложного или истинного однострочного набора значений.
                КОГДА НаборыЗначений.ЗначениеДоступа = ЗНАЧЕНИЕ(Перечисление.ДополнительныеЗначенияДоступа.ДоступРазрешен)
                ТОГДА ИСТИНА
                КОГДА НаборыЗначений.ЗначениеДоступа = ЗНАЧЕНИЕ(Перечисление.ДополнительныеЗначенияДоступа.ДоступЗапрещен)
                ТОГДА ЛОЖЬ
                // Проверка права доступа пользователя к таблице ЗначенияДоступа.
                КОГДА ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа) = ТИП(Справочник.ИдентификаторыОбъектовМетаданных)
            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                // Право Чтение может зависеть только от права Чтение
                ТОГДА ИСТИНА В
                    (   ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа = ГруппыДоступа.Ссылка
                            И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Таблица = НаборыЗначений.ЗначениеДоступа
                    )
            #Иначе
                ТОГДА ИСТИНА В
                    (   ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа = ГруппыДоступа.Ссылка
                            И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Таблица = НаборыЗначений.ЗначениеДоступа
                            И НЕ(НаборыЗначений.Уточнение &lt;&gt; ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                                    И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Изменение = ЛОЖЬ)
                    )
            #КонецЕсли
            #Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
                ИНАЧЕ
                    (
                    ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
                        (
                        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                            ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                            ПО
                                  НаследованиеНастроек.Объект = НаборыЗначений.ЗначениеДоступа
                                И НастройкиПрав.Объект        = НаследованиеНастроек.Родитель
                            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                                И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
                            #Иначе
                                И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
                                И НастройкиПрав.Таблица = ВЫБОР
                                    КОГДА НаборыЗначений.Уточнение В (&amp;ИдентификаторыТаблицСОтдельнымиНастройкамиПрав)
                                    ТОГДА НаборыЗначений.Уточнение
                                    ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка) КОНЕЦ
                            #КонецЕсли
                            ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                            ПО
                                  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                                И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
                        )
                    И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
                        (
                        ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
                        ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                            ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                            ПО
                                  НаследованиеНастроек.Объект = НаборыЗначений.ЗначениеДоступа
                                И НастройкиПрав.Объект        = НаследованиеНастроек.Родитель
                            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                                И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
                            #Иначе
                                И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
                                И НастройкиПрав.Таблица = ВЫБОР
                                    КОГДА НаборыЗначений.Уточнение В (&amp;ИдентификаторыТаблицСОтдельнымиНастройкамиПрав)
                                    ТОГДА НаборыЗначений.Уточнение
                                    ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка) КОНЕЦ
                            #КонецЕсли
                            ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                            ПО
                                  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                                И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
                        )
                    )
            #Иначе
                ИНАЧЕ
                    ЛОЖЬ
            #КонецЕсли
                КОНЕЦ
                ) // НЕ ЛОЖЬ В
          )
         )
    #Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
        КОНЕЦ
    #КонецЕсли
    )

#ИначеЕсли "#Параметр(15)" = "НастройкиПрав" #Тогда
    
     (
        ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
            (
            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
            ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                ПО
                      НаследованиеНастроек.Объект = #Параметр(16)
                    И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
                #Иначе
                  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                    И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                  #Иначе
                    И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                  #КонецЕсли
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
                #КонецЕсли
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                      СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                    И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
            )
         И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
            (
            ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
            ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                ПО
                      НаследованиеНастроек.Объект = #Параметр(16)
                    И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
                #Иначе
                  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                    И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                  #Иначе
                    И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                  #КонецЕсли
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
                #КонецЕсли
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                      СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                    И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
            )
     )
#ИначеЕсли Не СтрСодержит(&amp;ВсеВидыДоступаКромеСпециальных, ",#Параметр(15),") #Тогда
    // Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
    #Если СтрСодержит("#Параметр(15)", ",") #Тогда
        НеверныйВидДоступа: "#Параметр(15)" - "Список имен видов доступа не найден"
    #Иначе
        НеверныйВидДоступа: "#Параметр(15)" - "Имя вида доступа не найдено"
    #КонецЕсли
#ИначеЕсли &amp;ВидыДоступаСОтключеннымИспользованием &lt;&gt; "Все"
         И Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(15),") #Тогда
    
     (
        #Если (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")        И СтрСодержит(",#Параметр(15),", ",Пользователи,"))
          Или (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") И СтрСодержит(",#Параметр(15),", ",ВнешниеПользователи,")) #Тогда
            НЕ
            (
            НЕ ИСТИНА В
                (
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                ГДЕ
                      ГруппыЗначенийДоступа.ЗначениеДоступа       = #Параметр(16)
                    И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
                )
            И НЕ
        #Иначе
            (
        #КонецЕсли
            ВЫБОР
            КОГДА ИСТИНА В
                (
        #Если СтрСодержит(&amp;ВидыДоступаБезГруппДляЗначенияДоступа, ",#Параметр(15),") #Тогда
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ГДЕ
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = #Параметр(16)
        #ИначеЕсли "#Параметр(16)" = "Т.Ссылка" #Тогда
            #Если СтрСодержит("#Параметр(15)", ",") #Тогда
                // Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
                НеверныйВидДоступа: "#Параметр(15)" - "При проверке таблицы значения доступа можно указывать только один вид доступа"
            #ИначеЕсли СтрСодержит(&amp;ВидыДоступаСОднойГруппойДляЗначенияДоступа, ",#Параметр(15),") #Тогда
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ГДЕ
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = Т.ГруппаДоступа
            #Иначе // Значения доступа, для которых можно указать несколько групп значений доступа.
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                    ВНУТРЕННЕЕ СОЕДИНЕНИЕ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
                ПО
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаДоступа
                    И ГруппыЗначений.Ссылка    = #Параметр(16)
            #КонецЕсли
        #Иначе // "#Параметр(16)" &lt;&gt; "Т.Ссылка"
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                    ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                ПО
                      Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
                    И ГруппыЗначений.ЗначениеДоступа = #Параметр(16)
        #КонецЕсли
                )
            ТОГДА ИСТИНА
            ИНАЧЕ ЛОЖЬ
            КОНЕЦ
            =
            ВЫБОР
            КОГДА ИСТИНА В
                (
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                ГДЕ
                      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(#Параметр(16))
                    И ЗначенияПоУмолчанию.ВсеРазрешены = ЛОЖЬ
                )
            ТОГДА ИСТИНА
            ИНАЧЕ ЛОЖЬ
            КОНЕЦ
            )
     )

#Иначе
    ИСТИНА
#КонецЕсли

    #Параметр(17)  // [)[)][)]...] [ИЛИ|И] [([(][(]...] оператор И/ИЛИ с/без скобок.

//// Проверка значения поля группы параметров 5.
#Если "#Параметр(18)" = "" И "#Параметр(19)" = "" #Тогда
    // Группа параметров не используется.
#ИначеЕсли "#Параметр(18)" = "Условие" Или "#Параметр(18)" = "" #Тогда
    // Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
     ( #Параметр(19) )
#ИначеЕсли "#Параметр(18)" = "ПравоЧтения" Или "#Параметр(18)" = "ПравоИзменения" #Тогда
     #Параметр(19) &lt;&gt; НЕОПРЕДЕЛЕНО
    И ИСТИНА В
     (  // Проверка права пользователя на таблицу Значения, установленного в поле.
        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
        ГДЕ
              ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
            И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(19))
        #Если Не "#Параметр(18)" = "ПравоЧтения" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Изменение
        #КонецЕсли
     )
#ИначеЕсли "#Параметр(18)" = "Объект" Или "#Параметр(18)" = " " #Тогда
    (
        // Проверка права объекта ведущей таблицы (зависимость по правам)
        (
            ИСТИНА В
            (
            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
            ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваОбъекта
            ГДЕ
                  ТаблицыГруппДоступаПроверкаПраваОбъекта.ГруппаДоступа = ГруппыДоступа.Ссылка
                И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПраваОбъекта.ТипТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(19))
            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                // Проверка ведущего права для права Чтение
                // Право Чтение может зависеть только от права Чтение
            #Иначе
                // Проверка ведущего права для права Изменение
                // Право Изменение может зависеть от ведущих прав Чтение, Изменение
                И НЕ
                (     ТаблицыГруппДоступаПроверкаПраваОбъекта.Изменение = ЛОЖЬ
                    И НЕ ИСТИНА В
                    (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                    ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
                    ГДЕ
                          ЗависимостиПравДоступа.ПодчиненнаяТаблица = СвойстваТекущейТаблицы.Ссылка
                        И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(19))
                    )
                )
            #КонецЕсли
            )
        )
        // Проверка ограничения права объекта ведущей таблицы
        И 
    #Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
        ВЫБОР КОГДА ИСТИНА В
                (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                    ИЗ Справочник.ИдентификаторыОбъектовМетаданных КАК Идентификаторы
                    ГДЕ
                          ТИПЗНАЧЕНИЯ(Идентификаторы.ЗначениеПустойСсылки) = ТИПЗНАЧЕНИЯ(#Параметр(19))
                        И Идентификаторы.ЗначениеПустойСсылки В (&amp;ТипыВладельцевНастроекПрав)
                )
        ТОГДА
            (
                ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
                    (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                    ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                        ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                        ПО
                              НаследованиеНастроек.Объект = #Параметр(19)
                            И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                        #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                            И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
                        #Иначе
                          #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                            И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                          #Иначе
                            И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                          #КонецЕсли
                            И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
                        #КонецЕсли
                        ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                        ПО
                              СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                            И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
                    )
                И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
                    (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
                    ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                        ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                        ПО
                              НаследованиеНастроек.Объект = #Параметр(19)
                            И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                        #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                            И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
                        #Иначе
                          #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                            И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                          #Иначе
                            И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                          #КонецЕсли
                            И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
                        #КонецЕсли
                        ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                        ПО
                              СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                            И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
                    )
            )
        ИНАЧЕ
    #КонецЕсли
    #Если "#Параметр(3)" = "РасширенноеИЛИ" Или "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
        НЕ
         (
          ИСТИНА В // Не все проверки отключены.
          (
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первого набора с не отключенной проверкой.
                ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
                ГДЕ
                      НомераНаборов.Объект = #Параметр(19)
                #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    // Право Чтение может зависеть только от права Чтение
                    И НомераНаборов.Чтение = ИСТИНА
                #Иначе
                    // Право Изменение может зависеть от ведущих прав Чтение, Изменение
                    И ВЫБОР
                        КОГДА ИСТИНА В
                            (
                            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                            ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
                            ГДЕ
                                  ЗависимостиПравДоступа.ПодчиненнаяТаблица             = СвойстваТекущейТаблицы.Ссылка
                                И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(19))
                            )
                        ТОГДА НомераНаборов.Чтение
                        ИНАЧЕ НомераНаборов.Изменение
                      КОНЕЦ
                #КонецЕсли
                    И
                ИСТИНА В // Не все проверки текущего набора отключены.
                (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первой не отключенной проверки текущего набора.
                    ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                    ГДЕ
                          НаборыЗначений.Объект      = #Параметр(19)
                        И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                        И НЕ ИСТИНА В
                            (
                                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Поиск настроек ограничений доступа
                                ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                                ГДЕ
                                      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                                    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                                    И ЗначенияПоУмолчанию.БезНастройки = ИСТИНА
                            )
                )
          ) И НЕ
    #Иначе
         (
    #КонецЕсли
          ИСТИНА В
          (
            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первого набора по которому доступ разрешен.
            ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
            ГДЕ
                  НомераНаборов.Объект = #Параметр(19)
            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                // Право Чтение может зависеть только от права Чтение
                И НомераНаборов.Чтение = ИСТИНА
            #Иначе
                // Право Изменение может зависеть от ведущих прав Чтение, Изменение
                И ВЫБОР
                    КОГДА ИСТИНА В
                        (
                        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
                        ГДЕ
                              ЗависимостиПравДоступа.ПодчиненнаяТаблица             = СвойстваТекущейТаблицы.Ссылка
                            И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(19))
                        )
                    ТОГДА НомераНаборов.Чтение
                    ИНАЧЕ НомераНаборов.Изменение
                  КОНЕЦ
            #КонецЕсли
                И
              #Если "#Параметр(3)" = "РасширенноеИЛИ" Или "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
                ИСТИНА В // Не все проверки текущего набора отключены.
                (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первой не отключенной проверки текущего набора.
                    ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                    ГДЕ
                          НаборыЗначений.Объект      = #Параметр(19)
                        И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                        И НЕ ИСТИНА В
                            (
                                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Поиск настроек ограничений доступа
                                ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                                ГДЕ
                                      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                                    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                                    И ЗначенияПоУмолчанию.БезНастройки = ИСТИНА
                            )
                )
                И
              #КонецЕсли
                  НЕ ЛОЖЬ В // Все проверки успешны.
                (
                ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ // Выбор первого не разрешенного значения доступа.
                ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                ГДЕ
                      НаборыЗначений.Объект      = #Параметр(19)
                    И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                    И НЕ
                ВЫБОР
            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
              #Если НЕ &amp;ВидыДоступаСОтключеннымИспользованием = "Все" #Тогда
                КОГДА НаборыЗначений.ЗначениеБезГрупп
                ТОГДА
                    ИСТИНА В
                        (
                        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                            ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                            ПО
                                  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                                И Значения.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                        ГДЕ
                              ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                            И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                            И ЕстьNull(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
                        )
              #КонецЕсли
                КОГДА НаборыЗначений.СтандартноеЗначение
            #Иначе
                КОГДА
                    ИСТИНА В
                    (
                        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                        ГДЕ
                            ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                    )
            #КонецЕсли
            #Если &amp;ВидыДоступаСОтключеннымИспользованием = "Все" #Тогда
                ТОГДА
                    ИСТИНА
            #Иначе
                ТОГДА
                #Если Не #ИмяТекущегоПраваДоступа = "Чтение"
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
                    ВЫБОР
                #КонецЕсли
                #Если Не #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    КОГДА
                        НЕ ИСТИНА В
                            (
                            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                            ИЗ Справочник.ИдентификаторыОбъектовМетаданных КАК ТипыСсылок
                            ГДЕ
                                  ТИПЗНАЧЕНИЯ(ТипыСсылок.ЗначениеПустойСсылки) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                                И ТипыСсылок.ЗначениеПустойСсылки В (&amp;ТипыЗначенийДоступаСГруппами)
                            )
                    ТОГДА
                        ИСТИНА В
                            (
                            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                            ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                                ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                                ПО
                                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                                    И Значения.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                            ГДЕ
                                  ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                                И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                                И ЕстьNull(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
                            )
                #КонецЕсли
                #Если Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
                    КОГДА
                        ИСТИНА В
                            (
                            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                            ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                            ГДЕ
                                  ГруппыЗначенийДоступа.ЗначениеДоступа       = НаборыЗначений.ЗначениеДоступа
                                И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
                            )
                    ТОГДА
                        ИСТИНА
                #КонецЕсли
                #Если Не #ИмяТекущегоПраваДоступа = "Чтение"
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
                    ИНАЧЕ
                #КонецЕсли
                        ИСТИНА В
                            (
                            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                            ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                                ПО
                                      ГруппыЗначений.ЗначениеДоступа    = НаборыЗначений.ЗначениеДоступа
                                    И ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                                    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                                
                                ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                                ПО
                                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                                    И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаЗначенийДоступа
                            ГДЕ
                                ЕстьNull(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
                            )
                #Если Не #ИмяТекущегоПраваДоступа = "Чтение"
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
                    КОНЕЦ
                #КонецЕсли
            #КонецЕсли
                // Проверка заведомого ложного или истинного однострочного набора значений.
                КОГДА НаборыЗначений.ЗначениеДоступа = ЗНАЧЕНИЕ(Перечисление.ДополнительныеЗначенияДоступа.ДоступРазрешен)
                ТОГДА ИСТИНА
                КОГДА НаборыЗначений.ЗначениеДоступа = ЗНАЧЕНИЕ(Перечисление.ДополнительныеЗначенияДоступа.ДоступЗапрещен)
                ТОГДА ЛОЖЬ
                // Проверка права доступа пользователя к таблице ЗначенияДоступа.
                КОГДА ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа) = ТИП(Справочник.ИдентификаторыОбъектовМетаданных)
            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                // Право Чтение может зависеть только от права Чтение
                ТОГДА ИСТИНА В
                    (   ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа = ГруппыДоступа.Ссылка
                            И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Таблица = НаборыЗначений.ЗначениеДоступа
                    )
            #Иначе
                ТОГДА ИСТИНА В
                    (   ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа = ГруппыДоступа.Ссылка
                            И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Таблица = НаборыЗначений.ЗначениеДоступа
                            И НЕ(НаборыЗначений.Уточнение &lt;&gt; ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                                    И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Изменение = ЛОЖЬ)
                    )
            #КонецЕсли
            #Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
                ИНАЧЕ
                    (
                    ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
                        (
                        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                            ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                            ПО
                                  НаследованиеНастроек.Объект = НаборыЗначений.ЗначениеДоступа
                                И НастройкиПрав.Объект        = НаследованиеНастроек.Родитель
                            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                                И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
                            #Иначе
                                И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
                                И НастройкиПрав.Таблица = ВЫБОР
                                    КОГДА НаборыЗначений.Уточнение В (&amp;ИдентификаторыТаблицСОтдельнымиНастройкамиПрав)
                                    ТОГДА НаборыЗначений.Уточнение
                                    ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка) КОНЕЦ
                            #КонецЕсли
                            ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                            ПО
                                  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                                И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
                        )
                    И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
                        (
                        ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
                        ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                            ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                            ПО
                                  НаследованиеНастроек.Объект = НаборыЗначений.ЗначениеДоступа
                                И НастройкиПрав.Объект        = НаследованиеНастроек.Родитель
                            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                                И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
                            #Иначе
                                И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
                                И НастройкиПрав.Таблица = ВЫБОР
                                    КОГДА НаборыЗначений.Уточнение В (&amp;ИдентификаторыТаблицСОтдельнымиНастройкамиПрав)
                                    ТОГДА НаборыЗначений.Уточнение
                                    ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка) КОНЕЦ
                            #КонецЕсли
                            ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                            ПО
                                  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                                И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
                        )
                    )
            #Иначе
                ИНАЧЕ
                    ЛОЖЬ
            #КонецЕсли
                КОНЕЦ
                ) // НЕ ЛОЖЬ В
          )
         )
    #Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
        КОНЕЦ
    #КонецЕсли
    )

#ИначеЕсли "#Параметр(18)" = "НастройкиПрав" #Тогда
    
     (
        ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
            (
            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
            ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                ПО
                      НаследованиеНастроек.Объект = #Параметр(19)
                    И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
                #Иначе
                  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                    И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                  #Иначе
                    И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                  #КонецЕсли
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
                #КонецЕсли
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                      СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                    И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
            )
         И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
            (
            ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
            ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                ПО
                      НаследованиеНастроек.Объект = #Параметр(19)
                    И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
                #Иначе
                  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                    И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                  #Иначе
                    И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                  #КонецЕсли
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
                #КонецЕсли
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                      СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                    И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
            )
     )
#ИначеЕсли Не СтрСодержит(&amp;ВсеВидыДоступаКромеСпециальных, ",#Параметр(18),") #Тогда
    // Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
    #Если СтрСодержит("#Параметр(18)", ",") #Тогда
        НеверныйВидДоступа: "#Параметр(18)" - "Список имен видов доступа не найден"
    #Иначе
        НеверныйВидДоступа: "#Параметр(18)" - "Имя вида доступа не найдено"
    #КонецЕсли
#ИначеЕсли &amp;ВидыДоступаСОтключеннымИспользованием &lt;&gt; "Все"
         И Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(18),") #Тогда
    
     (
        #Если (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")        И СтрСодержит(",#Параметр(18),", ",Пользователи,"))
          Или (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") И СтрСодержит(",#Параметр(18),", ",ВнешниеПользователи,")) #Тогда
            НЕ
            (
            НЕ ИСТИНА В
                (
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                ГДЕ
                      ГруппыЗначенийДоступа.ЗначениеДоступа       = #Параметр(19)
                    И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
                )
            И НЕ
        #Иначе
            (
        #КонецЕсли
            ВЫБОР
            КОГДА ИСТИНА В
                (
        #Если СтрСодержит(&amp;ВидыДоступаБезГруппДляЗначенияДоступа, ",#Параметр(18),") #Тогда
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ГДЕ
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = #Параметр(19)
        #ИначеЕсли "#Параметр(19)" = "Т.Ссылка" #Тогда
            #Если СтрСодержит("#Параметр(18)", ",") #Тогда
                // Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
                НеверныйВидДоступа: "#Параметр(18)" - "При проверке таблицы значения доступа можно указывать только один вид доступа"
            #ИначеЕсли СтрСодержит(&amp;ВидыДоступаСОднойГруппойДляЗначенияДоступа, ",#Параметр(18),") #Тогда
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ГДЕ
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = Т.ГруппаДоступа
            #Иначе // Значения доступа, для которых можно указать несколько групп значений доступа.
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                    ВНУТРЕННЕЕ СОЕДИНЕНИЕ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
                ПО
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаДоступа
                    И ГруппыЗначений.Ссылка    = #Параметр(19)
            #КонецЕсли
        #Иначе // "#Параметр(19)" &lt;&gt; "Т.Ссылка"
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                    ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                ПО
                      Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
                    И ГруппыЗначений.ЗначениеДоступа = #Параметр(19)
        #КонецЕсли
                )
            ТОГДА ИСТИНА
            ИНАЧЕ ЛОЖЬ
            КОНЕЦ
            =
            ВЫБОР
            КОГДА ИСТИНА В
                (
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                ГДЕ
                      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(#Параметр(19))
                    И ЗначенияПоУмолчанию.ВсеРазрешены = ЛОЖЬ
                )
            ТОГДА ИСТИНА
            ИНАЧЕ ЛОЖЬ
            КОНЕЦ
            )
     )

#Иначе
    ИСТИНА
#КонецЕсли

    #Параметр(20)  // [)[)][)]...] [ИЛИ|И] [([(][(]...] оператор И/ИЛИ с/без скобок.

//// Проверка значения поля группы параметров 6.
#Если "#Параметр(21)" = "" И "#Параметр(22)" = "" #Тогда
    // Группа параметров не используется.
#ИначеЕсли "#Параметр(21)" = "Условие" Или "#Параметр(21)" = "" #Тогда
    // Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
     ( #Параметр(22) )
#ИначеЕсли "#Параметр(21)" = "ПравоЧтения" Или "#Параметр(21)" = "ПравоИзменения" #Тогда
     #Параметр(22) &lt;&gt; НЕОПРЕДЕЛЕНО
    И ИСТИНА В
     (  // Проверка права пользователя на таблицу Значения, установленного в поле.
        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
        ГДЕ
              ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
            И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(22))
        #Если Не "#Параметр(21)" = "ПравоЧтения" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Изменение
        #КонецЕсли
     )
#ИначеЕсли "#Параметр(21)" = "Объект" Или "#Параметр(21)" = " " #Тогда
    (
        // Проверка права объекта ведущей таблицы (зависимость по правам)
        (
            ИСТИНА В
            (
            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
            ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваОбъекта
            ГДЕ
                  ТаблицыГруппДоступаПроверкаПраваОбъекта.ГруппаДоступа = ГруппыДоступа.Ссылка
                И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПраваОбъекта.ТипТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(22))
            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                // Проверка ведущего права для права Чтение
                // Право Чтение может зависеть только от права Чтение
            #Иначе
                // Проверка ведущего права для права Изменение
                // Право Изменение может зависеть от ведущих прав Чтение, Изменение
                И НЕ
                (     ТаблицыГруппДоступаПроверкаПраваОбъекта.Изменение = ЛОЖЬ
                    И НЕ ИСТИНА В
                    (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                    ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
                    ГДЕ
                          ЗависимостиПравДоступа.ПодчиненнаяТаблица = СвойстваТекущейТаблицы.Ссылка
                        И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(22))
                    )
                )
            #КонецЕсли
            )
        )
        // Проверка ограничения права объекта ведущей таблицы
        И 
    #Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
        ВЫБОР КОГДА ИСТИНА В
                (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                    ИЗ Справочник.ИдентификаторыОбъектовМетаданных КАК Идентификаторы
                    ГДЕ
                          ТИПЗНАЧЕНИЯ(Идентификаторы.ЗначениеПустойСсылки) = ТИПЗНАЧЕНИЯ(#Параметр(22))
                        И Идентификаторы.ЗначениеПустойСсылки В (&amp;ТипыВладельцевНастроекПрав)
                )
        ТОГДА
            (
                ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
                    (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                    ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                        ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                        ПО
                              НаследованиеНастроек.Объект = #Параметр(22)
                            И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                        #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                            И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
                        #Иначе
                          #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                            И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                          #Иначе
                            И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                          #КонецЕсли
                            И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
                        #КонецЕсли
                        ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                        ПО
                              СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                            И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
                    )
                И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
                    (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
                    ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                        ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                        ПО
                              НаследованиеНастроек.Объект = #Параметр(22)
                            И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                        #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                            И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
                        #Иначе
                          #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                            И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                          #Иначе
                            И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                          #КонецЕсли
                            И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
                        #КонецЕсли
                        ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                        ПО
                              СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                            И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
                    )
            )
        ИНАЧЕ
    #КонецЕсли
    #Если "#Параметр(3)" = "РасширенноеИЛИ" Или "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
        НЕ
         (
          ИСТИНА В // Не все проверки отключены.
          (
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первого набора с не отключенной проверкой.
                ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
                ГДЕ
                      НомераНаборов.Объект = #Параметр(22)
                #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    // Право Чтение может зависеть только от права Чтение
                    И НомераНаборов.Чтение = ИСТИНА
                #Иначе
                    // Право Изменение может зависеть от ведущих прав Чтение, Изменение
                    И ВЫБОР
                        КОГДА ИСТИНА В
                            (
                            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                            ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
                            ГДЕ
                                  ЗависимостиПравДоступа.ПодчиненнаяТаблица             = СвойстваТекущейТаблицы.Ссылка
                                И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(22))
                            )
                        ТОГДА НомераНаборов.Чтение
                        ИНАЧЕ НомераНаборов.Изменение
                      КОНЕЦ
                #КонецЕсли
                    И
                ИСТИНА В // Не все проверки текущего набора отключены.
                (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первой не отключенной проверки текущего набора.
                    ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                    ГДЕ
                          НаборыЗначений.Объект      = #Параметр(22)
                        И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                        И НЕ ИСТИНА В
                            (
                                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Поиск настроек ограничений доступа
                                ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                                ГДЕ
                                      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                                    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                                    И ЗначенияПоУмолчанию.БезНастройки = ИСТИНА
                            )
                )
          ) И НЕ
    #Иначе
         (
    #КонецЕсли
          ИСТИНА В
          (
            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первого набора по которому доступ разрешен.
            ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
            ГДЕ
                  НомераНаборов.Объект = #Параметр(22)
            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                // Право Чтение может зависеть только от права Чтение
                И НомераНаборов.Чтение = ИСТИНА
            #Иначе
                // Право Изменение может зависеть от ведущих прав Чтение, Изменение
                И ВЫБОР
                    КОГДА ИСТИНА В
                        (
                        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
                        ГДЕ
                              ЗависимостиПравДоступа.ПодчиненнаяТаблица             = СвойстваТекущейТаблицы.Ссылка
                            И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(22))
                        )
                    ТОГДА НомераНаборов.Чтение
                    ИНАЧЕ НомераНаборов.Изменение
                  КОНЕЦ
            #КонецЕсли
                И
              #Если "#Параметр(3)" = "РасширенноеИЛИ" Или "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
                ИСТИНА В // Не все проверки текущего набора отключены.
                (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первой не отключенной проверки текущего набора.
                    ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                    ГДЕ
                          НаборыЗначений.Объект      = #Параметр(22)
                        И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                        И НЕ ИСТИНА В
                            (
                                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Поиск настроек ограничений доступа
                                ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                                ГДЕ
                                      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                                    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                                    И ЗначенияПоУмолчанию.БезНастройки = ИСТИНА
                            )
                )
                И
              #КонецЕсли
                  НЕ ЛОЖЬ В // Все проверки успешны.
                (
                ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ // Выбор первого не разрешенного значения доступа.
                ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                ГДЕ
                      НаборыЗначений.Объект      = #Параметр(22)
                    И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                    И НЕ
                ВЫБОР
            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
              #Если НЕ &amp;ВидыДоступаСОтключеннымИспользованием = "Все" #Тогда
                КОГДА НаборыЗначений.ЗначениеБезГрупп
                ТОГДА
                    ИСТИНА В
                        (
                        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                            ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                            ПО
                                  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                                И Значения.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                        ГДЕ
                              ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                            И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                            И ЕстьNull(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
                        )
              #КонецЕсли
                КОГДА НаборыЗначений.СтандартноеЗначение
            #Иначе
                КОГДА
                    ИСТИНА В
                    (
                        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                        ГДЕ
                            ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                    )
            #КонецЕсли
            #Если &amp;ВидыДоступаСОтключеннымИспользованием = "Все" #Тогда
                ТОГДА
                    ИСТИНА
            #Иначе
                ТОГДА
                #Если Не #ИмяТекущегоПраваДоступа = "Чтение"
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
                    ВЫБОР
                #КонецЕсли
                #Если Не #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    КОГДА
                        НЕ ИСТИНА В
                            (
                            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                            ИЗ Справочник.ИдентификаторыОбъектовМетаданных КАК ТипыСсылок
                            ГДЕ
                                  ТИПЗНАЧЕНИЯ(ТипыСсылок.ЗначениеПустойСсылки) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                                И ТипыСсылок.ЗначениеПустойСсылки В (&amp;ТипыЗначенийДоступаСГруппами)
                            )
                    ТОГДА
                        ИСТИНА В
                            (
                            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                            ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                                ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                                ПО
                                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                                    И Значения.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                            ГДЕ
                                  ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                                И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                                И ЕстьNull(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
                            )
                #КонецЕсли
                #Если Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
                    КОГДА
                        ИСТИНА В
                            (
                            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                            ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                            ГДЕ
                                  ГруппыЗначенийДоступа.ЗначениеДоступа       = НаборыЗначений.ЗначениеДоступа
                                И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
                            )
                    ТОГДА
                        ИСТИНА
                #КонецЕсли
                #Если Не #ИмяТекущегоПраваДоступа = "Чтение"
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
                    ИНАЧЕ
                #КонецЕсли
                        ИСТИНА В
                            (
                            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                            ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                                ПО
                                      ГруппыЗначений.ЗначениеДоступа    = НаборыЗначений.ЗначениеДоступа
                                    И ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                                    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                                
                                ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                                ПО
                                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                                    И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаЗначенийДоступа
                            ГДЕ
                                ЕстьNull(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
                            )
                #Если Не #ИмяТекущегоПраваДоступа = "Чтение"
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
                    КОНЕЦ
                #КонецЕсли
            #КонецЕсли
                // Проверка заведомого ложного или истинного однострочного набора значений.
                КОГДА НаборыЗначений.ЗначениеДоступа = ЗНАЧЕНИЕ(Перечисление.ДополнительныеЗначенияДоступа.ДоступРазрешен)
                ТОГДА ИСТИНА
                КОГДА НаборыЗначений.ЗначениеДоступа = ЗНАЧЕНИЕ(Перечисление.ДополнительныеЗначенияДоступа.ДоступЗапрещен)
                ТОГДА ЛОЖЬ
                // Проверка права доступа пользователя к таблице ЗначенияДоступа.
                КОГДА ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа) = ТИП(Справочник.ИдентификаторыОбъектовМетаданных)
            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                // Право Чтение может зависеть только от права Чтение
                ТОГДА ИСТИНА В
                    (   ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа = ГруппыДоступа.Ссылка
                            И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Таблица = НаборыЗначений.ЗначениеДоступа
                    )
            #Иначе
                ТОГДА ИСТИНА В
                    (   ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа = ГруппыДоступа.Ссылка
                            И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Таблица = НаборыЗначений.ЗначениеДоступа
                            И НЕ(НаборыЗначений.Уточнение &lt;&gt; ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                                    И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Изменение = ЛОЖЬ)
                    )
            #КонецЕсли
            #Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
                ИНАЧЕ
                    (
                    ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
                        (
                        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                            ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                            ПО
                                  НаследованиеНастроек.Объект = НаборыЗначений.ЗначениеДоступа
                                И НастройкиПрав.Объект        = НаследованиеНастроек.Родитель
                            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                                И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
                            #Иначе
                                И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
                                И НастройкиПрав.Таблица = ВЫБОР
                                    КОГДА НаборыЗначений.Уточнение В (&amp;ИдентификаторыТаблицСОтдельнымиНастройкамиПрав)
                                    ТОГДА НаборыЗначений.Уточнение
                                    ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка) КОНЕЦ
                            #КонецЕсли
                            ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                            ПО
                                  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                                И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
                        )
                    И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
                        (
                        ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
                        ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                            ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                            ПО
                                  НаследованиеНастроек.Объект = НаборыЗначений.ЗначениеДоступа
                                И НастройкиПрав.Объект        = НаследованиеНастроек.Родитель
                            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                                И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
                            #Иначе
                                И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
                                И НастройкиПрав.Таблица = ВЫБОР
                                    КОГДА НаборыЗначений.Уточнение В (&amp;ИдентификаторыТаблицСОтдельнымиНастройкамиПрав)
                                    ТОГДА НаборыЗначений.Уточнение
                                    ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка) КОНЕЦ
                            #КонецЕсли
                            ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                            ПО
                                  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                                И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
                        )
                    )
            #Иначе
                ИНАЧЕ
                    ЛОЖЬ
            #КонецЕсли
                КОНЕЦ
                ) // НЕ ЛОЖЬ В
          )
         )
    #Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
        КОНЕЦ
    #КонецЕсли
    )

#ИначеЕсли "#Параметр(21)" = "НастройкиПрав" #Тогда
    
     (
        ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
            (
            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
            ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                ПО
                      НаследованиеНастроек.Объект = #Параметр(22)
                    И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
                #Иначе
                  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                    И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                  #Иначе
                    И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                  #КонецЕсли
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
                #КонецЕсли
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                      СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                    И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
            )
         И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
            (
            ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
            ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                ПО
                      НаследованиеНастроек.Объект = #Параметр(22)
                    И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
                #Иначе
                  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                    И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                  #Иначе
                    И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                  #КонецЕсли
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
                #КонецЕсли
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                      СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                    И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
            )
     )
#ИначеЕсли Не СтрСодержит(&amp;ВсеВидыДоступаКромеСпециальных, ",#Параметр(21),") #Тогда
    // Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
    #Если СтрСодержит("#Параметр(21)", ",") #Тогда
        НеверныйВидДоступа: "#Параметр(21)" - "Список имен видов доступа не найден"
    #Иначе
        НеверныйВидДоступа: "#Параметр(21)" - "Имя вида доступа не найдено"
    #КонецЕсли
#ИначеЕсли &amp;ВидыДоступаСОтключеннымИспользованием &lt;&gt; "Все"
         И Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(21),") #Тогда
    
     (
        #Если (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")        И СтрСодержит(",#Параметр(21),", ",Пользователи,"))
          Или (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") И СтрСодержит(",#Параметр(21),", ",ВнешниеПользователи,")) #Тогда
            НЕ
            (
            НЕ ИСТИНА В
                (
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                ГДЕ
                      ГруппыЗначенийДоступа.ЗначениеДоступа       = #Параметр(22)
                    И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
                )
            И НЕ
        #Иначе
            (
        #КонецЕсли
            ВЫБОР
            КОГДА ИСТИНА В
                (
        #Если СтрСодержит(&amp;ВидыДоступаБезГруппДляЗначенияДоступа, ",#Параметр(21),") #Тогда
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ГДЕ
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = #Параметр(22)
        #ИначеЕсли "#Параметр(22)" = "Т.Ссылка" #Тогда
            #Если СтрСодержит("#Параметр(21)", ",") #Тогда
                // Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
                НеверныйВидДоступа: "#Параметр(21)" - "При проверке таблицы значения доступа можно указывать только один вид доступа"
            #ИначеЕсли СтрСодержит(&amp;ВидыДоступаСОднойГруппойДляЗначенияДоступа, ",#Параметр(21),") #Тогда
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ГДЕ
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = Т.ГруппаДоступа
            #Иначе // Значения доступа, для которых можно указать несколько групп значений доступа.
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                    ВНУТРЕННЕЕ СОЕДИНЕНИЕ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
                ПО
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаДоступа
                    И ГруппыЗначений.Ссылка    = #Параметр(22)
            #КонецЕсли
        #Иначе // "#Параметр(22)" &lt;&gt; "Т.Ссылка"
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                    ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                ПО
                      Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
                    И ГруппыЗначений.ЗначениеДоступа = #Параметр(22)
        #КонецЕсли
                )
            ТОГДА ИСТИНА
            ИНАЧЕ ЛОЖЬ
            КОНЕЦ
            =
            ВЫБОР
            КОГДА ИСТИНА В
                (
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                ГДЕ
                      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(#Параметр(22))
                    И ЗначенияПоУмолчанию.ВсеРазрешены = ЛОЖЬ
                )
            ТОГДА ИСТИНА
            ИНАЧЕ ЛОЖЬ
            КОНЕЦ
            )
     )

#Иначе
    ИСТИНА
#КонецЕсли

    #Параметр(23)  // [)[)][)]...] [ИЛИ|И] [([(][(]...] оператор И/ИЛИ с/без скобок.

//// Проверка значения поля группы параметров 7.
#Если "#Параметр(24)" = "" И "#Параметр(25)" = "" #Тогда
    // Группа параметров не используется.
#ИначеЕсли "#Параметр(24)" = "Условие" Или "#Параметр(24)" = "" #Тогда
    // Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
     ( #Параметр(25) )
#ИначеЕсли "#Параметр(24)" = "ПравоЧтения" Или "#Параметр(24)" = "ПравоИзменения" #Тогда
     #Параметр(25) &lt;&gt; НЕОПРЕДЕЛЕНО
    И ИСТИНА В
     (  // Проверка права пользователя на таблицу Значения, установленного в поле.
        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
        ГДЕ
              ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
            И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(25))
        #Если Не "#Параметр(24)" = "ПравоЧтения" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Изменение
        #КонецЕсли
     )
#ИначеЕсли "#Параметр(24)" = "Объект" Или "#Параметр(24)" = " " #Тогда
    (
        // Проверка права объекта ведущей таблицы (зависимость по правам)
        (
            ИСТИНА В
            (
            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
            ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваОбъекта
            ГДЕ
                  ТаблицыГруппДоступаПроверкаПраваОбъекта.ГруппаДоступа = ГруппыДоступа.Ссылка
                И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПраваОбъекта.ТипТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(25))
            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                // Проверка ведущего права для права Чтение
                // Право Чтение может зависеть только от права Чтение
            #Иначе
                // Проверка ведущего права для права Изменение
                // Право Изменение может зависеть от ведущих прав Чтение, Изменение
                И НЕ
                (     ТаблицыГруппДоступаПроверкаПраваОбъекта.Изменение = ЛОЖЬ
                    И НЕ ИСТИНА В
                    (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                    ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
                    ГДЕ
                          ЗависимостиПравДоступа.ПодчиненнаяТаблица = СвойстваТекущейТаблицы.Ссылка
                        И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(25))
                    )
                )
            #КонецЕсли
            )
        )
        // Проверка ограничения права объекта ведущей таблицы
        И 
    #Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
        ВЫБОР КОГДА ИСТИНА В
                (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                    ИЗ Справочник.ИдентификаторыОбъектовМетаданных КАК Идентификаторы
                    ГДЕ
                          ТИПЗНАЧЕНИЯ(Идентификаторы.ЗначениеПустойСсылки) = ТИПЗНАЧЕНИЯ(#Параметр(25))
                        И Идентификаторы.ЗначениеПустойСсылки В (&amp;ТипыВладельцевНастроекПрав)
                )
        ТОГДА
            (
                ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
                    (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                    ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                        ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                        ПО
                              НаследованиеНастроек.Объект = #Параметр(25)
                            И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                        #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                            И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
                        #Иначе
                          #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                            И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                          #Иначе
                            И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                          #КонецЕсли
                            И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
                        #КонецЕсли
                        ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                        ПО
                              СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                            И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
                    )
                И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
                    (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
                    ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                        ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                        ПО
                              НаследованиеНастроек.Объект = #Параметр(25)
                            И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                        #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                            И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
                        #Иначе
                          #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                            И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                          #Иначе
                            И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                          #КонецЕсли
                            И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
                        #КонецЕсли
                        ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                        ПО
                              СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                            И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
                    )
            )
        ИНАЧЕ
    #КонецЕсли
    #Если "#Параметр(3)" = "РасширенноеИЛИ" Или "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
        НЕ
         (
          ИСТИНА В // Не все проверки отключены.
          (
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первого набора с не отключенной проверкой.
                ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
                ГДЕ
                      НомераНаборов.Объект = #Параметр(25)
                #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    // Право Чтение может зависеть только от права Чтение
                    И НомераНаборов.Чтение = ИСТИНА
                #Иначе
                    // Право Изменение может зависеть от ведущих прав Чтение, Изменение
                    И ВЫБОР
                        КОГДА ИСТИНА В
                            (
                            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                            ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
                            ГДЕ
                                  ЗависимостиПравДоступа.ПодчиненнаяТаблица             = СвойстваТекущейТаблицы.Ссылка
                                И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(25))
                            )
                        ТОГДА НомераНаборов.Чтение
                        ИНАЧЕ НомераНаборов.Изменение
                      КОНЕЦ
                #КонецЕсли
                    И
                ИСТИНА В // Не все проверки текущего набора отключены.
                (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первой не отключенной проверки текущего набора.
                    ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                    ГДЕ
                          НаборыЗначений.Объект      = #Параметр(25)
                        И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                        И НЕ ИСТИНА В
                            (
                                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Поиск настроек ограничений доступа
                                ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                                ГДЕ
                                      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                                    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                                    И ЗначенияПоУмолчанию.БезНастройки = ИСТИНА
                            )
                )
          ) И НЕ
    #Иначе
         (
    #КонецЕсли
          ИСТИНА В
          (
            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первого набора по которому доступ разрешен.
            ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
            ГДЕ
                  НомераНаборов.Объект = #Параметр(25)
            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                // Право Чтение может зависеть только от права Чтение
                И НомераНаборов.Чтение = ИСТИНА
            #Иначе
                // Право Изменение может зависеть от ведущих прав Чтение, Изменение
                И ВЫБОР
                    КОГДА ИСТИНА В
                        (
                        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
                        ГДЕ
                              ЗависимостиПравДоступа.ПодчиненнаяТаблица             = СвойстваТекущейТаблицы.Ссылка
                            И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(25))
                        )
                    ТОГДА НомераНаборов.Чтение
                    ИНАЧЕ НомераНаборов.Изменение
                  КОНЕЦ
            #КонецЕсли
                И
              #Если "#Параметр(3)" = "РасширенноеИЛИ" Или "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
                ИСТИНА В // Не все проверки текущего набора отключены.
                (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первой не отключенной проверки текущего набора.
                    ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                    ГДЕ
                          НаборыЗначений.Объект      = #Параметр(25)
                        И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                        И НЕ ИСТИНА В
                            (
                                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Поиск настроек ограничений доступа
                                ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                                ГДЕ
                                      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                                    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                                    И ЗначенияПоУмолчанию.БезНастройки = ИСТИНА
                            )
                )
                И
              #КонецЕсли
                  НЕ ЛОЖЬ В // Все проверки успешны.
                (
                ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ // Выбор первого не разрешенного значения доступа.
                ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                ГДЕ
                      НаборыЗначений.Объект      = #Параметр(25)
                    И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                    И НЕ
                ВЫБОР
            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
              #Если НЕ &amp;ВидыДоступаСОтключеннымИспользованием = "Все" #Тогда
                КОГДА НаборыЗначений.ЗначениеБезГрупп
                ТОГДА
                    ИСТИНА В
                        (
                        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                            ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                            ПО
                                  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                                И Значения.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                        ГДЕ
                              ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                            И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                            И ЕстьNull(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
                        )
              #КонецЕсли
                КОГДА НаборыЗначений.СтандартноеЗначение
            #Иначе
                КОГДА
                    ИСТИНА В
                    (
                        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                        ГДЕ
                            ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                    )
            #КонецЕсли
            #Если &amp;ВидыДоступаСОтключеннымИспользованием = "Все" #Тогда
                ТОГДА
                    ИСТИНА
            #Иначе
                ТОГДА
                #Если Не #ИмяТекущегоПраваДоступа = "Чтение"
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
                    ВЫБОР
                #КонецЕсли
                #Если Не #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    КОГДА
                        НЕ ИСТИНА В
                            (
                            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                            ИЗ Справочник.ИдентификаторыОбъектовМетаданных КАК ТипыСсылок
                            ГДЕ
                                  ТИПЗНАЧЕНИЯ(ТипыСсылок.ЗначениеПустойСсылки) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                                И ТипыСсылок.ЗначениеПустойСсылки В (&amp;ТипыЗначенийДоступаСГруппами)
                            )
                    ТОГДА
                        ИСТИНА В
                            (
                            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                            ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                                ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                                ПО
                                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                                    И Значения.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                            ГДЕ
                                  ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                                И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                                И ЕстьNull(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
                            )
                #КонецЕсли
                #Если Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
                    КОГДА
                        ИСТИНА В
                            (
                            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                            ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                            ГДЕ
                                  ГруппыЗначенийДоступа.ЗначениеДоступа       = НаборыЗначений.ЗначениеДоступа
                                И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
                            )
                    ТОГДА
                        ИСТИНА
                #КонецЕсли
                #Если Не #ИмяТекущегоПраваДоступа = "Чтение"
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
                    ИНАЧЕ
                #КонецЕсли
                        ИСТИНА В
                            (
                            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                            ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                                ПО
                                      ГруппыЗначений.ЗначениеДоступа    = НаборыЗначений.ЗначениеДоступа
                                    И ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                                    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                                
                                ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                                ПО
                                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                                    И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаЗначенийДоступа
                            ГДЕ
                                ЕстьNull(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
                            )
                #Если Не #ИмяТекущегоПраваДоступа = "Чтение"
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
                    КОНЕЦ
                #КонецЕсли
            #КонецЕсли
                // Проверка заведомого ложного или истинного однострочного набора значений.
                КОГДА НаборыЗначений.ЗначениеДоступа = ЗНАЧЕНИЕ(Перечисление.ДополнительныеЗначенияДоступа.ДоступРазрешен)
                ТОГДА ИСТИНА
                КОГДА НаборыЗначений.ЗначениеДоступа = ЗНАЧЕНИЕ(Перечисление.ДополнительныеЗначенияДоступа.ДоступЗапрещен)
                ТОГДА ЛОЖЬ
                // Проверка права доступа пользователя к таблице ЗначенияДоступа.
                КОГДА ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа) = ТИП(Справочник.ИдентификаторыОбъектовМетаданных)
            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                // Право Чтение может зависеть только от права Чтение
                ТОГДА ИСТИНА В
                    (   ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа = ГруппыДоступа.Ссылка
                            И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Таблица = НаборыЗначений.ЗначениеДоступа
                    )
            #Иначе
                ТОГДА ИСТИНА В
                    (   ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа = ГруппыДоступа.Ссылка
                            И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Таблица = НаборыЗначений.ЗначениеДоступа
                            И НЕ(НаборыЗначений.Уточнение &lt;&gt; ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                                    И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Изменение = ЛОЖЬ)
                    )
            #КонецЕсли
            #Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
                ИНАЧЕ
                    (
                    ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
                        (
                        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                            ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                            ПО
                                  НаследованиеНастроек.Объект = НаборыЗначений.ЗначениеДоступа
                                И НастройкиПрав.Объект        = НаследованиеНастроек.Родитель
                            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                                И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
                            #Иначе
                                И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
                                И НастройкиПрав.Таблица = ВЫБОР
                                    КОГДА НаборыЗначений.Уточнение В (&amp;ИдентификаторыТаблицСОтдельнымиНастройкамиПрав)
                                    ТОГДА НаборыЗначений.Уточнение
                                    ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка) КОНЕЦ
                            #КонецЕсли
                            ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                            ПО
                                  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                                И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
                        )
                    И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
                        (
                        ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
                        ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                            ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                            ПО
                                  НаследованиеНастроек.Объект = НаборыЗначений.ЗначениеДоступа
                                И НастройкиПрав.Объект        = НаследованиеНастроек.Родитель
                            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                                И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
                            #Иначе
                                И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
                                И НастройкиПрав.Таблица = ВЫБОР
                                    КОГДА НаборыЗначений.Уточнение В (&amp;ИдентификаторыТаблицСОтдельнымиНастройкамиПрав)
                                    ТОГДА НаборыЗначений.Уточнение
                                    ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка) КОНЕЦ
                            #КонецЕсли
                            ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                            ПО
                                  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                                И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
                        )
                    )
            #Иначе
                ИНАЧЕ
                    ЛОЖЬ
            #КонецЕсли
                КОНЕЦ
                ) // НЕ ЛОЖЬ В
          )
         )
    #Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
        КОНЕЦ
    #КонецЕсли
    )

#ИначеЕсли "#Параметр(24)" = "НастройкиПрав" #Тогда
    
     (
        ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
            (
            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
            ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                ПО
                      НаследованиеНастроек.Объект = #Параметр(25)
                    И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
                #Иначе
                  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                    И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                  #Иначе
                    И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                  #КонецЕсли
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
                #КонецЕсли
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                      СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                    И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
            )
         И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
            (
            ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
            ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                ПО
                      НаследованиеНастроек.Объект = #Параметр(25)
                    И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
                #Иначе
                  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                    И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                  #Иначе
                    И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                  #КонецЕсли
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
                #КонецЕсли
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                      СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                    И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
            )
     )
#ИначеЕсли Не СтрСодержит(&amp;ВсеВидыДоступаКромеСпециальных, ",#Параметр(24),") #Тогда
    // Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
    #Если СтрСодержит("#Параметр(24)", ",") #Тогда
        НеверныйВидДоступа: "#Параметр(24)" - "Список имен видов доступа не найден"
    #Иначе
        НеверныйВидДоступа: "#Параметр(24)" - "Имя вида доступа не найдено"
    #КонецЕсли
#ИначеЕсли &amp;ВидыДоступаСОтключеннымИспользованием &lt;&gt; "Все"
         И Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(24),") #Тогда
    
     (
        #Если (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")        И СтрСодержит(",#Параметр(24),", ",Пользователи,"))
          Или (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") И СтрСодержит(",#Параметр(24),", ",ВнешниеПользователи,")) #Тогда
            НЕ
            (
            НЕ ИСТИНА В
                (
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                ГДЕ
                      ГруппыЗначенийДоступа.ЗначениеДоступа       = #Параметр(25)
                    И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
                )
            И НЕ
        #Иначе
            (
        #КонецЕсли
            ВЫБОР
            КОГДА ИСТИНА В
                (
        #Если СтрСодержит(&amp;ВидыДоступаБезГруппДляЗначенияДоступа, ",#Параметр(24),") #Тогда
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ГДЕ
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = #Параметр(25)
        #ИначеЕсли "#Параметр(25)" = "Т.Ссылка" #Тогда
            #Если СтрСодержит("#Параметр(24)", ",") #Тогда
                // Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
                НеверныйВидДоступа: "#Параметр(24)" - "При проверке таблицы значения доступа можно указывать только один вид доступа"
            #ИначеЕсли СтрСодержит(&amp;ВидыДоступаСОднойГруппойДляЗначенияДоступа, ",#Параметр(24),") #Тогда
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ГДЕ
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = Т.ГруппаДоступа
            #Иначе // Значения доступа, для которых можно указать несколько групп значений доступа.
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                    ВНУТРЕННЕЕ СОЕДИНЕНИЕ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
                ПО
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаДоступа
                    И ГруппыЗначений.Ссылка    = #Параметр(25)
            #КонецЕсли
        #Иначе // "#Параметр(25)" &lt;&gt; "Т.Ссылка"
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                    ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                ПО
                      Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
                    И ГруппыЗначений.ЗначениеДоступа = #Параметр(25)
        #КонецЕсли
                )
            ТОГДА ИСТИНА
            ИНАЧЕ ЛОЖЬ
            КОНЕЦ
            =
            ВЫБОР
            КОГДА ИСТИНА В
                (
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                ГДЕ
                      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(#Параметр(25))
                    И ЗначенияПоУмолчанию.ВсеРазрешены = ЛОЖЬ
                )
            ТОГДА ИСТИНА
            ИНАЧЕ ЛОЖЬ
            КОНЕЦ
            )
     )

#Иначе
    ИСТИНА
#КонецЕсли

    #Параметр(26)  // [)[)][)]...] [ИЛИ|И] [([(][(]...] оператор И/ИЛИ с/без скобок.

//// Проверка значения поля группы параметров 8.
#Если "#Параметр(27)" = "" И "#Параметр(28)" = "" #Тогда
    // Группа параметров не используется.
#ИначеЕсли "#Параметр(27)" = "Условие" Или "#Параметр(27)" = "" #Тогда
    // Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
     ( #Параметр(28) )
#ИначеЕсли "#Параметр(27)" = "ПравоЧтения" Или "#Параметр(27)" = "ПравоИзменения" #Тогда
     #Параметр(28) &lt;&gt; НЕОПРЕДЕЛЕНО
    И ИСТИНА В
     (  // Проверка права пользователя на таблицу Значения, установленного в поле.
        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
        ГДЕ
              ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
            И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(28))
        #Если Не "#Параметр(27)" = "ПравоЧтения" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Изменение
        #КонецЕсли
     )
#ИначеЕсли "#Параметр(27)" = "Объект" Или "#Параметр(27)" = " " #Тогда
    (
        // Проверка права объекта ведущей таблицы (зависимость по правам)
        (
            ИСТИНА В
            (
            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
            ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваОбъекта
            ГДЕ
                  ТаблицыГруппДоступаПроверкаПраваОбъекта.ГруппаДоступа = ГруппыДоступа.Ссылка
                И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПраваОбъекта.ТипТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(28))
            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                // Проверка ведущего права для права Чтение
                // Право Чтение может зависеть только от права Чтение
            #Иначе
                // Проверка ведущего права для права Изменение
                // Право Изменение может зависеть от ведущих прав Чтение, Изменение
                И НЕ
                (     ТаблицыГруппДоступаПроверкаПраваОбъекта.Изменение = ЛОЖЬ
                    И НЕ ИСТИНА В
                    (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                    ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
                    ГДЕ
                          ЗависимостиПравДоступа.ПодчиненнаяТаблица = СвойстваТекущейТаблицы.Ссылка
                        И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(28))
                    )
                )
            #КонецЕсли
            )
        )
        // Проверка ограничения права объекта ведущей таблицы
        И 
    #Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
        ВЫБОР КОГДА ИСТИНА В
                (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                    ИЗ Справочник.ИдентификаторыОбъектовМетаданных КАК Идентификаторы
                    ГДЕ
                          ТИПЗНАЧЕНИЯ(Идентификаторы.ЗначениеПустойСсылки) = ТИПЗНАЧЕНИЯ(#Параметр(28))
                        И Идентификаторы.ЗначениеПустойСсылки В (&amp;ТипыВладельцевНастроекПрав)
                )
        ТОГДА
            (
                ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
                    (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                    ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                        ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                        ПО
                              НаследованиеНастроек.Объект = #Параметр(28)
                            И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                        #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                            И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
                        #Иначе
                          #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                            И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                          #Иначе
                            И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                          #КонецЕсли
                            И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
                        #КонецЕсли
                        ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                        ПО
                              СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                            И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
                    )
                И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
                    (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
                    ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                        ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                        ПО
                              НаследованиеНастроек.Объект = #Параметр(28)
                            И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                        #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                            И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
                        #Иначе
                          #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                            И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                          #Иначе
                            И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                          #КонецЕсли
                            И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
                        #КонецЕсли
                        ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                        ПО
                              СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                            И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
                    )
            )
        ИНАЧЕ
    #КонецЕсли
    #Если "#Параметр(3)" = "РасширенноеИЛИ" Или "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
        НЕ
         (
          ИСТИНА В // Не все проверки отключены.
          (
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первого набора с не отключенной проверкой.
                ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
                ГДЕ
                      НомераНаборов.Объект = #Параметр(28)
                #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    // Право Чтение может зависеть только от права Чтение
                    И НомераНаборов.Чтение = ИСТИНА
                #Иначе
                    // Право Изменение может зависеть от ведущих прав Чтение, Изменение
                    И ВЫБОР
                        КОГДА ИСТИНА В
                            (
                            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                            ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
                            ГДЕ
                                  ЗависимостиПравДоступа.ПодчиненнаяТаблица             = СвойстваТекущейТаблицы.Ссылка
                                И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(28))
                            )
                        ТОГДА НомераНаборов.Чтение
                        ИНАЧЕ НомераНаборов.Изменение
                      КОНЕЦ
                #КонецЕсли
                    И
                ИСТИНА В // Не все проверки текущего набора отключены.
                (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первой не отключенной проверки текущего набора.
                    ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                    ГДЕ
                          НаборыЗначений.Объект      = #Параметр(28)
                        И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                        И НЕ ИСТИНА В
                            (
                                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Поиск настроек ограничений доступа
                                ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                                ГДЕ
                                      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                                    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                                    И ЗначенияПоУмолчанию.БезНастройки = ИСТИНА
                            )
                )
          ) И НЕ
    #Иначе
         (
    #КонецЕсли
          ИСТИНА В
          (
            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первого набора по которому доступ разрешен.
            ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
            ГДЕ
                  НомераНаборов.Объект = #Параметр(28)
            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                // Право Чтение может зависеть только от права Чтение
                И НомераНаборов.Чтение = ИСТИНА
            #Иначе
                // Право Изменение может зависеть от ведущих прав Чтение, Изменение
                И ВЫБОР
                    КОГДА ИСТИНА В
                        (
                        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
                        ГДЕ
                              ЗависимостиПравДоступа.ПодчиненнаяТаблица             = СвойстваТекущейТаблицы.Ссылка
                            И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(28))
                        )
                    ТОГДА НомераНаборов.Чтение
                    ИНАЧЕ НомераНаборов.Изменение
                  КОНЕЦ
            #КонецЕсли
                И
              #Если "#Параметр(3)" = "РасширенноеИЛИ" Или "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
                ИСТИНА В // Не все проверки текущего набора отключены.
                (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первой не отключенной проверки текущего набора.
                    ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                    ГДЕ
                          НаборыЗначений.Объект      = #Параметр(28)
                        И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                        И НЕ ИСТИНА В
                            (
                                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Поиск настроек ограничений доступа
                                ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                                ГДЕ
                                      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                                    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                                    И ЗначенияПоУмолчанию.БезНастройки = ИСТИНА
                            )
                )
                И
              #КонецЕсли
                  НЕ ЛОЖЬ В // Все проверки успешны.
                (
                ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ // Выбор первого не разрешенного значения доступа.
                ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                ГДЕ
                      НаборыЗначений.Объект      = #Параметр(28)
                    И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                    И НЕ
                ВЫБОР
            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
              #Если НЕ &amp;ВидыДоступаСОтключеннымИспользованием = "Все" #Тогда
                КОГДА НаборыЗначений.ЗначениеБезГрупп
                ТОГДА
                    ИСТИНА В
                        (
                        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                            ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                            ПО
                                  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                                И Значения.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                        ГДЕ
                              ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                            И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                            И ЕстьNull(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
                        )
              #КонецЕсли
                КОГДА НаборыЗначений.СтандартноеЗначение
            #Иначе
                КОГДА
                    ИСТИНА В
                    (
                        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                        ГДЕ
                            ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                    )
            #КонецЕсли
            #Если &amp;ВидыДоступаСОтключеннымИспользованием = "Все" #Тогда
                ТОГДА
                    ИСТИНА
            #Иначе
                ТОГДА
                #Если Не #ИмяТекущегоПраваДоступа = "Чтение"
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
                    ВЫБОР
                #КонецЕсли
                #Если Не #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    КОГДА
                        НЕ ИСТИНА В
                            (
                            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                            ИЗ Справочник.ИдентификаторыОбъектовМетаданных КАК ТипыСсылок
                            ГДЕ
                                  ТИПЗНАЧЕНИЯ(ТипыСсылок.ЗначениеПустойСсылки) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                                И ТипыСсылок.ЗначениеПустойСсылки В (&amp;ТипыЗначенийДоступаСГруппами)
                            )
                    ТОГДА
                        ИСТИНА В
                            (
                            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                            ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                                ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                                ПО
                                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                                    И Значения.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                            ГДЕ
                                  ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                                И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                                И ЕстьNull(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
                            )
                #КонецЕсли
                #Если Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
                    КОГДА
                        ИСТИНА В
                            (
                            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                            ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                            ГДЕ
                                  ГруппыЗначенийДоступа.ЗначениеДоступа       = НаборыЗначений.ЗначениеДоступа
                                И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
                            )
                    ТОГДА
                        ИСТИНА
                #КонецЕсли
                #Если Не #ИмяТекущегоПраваДоступа = "Чтение"
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
                    ИНАЧЕ
                #КонецЕсли
                        ИСТИНА В
                            (
                            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                            ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                                ПО
                                      ГруппыЗначений.ЗначениеДоступа    = НаборыЗначений.ЗначениеДоступа
                                    И ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                                    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                                
                                ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                                ПО
                                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                                    И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаЗначенийДоступа
                            ГДЕ
                                ЕстьNull(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
                            )
                #Если Не #ИмяТекущегоПраваДоступа = "Чтение"
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
                    КОНЕЦ
                #КонецЕсли
            #КонецЕсли
                // Проверка заведомого ложного или истинного однострочного набора значений.
                КОГДА НаборыЗначений.ЗначениеДоступа = ЗНАЧЕНИЕ(Перечисление.ДополнительныеЗначенияДоступа.ДоступРазрешен)
                ТОГДА ИСТИНА
                КОГДА НаборыЗначений.ЗначениеДоступа = ЗНАЧЕНИЕ(Перечисление.ДополнительныеЗначенияДоступа.ДоступЗапрещен)
                ТОГДА ЛОЖЬ
                // Проверка права доступа пользователя к таблице ЗначенияДоступа.
                КОГДА ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа) = ТИП(Справочник.ИдентификаторыОбъектовМетаданных)
            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                // Право Чтение может зависеть только от права Чтение
                ТОГДА ИСТИНА В
                    (   ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа = ГруппыДоступа.Ссылка
                            И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Таблица = НаборыЗначений.ЗначениеДоступа
                    )
            #Иначе
                ТОГДА ИСТИНА В
                    (   ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа = ГруппыДоступа.Ссылка
                            И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Таблица = НаборыЗначений.ЗначениеДоступа
                            И НЕ(НаборыЗначений.Уточнение &lt;&gt; ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                                    И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Изменение = ЛОЖЬ)
                    )
            #КонецЕсли
            #Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
                ИНАЧЕ
                    (
                    ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
                        (
                        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                            ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                            ПО
                                  НаследованиеНастроек.Объект = НаборыЗначений.ЗначениеДоступа
                                И НастройкиПрав.Объект        = НаследованиеНастроек.Родитель
                            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                                И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
                            #Иначе
                                И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
                                И НастройкиПрав.Таблица = ВЫБОР
                                    КОГДА НаборыЗначений.Уточнение В (&amp;ИдентификаторыТаблицСОтдельнымиНастройкамиПрав)
                                    ТОГДА НаборыЗначений.Уточнение
                                    ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка) КОНЕЦ
                            #КонецЕсли
                            ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                            ПО
                                  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                                И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
                        )
                    И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
                        (
                        ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
                        ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                            ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                            ПО
                                  НаследованиеНастроек.Объект = НаборыЗначений.ЗначениеДоступа
                                И НастройкиПрав.Объект        = НаследованиеНастроек.Родитель
                            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                                И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
                            #Иначе
                                И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
                                И НастройкиПрав.Таблица = ВЫБОР
                                    КОГДА НаборыЗначений.Уточнение В (&amp;ИдентификаторыТаблицСОтдельнымиНастройкамиПрав)
                                    ТОГДА НаборыЗначений.Уточнение
                                    ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка) КОНЕЦ
                            #КонецЕсли
                            ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                            ПО
                                  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                                И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
                        )
                    )
            #Иначе
                ИНАЧЕ
                    ЛОЖЬ
            #КонецЕсли
                КОНЕЦ
                ) // НЕ ЛОЖЬ В
          )
         )
    #Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
        КОНЕЦ
    #КонецЕсли
    )

#ИначеЕсли "#Параметр(27)" = "НастройкиПрав" #Тогда
    
     (
        ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
            (
            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
            ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                ПО
                      НаследованиеНастроек.Объект = #Параметр(28)
                    И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
                #Иначе
                  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                    И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                  #Иначе
                    И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                  #КонецЕсли
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
                #КонецЕсли
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                      СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                    И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
            )
         И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
            (
            ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
            ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                ПО
                      НаследованиеНастроек.Объект = #Параметр(28)
                    И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
                #Иначе
                  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                    И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                  #Иначе
                    И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                  #КонецЕсли
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
                #КонецЕсли
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                      СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                    И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
            )
     )
#ИначеЕсли Не СтрСодержит(&amp;ВсеВидыДоступаКромеСпециальных, ",#Параметр(27),") #Тогда
    // Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
    #Если СтрСодержит("#Параметр(27)", ",") #Тогда
        НеверныйВидДоступа: "#Параметр(27)" - "Список имен видов доступа не найден"
    #Иначе
        НеверныйВидДоступа: "#Параметр(27)" - "Имя вида доступа не найдено"
    #КонецЕсли
#ИначеЕсли &amp;ВидыДоступаСОтключеннымИспользованием &lt;&gt; "Все"
         И Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(27),") #Тогда
    
     (
        #Если (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")        И СтрСодержит(",#Параметр(27),", ",Пользователи,"))
          Или (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") И СтрСодержит(",#Параметр(27),", ",ВнешниеПользователи,")) #Тогда
            НЕ
            (
            НЕ ИСТИНА В
                (
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                ГДЕ
                      ГруппыЗначенийДоступа.ЗначениеДоступа       = #Параметр(28)
                    И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
                )
            И НЕ
        #Иначе
            (
        #КонецЕсли
            ВЫБОР
            КОГДА ИСТИНА В
                (
        #Если СтрСодержит(&amp;ВидыДоступаБезГруппДляЗначенияДоступа, ",#Параметр(27),") #Тогда
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ГДЕ
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = #Параметр(28)
        #ИначеЕсли "#Параметр(28)" = "Т.Ссылка" #Тогда
            #Если СтрСодержит("#Параметр(27)", ",") #Тогда
                // Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
                НеверныйВидДоступа: "#Параметр(27)" - "При проверке таблицы значения доступа можно указывать только один вид доступа"
            #ИначеЕсли СтрСодержит(&amp;ВидыДоступаСОднойГруппойДляЗначенияДоступа, ",#Параметр(27),") #Тогда
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ГДЕ
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = Т.ГруппаДоступа
            #Иначе // Значения доступа, для которых можно указать несколько групп значений доступа.
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                    ВНУТРЕННЕЕ СОЕДИНЕНИЕ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
                ПО
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаДоступа
                    И ГруппыЗначений.Ссылка    = #Параметр(28)
            #КонецЕсли
        #Иначе // "#Параметр(28)" &lt;&gt; "Т.Ссылка"
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                    ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                ПО
                      Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
                    И ГруппыЗначений.ЗначениеДоступа = #Параметр(28)
        #КонецЕсли
                )
            ТОГДА ИСТИНА
            ИНАЧЕ ЛОЖЬ
            КОНЕЦ
            =
            ВЫБОР
            КОГДА ИСТИНА В
                (
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                ГДЕ
                      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(#Параметр(28))
                    И ЗначенияПоУмолчанию.ВсеРазрешены = ЛОЖЬ
                )
            ТОГДА ИСТИНА
            ИНАЧЕ ЛОЖЬ
            КОНЕЦ
            )
     )

#Иначе
    ИСТИНА
#КонецЕсли

    #Параметр(29)  // [)[)][)]...] [ИЛИ|И] [([(][(]...] оператор И/ИЛИ с/без скобок.

//// Проверка значения поля группы параметров 9.
#Если "#Параметр(30)" = "" И "#Параметр(31)" = "" #Тогда
    // Группа параметров не используется.
#ИначеЕсли "#Параметр(30)" = "Условие" Или "#Параметр(30)" = "" #Тогда
    // Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
     ( #Параметр(31) )
#ИначеЕсли "#Параметр(30)" = "ПравоЧтения" Или "#Параметр(30)" = "ПравоИзменения" #Тогда
     #Параметр(31) &lt;&gt; НЕОПРЕДЕЛЕНО
    И ИСТИНА В
     (  // Проверка права пользователя на таблицу Значения, установленного в поле.
        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
        ГДЕ
              ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
            И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(31))
        #Если Не "#Параметр(30)" = "ПравоЧтения" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Изменение
        #КонецЕсли
     )
#ИначеЕсли "#Параметр(30)" = "Объект" Или "#Параметр(30)" = " " #Тогда
    (
        // Проверка права объекта ведущей таблицы (зависимость по правам)
        (
            ИСТИНА В
            (
            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
            ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваОбъекта
            ГДЕ
                  ТаблицыГруппДоступаПроверкаПраваОбъекта.ГруппаДоступа = ГруппыДоступа.Ссылка
                И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПраваОбъекта.ТипТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(31))
            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                // Проверка ведущего права для права Чтение
                // Право Чтение может зависеть только от права Чтение
            #Иначе
                // Проверка ведущего права для права Изменение
                // Право Изменение может зависеть от ведущих прав Чтение, Изменение
                И НЕ
                (     ТаблицыГруппДоступаПроверкаПраваОбъекта.Изменение = ЛОЖЬ
                    И НЕ ИСТИНА В
                    (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                    ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
                    ГДЕ
                          ЗависимостиПравДоступа.ПодчиненнаяТаблица = СвойстваТекущейТаблицы.Ссылка
                        И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(31))
                    )
                )
            #КонецЕсли
            )
        )
        // Проверка ограничения права объекта ведущей таблицы
        И 
    #Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
        ВЫБОР КОГДА ИСТИНА В
                (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                    ИЗ Справочник.ИдентификаторыОбъектовМетаданных КАК Идентификаторы
                    ГДЕ
                          ТИПЗНАЧЕНИЯ(Идентификаторы.ЗначениеПустойСсылки) = ТИПЗНАЧЕНИЯ(#Параметр(31))
                        И Идентификаторы.ЗначениеПустойСсылки В (&amp;ТипыВладельцевНастроекПрав)
                )
        ТОГДА
            (
                ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
                    (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                    ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                        ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                        ПО
                              НаследованиеНастроек.Объект = #Параметр(31)
                            И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                        #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                            И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
                        #Иначе
                          #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                            И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                          #Иначе
                            И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                          #КонецЕсли
                            И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
                        #КонецЕсли
                        ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                        ПО
                              СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                            И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
                    )
                И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
                    (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
                    ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                        ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                        ПО
                              НаследованиеНастроек.Объект = #Параметр(31)
                            И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                        #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                            И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
                        #Иначе
                          #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                            И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                          #Иначе
                            И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                          #КонецЕсли
                            И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
                        #КонецЕсли
                        ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                        ПО
                              СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                            И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
                    )
            )
        ИНАЧЕ
    #КонецЕсли
    #Если "#Параметр(3)" = "РасширенноеИЛИ" Или "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
        НЕ
         (
          ИСТИНА В // Не все проверки отключены.
          (
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первого набора с не отключенной проверкой.
                ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
                ГДЕ
                      НомераНаборов.Объект = #Параметр(31)
                #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    // Право Чтение может зависеть только от права Чтение
                    И НомераНаборов.Чтение = ИСТИНА
                #Иначе
                    // Право Изменение может зависеть от ведущих прав Чтение, Изменение
                    И ВЫБОР
                        КОГДА ИСТИНА В
                            (
                            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                            ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
                            ГДЕ
                                  ЗависимостиПравДоступа.ПодчиненнаяТаблица             = СвойстваТекущейТаблицы.Ссылка
                                И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(31))
                            )
                        ТОГДА НомераНаборов.Чтение
                        ИНАЧЕ НомераНаборов.Изменение
                      КОНЕЦ
                #КонецЕсли
                    И
                ИСТИНА В // Не все проверки текущего набора отключены.
                (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первой не отключенной проверки текущего набора.
                    ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                    ГДЕ
                          НаборыЗначений.Объект      = #Параметр(31)
                        И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                        И НЕ ИСТИНА В
                            (
                                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Поиск настроек ограничений доступа
                                ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                                ГДЕ
                                      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                                    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                                    И ЗначенияПоУмолчанию.БезНастройки = ИСТИНА
                            )
                )
          ) И НЕ
    #Иначе
         (
    #КонецЕсли
          ИСТИНА В
          (
            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первого набора по которому доступ разрешен.
            ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
            ГДЕ
                  НомераНаборов.Объект = #Параметр(31)
            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                // Право Чтение может зависеть только от права Чтение
                И НомераНаборов.Чтение = ИСТИНА
            #Иначе
                // Право Изменение может зависеть от ведущих прав Чтение, Изменение
                И ВЫБОР
                    КОГДА ИСТИНА В
                        (
                        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
                        ГДЕ
                              ЗависимостиПравДоступа.ПодчиненнаяТаблица             = СвойстваТекущейТаблицы.Ссылка
                            И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(31))
                        )
                    ТОГДА НомераНаборов.Чтение
                    ИНАЧЕ НомераНаборов.Изменение
                  КОНЕЦ
            #КонецЕсли
                И
              #Если "#Параметр(3)" = "РасширенноеИЛИ" Или "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
                ИСТИНА В // Не все проверки текущего набора отключены.
                (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первой не отключенной проверки текущего набора.
                    ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                    ГДЕ
                          НаборыЗначений.Объект      = #Параметр(31)
                        И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                        И НЕ ИСТИНА В
                            (
                                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Поиск настроек ограничений доступа
                                ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                                ГДЕ
                                      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                                    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                                    И ЗначенияПоУмолчанию.БезНастройки = ИСТИНА
                            )
                )
                И
              #КонецЕсли
                  НЕ ЛОЖЬ В // Все проверки успешны.
                (
                ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ // Выбор первого не разрешенного значения доступа.
                ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                ГДЕ
                      НаборыЗначений.Объект      = #Параметр(31)
                    И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                    И НЕ
                ВЫБОР
            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
              #Если НЕ &amp;ВидыДоступаСОтключеннымИспользованием = "Все" #Тогда
                КОГДА НаборыЗначений.ЗначениеБезГрупп
                ТОГДА
                    ИСТИНА В
                        (
                        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                            ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                            ПО
                                  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                                И Значения.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                        ГДЕ
                              ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                            И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                            И ЕстьNull(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
                        )
              #КонецЕсли
                КОГДА НаборыЗначений.СтандартноеЗначение
            #Иначе
                КОГДА
                    ИСТИНА В
                    (
                        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                        ГДЕ
                            ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                    )
            #КонецЕсли
            #Если &amp;ВидыДоступаСОтключеннымИспользованием = "Все" #Тогда
                ТОГДА
                    ИСТИНА
            #Иначе
                ТОГДА
                #Если Не #ИмяТекущегоПраваДоступа = "Чтение"
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
                    ВЫБОР
                #КонецЕсли
                #Если Не #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    КОГДА
                        НЕ ИСТИНА В
                            (
                            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                            ИЗ Справочник.ИдентификаторыОбъектовМетаданных КАК ТипыСсылок
                            ГДЕ
                                  ТИПЗНАЧЕНИЯ(ТипыСсылок.ЗначениеПустойСсылки) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                                И ТипыСсылок.ЗначениеПустойСсылки В (&amp;ТипыЗначенийДоступаСГруппами)
                            )
                    ТОГДА
                        ИСТИНА В
                            (
                            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                            ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                                ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                                ПО
                                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                                    И Значения.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                            ГДЕ
                                  ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                                И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                                И ЕстьNull(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
                            )
                #КонецЕсли
                #Если Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
                    КОГДА
                        ИСТИНА В
                            (
                            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                            ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                            ГДЕ
                                  ГруппыЗначенийДоступа.ЗначениеДоступа       = НаборыЗначений.ЗначениеДоступа
                                И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
                            )
                    ТОГДА
                        ИСТИНА
                #КонецЕсли
                #Если Не #ИмяТекущегоПраваДоступа = "Чтение"
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
                    ИНАЧЕ
                #КонецЕсли
                        ИСТИНА В
                            (
                            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                            ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                                ПО
                                      ГруппыЗначений.ЗначениеДоступа    = НаборыЗначений.ЗначениеДоступа
                                    И ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                                    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                                
                                ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                                ПО
                                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                                    И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаЗначенийДоступа
                            ГДЕ
                                ЕстьNull(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
                            )
                #Если Не #ИмяТекущегоПраваДоступа = "Чтение"
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
                    КОНЕЦ
                #КонецЕсли
            #КонецЕсли
                // Проверка заведомого ложного или истинного однострочного набора значений.
                КОГДА НаборыЗначений.ЗначениеДоступа = ЗНАЧЕНИЕ(Перечисление.ДополнительныеЗначенияДоступа.ДоступРазрешен)
                ТОГДА ИСТИНА
                КОГДА НаборыЗначений.ЗначениеДоступа = ЗНАЧЕНИЕ(Перечисление.ДополнительныеЗначенияДоступа.ДоступЗапрещен)
                ТОГДА ЛОЖЬ
                // Проверка права доступа пользователя к таблице ЗначенияДоступа.
                КОГДА ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа) = ТИП(Справочник.ИдентификаторыОбъектовМетаданных)
            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                // Право Чтение может зависеть только от права Чтение
                ТОГДА ИСТИНА В
                    (   ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа = ГруппыДоступа.Ссылка
                            И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Таблица = НаборыЗначений.ЗначениеДоступа
                    )
            #Иначе
                ТОГДА ИСТИНА В
                    (   ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа = ГруппыДоступа.Ссылка
                            И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Таблица = НаборыЗначений.ЗначениеДоступа
                            И НЕ(НаборыЗначений.Уточнение &lt;&gt; ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                                    И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Изменение = ЛОЖЬ)
                    )
            #КонецЕсли
            #Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
                ИНАЧЕ
                    (
                    ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
                        (
                        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                            ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                            ПО
                                  НаследованиеНастроек.Объект = НаборыЗначений.ЗначениеДоступа
                                И НастройкиПрав.Объект        = НаследованиеНастроек.Родитель
                            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                                И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
                            #Иначе
                                И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
                                И НастройкиПрав.Таблица = ВЫБОР
                                    КОГДА НаборыЗначений.Уточнение В (&amp;ИдентификаторыТаблицСОтдельнымиНастройкамиПрав)
                                    ТОГДА НаборыЗначений.Уточнение
                                    ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка) КОНЕЦ
                            #КонецЕсли
                            ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                            ПО
                                  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                                И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
                        )
                    И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
                        (
                        ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
                        ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                            ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                            ПО
                                  НаследованиеНастроек.Объект = НаборыЗначений.ЗначениеДоступа
                                И НастройкиПрав.Объект        = НаследованиеНастроек.Родитель
                            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                                И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
                            #Иначе
                                И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
                                И НастройкиПрав.Таблица = ВЫБОР
                                    КОГДА НаборыЗначений.Уточнение В (&amp;ИдентификаторыТаблицСОтдельнымиНастройкамиПрав)
                                    ТОГДА НаборыЗначений.Уточнение
                                    ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка) КОНЕЦ
                            #КонецЕсли
                            ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                            ПО
                                  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                                И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
                        )
                    )
            #Иначе
                ИНАЧЕ
                    ЛОЖЬ
            #КонецЕсли
                КОНЕЦ
                ) // НЕ ЛОЖЬ В
          )
         )
    #Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
        КОНЕЦ
    #КонецЕсли
    )

#ИначеЕсли "#Параметр(30)" = "НастройкиПрав" #Тогда
    
     (
        ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
            (
            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
            ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                ПО
                      НаследованиеНастроек.Объект = #Параметр(31)
                    И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
                #Иначе
                  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                    И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                  #Иначе
                    И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                  #КонецЕсли
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
                #КонецЕсли
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                      СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                    И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
            )
         И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
            (
            ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
            ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                ПО
                      НаследованиеНастроек.Объект = #Параметр(31)
                    И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
                #Иначе
                  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                    И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                  #Иначе
                    И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                  #КонецЕсли
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
                #КонецЕсли
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                      СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                    И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
            )
     )
#ИначеЕсли Не СтрСодержит(&amp;ВсеВидыДоступаКромеСпециальных, ",#Параметр(30),") #Тогда
    // Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
    #Если СтрСодержит("#Параметр(30)", ",") #Тогда
        НеверныйВидДоступа: "#Параметр(30)" - "Список имен видов доступа не найден"
    #Иначе
        НеверныйВидДоступа: "#Параметр(30)" - "Имя вида доступа не найдено"
    #КонецЕсли
#ИначеЕсли &amp;ВидыДоступаСОтключеннымИспользованием &lt;&gt; "Все"
         И Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(30),") #Тогда
    
     (
        #Если (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")        И СтрСодержит(",#Параметр(30),", ",Пользователи,"))
          Или (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") И СтрСодержит(",#Параметр(30),", ",ВнешниеПользователи,")) #Тогда
            НЕ
            (
            НЕ ИСТИНА В
                (
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                ГДЕ
                      ГруппыЗначенийДоступа.ЗначениеДоступа       = #Параметр(31)
                    И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
                )
            И НЕ
        #Иначе
            (
        #КонецЕсли
            ВЫБОР
            КОГДА ИСТИНА В
                (
        #Если СтрСодержит(&amp;ВидыДоступаБезГруппДляЗначенияДоступа, ",#Параметр(30),") #Тогда
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ГДЕ
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = #Параметр(31)
        #ИначеЕсли "#Параметр(31)" = "Т.Ссылка" #Тогда
            #Если СтрСодержит("#Параметр(30)", ",") #Тогда
                // Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
                НеверныйВидДоступа: "#Параметр(30)" - "При проверке таблицы значения доступа можно указывать только один вид доступа"
            #ИначеЕсли СтрСодержит(&amp;ВидыДоступаСОднойГруппойДляЗначенияДоступа, ",#Параметр(30),") #Тогда
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ГДЕ
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = Т.ГруппаДоступа
            #Иначе // Значения доступа, для которых можно указать несколько групп значений доступа.
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                    ВНУТРЕННЕЕ СОЕДИНЕНИЕ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
                ПО
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаДоступа
                    И ГруппыЗначений.Ссылка    = #Параметр(31)
            #КонецЕсли
        #Иначе // "#Параметр(31)" &lt;&gt; "Т.Ссылка"
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                    ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                ПО
                      Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
                    И ГруппыЗначений.ЗначениеДоступа = #Параметр(31)
        #КонецЕсли
                )
            ТОГДА ИСТИНА
            ИНАЧЕ ЛОЖЬ
            КОНЕЦ
            =
            ВЫБОР
            КОГДА ИСТИНА В
                (
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                ГДЕ
                      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(#Параметр(31))
                    И ЗначенияПоУмолчанию.ВсеРазрешены = ЛОЖЬ
                )
            ТОГДА ИСТИНА
            ИНАЧЕ ЛОЖЬ
            КОНЕЦ
            )
     )

#Иначе
    ИСТИНА
#КонецЕсли

    #Параметр(32)  // [)[)][)]...] [ИЛИ|И] [([(][(]...] оператор И/ИЛИ с/без скобок.

//// Проверка значения поля группы параметров 10.
#Если "#Параметр(33)" = "" И "#Параметр(34)" = "" #Тогда
    // Группа параметров не используется.
#ИначеЕсли "#Параметр(33)" = "Условие" Или "#Параметр(33)" = "" #Тогда
    // Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
     ( #Параметр(34) )
#ИначеЕсли "#Параметр(33)" = "ПравоЧтения" Или "#Параметр(33)" = "ПравоИзменения" #Тогда
     #Параметр(34) &lt;&gt; НЕОПРЕДЕЛЕНО
    И ИСТИНА В
     (  // Проверка права пользователя на таблицу Значения, установленного в поле.
        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
        ГДЕ
              ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
            И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(34))
        #Если Не "#Параметр(33)" = "ПравоЧтения" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Изменение
        #КонецЕсли
     )
#ИначеЕсли "#Параметр(33)" = "Объект" Или "#Параметр(33)" = " " #Тогда
    (
        // Проверка права объекта ведущей таблицы (зависимость по правам)
        (
            ИСТИНА В
            (
            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
            ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваОбъекта
            ГДЕ
                  ТаблицыГруппДоступаПроверкаПраваОбъекта.ГруппаДоступа = ГруппыДоступа.Ссылка
                И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПраваОбъекта.ТипТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(34))
            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                // Проверка ведущего права для права Чтение
                // Право Чтение может зависеть только от права Чтение
            #Иначе
                // Проверка ведущего права для права Изменение
                // Право Изменение может зависеть от ведущих прав Чтение, Изменение
                И НЕ
                (     ТаблицыГруппДоступаПроверкаПраваОбъекта.Изменение = ЛОЖЬ
                    И НЕ ИСТИНА В
                    (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                    ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
                    ГДЕ
                          ЗависимостиПравДоступа.ПодчиненнаяТаблица = СвойстваТекущейТаблицы.Ссылка
                        И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(34))
                    )
                )
            #КонецЕсли
            )
        )
        // Проверка ограничения права объекта ведущей таблицы
        И 
    #Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
        ВЫБОР КОГДА ИСТИНА В
                (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                    ИЗ Справочник.ИдентификаторыОбъектовМетаданных КАК Идентификаторы
                    ГДЕ
                          ТИПЗНАЧЕНИЯ(Идентификаторы.ЗначениеПустойСсылки) = ТИПЗНАЧЕНИЯ(#Параметр(34))
                        И Идентификаторы.ЗначениеПустойСсылки В (&amp;ТипыВладельцевНастроекПрав)
                )
        ТОГДА
            (
                ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
                    (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                    ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                        ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                        ПО
                              НаследованиеНастроек.Объект = #Параметр(34)
                            И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                        #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                            И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
                        #Иначе
                          #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                            И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                          #Иначе
                            И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                          #КонецЕсли
                            И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
                        #КонецЕсли
                        ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                        ПО
                              СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                            И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
                    )
                И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
                    (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
                    ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                        ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                        ПО
                              НаследованиеНастроек.Объект = #Параметр(34)
                            И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                        #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                            И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
                        #Иначе
                          #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                            И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                          #Иначе
                            И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                          #КонецЕсли
                            И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
                        #КонецЕсли
                        ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                        ПО
                              СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                            И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
                    )
            )
        ИНАЧЕ
    #КонецЕсли
    #Если "#Параметр(3)" = "РасширенноеИЛИ" Или "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
        НЕ
         (
          ИСТИНА В // Не все проверки отключены.
          (
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первого набора с не отключенной проверкой.
                ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
                ГДЕ
                      НомераНаборов.Объект = #Параметр(34)
                #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    // Право Чтение может зависеть только от права Чтение
                    И НомераНаборов.Чтение = ИСТИНА
                #Иначе
                    // Право Изменение может зависеть от ведущих прав Чтение, Изменение
                    И ВЫБОР
                        КОГДА ИСТИНА В
                            (
                            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                            ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
                            ГДЕ
                                  ЗависимостиПравДоступа.ПодчиненнаяТаблица             = СвойстваТекущейТаблицы.Ссылка
                                И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(34))
                            )
                        ТОГДА НомераНаборов.Чтение
                        ИНАЧЕ НомераНаборов.Изменение
                      КОНЕЦ
                #КонецЕсли
                    И
                ИСТИНА В // Не все проверки текущего набора отключены.
                (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первой не отключенной проверки текущего набора.
                    ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                    ГДЕ
                          НаборыЗначений.Объект      = #Параметр(34)
                        И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                        И НЕ ИСТИНА В
                            (
                                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Поиск настроек ограничений доступа
                                ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                                ГДЕ
                                      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                                    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                                    И ЗначенияПоУмолчанию.БезНастройки = ИСТИНА
                            )
                )
          ) И НЕ
    #Иначе
         (
    #КонецЕсли
          ИСТИНА В
          (
            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первого набора по которому доступ разрешен.
            ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
            ГДЕ
                  НомераНаборов.Объект = #Параметр(34)
            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                // Право Чтение может зависеть только от права Чтение
                И НомераНаборов.Чтение = ИСТИНА
            #Иначе
                // Право Изменение может зависеть от ведущих прав Чтение, Изменение
                И ВЫБОР
                    КОГДА ИСТИНА В
                        (
                        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
                        ГДЕ
                              ЗависимостиПравДоступа.ПодчиненнаяТаблица             = СвойстваТекущейТаблицы.Ссылка
                            И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(34))
                        )
                    ТОГДА НомераНаборов.Чтение
                    ИНАЧЕ НомераНаборов.Изменение
                  КОНЕЦ
            #КонецЕсли
                И
              #Если "#Параметр(3)" = "РасширенноеИЛИ" Или "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
                ИСТИНА В // Не все проверки текущего набора отключены.
                (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первой не отключенной проверки текущего набора.
                    ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                    ГДЕ
                          НаборыЗначений.Объект      = #Параметр(34)
                        И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                        И НЕ ИСТИНА В
                            (
                                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Поиск настроек ограничений доступа
                                ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                                ГДЕ
                                      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                                    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                                    И ЗначенияПоУмолчанию.БезНастройки = ИСТИНА
                            )
                )
                И
              #КонецЕсли
                  НЕ ЛОЖЬ В // Все проверки успешны.
                (
                ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ // Выбор первого не разрешенного значения доступа.
                ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                ГДЕ
                      НаборыЗначений.Объект      = #Параметр(34)
                    И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                    И НЕ
                ВЫБОР
            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
              #Если НЕ &amp;ВидыДоступаСОтключеннымИспользованием = "Все" #Тогда
                КОГДА НаборыЗначений.ЗначениеБезГрупп
                ТОГДА
                    ИСТИНА В
                        (
                        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                            ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                            ПО
                                  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                                И Значения.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                        ГДЕ
                              ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                            И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                            И ЕстьNull(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
                        )
              #КонецЕсли
                КОГДА НаборыЗначений.СтандартноеЗначение
            #Иначе
                КОГДА
                    ИСТИНА В
                    (
                        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                        ГДЕ
                            ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                    )
            #КонецЕсли
            #Если &amp;ВидыДоступаСОтключеннымИспользованием = "Все" #Тогда
                ТОГДА
                    ИСТИНА
            #Иначе
                ТОГДА
                #Если Не #ИмяТекущегоПраваДоступа = "Чтение"
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
                    ВЫБОР
                #КонецЕсли
                #Если Не #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    КОГДА
                        НЕ ИСТИНА В
                            (
                            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                            ИЗ Справочник.ИдентификаторыОбъектовМетаданных КАК ТипыСсылок
                            ГДЕ
                                  ТИПЗНАЧЕНИЯ(ТипыСсылок.ЗначениеПустойСсылки) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                                И ТипыСсылок.ЗначениеПустойСсылки В (&amp;ТипыЗначенийДоступаСГруппами)
                            )
                    ТОГДА
                        ИСТИНА В
                            (
                            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                            ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                                ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                                ПО
                                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                                    И Значения.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                            ГДЕ
                                  ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                                И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                                И ЕстьNull(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
                            )
                #КонецЕсли
                #Если Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
                    КОГДА
                        ИСТИНА В
                            (
                            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                            ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                            ГДЕ
                                  ГруппыЗначенийДоступа.ЗначениеДоступа       = НаборыЗначений.ЗначениеДоступа
                                И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
                            )
                    ТОГДА
                        ИСТИНА
                #КонецЕсли
                #Если Не #ИмяТекущегоПраваДоступа = "Чтение"
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
                    ИНАЧЕ
                #КонецЕсли
                        ИСТИНА В
                            (
                            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                            ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                                ПО
                                      ГруппыЗначений.ЗначениеДоступа    = НаборыЗначений.ЗначениеДоступа
                                    И ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                                    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                                
                                ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                                ПО
                                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                                    И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаЗначенийДоступа
                            ГДЕ
                                ЕстьNull(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
                            )
                #Если Не #ИмяТекущегоПраваДоступа = "Чтение"
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
                    КОНЕЦ
                #КонецЕсли
            #КонецЕсли
                // Проверка заведомого ложного или истинного однострочного набора значений.
                КОГДА НаборыЗначений.ЗначениеДоступа = ЗНАЧЕНИЕ(Перечисление.ДополнительныеЗначенияДоступа.ДоступРазрешен)
                ТОГДА ИСТИНА
                КОГДА НаборыЗначений.ЗначениеДоступа = ЗНАЧЕНИЕ(Перечисление.ДополнительныеЗначенияДоступа.ДоступЗапрещен)
                ТОГДА ЛОЖЬ
                // Проверка права доступа пользователя к таблице ЗначенияДоступа.
                КОГДА ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа) = ТИП(Справочник.ИдентификаторыОбъектовМетаданных)
            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                // Право Чтение может зависеть только от права Чтение
                ТОГДА ИСТИНА В
                    (   ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа = ГруппыДоступа.Ссылка
                            И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Таблица = НаборыЗначений.ЗначениеДоступа
                    )
            #Иначе
                ТОГДА ИСТИНА В
                    (   ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа = ГруппыДоступа.Ссылка
                            И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Таблица = НаборыЗначений.ЗначениеДоступа
                            И НЕ(НаборыЗначений.Уточнение &lt;&gt; ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                                    И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Изменение = ЛОЖЬ)
                    )
            #КонецЕсли
            #Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
                ИНАЧЕ
                    (
                    ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
                        (
                        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                            ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                            ПО
                                  НаследованиеНастроек.Объект = НаборыЗначений.ЗначениеДоступа
                                И НастройкиПрав.Объект        = НаследованиеНастроек.Родитель
                            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                                И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
                            #Иначе
                                И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
                                И НастройкиПрав.Таблица = ВЫБОР
                                    КОГДА НаборыЗначений.Уточнение В (&amp;ИдентификаторыТаблицСОтдельнымиНастройкамиПрав)
                                    ТОГДА НаборыЗначений.Уточнение
                                    ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка) КОНЕЦ
                            #КонецЕсли
                            ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                            ПО
                                  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                                И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
                        )
                    И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
                        (
                        ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
                        ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                            ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                            ПО
                                  НаследованиеНастроек.Объект = НаборыЗначений.ЗначениеДоступа
                                И НастройкиПрав.Объект        = НаследованиеНастроек.Родитель
                            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                                И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
                            #Иначе
                                И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
                                И НастройкиПрав.Таблица = ВЫБОР
                                    КОГДА НаборыЗначений.Уточнение В (&amp;ИдентификаторыТаблицСОтдельнымиНастройкамиПрав)
                                    ТОГДА НаборыЗначений.Уточнение
                                    ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка) КОНЕЦ
                            #КонецЕсли
                            ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                            ПО
                                  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                                И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
                        )
                    )
            #Иначе
                ИНАЧЕ
                    ЛОЖЬ
            #КонецЕсли
                КОНЕЦ
                ) // НЕ ЛОЖЬ В
          )
         )
    #Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
        КОНЕЦ
    #КонецЕсли
    )

#ИначеЕсли "#Параметр(33)" = "НастройкиПрав" #Тогда
    
     (
        ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
            (
            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
            ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                ПО
                      НаследованиеНастроек.Объект = #Параметр(34)
                    И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
                #Иначе
                  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                    И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                  #Иначе
                    И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                  #КонецЕсли
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
                #КонецЕсли
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                      СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                    И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
            )
         И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
            (
            ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
            ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                ПО
                      НаследованиеНастроек.Объект = #Параметр(34)
                    И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
                #Иначе
                  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                    И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                  #Иначе
                    И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                  #КонецЕсли
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
                #КонецЕсли
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                      СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                    И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
            )
     )
#ИначеЕсли Не СтрСодержит(&amp;ВсеВидыДоступаКромеСпециальных, ",#Параметр(33),") #Тогда
    // Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
    #Если СтрСодержит("#Параметр(33)", ",") #Тогда
        НеверныйВидДоступа: "#Параметр(33)" - "Список имен видов доступа не найден"
    #Иначе
        НеверныйВидДоступа: "#Параметр(33)" - "Имя вида доступа не найдено"
    #КонецЕсли
#ИначеЕсли &amp;ВидыДоступаСОтключеннымИспользованием &lt;&gt; "Все"
         И Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(33),") #Тогда
    
     (
        #Если (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")        И СтрСодержит(",#Параметр(33),", ",Пользователи,"))
          Или (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") И СтрСодержит(",#Параметр(33),", ",ВнешниеПользователи,")) #Тогда
            НЕ
            (
            НЕ ИСТИНА В
                (
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                ГДЕ
                      ГруппыЗначенийДоступа.ЗначениеДоступа       = #Параметр(34)
                    И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
                )
            И НЕ
        #Иначе
            (
        #КонецЕсли
            ВЫБОР
            КОГДА ИСТИНА В
                (
        #Если СтрСодержит(&amp;ВидыДоступаБезГруппДляЗначенияДоступа, ",#Параметр(33),") #Тогда
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ГДЕ
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = #Параметр(34)
        #ИначеЕсли "#Параметр(34)" = "Т.Ссылка" #Тогда
            #Если СтрСодержит("#Параметр(33)", ",") #Тогда
                // Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
                НеверныйВидДоступа: "#Параметр(33)" - "При проверке таблицы значения доступа можно указывать только один вид доступа"
            #ИначеЕсли СтрСодержит(&amp;ВидыДоступаСОднойГруппойДляЗначенияДоступа, ",#Параметр(33),") #Тогда
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ГДЕ
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = Т.ГруппаДоступа
            #Иначе // Значения доступа, для которых можно указать несколько групп значений доступа.
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                    ВНУТРЕННЕЕ СОЕДИНЕНИЕ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
                ПО
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаДоступа
                    И ГруппыЗначений.Ссылка    = #Параметр(34)
            #КонецЕсли
        #Иначе // "#Параметр(34)" &lt;&gt; "Т.Ссылка"
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                    ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                ПО
                      Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
                    И ГруппыЗначений.ЗначениеДоступа = #Параметр(34)
        #КонецЕсли
                )
            ТОГДА ИСТИНА
            ИНАЧЕ ЛОЖЬ
            КОНЕЦ
            =
            ВЫБОР
            КОГДА ИСТИНА В
                (
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                ГДЕ
                      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(#Параметр(34))
                    И ЗначенияПоУмолчанию.ВсеРазрешены = ЛОЖЬ
                )
            ТОГДА ИСТИНА
            ИНАЧЕ ЛОЖЬ
            КОНЕЦ
            )
     )

#Иначе
    ИСТИНА
#КонецЕсли

    #Параметр(35)  // [)[)][)]...] [ИЛИ|И] [([(][(]...] оператор И/ИЛИ с/без скобок.

//// Проверка значения поля группы параметров 11.
#Если "#Параметр(36)" = "" И "#Параметр(37)" = "" #Тогда
    // Группа параметров не используется.
#ИначеЕсли "#Параметр(36)" = "Условие" Или "#Параметр(36)" = "" #Тогда
    // Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
     ( #Параметр(37) )
#ИначеЕсли "#Параметр(36)" = "ПравоЧтения" Или "#Параметр(36)" = "ПравоИзменения" #Тогда
     #Параметр(37) &lt;&gt; НЕОПРЕДЕЛЕНО
    И ИСТИНА В
     (  // Проверка права пользователя на таблицу Значения, установленного в поле.
        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
        ГДЕ
              ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
            И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(37))
        #Если Не "#Параметр(36)" = "ПравоЧтения" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Изменение
        #КонецЕсли
     )
#ИначеЕсли "#Параметр(36)" = "Объект" Или "#Параметр(36)" = " " #Тогда
    (
        // Проверка права объекта ведущей таблицы (зависимость по правам)
        (
            ИСТИНА В
            (
            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
            ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваОбъекта
            ГДЕ
                  ТаблицыГруппДоступаПроверкаПраваОбъекта.ГруппаДоступа = ГруппыДоступа.Ссылка
                И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПраваОбъекта.ТипТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(37))
            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                // Проверка ведущего права для права Чтение
                // Право Чтение может зависеть только от права Чтение
            #Иначе
                // Проверка ведущего права для права Изменение
                // Право Изменение может зависеть от ведущих прав Чтение, Изменение
                И НЕ
                (     ТаблицыГруппДоступаПроверкаПраваОбъекта.Изменение = ЛОЖЬ
                    И НЕ ИСТИНА В
                    (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                    ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
                    ГДЕ
                          ЗависимостиПравДоступа.ПодчиненнаяТаблица = СвойстваТекущейТаблицы.Ссылка
                        И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(37))
                    )
                )
            #КонецЕсли
            )
        )
        // Проверка ограничения права объекта ведущей таблицы
        И 
    #Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
        ВЫБОР КОГДА ИСТИНА В
                (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                    ИЗ Справочник.ИдентификаторыОбъектовМетаданных КАК Идентификаторы
                    ГДЕ
                          ТИПЗНАЧЕНИЯ(Идентификаторы.ЗначениеПустойСсылки) = ТИПЗНАЧЕНИЯ(#Параметр(37))
                        И Идентификаторы.ЗначениеПустойСсылки В (&amp;ТипыВладельцевНастроекПрав)
                )
        ТОГДА
            (
                ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
                    (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                    ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                        ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                        ПО
                              НаследованиеНастроек.Объект = #Параметр(37)
                            И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                        #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                            И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
                        #Иначе
                          #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                            И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                          #Иначе
                            И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                          #КонецЕсли
                            И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
                        #КонецЕсли
                        ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                        ПО
                              СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                            И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
                    )
                И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
                    (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
                    ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                        ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                        ПО
                              НаследованиеНастроек.Объект = #Параметр(37)
                            И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                        #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                            И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
                        #Иначе
                          #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                            И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                          #Иначе
                            И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                          #КонецЕсли
                            И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
                        #КонецЕсли
                        ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                        ПО
                              СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                            И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
                    )
            )
        ИНАЧЕ
    #КонецЕсли
    #Если "#Параметр(3)" = "РасширенноеИЛИ" Или "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
        НЕ
         (
          ИСТИНА В // Не все проверки отключены.
          (
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первого набора с не отключенной проверкой.
                ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
                ГДЕ
                      НомераНаборов.Объект = #Параметр(37)
                #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    // Право Чтение может зависеть только от права Чтение
                    И НомераНаборов.Чтение = ИСТИНА
                #Иначе
                    // Право Изменение может зависеть от ведущих прав Чтение, Изменение
                    И ВЫБОР
                        КОГДА ИСТИНА В
                            (
                            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                            ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
                            ГДЕ
                                  ЗависимостиПравДоступа.ПодчиненнаяТаблица             = СвойстваТекущейТаблицы.Ссылка
                                И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(37))
                            )
                        ТОГДА НомераНаборов.Чтение
                        ИНАЧЕ НомераНаборов.Изменение
                      КОНЕЦ
                #КонецЕсли
                    И
                ИСТИНА В // Не все проверки текущего набора отключены.
                (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первой не отключенной проверки текущего набора.
                    ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                    ГДЕ
                          НаборыЗначений.Объект      = #Параметр(37)
                        И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                        И НЕ ИСТИНА В
                            (
                                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Поиск настроек ограничений доступа
                                ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                                ГДЕ
                                      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                                    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                                    И ЗначенияПоУмолчанию.БезНастройки = ИСТИНА
                            )
                )
          ) И НЕ
    #Иначе
         (
    #КонецЕсли
          ИСТИНА В
          (
            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первого набора по которому доступ разрешен.
            ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
            ГДЕ
                  НомераНаборов.Объект = #Параметр(37)
            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                // Право Чтение может зависеть только от права Чтение
                И НомераНаборов.Чтение = ИСТИНА
            #Иначе
                // Право Изменение может зависеть от ведущих прав Чтение, Изменение
                И ВЫБОР
                    КОГДА ИСТИНА В
                        (
                        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
                        ГДЕ
                              ЗависимостиПравДоступа.ПодчиненнаяТаблица             = СвойстваТекущейТаблицы.Ссылка
                            И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(37))
                        )
                    ТОГДА НомераНаборов.Чтение
                    ИНАЧЕ НомераНаборов.Изменение
                  КОНЕЦ
            #КонецЕсли
                И
              #Если "#Параметр(3)" = "РасширенноеИЛИ" Или "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
                ИСТИНА В // Не все проверки текущего набора отключены.
                (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первой не отключенной проверки текущего набора.
                    ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                    ГДЕ
                          НаборыЗначений.Объект      = #Параметр(37)
                        И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                        И НЕ ИСТИНА В
                            (
                                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Поиск настроек ограничений доступа
                                ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                                ГДЕ
                                      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                                    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                                    И ЗначенияПоУмолчанию.БезНастройки = ИСТИНА
                            )
                )
                И
              #КонецЕсли
                  НЕ ЛОЖЬ В // Все проверки успешны.
                (
                ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ // Выбор первого не разрешенного значения доступа.
                ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                ГДЕ
                      НаборыЗначений.Объект      = #Параметр(37)
                    И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                    И НЕ
                ВЫБОР
            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
              #Если НЕ &amp;ВидыДоступаСОтключеннымИспользованием = "Все" #Тогда
                КОГДА НаборыЗначений.ЗначениеБезГрупп
                ТОГДА
                    ИСТИНА В
                        (
                        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                            ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                            ПО
                                  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                                И Значения.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                        ГДЕ
                              ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                            И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                            И ЕстьNull(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
                        )
              #КонецЕсли
                КОГДА НаборыЗначений.СтандартноеЗначение
            #Иначе
                КОГДА
                    ИСТИНА В
                    (
                        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                        ГДЕ
                            ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                    )
            #КонецЕсли
            #Если &amp;ВидыДоступаСОтключеннымИспользованием = "Все" #Тогда
                ТОГДА
                    ИСТИНА
            #Иначе
                ТОГДА
                #Если Не #ИмяТекущегоПраваДоступа = "Чтение"
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
                    ВЫБОР
                #КонецЕсли
                #Если Не #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    КОГДА
                        НЕ ИСТИНА В
                            (
                            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                            ИЗ Справочник.ИдентификаторыОбъектовМетаданных КАК ТипыСсылок
                            ГДЕ
                                  ТИПЗНАЧЕНИЯ(ТипыСсылок.ЗначениеПустойСсылки) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                                И ТипыСсылок.ЗначениеПустойСсылки В (&amp;ТипыЗначенийДоступаСГруппами)
                            )
                    ТОГДА
                        ИСТИНА В
                            (
                            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                            ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                                ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                                ПО
                                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                                    И Значения.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                            ГДЕ
                                  ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                                И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                                И ЕстьNull(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
                            )
                #КонецЕсли
                #Если Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
                    КОГДА
                        ИСТИНА В
                            (
                            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                            ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                            ГДЕ
                                  ГруппыЗначенийДоступа.ЗначениеДоступа       = НаборыЗначений.ЗначениеДоступа
                                И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
                            )
                    ТОГДА
                        ИСТИНА
                #КонецЕсли
                #Если Не #ИмяТекущегоПраваДоступа = "Чтение"
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
                    ИНАЧЕ
                #КонецЕсли
                        ИСТИНА В
                            (
                            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                            ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                                ПО
                                      ГруппыЗначений.ЗначениеДоступа    = НаборыЗначений.ЗначениеДоступа
                                    И ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                                    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                                
                                ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                                ПО
                                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                                    И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаЗначенийДоступа
                            ГДЕ
                                ЕстьNull(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
                            )
                #Если Не #ИмяТекущегоПраваДоступа = "Чтение"
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
                    КОНЕЦ
                #КонецЕсли
            #КонецЕсли
                // Проверка заведомого ложного или истинного однострочного набора значений.
                КОГДА НаборыЗначений.ЗначениеДоступа = ЗНАЧЕНИЕ(Перечисление.ДополнительныеЗначенияДоступа.ДоступРазрешен)
                ТОГДА ИСТИНА
                КОГДА НаборыЗначений.ЗначениеДоступа = ЗНАЧЕНИЕ(Перечисление.ДополнительныеЗначенияДоступа.ДоступЗапрещен)
                ТОГДА ЛОЖЬ
                // Проверка права доступа пользователя к таблице ЗначенияДоступа.
                КОГДА ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа) = ТИП(Справочник.ИдентификаторыОбъектовМетаданных)
            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                // Право Чтение может зависеть только от права Чтение
                ТОГДА ИСТИНА В
                    (   ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа = ГруппыДоступа.Ссылка
                            И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Таблица = НаборыЗначений.ЗначениеДоступа
                    )
            #Иначе
                ТОГДА ИСТИНА В
                    (   ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа = ГруппыДоступа.Ссылка
                            И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Таблица = НаборыЗначений.ЗначениеДоступа
                            И НЕ(НаборыЗначений.Уточнение &lt;&gt; ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                                    И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Изменение = ЛОЖЬ)
                    )
            #КонецЕсли
            #Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
                ИНАЧЕ
                    (
                    ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
                        (
                        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                            ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                            ПО
                                  НаследованиеНастроек.Объект = НаборыЗначений.ЗначениеДоступа
                                И НастройкиПрав.Объект        = НаследованиеНастроек.Родитель
                            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                                И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
                            #Иначе
                                И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
                                И НастройкиПрав.Таблица = ВЫБОР
                                    КОГДА НаборыЗначений.Уточнение В (&amp;ИдентификаторыТаблицСОтдельнымиНастройкамиПрав)
                                    ТОГДА НаборыЗначений.Уточнение
                                    ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка) КОНЕЦ
                            #КонецЕсли
                            ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                            ПО
                                  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                                И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
                        )
                    И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
                        (
                        ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
                        ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                            ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                            ПО
                                  НаследованиеНастроек.Объект = НаборыЗначений.ЗначениеДоступа
                                И НастройкиПрав.Объект        = НаследованиеНастроек.Родитель
                            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                                И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
                            #Иначе
                                И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
                                И НастройкиПрав.Таблица = ВЫБОР
                                    КОГДА НаборыЗначений.Уточнение В (&amp;ИдентификаторыТаблицСОтдельнымиНастройкамиПрав)
                                    ТОГДА НаборыЗначений.Уточнение
                                    ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка) КОНЕЦ
                            #КонецЕсли
                            ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                            ПО
                                  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                                И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
                        )
                    )
            #Иначе
                ИНАЧЕ
                    ЛОЖЬ
            #КонецЕсли
                КОНЕЦ
                ) // НЕ ЛОЖЬ В
          )
         )
    #Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
        КОНЕЦ
    #КонецЕсли
    )

#ИначеЕсли "#Параметр(36)" = "НастройкиПрав" #Тогда
    
     (
        ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
            (
            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
            ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                ПО
                      НаследованиеНастроек.Объект = #Параметр(37)
                    И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
                #Иначе
                  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                    И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                  #Иначе
                    И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                  #КонецЕсли
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
                #КонецЕсли
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                      СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                    И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
            )
         И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
            (
            ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
            ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                ПО
                      НаследованиеНастроек.Объект = #Параметр(37)
                    И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
                #Иначе
                  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                    И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                  #Иначе
                    И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                  #КонецЕсли
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
                #КонецЕсли
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                      СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                    И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
            )
     )
#ИначеЕсли Не СтрСодержит(&amp;ВсеВидыДоступаКромеСпециальных, ",#Параметр(36),") #Тогда
    // Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
    #Если СтрСодержит("#Параметр(36)", ",") #Тогда
        НеверныйВидДоступа: "#Параметр(36)" - "Список имен видов доступа не найден"
    #Иначе
        НеверныйВидДоступа: "#Параметр(36)" - "Имя вида доступа не найдено"
    #КонецЕсли
#ИначеЕсли &amp;ВидыДоступаСОтключеннымИспользованием &lt;&gt; "Все"
         И Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(36),") #Тогда
    
     (
        #Если (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")        И СтрСодержит(",#Параметр(36),", ",Пользователи,"))
          Или (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") И СтрСодержит(",#Параметр(36),", ",ВнешниеПользователи,")) #Тогда
            НЕ
            (
            НЕ ИСТИНА В
                (
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                ГДЕ
                      ГруппыЗначенийДоступа.ЗначениеДоступа       = #Параметр(37)
                    И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
                )
            И НЕ
        #Иначе
            (
        #КонецЕсли
            ВЫБОР
            КОГДА ИСТИНА В
                (
        #Если СтрСодержит(&amp;ВидыДоступаБезГруппДляЗначенияДоступа, ",#Параметр(36),") #Тогда
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ГДЕ
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = #Параметр(37)
        #ИначеЕсли "#Параметр(37)" = "Т.Ссылка" #Тогда
            #Если СтрСодержит("#Параметр(36)", ",") #Тогда
                // Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
                НеверныйВидДоступа: "#Параметр(36)" - "При проверке таблицы значения доступа можно указывать только один вид доступа"
            #ИначеЕсли СтрСодержит(&amp;ВидыДоступаСОднойГруппойДляЗначенияДоступа, ",#Параметр(36),") #Тогда
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ГДЕ
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = Т.ГруппаДоступа
            #Иначе // Значения доступа, для которых можно указать несколько групп значений доступа.
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                    ВНУТРЕННЕЕ СОЕДИНЕНИЕ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
                ПО
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаДоступа
                    И ГруппыЗначений.Ссылка    = #Параметр(37)
            #КонецЕсли
        #Иначе // "#Параметр(37)" &lt;&gt; "Т.Ссылка"
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                    ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                ПО
                      Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
                    И ГруппыЗначений.ЗначениеДоступа = #Параметр(37)
        #КонецЕсли
                )
            ТОГДА ИСТИНА
            ИНАЧЕ ЛОЖЬ
            КОНЕЦ
            =
            ВЫБОР
            КОГДА ИСТИНА В
                (
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                ГДЕ
                      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(#Параметр(37))
                    И ЗначенияПоУмолчанию.ВсеРазрешены = ЛОЖЬ
                )
            ТОГДА ИСТИНА
            ИНАЧЕ ЛОЖЬ
            КОНЕЦ
            )
     )

#Иначе
    ИСТИНА
#КонецЕсли

    #Параметр(38)  // [)[)][)]...] [ИЛИ|И] [([(][(]...] оператор И/ИЛИ с/без скобок.

//// Проверка значения поля группы параметров 12.
#Если "#Параметр(39)" = "" И "#Параметр(40)" = "" #Тогда
    // Группа параметров не используется.
#ИначеЕсли "#Параметр(39)" = "Условие" Или "#Параметр(39)" = "" #Тогда
    // Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
     ( #Параметр(40) )
#ИначеЕсли "#Параметр(39)" = "ПравоЧтения" Или "#Параметр(39)" = "ПравоИзменения" #Тогда
     #Параметр(40) &lt;&gt; НЕОПРЕДЕЛЕНО
    И ИСТИНА В
     (  // Проверка права пользователя на таблицу Значения, установленного в поле.
        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
        ГДЕ
              ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
            И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(40))
        #Если Не "#Параметр(39)" = "ПравоЧтения" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Изменение
        #КонецЕсли
     )
#ИначеЕсли "#Параметр(39)" = "Объект" Или "#Параметр(39)" = " " #Тогда
    (
        // Проверка права объекта ведущей таблицы (зависимость по правам)
        (
            ИСТИНА В
            (
            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
            ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваОбъекта
            ГДЕ
                  ТаблицыГруппДоступаПроверкаПраваОбъекта.ГруппаДоступа = ГруппыДоступа.Ссылка
                И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПраваОбъекта.ТипТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(40))
            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                // Проверка ведущего права для права Чтение
                // Право Чтение может зависеть только от права Чтение
            #Иначе
                // Проверка ведущего права для права Изменение
                // Право Изменение может зависеть от ведущих прав Чтение, Изменение
                И НЕ
                (     ТаблицыГруппДоступаПроверкаПраваОбъекта.Изменение = ЛОЖЬ
                    И НЕ ИСТИНА В
                    (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                    ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
                    ГДЕ
                          ЗависимостиПравДоступа.ПодчиненнаяТаблица = СвойстваТекущейТаблицы.Ссылка
                        И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(40))
                    )
                )
            #КонецЕсли
            )
        )
        // Проверка ограничения права объекта ведущей таблицы
        И 
    #Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
        ВЫБОР КОГДА ИСТИНА В
                (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                    ИЗ Справочник.ИдентификаторыОбъектовМетаданных КАК Идентификаторы
                    ГДЕ
                          ТИПЗНАЧЕНИЯ(Идентификаторы.ЗначениеПустойСсылки) = ТИПЗНАЧЕНИЯ(#Параметр(40))
                        И Идентификаторы.ЗначениеПустойСсылки В (&amp;ТипыВладельцевНастроекПрав)
                )
        ТОГДА
            (
                ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
                    (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                    ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                        ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                        ПО
                              НаследованиеНастроек.Объект = #Параметр(40)
                            И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                        #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                            И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
                        #Иначе
                          #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                            И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                          #Иначе
                            И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                          #КонецЕсли
                            И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
                        #КонецЕсли
                        ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                        ПО
                              СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                            И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
                    )
                И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
                    (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
                    ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                        ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                        ПО
                              НаследованиеНастроек.Объект = #Параметр(40)
                            И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                        #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                            И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
                        #Иначе
                          #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                            И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                          #Иначе
                            И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                          #КонецЕсли
                            И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
                        #КонецЕсли
                        ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                        ПО
                              СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                            И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
                    )
            )
        ИНАЧЕ
    #КонецЕсли
    #Если "#Параметр(3)" = "РасширенноеИЛИ" Или "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
        НЕ
         (
          ИСТИНА В // Не все проверки отключены.
          (
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первого набора с не отключенной проверкой.
                ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
                ГДЕ
                      НомераНаборов.Объект = #Параметр(40)
                #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    // Право Чтение может зависеть только от права Чтение
                    И НомераНаборов.Чтение = ИСТИНА
                #Иначе
                    // Право Изменение может зависеть от ведущих прав Чтение, Изменение
                    И ВЫБОР
                        КОГДА ИСТИНА В
                            (
                            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                            ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
                            ГДЕ
                                  ЗависимостиПравДоступа.ПодчиненнаяТаблица             = СвойстваТекущейТаблицы.Ссылка
                                И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(40))
                            )
                        ТОГДА НомераНаборов.Чтение
                        ИНАЧЕ НомераНаборов.Изменение
                      КОНЕЦ
                #КонецЕсли
                    И
                ИСТИНА В // Не все проверки текущего набора отключены.
                (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первой не отключенной проверки текущего набора.
                    ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                    ГДЕ
                          НаборыЗначений.Объект      = #Параметр(40)
                        И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                        И НЕ ИСТИНА В
                            (
                                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Поиск настроек ограничений доступа
                                ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                                ГДЕ
                                      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                                    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                                    И ЗначенияПоУмолчанию.БезНастройки = ИСТИНА
                            )
                )
          ) И НЕ
    #Иначе
         (
    #КонецЕсли
          ИСТИНА В
          (
            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первого набора по которому доступ разрешен.
            ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
            ГДЕ
                  НомераНаборов.Объект = #Параметр(40)
            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                // Право Чтение может зависеть только от права Чтение
                И НомераНаборов.Чтение = ИСТИНА
            #Иначе
                // Право Изменение может зависеть от ведущих прав Чтение, Изменение
                И ВЫБОР
                    КОГДА ИСТИНА В
                        (
                        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
                        ГДЕ
                              ЗависимостиПравДоступа.ПодчиненнаяТаблица             = СвойстваТекущейТаблицы.Ссылка
                            И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(40))
                        )
                    ТОГДА НомераНаборов.Чтение
                    ИНАЧЕ НомераНаборов.Изменение
                  КОНЕЦ
            #КонецЕсли
                И
              #Если "#Параметр(3)" = "РасширенноеИЛИ" Или "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
                ИСТИНА В // Не все проверки текущего набора отключены.
                (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первой не отключенной проверки текущего набора.
                    ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                    ГДЕ
                          НаборыЗначений.Объект      = #Параметр(40)
                        И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                        И НЕ ИСТИНА В
                            (
                                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Поиск настроек ограничений доступа
                                ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                                ГДЕ
                                      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                                    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                                    И ЗначенияПоУмолчанию.БезНастройки = ИСТИНА
                            )
                )
                И
              #КонецЕсли
                  НЕ ЛОЖЬ В // Все проверки успешны.
                (
                ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ // Выбор первого не разрешенного значения доступа.
                ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                ГДЕ
                      НаборыЗначений.Объект      = #Параметр(40)
                    И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                    И НЕ
                ВЫБОР
            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
              #Если НЕ &amp;ВидыДоступаСОтключеннымИспользованием = "Все" #Тогда
                КОГДА НаборыЗначений.ЗначениеБезГрупп
                ТОГДА
                    ИСТИНА В
                        (
                        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                            ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                            ПО
                                  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                                И Значения.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                        ГДЕ
                              ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                            И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                            И ЕстьNull(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
                        )
              #КонецЕсли
                КОГДА НаборыЗначений.СтандартноеЗначение
            #Иначе
                КОГДА
                    ИСТИНА В
                    (
                        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                        ГДЕ
                            ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                    )
            #КонецЕсли
            #Если &amp;ВидыДоступаСОтключеннымИспользованием = "Все" #Тогда
                ТОГДА
                    ИСТИНА
            #Иначе
                ТОГДА
                #Если Не #ИмяТекущегоПраваДоступа = "Чтение"
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
                    ВЫБОР
                #КонецЕсли
                #Если Не #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    КОГДА
                        НЕ ИСТИНА В
                            (
                            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                            ИЗ Справочник.ИдентификаторыОбъектовМетаданных КАК ТипыСсылок
                            ГДЕ
                                  ТИПЗНАЧЕНИЯ(ТипыСсылок.ЗначениеПустойСсылки) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                                И ТипыСсылок.ЗначениеПустойСсылки В (&amp;ТипыЗначенийДоступаСГруппами)
                            )
                    ТОГДА
                        ИСТИНА В
                            (
                            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                            ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                                ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                                ПО
                                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                                    И Значения.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                            ГДЕ
                                  ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                                И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                                И ЕстьNull(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
                            )
                #КонецЕсли
                #Если Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
                    КОГДА
                        ИСТИНА В
                            (
                            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                            ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                            ГДЕ
                                  ГруппыЗначенийДоступа.ЗначениеДоступа       = НаборыЗначений.ЗначениеДоступа
                                И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
                            )
                    ТОГДА
                        ИСТИНА
                #КонецЕсли
                #Если Не #ИмяТекущегоПраваДоступа = "Чтение"
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
                    ИНАЧЕ
                #КонецЕсли
                        ИСТИНА В
                            (
                            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                            ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                                ПО
                                      ГруппыЗначений.ЗначениеДоступа    = НаборыЗначений.ЗначениеДоступа
                                    И ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                                    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                                
                                ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                                ПО
                                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                                    И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаЗначенийДоступа
                            ГДЕ
                                ЕстьNull(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
                            )
                #Если Не #ИмяТекущегоПраваДоступа = "Чтение"
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
                    КОНЕЦ
                #КонецЕсли
            #КонецЕсли
                // Проверка заведомого ложного или истинного однострочного набора значений.
                КОГДА НаборыЗначений.ЗначениеДоступа = ЗНАЧЕНИЕ(Перечисление.ДополнительныеЗначенияДоступа.ДоступРазрешен)
                ТОГДА ИСТИНА
                КОГДА НаборыЗначений.ЗначениеДоступа = ЗНАЧЕНИЕ(Перечисление.ДополнительныеЗначенияДоступа.ДоступЗапрещен)
                ТОГДА ЛОЖЬ
                // Проверка права доступа пользователя к таблице ЗначенияДоступа.
                КОГДА ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа) = ТИП(Справочник.ИдентификаторыОбъектовМетаданных)
            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                // Право Чтение может зависеть только от права Чтение
                ТОГДА ИСТИНА В
                    (   ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа = ГруппыДоступа.Ссылка
                            И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Таблица = НаборыЗначений.ЗначениеДоступа
                    )
            #Иначе
                ТОГДА ИСТИНА В
                    (   ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа = ГруппыДоступа.Ссылка
                            И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Таблица = НаборыЗначений.ЗначениеДоступа
                            И НЕ(НаборыЗначений.Уточнение &lt;&gt; ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                                    И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Изменение = ЛОЖЬ)
                    )
            #КонецЕсли
            #Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
                ИНАЧЕ
                    (
                    ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
                        (
                        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                            ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                            ПО
                                  НаследованиеНастроек.Объект = НаборыЗначений.ЗначениеДоступа
                                И НастройкиПрав.Объект        = НаследованиеНастроек.Родитель
                            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                                И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
                            #Иначе
                                И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
                                И НастройкиПрав.Таблица = ВЫБОР
                                    КОГДА НаборыЗначений.Уточнение В (&amp;ИдентификаторыТаблицСОтдельнымиНастройкамиПрав)
                                    ТОГДА НаборыЗначений.Уточнение
                                    ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка) КОНЕЦ
                            #КонецЕсли
                            ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                            ПО
                                  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                                И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
                        )
                    И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
                        (
                        ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
                        ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                            ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                            ПО
                                  НаследованиеНастроек.Объект = НаборыЗначений.ЗначениеДоступа
                                И НастройкиПрав.Объект        = НаследованиеНастроек.Родитель
                            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                                И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
                            #Иначе
                                И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
                                И НастройкиПрав.Таблица = ВЫБОР
                                    КОГДА НаборыЗначений.Уточнение В (&amp;ИдентификаторыТаблицСОтдельнымиНастройкамиПрав)
                                    ТОГДА НаборыЗначений.Уточнение
                                    ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка) КОНЕЦ
                            #КонецЕсли
                            ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                            ПО
                                  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                                И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
                        )
                    )
            #Иначе
                ИНАЧЕ
                    ЛОЖЬ
            #КонецЕсли
                КОНЕЦ
                ) // НЕ ЛОЖЬ В
          )
         )
    #Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
        КОНЕЦ
    #КонецЕсли
    )

#ИначеЕсли "#Параметр(39)" = "НастройкиПрав" #Тогда
    
     (
        ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
            (
            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
            ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                ПО
                      НаследованиеНастроек.Объект = #Параметр(40)
                    И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
                #Иначе
                  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                    И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                  #Иначе
                    И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                  #КонецЕсли
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
                #КонецЕсли
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                      СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                    И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
            )
         И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
            (
            ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
            ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                ПО
                      НаследованиеНастроек.Объект = #Параметр(40)
                    И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
                #Иначе
                  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                    И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                  #Иначе
                    И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                  #КонецЕсли
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
                #КонецЕсли
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                      СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                    И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
            )
     )
#ИначеЕсли Не СтрСодержит(&amp;ВсеВидыДоступаКромеСпециальных, ",#Параметр(39),") #Тогда
    // Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
    #Если СтрСодержит("#Параметр(39)", ",") #Тогда
        НеверныйВидДоступа: "#Параметр(39)" - "Список имен видов доступа не найден"
    #Иначе
        НеверныйВидДоступа: "#Параметр(39)" - "Имя вида доступа не найдено"
    #КонецЕсли
#ИначеЕсли &amp;ВидыДоступаСОтключеннымИспользованием &lt;&gt; "Все"
         И Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(39),") #Тогда
    
     (
        #Если (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")        И СтрСодержит(",#Параметр(39),", ",Пользователи,"))
          Или (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") И СтрСодержит(",#Параметр(39),", ",ВнешниеПользователи,")) #Тогда
            НЕ
            (
            НЕ ИСТИНА В
                (
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                ГДЕ
                      ГруппыЗначенийДоступа.ЗначениеДоступа       = #Параметр(40)
                    И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
                )
            И НЕ
        #Иначе
            (
        #КонецЕсли
            ВЫБОР
            КОГДА ИСТИНА В
                (
        #Если СтрСодержит(&amp;ВидыДоступаБезГруппДляЗначенияДоступа, ",#Параметр(39),") #Тогда
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ГДЕ
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = #Параметр(40)
        #ИначеЕсли "#Параметр(40)" = "Т.Ссылка" #Тогда
            #Если СтрСодержит("#Параметр(39)", ",") #Тогда
                // Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
                НеверныйВидДоступа: "#Параметр(39)" - "При проверке таблицы значения доступа можно указывать только один вид доступа"
            #ИначеЕсли СтрСодержит(&amp;ВидыДоступаСОднойГруппойДляЗначенияДоступа, ",#Параметр(39),") #Тогда
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ГДЕ
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = Т.ГруппаДоступа
            #Иначе // Значения доступа, для которых можно указать несколько групп значений доступа.
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                    ВНУТРЕННЕЕ СОЕДИНЕНИЕ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
                ПО
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаДоступа
                    И ГруппыЗначений.Ссылка    = #Параметр(40)
            #КонецЕсли
        #Иначе // "#Параметр(40)" &lt;&gt; "Т.Ссылка"
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                    ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                ПО
                      Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
                    И ГруппыЗначений.ЗначениеДоступа = #Параметр(40)
        #КонецЕсли
                )
            ТОГДА ИСТИНА
            ИНАЧЕ ЛОЖЬ
            КОНЕЦ
            =
            ВЫБОР
            КОГДА ИСТИНА В
                (
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                ГДЕ
                      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(#Параметр(40))
                    И ЗначенияПоУмолчанию.ВсеРазрешены = ЛОЖЬ
                )
            ТОГДА ИСТИНА
            ИНАЧЕ ЛОЖЬ
            КОНЕЦ
            )
     )

#Иначе
    ИСТИНА
#КонецЕсли

    #Параметр(41)  // [)[)][)]...] [ИЛИ|И] [([(][(]...] оператор И/ИЛИ с/без скобок.

//// Проверка значения поля группы параметров 13.
#Если "#Параметр(42)" = "" И "#Параметр(43)" = "" #Тогда
    // Группа параметров не используется.
#ИначеЕсли "#Параметр(42)" = "Условие" Или "#Параметр(42)" = "" #Тогда
    // Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
     ( #Параметр(43) )
#ИначеЕсли "#Параметр(42)" = "ПравоЧтения" Или "#Параметр(42)" = "ПравоИзменения" #Тогда
     #Параметр(43) &lt;&gt; НЕОПРЕДЕЛЕНО
    И ИСТИНА В
     (  // Проверка права пользователя на таблицу Значения, установленного в поле.
        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
        ГДЕ
              ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
            И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(43))
        #Если Не "#Параметр(42)" = "ПравоЧтения" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Изменение
        #КонецЕсли
     )
#ИначеЕсли "#Параметр(42)" = "Объект" Или "#Параметр(42)" = " " #Тогда
    (
        // Проверка права объекта ведущей таблицы (зависимость по правам)
        (
            ИСТИНА В
            (
            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
            ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваОбъекта
            ГДЕ
                  ТаблицыГруппДоступаПроверкаПраваОбъекта.ГруппаДоступа = ГруппыДоступа.Ссылка
                И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПраваОбъекта.ТипТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(43))
            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                // Проверка ведущего права для права Чтение
                // Право Чтение может зависеть только от права Чтение
            #Иначе
                // Проверка ведущего права для права Изменение
                // Право Изменение может зависеть от ведущих прав Чтение, Изменение
                И НЕ
                (     ТаблицыГруппДоступаПроверкаПраваОбъекта.Изменение = ЛОЖЬ
                    И НЕ ИСТИНА В
                    (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                    ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
                    ГДЕ
                          ЗависимостиПравДоступа.ПодчиненнаяТаблица = СвойстваТекущейТаблицы.Ссылка
                        И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(43))
                    )
                )
            #КонецЕсли
            )
        )
        // Проверка ограничения права объекта ведущей таблицы
        И 
    #Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
        ВЫБОР КОГДА ИСТИНА В
                (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                    ИЗ Справочник.ИдентификаторыОбъектовМетаданных КАК Идентификаторы
                    ГДЕ
                          ТИПЗНАЧЕНИЯ(Идентификаторы.ЗначениеПустойСсылки) = ТИПЗНАЧЕНИЯ(#Параметр(43))
                        И Идентификаторы.ЗначениеПустойСсылки В (&amp;ТипыВладельцевНастроекПрав)
                )
        ТОГДА
            (
                ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
                    (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                    ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                        ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                        ПО
                              НаследованиеНастроек.Объект = #Параметр(43)
                            И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                        #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                            И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
                        #Иначе
                          #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                            И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                          #Иначе
                            И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                          #КонецЕсли
                            И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
                        #КонецЕсли
                        ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                        ПО
                              СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                            И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
                    )
                И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
                    (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
                    ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                        ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                        ПО
                              НаследованиеНастроек.Объект = #Параметр(43)
                            И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                        #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                            И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
                        #Иначе
                          #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                            И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                          #Иначе
                            И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                          #КонецЕсли
                            И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
                        #КонецЕсли
                        ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                        ПО
                              СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                            И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
                    )
            )
        ИНАЧЕ
    #КонецЕсли
    #Если "#Параметр(3)" = "РасширенноеИЛИ" Или "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
        НЕ
         (
          ИСТИНА В // Не все проверки отключены.
          (
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первого набора с не отключенной проверкой.
                ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
                ГДЕ
                      НомераНаборов.Объект = #Параметр(43)
                #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    // Право Чтение может зависеть только от права Чтение
                    И НомераНаборов.Чтение = ИСТИНА
                #Иначе
                    // Право Изменение может зависеть от ведущих прав Чтение, Изменение
                    И ВЫБОР
                        КОГДА ИСТИНА В
                            (
                            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                            ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
                            ГДЕ
                                  ЗависимостиПравДоступа.ПодчиненнаяТаблица             = СвойстваТекущейТаблицы.Ссылка
                                И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(43))
                            )
                        ТОГДА НомераНаборов.Чтение
                        ИНАЧЕ НомераНаборов.Изменение
                      КОНЕЦ
                #КонецЕсли
                    И
                ИСТИНА В // Не все проверки текущего набора отключены.
                (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первой не отключенной проверки текущего набора.
                    ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                    ГДЕ
                          НаборыЗначений.Объект      = #Параметр(43)
                        И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                        И НЕ ИСТИНА В
                            (
                                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Поиск настроек ограничений доступа
                                ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                                ГДЕ
                                      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                                    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                                    И ЗначенияПоУмолчанию.БезНастройки = ИСТИНА
                            )
                )
          ) И НЕ
    #Иначе
         (
    #КонецЕсли
          ИСТИНА В
          (
            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первого набора по которому доступ разрешен.
            ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
            ГДЕ
                  НомераНаборов.Объект = #Параметр(43)
            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                // Право Чтение может зависеть только от права Чтение
                И НомераНаборов.Чтение = ИСТИНА
            #Иначе
                // Право Изменение может зависеть от ведущих прав Чтение, Изменение
                И ВЫБОР
                    КОГДА ИСТИНА В
                        (
                        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
                        ГДЕ
                              ЗависимостиПравДоступа.ПодчиненнаяТаблица             = СвойстваТекущейТаблицы.Ссылка
                            И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(43))
                        )
                    ТОГДА НомераНаборов.Чтение
                    ИНАЧЕ НомераНаборов.Изменение
                  КОНЕЦ
            #КонецЕсли
                И
              #Если "#Параметр(3)" = "РасширенноеИЛИ" Или "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
                ИСТИНА В // Не все проверки текущего набора отключены.
                (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первой не отключенной проверки текущего набора.
                    ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                    ГДЕ
                          НаборыЗначений.Объект      = #Параметр(43)
                        И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                        И НЕ ИСТИНА В
                            (
                                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Поиск настроек ограничений доступа
                                ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                                ГДЕ
                                      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                                    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                                    И ЗначенияПоУмолчанию.БезНастройки = ИСТИНА
                            )
                )
                И
              #КонецЕсли
                  НЕ ЛОЖЬ В // Все проверки успешны.
                (
                ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ // Выбор первого не разрешенного значения доступа.
                ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                ГДЕ
                      НаборыЗначений.Объект      = #Параметр(43)
                    И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                    И НЕ
                ВЫБОР
            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
              #Если НЕ &amp;ВидыДоступаСОтключеннымИспользованием = "Все" #Тогда
                КОГДА НаборыЗначений.ЗначениеБезГрупп
                ТОГДА
                    ИСТИНА В
                        (
                        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                            ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                            ПО
                                  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                                И Значения.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                        ГДЕ
                              ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                            И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                            И ЕстьNull(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
                        )
              #КонецЕсли
                КОГДА НаборыЗначений.СтандартноеЗначение
            #Иначе
                КОГДА
                    ИСТИНА В
                    (
                        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                        ГДЕ
                            ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                    )
            #КонецЕсли
            #Если &amp;ВидыДоступаСОтключеннымИспользованием = "Все" #Тогда
                ТОГДА
                    ИСТИНА
            #Иначе
                ТОГДА
                #Если Не #ИмяТекущегоПраваДоступа = "Чтение"
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
                    ВЫБОР
                #КонецЕсли
                #Если Не #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    КОГДА
                        НЕ ИСТИНА В
                            (
                            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                            ИЗ Справочник.ИдентификаторыОбъектовМетаданных КАК ТипыСсылок
                            ГДЕ
                                  ТИПЗНАЧЕНИЯ(ТипыСсылок.ЗначениеПустойСсылки) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                                И ТипыСсылок.ЗначениеПустойСсылки В (&amp;ТипыЗначенийДоступаСГруппами)
                            )
                    ТОГДА
                        ИСТИНА В
                            (
                            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                            ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                                ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                                ПО
                                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                                    И Значения.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                            ГДЕ
                                  ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                                И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                                И ЕстьNull(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
                            )
                #КонецЕсли
                #Если Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
                    КОГДА
                        ИСТИНА В
                            (
                            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                            ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                            ГДЕ
                                  ГруппыЗначенийДоступа.ЗначениеДоступа       = НаборыЗначений.ЗначениеДоступа
                                И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
                            )
                    ТОГДА
                        ИСТИНА
                #КонецЕсли
                #Если Не #ИмяТекущегоПраваДоступа = "Чтение"
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
                    ИНАЧЕ
                #КонецЕсли
                        ИСТИНА В
                            (
                            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                            ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                                ПО
                                      ГруппыЗначений.ЗначениеДоступа    = НаборыЗначений.ЗначениеДоступа
                                    И ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                                    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                                
                                ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                                ПО
                                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                                    И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаЗначенийДоступа
                            ГДЕ
                                ЕстьNull(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
                            )
                #Если Не #ИмяТекущегоПраваДоступа = "Чтение"
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
                    КОНЕЦ
                #КонецЕсли
            #КонецЕсли
                // Проверка заведомого ложного или истинного однострочного набора значений.
                КОГДА НаборыЗначений.ЗначениеДоступа = ЗНАЧЕНИЕ(Перечисление.ДополнительныеЗначенияДоступа.ДоступРазрешен)
                ТОГДА ИСТИНА
                КОГДА НаборыЗначений.ЗначениеДоступа = ЗНАЧЕНИЕ(Перечисление.ДополнительныеЗначенияДоступа.ДоступЗапрещен)
                ТОГДА ЛОЖЬ
                // Проверка права доступа пользователя к таблице ЗначенияДоступа.
                КОГДА ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа) = ТИП(Справочник.ИдентификаторыОбъектовМетаданных)
            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                // Право Чтение может зависеть только от права Чтение
                ТОГДА ИСТИНА В
                    (   ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа = ГруппыДоступа.Ссылка
                            И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Таблица = НаборыЗначений.ЗначениеДоступа
                    )
            #Иначе
                ТОГДА ИСТИНА В
                    (   ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа = ГруппыДоступа.Ссылка
                            И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Таблица = НаборыЗначений.ЗначениеДоступа
                            И НЕ(НаборыЗначений.Уточнение &lt;&gt; ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                                    И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Изменение = ЛОЖЬ)
                    )
            #КонецЕсли
            #Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
                ИНАЧЕ
                    (
                    ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
                        (
                        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                            ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                            ПО
                                  НаследованиеНастроек.Объект = НаборыЗначений.ЗначениеДоступа
                                И НастройкиПрав.Объект        = НаследованиеНастроек.Родитель
                            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                                И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
                            #Иначе
                                И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
                                И НастройкиПрав.Таблица = ВЫБОР
                                    КОГДА НаборыЗначений.Уточнение В (&amp;ИдентификаторыТаблицСОтдельнымиНастройкамиПрав)
                                    ТОГДА НаборыЗначений.Уточнение
                                    ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка) КОНЕЦ
                            #КонецЕсли
                            ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                            ПО
                                  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                                И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
                        )
                    И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
                        (
                        ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
                        ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                            ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                            ПО
                                  НаследованиеНастроек.Объект = НаборыЗначений.ЗначениеДоступа
                                И НастройкиПрав.Объект        = НаследованиеНастроек.Родитель
                            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                                И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
                            #Иначе
                                И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
                                И НастройкиПрав.Таблица = ВЫБОР
                                    КОГДА НаборыЗначений.Уточнение В (&amp;ИдентификаторыТаблицСОтдельнымиНастройкамиПрав)
                                    ТОГДА НаборыЗначений.Уточнение
                                    ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка) КОНЕЦ
                            #КонецЕсли
                            ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                            ПО
                                  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                                И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
                        )
                    )
            #Иначе
                ИНАЧЕ
                    ЛОЖЬ
            #КонецЕсли
                КОНЕЦ
                ) // НЕ ЛОЖЬ В
          )
         )
    #Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
        КОНЕЦ
    #КонецЕсли
    )

#ИначеЕсли "#Параметр(42)" = "НастройкиПрав" #Тогда
    
     (
        ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
            (
            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
            ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                ПО
                      НаследованиеНастроек.Объект = #Параметр(43)
                    И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
                #Иначе
                  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                    И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                  #Иначе
                    И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                  #КонецЕсли
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
                #КонецЕсли
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                      СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                    И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
            )
         И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
            (
            ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
            ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                ПО
                      НаследованиеНастроек.Объект = #Параметр(43)
                    И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
                #Иначе
                  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                    И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                  #Иначе
                    И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                  #КонецЕсли
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
                #КонецЕсли
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                      СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                    И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
            )
     )
#ИначеЕсли Не СтрСодержит(&amp;ВсеВидыДоступаКромеСпециальных, ",#Параметр(42),") #Тогда
    // Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
    #Если СтрСодержит("#Параметр(42)", ",") #Тогда
        НеверныйВидДоступа: "#Параметр(42)" - "Список имен видов доступа не найден"
    #Иначе
        НеверныйВидДоступа: "#Параметр(42)" - "Имя вида доступа не найдено"
    #КонецЕсли
#ИначеЕсли &amp;ВидыДоступаСОтключеннымИспользованием &lt;&gt; "Все"
         И Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(42),") #Тогда
    
     (
        #Если (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")        И СтрСодержит(",#Параметр(42),", ",Пользователи,"))
          Или (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") И СтрСодержит(",#Параметр(42),", ",ВнешниеПользователи,")) #Тогда
            НЕ
            (
            НЕ ИСТИНА В
                (
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                ГДЕ
                      ГруппыЗначенийДоступа.ЗначениеДоступа       = #Параметр(43)
                    И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
                )
            И НЕ
        #Иначе
            (
        #КонецЕсли
            ВЫБОР
            КОГДА ИСТИНА В
                (
        #Если СтрСодержит(&amp;ВидыДоступаБезГруппДляЗначенияДоступа, ",#Параметр(42),") #Тогда
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ГДЕ
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = #Параметр(43)
        #ИначеЕсли "#Параметр(43)" = "Т.Ссылка" #Тогда
            #Если СтрСодержит("#Параметр(42)", ",") #Тогда
                // Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
                НеверныйВидДоступа: "#Параметр(42)" - "При проверке таблицы значения доступа можно указывать только один вид доступа"
            #ИначеЕсли СтрСодержит(&amp;ВидыДоступаСОднойГруппойДляЗначенияДоступа, ",#Параметр(42),") #Тогда
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ГДЕ
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = Т.ГруппаДоступа
            #Иначе // Значения доступа, для которых можно указать несколько групп значений доступа.
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                    ВНУТРЕННЕЕ СОЕДИНЕНИЕ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
                ПО
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаДоступа
                    И ГруппыЗначений.Ссылка    = #Параметр(43)
            #КонецЕсли
        #Иначе // "#Параметр(43)" &lt;&gt; "Т.Ссылка"
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                    ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                ПО
                      Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
                    И ГруппыЗначений.ЗначениеДоступа = #Параметр(43)
        #КонецЕсли
                )
            ТОГДА ИСТИНА
            ИНАЧЕ ЛОЖЬ
            КОНЕЦ
            =
            ВЫБОР
            КОГДА ИСТИНА В
                (
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                ГДЕ
                      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(#Параметр(43))
                    И ЗначенияПоУмолчанию.ВсеРазрешены = ЛОЖЬ
                )
            ТОГДА ИСТИНА
            ИНАЧЕ ЛОЖЬ
            КОНЕЦ
            )
     )

#Иначе
    ИСТИНА
#КонецЕсли

    #Параметр(44)  // [)[)][)]...] [ИЛИ|И] [([(][(]...] оператор И/ИЛИ с/без скобок.

//// Проверка значения поля группы параметров 14.
#Если "#Параметр(45)" = "" И "#Параметр(46)" = "" #Тогда
    // Группа параметров не используется.
#ИначеЕсли "#Параметр(45)" = "Условие" Или "#Параметр(45)" = "" #Тогда
    // Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
     ( #Параметр(46) )
#ИначеЕсли "#Параметр(45)" = "ПравоЧтения" Или "#Параметр(45)" = "ПравоИзменения" #Тогда
     #Параметр(46) &lt;&gt; НЕОПРЕДЕЛЕНО
    И ИСТИНА В
     (  // Проверка права пользователя на таблицу Значения, установленного в поле.
        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
        ГДЕ
              ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
            И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(46))
        #Если Не "#Параметр(45)" = "ПравоЧтения" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Изменение
        #КонецЕсли
     )
#ИначеЕсли "#Параметр(45)" = "Объект" Или "#Параметр(45)" = " " #Тогда
    (
        // Проверка права объекта ведущей таблицы (зависимость по правам)
        (
            ИСТИНА В
            (
            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
            ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваОбъекта
            ГДЕ
                  ТаблицыГруппДоступаПроверкаПраваОбъекта.ГруппаДоступа = ГруппыДоступа.Ссылка
                И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПраваОбъекта.ТипТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(46))
            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                // Проверка ведущего права для права Чтение
                // Право Чтение может зависеть только от права Чтение
            #Иначе
                // Проверка ведущего права для права Изменение
                // Право Изменение может зависеть от ведущих прав Чтение, Изменение
                И НЕ
                (     ТаблицыГруппДоступаПроверкаПраваОбъекта.Изменение = ЛОЖЬ
                    И НЕ ИСТИНА В
                    (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                    ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
                    ГДЕ
                          ЗависимостиПравДоступа.ПодчиненнаяТаблица = СвойстваТекущейТаблицы.Ссылка
                        И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(46))
                    )
                )
            #КонецЕсли
            )
        )
        // Проверка ограничения права объекта ведущей таблицы
        И 
    #Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
        ВЫБОР КОГДА ИСТИНА В
                (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                    ИЗ Справочник.ИдентификаторыОбъектовМетаданных КАК Идентификаторы
                    ГДЕ
                          ТИПЗНАЧЕНИЯ(Идентификаторы.ЗначениеПустойСсылки) = ТИПЗНАЧЕНИЯ(#Параметр(46))
                        И Идентификаторы.ЗначениеПустойСсылки В (&amp;ТипыВладельцевНастроекПрав)
                )
        ТОГДА
            (
                ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
                    (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                    ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                        ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                        ПО
                              НаследованиеНастроек.Объект = #Параметр(46)
                            И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                        #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                            И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
                        #Иначе
                          #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                            И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                          #Иначе
                            И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                          #КонецЕсли
                            И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
                        #КонецЕсли
                        ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                        ПО
                              СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                            И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
                    )
                И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
                    (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
                    ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                        ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                        ПО
                              НаследованиеНастроек.Объект = #Параметр(46)
                            И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                        #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                            И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
                        #Иначе
                          #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                            И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                          #Иначе
                            И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                          #КонецЕсли
                            И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
                        #КонецЕсли
                        ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                        ПО
                              СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                            И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
                    )
            )
        ИНАЧЕ
    #КонецЕсли
    #Если "#Параметр(3)" = "РасширенноеИЛИ" Или "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
        НЕ
         (
          ИСТИНА В // Не все проверки отключены.
          (
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первого набора с не отключенной проверкой.
                ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
                ГДЕ
                      НомераНаборов.Объект = #Параметр(46)
                #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    // Право Чтение может зависеть только от права Чтение
                    И НомераНаборов.Чтение = ИСТИНА
                #Иначе
                    // Право Изменение может зависеть от ведущих прав Чтение, Изменение
                    И ВЫБОР
                        КОГДА ИСТИНА В
                            (
                            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                            ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
                            ГДЕ
                                  ЗависимостиПравДоступа.ПодчиненнаяТаблица             = СвойстваТекущейТаблицы.Ссылка
                                И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(46))
                            )
                        ТОГДА НомераНаборов.Чтение
                        ИНАЧЕ НомераНаборов.Изменение
                      КОНЕЦ
                #КонецЕсли
                    И
                ИСТИНА В // Не все проверки текущего набора отключены.
                (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первой не отключенной проверки текущего набора.
                    ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                    ГДЕ
                          НаборыЗначений.Объект      = #Параметр(46)
                        И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                        И НЕ ИСТИНА В
                            (
                                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Поиск настроек ограничений доступа
                                ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                                ГДЕ
                                      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                                    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                                    И ЗначенияПоУмолчанию.БезНастройки = ИСТИНА
                            )
                )
          ) И НЕ
    #Иначе
         (
    #КонецЕсли
          ИСТИНА В
          (
            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первого набора по которому доступ разрешен.
            ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
            ГДЕ
                  НомераНаборов.Объект = #Параметр(46)
            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                // Право Чтение может зависеть только от права Чтение
                И НомераНаборов.Чтение = ИСТИНА
            #Иначе
                // Право Изменение может зависеть от ведущих прав Чтение, Изменение
                И ВЫБОР
                    КОГДА ИСТИНА В
                        (
                        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
                        ГДЕ
                              ЗависимостиПравДоступа.ПодчиненнаяТаблица             = СвойстваТекущейТаблицы.Ссылка
                            И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(46))
                        )
                    ТОГДА НомераНаборов.Чтение
                    ИНАЧЕ НомераНаборов.Изменение
                  КОНЕЦ
            #КонецЕсли
                И
              #Если "#Параметр(3)" = "РасширенноеИЛИ" Или "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
                ИСТИНА В // Не все проверки текущего набора отключены.
                (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первой не отключенной проверки текущего набора.
                    ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                    ГДЕ
                          НаборыЗначений.Объект      = #Параметр(46)
                        И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                        И НЕ ИСТИНА В
                            (
                                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Поиск настроек ограничений доступа
                                ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                                ГДЕ
                                      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                                    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                                    И ЗначенияПоУмолчанию.БезНастройки = ИСТИНА
                            )
                )
                И
              #КонецЕсли
                  НЕ ЛОЖЬ В // Все проверки успешны.
                (
                ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ // Выбор первого не разрешенного значения доступа.
                ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                ГДЕ
                      НаборыЗначений.Объект      = #Параметр(46)
                    И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                    И НЕ
                ВЫБОР
            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
              #Если НЕ &amp;ВидыДоступаСОтключеннымИспользованием = "Все" #Тогда
                КОГДА НаборыЗначений.ЗначениеБезГрупп
                ТОГДА
                    ИСТИНА В
                        (
                        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                            ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                            ПО
                                  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                                И Значения.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                        ГДЕ
                              ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                            И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                            И ЕстьNull(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
                        )
              #КонецЕсли
                КОГДА НаборыЗначений.СтандартноеЗначение
            #Иначе
                КОГДА
                    ИСТИНА В
                    (
                        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                        ГДЕ
                            ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                    )
            #КонецЕсли
            #Если &amp;ВидыДоступаСОтключеннымИспользованием = "Все" #Тогда
                ТОГДА
                    ИСТИНА
            #Иначе
                ТОГДА
                #Если Не #ИмяТекущегоПраваДоступа = "Чтение"
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
                    ВЫБОР
                #КонецЕсли
                #Если Не #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    КОГДА
                        НЕ ИСТИНА В
                            (
                            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                            ИЗ Справочник.ИдентификаторыОбъектовМетаданных КАК ТипыСсылок
                            ГДЕ
                                  ТИПЗНАЧЕНИЯ(ТипыСсылок.ЗначениеПустойСсылки) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                                И ТипыСсылок.ЗначениеПустойСсылки В (&amp;ТипыЗначенийДоступаСГруппами)
                            )
                    ТОГДА
                        ИСТИНА В
                            (
                            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                            ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                                ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                                ПО
                                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                                    И Значения.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                            ГДЕ
                                  ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                                И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                                И ЕстьNull(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
                            )
                #КонецЕсли
                #Если Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
                    КОГДА
                        ИСТИНА В
                            (
                            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                            ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                            ГДЕ
                                  ГруппыЗначенийДоступа.ЗначениеДоступа       = НаборыЗначений.ЗначениеДоступа
                                И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
                            )
                    ТОГДА
                        ИСТИНА
                #КонецЕсли
                #Если Не #ИмяТекущегоПраваДоступа = "Чтение"
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
                    ИНАЧЕ
                #КонецЕсли
                        ИСТИНА В
                            (
                            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                            ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                                ПО
                                      ГруппыЗначений.ЗначениеДоступа    = НаборыЗначений.ЗначениеДоступа
                                    И ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                                    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                                
                                ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                                ПО
                                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                                    И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаЗначенийДоступа
                            ГДЕ
                                ЕстьNull(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
                            )
                #Если Не #ИмяТекущегоПраваДоступа = "Чтение"
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
                    КОНЕЦ
                #КонецЕсли
            #КонецЕсли
                // Проверка заведомого ложного или истинного однострочного набора значений.
                КОГДА НаборыЗначений.ЗначениеДоступа = ЗНАЧЕНИЕ(Перечисление.ДополнительныеЗначенияДоступа.ДоступРазрешен)
                ТОГДА ИСТИНА
                КОГДА НаборыЗначений.ЗначениеДоступа = ЗНАЧЕНИЕ(Перечисление.ДополнительныеЗначенияДоступа.ДоступЗапрещен)
                ТОГДА ЛОЖЬ
                // Проверка права доступа пользователя к таблице ЗначенияДоступа.
                КОГДА ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа) = ТИП(Справочник.ИдентификаторыОбъектовМетаданных)
            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                // Право Чтение может зависеть только от права Чтение
                ТОГДА ИСТИНА В
                    (   ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа = ГруппыДоступа.Ссылка
                            И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Таблица = НаборыЗначений.ЗначениеДоступа
                    )
            #Иначе
                ТОГДА ИСТИНА В
                    (   ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа = ГруппыДоступа.Ссылка
                            И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Таблица = НаборыЗначений.ЗначениеДоступа
                            И НЕ(НаборыЗначений.Уточнение &lt;&gt; ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                                    И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Изменение = ЛОЖЬ)
                    )
            #КонецЕсли
            #Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
                ИНАЧЕ
                    (
                    ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
                        (
                        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                            ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                            ПО
                                  НаследованиеНастроек.Объект = НаборыЗначений.ЗначениеДоступа
                                И НастройкиПрав.Объект        = НаследованиеНастроек.Родитель
                            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                                И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
                            #Иначе
                                И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
                                И НастройкиПрав.Таблица = ВЫБОР
                                    КОГДА НаборыЗначений.Уточнение В (&amp;ИдентификаторыТаблицСОтдельнымиНастройкамиПрав)
                                    ТОГДА НаборыЗначений.Уточнение
                                    ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка) КОНЕЦ
                            #КонецЕсли
                            ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                            ПО
                                  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                                И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
                        )
                    И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
                        (
                        ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
                        ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                            ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                            ПО
                                  НаследованиеНастроек.Объект = НаборыЗначений.ЗначениеДоступа
                                И НастройкиПрав.Объект        = НаследованиеНастроек.Родитель
                            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                                И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
                            #Иначе
                                И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
                                И НастройкиПрав.Таблица = ВЫБОР
                                    КОГДА НаборыЗначений.Уточнение В (&amp;ИдентификаторыТаблицСОтдельнымиНастройкамиПрав)
                                    ТОГДА НаборыЗначений.Уточнение
                                    ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка) КОНЕЦ
                            #КонецЕсли
                            ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                            ПО
                                  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                                И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
                        )
                    )
            #Иначе
                ИНАЧЕ
                    ЛОЖЬ
            #КонецЕсли
                КОНЕЦ
                ) // НЕ ЛОЖЬ В
          )
         )
    #Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
        КОНЕЦ
    #КонецЕсли
    )

#ИначеЕсли "#Параметр(45)" = "НастройкиПрав" #Тогда
    
     (
        ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
            (
            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
            ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                ПО
                      НаследованиеНастроек.Объект = #Параметр(46)
                    И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
                #Иначе
                  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                    И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                  #Иначе
                    И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                  #КонецЕсли
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
                #КонецЕсли
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                      СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                    И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
            )
         И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
            (
            ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
            ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                ПО
                      НаследованиеНастроек.Объект = #Параметр(46)
                    И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
                #Иначе
                  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                    И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                  #Иначе
                    И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                  #КонецЕсли
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
                #КонецЕсли
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                      СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                    И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
            )
     )
#ИначеЕсли Не СтрСодержит(&amp;ВсеВидыДоступаКромеСпециальных, ",#Параметр(45),") #Тогда
    // Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
    #Если СтрСодержит("#Параметр(45)", ",") #Тогда
        НеверныйВидДоступа: "#Параметр(45)" - "Список имен видов доступа не найден"
    #Иначе
        НеверныйВидДоступа: "#Параметр(45)" - "Имя вида доступа не найдено"
    #КонецЕсли
#ИначеЕсли &amp;ВидыДоступаСОтключеннымИспользованием &lt;&gt; "Все"
         И Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(45),") #Тогда
    
     (
        #Если (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")        И СтрСодержит(",#Параметр(45),", ",Пользователи,"))
          Или (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") И СтрСодержит(",#Параметр(45),", ",ВнешниеПользователи,")) #Тогда
            НЕ
            (
            НЕ ИСТИНА В
                (
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                ГДЕ
                      ГруппыЗначенийДоступа.ЗначениеДоступа       = #Параметр(46)
                    И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
                )
            И НЕ
        #Иначе
            (
        #КонецЕсли
            ВЫБОР
            КОГДА ИСТИНА В
                (
        #Если СтрСодержит(&amp;ВидыДоступаБезГруппДляЗначенияДоступа, ",#Параметр(45),") #Тогда
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ГДЕ
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = #Параметр(46)
        #ИначеЕсли "#Параметр(46)" = "Т.Ссылка" #Тогда
            #Если СтрСодержит("#Параметр(45)", ",") #Тогда
                // Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
                НеверныйВидДоступа: "#Параметр(45)" - "При проверке таблицы значения доступа можно указывать только один вид доступа"
            #ИначеЕсли СтрСодержит(&amp;ВидыДоступаСОднойГруппойДляЗначенияДоступа, ",#Параметр(45),") #Тогда
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ГДЕ
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = Т.ГруппаДоступа
            #Иначе // Значения доступа, для которых можно указать несколько групп значений доступа.
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                    ВНУТРЕННЕЕ СОЕДИНЕНИЕ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
                ПО
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаДоступа
                    И ГруппыЗначений.Ссылка    = #Параметр(46)
            #КонецЕсли
        #Иначе // "#Параметр(46)" &lt;&gt; "Т.Ссылка"
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                    ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                ПО
                      Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
                    И ГруппыЗначений.ЗначениеДоступа = #Параметр(46)
        #КонецЕсли
                )
            ТОГДА ИСТИНА
            ИНАЧЕ ЛОЖЬ
            КОНЕЦ
            =
            ВЫБОР
            КОГДА ИСТИНА В
                (
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                ГДЕ
                      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(#Параметр(46))
                    И ЗначенияПоУмолчанию.ВсеРазрешены = ЛОЖЬ
                )
            ТОГДА ИСТИНА
            ИНАЧЕ ЛОЖЬ
            КОНЕЦ
            )
     )

#Иначе
    ИСТИНА
#КонецЕсли

    #Параметр(47)  // [)[)][)]...] [ИЛИ|И] [([(][(]...] оператор И/ИЛИ с/без скобок.

//// Проверка значения поля группы параметров 15.
#Если "#Параметр(48)" = "" И "#Параметр(49)" = "" #Тогда
    // Группа параметров не используется.
#ИначеЕсли "#Параметр(48)" = "Условие" Или "#Параметр(48)" = "" #Тогда
    // Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
     ( #Параметр(49) )
#ИначеЕсли "#Параметр(48)" = "ПравоЧтения" Или "#Параметр(48)" = "ПравоИзменения" #Тогда
     #Параметр(49) &lt;&gt; НЕОПРЕДЕЛЕНО
    И ИСТИНА В
     (  // Проверка права пользователя на таблицу Значения, установленного в поле.
        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
        ГДЕ
              ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
            И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(49))
        #Если Не "#Параметр(48)" = "ПравоЧтения" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Изменение
        #КонецЕсли
     )
#ИначеЕсли "#Параметр(48)" = "Объект" Или "#Параметр(48)" = " " #Тогда
    (
        // Проверка права объекта ведущей таблицы (зависимость по правам)
        (
            ИСТИНА В
            (
            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
            ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваОбъекта
            ГДЕ
                  ТаблицыГруппДоступаПроверкаПраваОбъекта.ГруппаДоступа = ГруппыДоступа.Ссылка
                И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПраваОбъекта.ТипТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(49))
            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                // Проверка ведущего права для права Чтение
                // Право Чтение может зависеть только от права Чтение
            #Иначе
                // Проверка ведущего права для права Изменение
                // Право Изменение может зависеть от ведущих прав Чтение, Изменение
                И НЕ
                (     ТаблицыГруппДоступаПроверкаПраваОбъекта.Изменение = ЛОЖЬ
                    И НЕ ИСТИНА В
                    (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                    ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
                    ГДЕ
                          ЗависимостиПравДоступа.ПодчиненнаяТаблица = СвойстваТекущейТаблицы.Ссылка
                        И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(49))
                    )
                )
            #КонецЕсли
            )
        )
        // Проверка ограничения права объекта ведущей таблицы
        И 
    #Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
        ВЫБОР КОГДА ИСТИНА В
                (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                    ИЗ Справочник.ИдентификаторыОбъектовМетаданных КАК Идентификаторы
                    ГДЕ
                          ТИПЗНАЧЕНИЯ(Идентификаторы.ЗначениеПустойСсылки) = ТИПЗНАЧЕНИЯ(#Параметр(49))
                        И Идентификаторы.ЗначениеПустойСсылки В (&amp;ТипыВладельцевНастроекПрав)
                )
        ТОГДА
            (
                ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
                    (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                    ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                        ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                        ПО
                              НаследованиеНастроек.Объект = #Параметр(49)
                            И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                        #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                            И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
                        #Иначе
                          #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                            И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                          #Иначе
                            И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                          #КонецЕсли
                            И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
                        #КонецЕсли
                        ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                        ПО
                              СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                            И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
                    )
                И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
                    (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
                    ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                        ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                        ПО
                              НаследованиеНастроек.Объект = #Параметр(49)
                            И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                        #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                            И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
                        #Иначе
                          #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                            И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                          #Иначе
                            И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                          #КонецЕсли
                            И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
                        #КонецЕсли
                        ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                        ПО
                              СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                            И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
                    )
            )
        ИНАЧЕ
    #КонецЕсли
    #Если "#Параметр(3)" = "РасширенноеИЛИ" Или "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
        НЕ
         (
          ИСТИНА В // Не все проверки отключены.
          (
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первого набора с не отключенной проверкой.
                ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
                ГДЕ
                      НомераНаборов.Объект = #Параметр(49)
                #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    // Право Чтение может зависеть только от права Чтение
                    И НомераНаборов.Чтение = ИСТИНА
                #Иначе
                    // Право Изменение может зависеть от ведущих прав Чтение, Изменение
                    И ВЫБОР
                        КОГДА ИСТИНА В
                            (
                            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                            ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
                            ГДЕ
                                  ЗависимостиПравДоступа.ПодчиненнаяТаблица             = СвойстваТекущейТаблицы.Ссылка
                                И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(49))
                            )
                        ТОГДА НомераНаборов.Чтение
                        ИНАЧЕ НомераНаборов.Изменение
                      КОНЕЦ
                #КонецЕсли
                    И
                ИСТИНА В // Не все проверки текущего набора отключены.
                (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первой не отключенной проверки текущего набора.
                    ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                    ГДЕ
                          НаборыЗначений.Объект      = #Параметр(49)
                        И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                        И НЕ ИСТИНА В
                            (
                                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Поиск настроек ограничений доступа
                                ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                                ГДЕ
                                      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                                    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                                    И ЗначенияПоУмолчанию.БезНастройки = ИСТИНА
                            )
                )
          ) И НЕ
    #Иначе
         (
    #КонецЕсли
          ИСТИНА В
          (
            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первого набора по которому доступ разрешен.
            ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
            ГДЕ
                  НомераНаборов.Объект = #Параметр(49)
            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                // Право Чтение может зависеть только от права Чтение
                И НомераНаборов.Чтение = ИСТИНА
            #Иначе
                // Право Изменение может зависеть от ведущих прав Чтение, Изменение
                И ВЫБОР
                    КОГДА ИСТИНА В
                        (
                        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
                        ГДЕ
                              ЗависимостиПравДоступа.ПодчиненнаяТаблица             = СвойстваТекущейТаблицы.Ссылка
                            И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(49))
                        )
                    ТОГДА НомераНаборов.Чтение
                    ИНАЧЕ НомераНаборов.Изменение
                  КОНЕЦ
            #КонецЕсли
                И
              #Если "#Параметр(3)" = "РасширенноеИЛИ" Или "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
                ИСТИНА В // Не все проверки текущего набора отключены.
                (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первой не отключенной проверки текущего набора.
                    ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                    ГДЕ
                          НаборыЗначений.Объект      = #Параметр(49)
                        И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                        И НЕ ИСТИНА В
                            (
                                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Поиск настроек ограничений доступа
                                ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                                ГДЕ
                                      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                                    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                                    И ЗначенияПоУмолчанию.БезНастройки = ИСТИНА
                            )
                )
                И
              #КонецЕсли
                  НЕ ЛОЖЬ В // Все проверки успешны.
                (
                ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ // Выбор первого не разрешенного значения доступа.
                ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                ГДЕ
                      НаборыЗначений.Объект      = #Параметр(49)
                    И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                    И НЕ
                ВЫБОР
            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
              #Если НЕ &amp;ВидыДоступаСОтключеннымИспользованием = "Все" #Тогда
                КОГДА НаборыЗначений.ЗначениеБезГрупп
                ТОГДА
                    ИСТИНА В
                        (
                        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                            ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                            ПО
                                  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                                И Значения.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                        ГДЕ
                              ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                            И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                            И ЕстьNull(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
                        )
              #КонецЕсли
                КОГДА НаборыЗначений.СтандартноеЗначение
            #Иначе
                КОГДА
                    ИСТИНА В
                    (
                        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                        ГДЕ
                            ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                    )
            #КонецЕсли
            #Если &amp;ВидыДоступаСОтключеннымИспользованием = "Все" #Тогда
                ТОГДА
                    ИСТИНА
            #Иначе
                ТОГДА
                #Если Не #ИмяТекущегоПраваДоступа = "Чтение"
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
                    ВЫБОР
                #КонецЕсли
                #Если Не #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    КОГДА
                        НЕ ИСТИНА В
                            (
                            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                            ИЗ Справочник.ИдентификаторыОбъектовМетаданных КАК ТипыСсылок
                            ГДЕ
                                  ТИПЗНАЧЕНИЯ(ТипыСсылок.ЗначениеПустойСсылки) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                                И ТипыСсылок.ЗначениеПустойСсылки В (&amp;ТипыЗначенийДоступаСГруппами)
                            )
                    ТОГДА
                        ИСТИНА В
                            (
                            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                            ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                                ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                                ПО
                                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                                    И Значения.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                            ГДЕ
                                  ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                                И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                                И ЕстьNull(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
                            )
                #КонецЕсли
                #Если Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
                    КОГДА
                        ИСТИНА В
                            (
                            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                            ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                            ГДЕ
                                  ГруппыЗначенийДоступа.ЗначениеДоступа       = НаборыЗначений.ЗначениеДоступа
                                И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
                            )
                    ТОГДА
                        ИСТИНА
                #КонецЕсли
                #Если Не #ИмяТекущегоПраваДоступа = "Чтение"
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
                    ИНАЧЕ
                #КонецЕсли
                        ИСТИНА В
                            (
                            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                            ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                                ПО
                                      ГруппыЗначений.ЗначениеДоступа    = НаборыЗначений.ЗначениеДоступа
                                    И ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                                    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                                
                                ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                                ПО
                                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                                    И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаЗначенийДоступа
                            ГДЕ
                                ЕстьNull(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
                            )
                #Если Не #ИмяТекущегоПраваДоступа = "Чтение"
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
                    КОНЕЦ
                #КонецЕсли
            #КонецЕсли
                // Проверка заведомого ложного или истинного однострочного набора значений.
                КОГДА НаборыЗначений.ЗначениеДоступа = ЗНАЧЕНИЕ(Перечисление.ДополнительныеЗначенияДоступа.ДоступРазрешен)
                ТОГДА ИСТИНА
                КОГДА НаборыЗначений.ЗначениеДоступа = ЗНАЧЕНИЕ(Перечисление.ДополнительныеЗначенияДоступа.ДоступЗапрещен)
                ТОГДА ЛОЖЬ
                // Проверка права доступа пользователя к таблице ЗначенияДоступа.
                КОГДА ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа) = ТИП(Справочник.ИдентификаторыОбъектовМетаданных)
            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                // Право Чтение может зависеть только от права Чтение
                ТОГДА ИСТИНА В
                    (   ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа = ГруппыДоступа.Ссылка
                            И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Таблица = НаборыЗначений.ЗначениеДоступа
                    )
            #Иначе
                ТОГДА ИСТИНА В
                    (   ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа = ГруппыДоступа.Ссылка
                            И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Таблица = НаборыЗначений.ЗначениеДоступа
                            И НЕ(НаборыЗначений.Уточнение &lt;&gt; ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                                    И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Изменение = ЛОЖЬ)
                    )
            #КонецЕсли
            #Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
                ИНАЧЕ
                    (
                    ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
                        (
                        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                            ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                            ПО
                                  НаследованиеНастроек.Объект = НаборыЗначений.ЗначениеДоступа
                                И НастройкиПрав.Объект        = НаследованиеНастроек.Родитель
                            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                                И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
                            #Иначе
                                И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
                                И НастройкиПрав.Таблица = ВЫБОР
                                    КОГДА НаборыЗначений.Уточнение В (&amp;ИдентификаторыТаблицСОтдельнымиНастройкамиПрав)
                                    ТОГДА НаборыЗначений.Уточнение
                                    ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка) КОНЕЦ
                            #КонецЕсли
                            ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                            ПО
                                  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                                И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
                        )
                    И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
                        (
                        ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
                        ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                            ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                            ПО
                                  НаследованиеНастроек.Объект = НаборыЗначений.ЗначениеДоступа
                                И НастройкиПрав.Объект        = НаследованиеНастроек.Родитель
                            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                                И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
                            #Иначе
                                И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
                                И НастройкиПрав.Таблица = ВЫБОР
                                    КОГДА НаборыЗначений.Уточнение В (&amp;ИдентификаторыТаблицСОтдельнымиНастройкамиПрав)
                                    ТОГДА НаборыЗначений.Уточнение
                                    ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка) КОНЕЦ
                            #КонецЕсли
                            ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                            ПО
                                  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                                И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
                        )
                    )
            #Иначе
                ИНАЧЕ
                    ЛОЖЬ
            #КонецЕсли
                КОНЕЦ
                ) // НЕ ЛОЖЬ В
          )
         )
    #Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
        КОНЕЦ
    #КонецЕсли
    )

#ИначеЕсли "#Параметр(48)" = "НастройкиПрав" #Тогда
    
     (
        ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
            (
            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
            ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                ПО
                      НаследованиеНастроек.Объект = #Параметр(49)
                    И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
                #Иначе
                  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                    И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                  #Иначе
                    И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                  #КонецЕсли
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
                #КонецЕсли
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                      СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                    И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
            )
         И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
            (
            ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
            ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                ПО
                      НаследованиеНастроек.Объект = #Параметр(49)
                    И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
                #Иначе
                  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                    И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                  #Иначе
                    И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                  #КонецЕсли
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
                #КонецЕсли
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                      СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                    И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
            )
     )
#ИначеЕсли Не СтрСодержит(&amp;ВсеВидыДоступаКромеСпециальных, ",#Параметр(48),") #Тогда
    // Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
    #Если СтрСодержит("#Параметр(48)", ",") #Тогда
        НеверныйВидДоступа: "#Параметр(48)" - "Список имен видов доступа не найден"
    #Иначе
        НеверныйВидДоступа: "#Параметр(48)" - "Имя вида доступа не найдено"
    #КонецЕсли
#ИначеЕсли &amp;ВидыДоступаСОтключеннымИспользованием &lt;&gt; "Все"
         И Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(48),") #Тогда
    
     (
        #Если (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")        И СтрСодержит(",#Параметр(48),", ",Пользователи,"))
          Или (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") И СтрСодержит(",#Параметр(48),", ",ВнешниеПользователи,")) #Тогда
            НЕ
            (
            НЕ ИСТИНА В
                (
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                ГДЕ
                      ГруппыЗначенийДоступа.ЗначениеДоступа       = #Параметр(49)
                    И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
                )
            И НЕ
        #Иначе
            (
        #КонецЕсли
            ВЫБОР
            КОГДА ИСТИНА В
                (
        #Если СтрСодержит(&amp;ВидыДоступаБезГруппДляЗначенияДоступа, ",#Параметр(48),") #Тогда
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ГДЕ
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = #Параметр(49)
        #ИначеЕсли "#Параметр(49)" = "Т.Ссылка" #Тогда
            #Если СтрСодержит("#Параметр(48)", ",") #Тогда
                // Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
                НеверныйВидДоступа: "#Параметр(48)" - "При проверке таблицы значения доступа можно указывать только один вид доступа"
            #ИначеЕсли СтрСодержит(&amp;ВидыДоступаСОднойГруппойДляЗначенияДоступа, ",#Параметр(48),") #Тогда
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ГДЕ
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = Т.ГруппаДоступа
            #Иначе // Значения доступа, для которых можно указать несколько групп значений доступа.
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                    ВНУТРЕННЕЕ СОЕДИНЕНИЕ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
                ПО
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаДоступа
                    И ГруппыЗначений.Ссылка    = #Параметр(49)
            #КонецЕсли
        #Иначе // "#Параметр(49)" &lt;&gt; "Т.Ссылка"
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                    ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                ПО
                      Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
                    И ГруппыЗначений.ЗначениеДоступа = #Параметр(49)
        #КонецЕсли
                )
            ТОГДА ИСТИНА
            ИНАЧЕ ЛОЖЬ
            КОНЕЦ
            =
            ВЫБОР
            КОГДА ИСТИНА В
                (
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                ГДЕ
                      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(#Параметр(49))
                    И ЗначенияПоУмолчанию.ВсеРазрешены = ЛОЖЬ
                )
            ТОГДА ИСТИНА
            ИНАЧЕ ЛОЖЬ
            КОНЕЦ
            )
     )

#Иначе
    ИСТИНА
#КонецЕсли

    #Параметр(50)  // [)[)][)]...] [ИЛИ|И] [([(][(]...] оператор И/ИЛИ с/без скобок.

//// Проверка значения поля группы параметров 16.
#Если "#Параметр(51)" = "" И "#Параметр(52)" = "" #Тогда
    // Группа параметров не используется.
#ИначеЕсли "#Параметр(51)" = "Условие" Или "#Параметр(51)" = "" #Тогда
    // Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
     ( #Параметр(52) )
#ИначеЕсли "#Параметр(51)" = "ПравоЧтения" Или "#Параметр(51)" = "ПравоИзменения" #Тогда
     #Параметр(52) &lt;&gt; НЕОПРЕДЕЛЕНО
    И ИСТИНА В
     (  // Проверка права пользователя на таблицу Значения, установленного в поле.
        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
        ГДЕ
              ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
            И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(52))
        #Если Не "#Параметр(51)" = "ПравоЧтения" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Изменение
        #КонецЕсли
     )
#ИначеЕсли "#Параметр(51)" = "Объект" Или "#Параметр(51)" = " " #Тогда
    (
        // Проверка права объекта ведущей таблицы (зависимость по правам)
        (
            ИСТИНА В
            (
            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
            ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваОбъекта
            ГДЕ
                  ТаблицыГруппДоступаПроверкаПраваОбъекта.ГруппаДоступа = ГруппыДоступа.Ссылка
                И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПраваОбъекта.ТипТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(52))
            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                // Проверка ведущего права для права Чтение
                // Право Чтение может зависеть только от права Чтение
            #Иначе
                // Проверка ведущего права для права Изменение
                // Право Изменение может зависеть от ведущих прав Чтение, Изменение
                И НЕ
                (     ТаблицыГруппДоступаПроверкаПраваОбъекта.Изменение = ЛОЖЬ
                    И НЕ ИСТИНА В
                    (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                    ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
                    ГДЕ
                          ЗависимостиПравДоступа.ПодчиненнаяТаблица = СвойстваТекущейТаблицы.Ссылка
                        И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(52))
                    )
                )
            #КонецЕсли
            )
        )
        // Проверка ограничения права объекта ведущей таблицы
        И 
    #Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
        ВЫБОР КОГДА ИСТИНА В
                (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                    ИЗ Справочник.ИдентификаторыОбъектовМетаданных КАК Идентификаторы
                    ГДЕ
                          ТИПЗНАЧЕНИЯ(Идентификаторы.ЗначениеПустойСсылки) = ТИПЗНАЧЕНИЯ(#Параметр(52))
                        И Идентификаторы.ЗначениеПустойСсылки В (&amp;ТипыВладельцевНастроекПрав)
                )
        ТОГДА
            (
                ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
                    (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                    ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                        ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                        ПО
                              НаследованиеНастроек.Объект = #Параметр(52)
                            И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                        #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                            И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
                        #Иначе
                          #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                            И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                          #Иначе
                            И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                          #КонецЕсли
                            И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
                        #КонецЕсли
                        ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                        ПО
                              СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                            И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
                    )
                И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
                    (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
                    ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                        ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                        ПО
                              НаследованиеНастроек.Объект = #Параметр(52)
                            И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                        #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                            И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
                        #Иначе
                          #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                            И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                          #Иначе
                            И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                          #КонецЕсли
                            И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
                        #КонецЕсли
                        ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                        ПО
                              СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                            И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
                    )
            )
        ИНАЧЕ
    #КонецЕсли
    #Если "#Параметр(3)" = "РасширенноеИЛИ" Или "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
        НЕ
         (
          ИСТИНА В // Не все проверки отключены.
          (
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первого набора с не отключенной проверкой.
                ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
                ГДЕ
                      НомераНаборов.Объект = #Параметр(52)
                #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    // Право Чтение может зависеть только от права Чтение
                    И НомераНаборов.Чтение = ИСТИНА
                #Иначе
                    // Право Изменение может зависеть от ведущих прав Чтение, Изменение
                    И ВЫБОР
                        КОГДА ИСТИНА В
                            (
                            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                            ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
                            ГДЕ
                                  ЗависимостиПравДоступа.ПодчиненнаяТаблица             = СвойстваТекущейТаблицы.Ссылка
                                И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(52))
                            )
                        ТОГДА НомераНаборов.Чтение
                        ИНАЧЕ НомераНаборов.Изменение
                      КОНЕЦ
                #КонецЕсли
                    И
                ИСТИНА В // Не все проверки текущего набора отключены.
                (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первой не отключенной проверки текущего набора.
                    ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                    ГДЕ
                          НаборыЗначений.Объект      = #Параметр(52)
                        И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                        И НЕ ИСТИНА В
                            (
                                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Поиск настроек ограничений доступа
                                ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                                ГДЕ
                                      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                                    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                                    И ЗначенияПоУмолчанию.БезНастройки = ИСТИНА
                            )
                )
          ) И НЕ
    #Иначе
         (
    #КонецЕсли
          ИСТИНА В
          (
            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первого набора по которому доступ разрешен.
            ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
            ГДЕ
                  НомераНаборов.Объект = #Параметр(52)
            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                // Право Чтение может зависеть только от права Чтение
                И НомераНаборов.Чтение = ИСТИНА
            #Иначе
                // Право Изменение может зависеть от ведущих прав Чтение, Изменение
                И ВЫБОР
                    КОГДА ИСТИНА В
                        (
                        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
                        ГДЕ
                              ЗависимостиПравДоступа.ПодчиненнаяТаблица             = СвойстваТекущейТаблицы.Ссылка
                            И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(52))
                        )
                    ТОГДА НомераНаборов.Чтение
                    ИНАЧЕ НомераНаборов.Изменение
                  КОНЕЦ
            #КонецЕсли
                И
              #Если "#Параметр(3)" = "РасширенноеИЛИ" Или "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
                ИСТИНА В // Не все проверки текущего набора отключены.
                (
                    ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первой не отключенной проверки текущего набора.
                    ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                    ГДЕ
                          НаборыЗначений.Объект      = #Параметр(52)
                        И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                        И НЕ ИСТИНА В
                            (
                                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Поиск настроек ограничений доступа
                                ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                                ГДЕ
                                      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                                    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                                    И ЗначенияПоУмолчанию.БезНастройки = ИСТИНА
                            )
                )
                И
              #КонецЕсли
                  НЕ ЛОЖЬ В // Все проверки успешны.
                (
                ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ // Выбор первого не разрешенного значения доступа.
                ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                ГДЕ
                      НаборыЗначений.Объект      = #Параметр(52)
                    И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                    И НЕ
                ВЫБОР
            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
              #Если НЕ &amp;ВидыДоступаСОтключеннымИспользованием = "Все" #Тогда
                КОГДА НаборыЗначений.ЗначениеБезГрупп
                ТОГДА
                    ИСТИНА В
                        (
                        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                            ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                            ПО
                                  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                                И Значения.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                        ГДЕ
                              ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                            И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                            И ЕстьNull(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
                        )
              #КонецЕсли
                КОГДА НаборыЗначений.СтандартноеЗначение
            #Иначе
                КОГДА
                    ИСТИНА В
                    (
                        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                        ГДЕ
                            ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                    )
            #КонецЕсли
            #Если &amp;ВидыДоступаСОтключеннымИспользованием = "Все" #Тогда
                ТОГДА
                    ИСТИНА
            #Иначе
                ТОГДА
                #Если Не #ИмяТекущегоПраваДоступа = "Чтение"
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
                    ВЫБОР
                #КонецЕсли
                #Если Не #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    КОГДА
                        НЕ ИСТИНА В
                            (
                            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                            ИЗ Справочник.ИдентификаторыОбъектовМетаданных КАК ТипыСсылок
                            ГДЕ
                                  ТИПЗНАЧЕНИЯ(ТипыСсылок.ЗначениеПустойСсылки) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                                И ТипыСсылок.ЗначениеПустойСсылки В (&amp;ТипыЗначенийДоступаСГруппами)
                            )
                    ТОГДА
                        ИСТИНА В
                            (
                            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                            ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                                ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                                ПО
                                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                                    И Значения.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                            ГДЕ
                                  ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                                И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                                И ЕстьNull(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
                            )
                #КонецЕсли
                #Если Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
                    КОГДА
                        ИСТИНА В
                            (
                            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                            ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                            ГДЕ
                                  ГруппыЗначенийДоступа.ЗначениеДоступа       = НаборыЗначений.ЗначениеДоступа
                                И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
                            )
                    ТОГДА
                        ИСТИНА
                #КонецЕсли
                #Если Не #ИмяТекущегоПраваДоступа = "Чтение"
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
                    ИНАЧЕ
                #КонецЕсли
                        ИСТИНА В
                            (
                            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                            ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                                ПО
                                      ГруппыЗначений.ЗначениеДоступа    = НаборыЗначений.ЗначениеДоступа
                                    И ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                                    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
                                
                                ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                                ПО
                                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                                    И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаЗначенийДоступа
                            ГДЕ
                                ЕстьNull(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
                            )
                #Если Не #ИмяТекущегоПраваДоступа = "Чтение"
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
                  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
                    КОНЕЦ
                #КонецЕсли
            #КонецЕсли
                // Проверка заведомого ложного или истинного однострочного набора значений.
                КОГДА НаборыЗначений.ЗначениеДоступа = ЗНАЧЕНИЕ(Перечисление.ДополнительныеЗначенияДоступа.ДоступРазрешен)
                ТОГДА ИСТИНА
                КОГДА НаборыЗначений.ЗначениеДоступа = ЗНАЧЕНИЕ(Перечисление.ДополнительныеЗначенияДоступа.ДоступЗапрещен)
                ТОГДА ЛОЖЬ
                // Проверка права доступа пользователя к таблице ЗначенияДоступа.
                КОГДА ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа) = ТИП(Справочник.ИдентификаторыОбъектовМетаданных)
            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                // Право Чтение может зависеть только от права Чтение
                ТОГДА ИСТИНА В
                    (   ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа = ГруппыДоступа.Ссылка
                            И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Таблица = НаборыЗначений.ЗначениеДоступа
                    )
            #Иначе
                ТОГДА ИСТИНА В
                    (   ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа = ГруппыДоступа.Ссылка
                            И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Таблица = НаборыЗначений.ЗначениеДоступа
                            И НЕ(НаборыЗначений.Уточнение &lt;&gt; ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                                    И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Изменение = ЛОЖЬ)
                    )
            #КонецЕсли
            #Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
                ИНАЧЕ
                    (
                    ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
                        (
                        ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                        ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                            ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                            ПО
                                  НаследованиеНастроек.Объект = НаборыЗначений.ЗначениеДоступа
                                И НастройкиПрав.Объект        = НаследованиеНастроек.Родитель
                            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                                И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
                            #Иначе
                                И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
                                И НастройкиПрав.Таблица = ВЫБОР
                                    КОГДА НаборыЗначений.Уточнение В (&amp;ИдентификаторыТаблицСОтдельнымиНастройкамиПрав)
                                    ТОГДА НаборыЗначений.Уточнение
                                    ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка) КОНЕЦ
                            #КонецЕсли
                            ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                            ПО
                                  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                                И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
                        )
                    И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
                        (
                        ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
                        ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                            ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                            ПО
                                  НаследованиеНастроек.Объект = НаборыЗначений.ЗначениеДоступа
                                И НастройкиПрав.Объект        = НаследованиеНастроек.Родитель
                            #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                                И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
                            #Иначе
                                И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
                                И НастройкиПрав.Таблица = ВЫБОР
                                    КОГДА НаборыЗначений.Уточнение В (&amp;ИдентификаторыТаблицСОтдельнымиНастройкамиПрав)
                                    ТОГДА НаборыЗначений.Уточнение
                                    ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка) КОНЕЦ
                            #КонецЕсли
                            ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                            ПО
                                  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                                И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
                        )
                    )
            #Иначе
                ИНАЧЕ
                    ЛОЖЬ
            #КонецЕсли
                КОНЕЦ
                ) // НЕ ЛОЖЬ В
          )
         )
    #Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
        КОНЕЦ
    #КонецЕсли
    )

#ИначеЕсли "#Параметр(51)" = "НастройкиПрав" #Тогда
    
     (
        ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
            (
            ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
            ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                ПО
                      НаследованиеНастроек.Объект = #Параметр(52)
                    И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
                #Иначе
                  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                    И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                  #Иначе
                    И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                  #КонецЕсли
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
                #КонецЕсли
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                      СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                    И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
            )
         И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
            (
            ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
            ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
                ПО
                      НаследованиеНастроек.Объект = #Параметр(52)
                    И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
                #Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
                #Иначе
                  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
                    И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
                  #Иначе
                    И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
                  #КонецЕсли
                    И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
                #КонецЕсли
                ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                      СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
                    И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
            )
     )
#ИначеЕсли Не СтрСодержит(&amp;ВсеВидыДоступаКромеСпециальных, ",#Параметр(51),") #Тогда
    // Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
    #Если СтрСодержит("#Параметр(51)", ",") #Тогда
        НеверныйВидДоступа: "#Параметр(51)" - "Список имен видов доступа не найден"
    #Иначе
        НеверныйВидДоступа: "#Параметр(51)" - "Имя вида доступа не найдено"
    #КонецЕсли
#ИначеЕсли &amp;ВидыДоступаСОтключеннымИспользованием &lt;&gt; "Все"
         И Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(51),") #Тогда
    
     (
        #Если (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")        И СтрСодержит(",#Параметр(51),", ",Пользователи,"))
          Или (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") И СтрСодержит(",#Параметр(51),", ",ВнешниеПользователи,")) #Тогда
            НЕ
            (
            НЕ ИСТИНА В
                (
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                ГДЕ
                      ГруппыЗначенийДоступа.ЗначениеДоступа       = #Параметр(52)
                    И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
                )
            И НЕ
        #Иначе
            (
        #КонецЕсли
            ВЫБОР
            КОГДА ИСТИНА В
                (
        #Если СтрСодержит(&amp;ВидыДоступаБезГруппДляЗначенияДоступа, ",#Параметр(51),") #Тогда
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ГДЕ
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = #Параметр(52)
        #ИначеЕсли "#Параметр(52)" = "Т.Ссылка" #Тогда
            #Если СтрСодержит("#Параметр(51)", ",") #Тогда
                // Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
                НеверныйВидДоступа: "#Параметр(51)" - "При проверке таблицы значения доступа можно указывать только один вид доступа"
            #ИначеЕсли СтрСодержит(&amp;ВидыДоступаСОднойГруппойДляЗначенияДоступа, ",#Параметр(51),") #Тогда
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ГДЕ
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = Т.ГруппаДоступа
            #Иначе // Значения доступа, для которых можно указать несколько групп значений доступа.
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                    ВНУТРЕННЕЕ СОЕДИНЕНИЕ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
                ПО
                      Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаДоступа
                    И ГруппыЗначений.Ссылка    = #Параметр(52)
            #КонецЕсли
        #Иначе // "#Параметр(52)" &lt;&gt; "Т.Ссылка"
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                    ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                ПО
                      Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
                    И ГруппыЗначений.ЗначениеДоступа = #Параметр(52)
        #КонецЕсли
                )
            ТОГДА ИСТИНА
            ИНАЧЕ ЛОЖЬ
            КОНЕЦ
            =
            ВЫБОР
            КОГДА ИСТИНА В
                (
                ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
                ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
                ГДЕ
                      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
                    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(#Параметр(52))
                    И ЗначенияПоУмолчанию.ВсеРазрешены = ЛОЖЬ
                )
            ТОГДА ИСТИНА
            ИНАЧЕ ЛОЖЬ
            КОНЕЦ
            )
     )

#Иначе
    ИСТИНА
#КонецЕсли

    #Параметр(53)  // [)[)][)]...] [ИЛИ|И] [([(][(]...] оператор И/ИЛИ с/без скобок.

  )
)
#КонецЕсли</condition>
	</restrictionTemplate>
	<restrictionTemplate>
		<name>Шаблон</name>
		<condition/>
	</restrictionTemplate>
</Rights>